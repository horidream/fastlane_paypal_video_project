!function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t((e = "undefined" != typeof globalThis ? globalThis : e || self).axo = {})
}(this, (function(e) {
    "use strict";
    var t = {
        allRenderFn: !1,
        cmpDidLoad: !0,
        cmpDidUnload: !1,
        cmpDidUpdate: !0,
        cmpDidRender: !0,
        cmpWillLoad: !0,
        cmpWillUpdate: !0,
        cmpWillRender: !0,
        connectedCallback: !0,
        disconnectedCallback: !0,
        element: !0,
        event: !0,
        hasRenderFn: !0,
        lifecycle: !0,
        hostListener: !0,
        hostListenerTargetWindow: !0,
        hostListenerTargetDocument: !0,
        hostListenerTargetBody: !0,
        hostListenerTargetParent: !1,
        hostListenerTarget: !0,
        member: !0,
        method: !0,
        mode: !0,
        observeAttribute: !0,
        prop: !0,
        propMutable: !0,
        reflect: !0,
        scoped: !0,
        shadowDom: !0,
        slot: !0,
        cssAnnotations: !0,
        state: !0,
        style: !0,
        formAssociated: !1,
        svg: !0,
        updatable: !0,
        vdomAttribute: !0,
        vdomXlink: !0,
        vdomClass: !0,
        vdomFunctional: !0,
        vdomKey: !0,
        vdomListener: !0,
        vdomRef: !0,
        vdomPropOrAttr: !0,
        vdomRender: !0,
        vdomStyle: !0,
        vdomText: !0,
        watchCallback: !0,
        taskQueue: !0,
        hotModuleReplacement: !1,
        isDebug: !1,
        isDev: !1,
        isTesting: !1,
        hydrateServerSide: !1,
        hydrateClientSide: !1,
        lifecycleDOMEvents: !1,
        lazyLoad: !1,
        profile: !1,
        slotRelocation: !0,
        appendChildSlotFix: !1,
        cloneNodeFix: !1,
        hydratedAttribute: !1,
        hydratedClass: !0,
        scriptDataOpts: !1,
        scopedSlotTextContentFix: !1,
        shadowDomShim: !1,
        slotChildNodesFix: !1,
        invisiblePrehydration: !0,
        propBoolean: !0,
        propNumber: !0,
        propString: !0,
        constructableCSS: !0,
        cmpShouldUpdate: !0,
        devTools: !1,
        shadowDelegatesFocus: !0,
        initializeNextTick: !1,
        asyncLoading: !0,
        asyncQueue: !1,
        transformTagName: !1,
        attachStyles: !0,
        experimentalSlotFixes: !1
    }
      , n = Object.defineProperty
      , r = new WeakMap
      , o = e => r.get(e)
      , i = (e, t) => t in e
      , a = (e, t) => (0,
    console.error)(e, t)
      , s = new Map
      , l = []
      , c = "http://www.w3.org/1999/xlink"
      , d = "undefined" != typeof window ? window : {}
      , u = d.document || {
        head: {}
    }
      , p = d.HTMLElement || class {
    }
      , h = {
        $flags$: 0,
        $resourcesUrl$: "",
        jmp: e => e(),
        raf: e => requestAnimationFrame(e),
        ael: (e, t, n, r) => e.addEventListener(t, n, r),
        rel: (e, t, n, r) => e.removeEventListener(t, n, r),
        ce: (e, t) => new CustomEvent(e,t)
    }
      , f = ( () => {
        let e = !1;
        try {
            u.addEventListener("e", null, Object.defineProperty({}, "passive", {
                get() {
                    e = !0
                }
            }))
        } catch (e) {}
        return e
    }
    )()
      , m = ( () => {
        try {
            return new CSSStyleSheet,
            "function" == typeof (new CSSStyleSheet).replaceSync
        } catch (e) {}
        return !1
    }
    )()
      , g = !1
      , y = []
      , v = []
      , b = e => {
        for (let t = 0; t < e.length; t++)
            try {
                e[t](performance.now())
            } catch (e) {
                a(e)
            }
        e.length = 0
    }
      , E = () => {
        b(y),
        b(v),
        (g = y.length > 0) && h.raf(E)
    }
      , _ = e => {
        return Promise.resolve(t).then(e);
        var t
    }
      , A = ( (e, t) => n => {
        e.push(n),
        g || (g = !0,
        t && 4 & h.$flags$ ? _(E) : h.raf(E))
    }
    )(v, !0)
      , w = {}
      , S = e => "object" === (e = typeof e) || "function" === e;
    ( (e, t) => {
        for (var r in t)
            n(e, r, {
                get: t[r],
                enumerable: !0
            })
    }
    )({}, {
        err: () => O,
        map: () => x,
        ok: () => C,
        unwrap: () => I,
        unwrapErr: () => R
    });
    var C = e => ({
        isOk: !0,
        isErr: !1,
        value: e
    })
      , O = e => ({
        isOk: !1,
        isErr: !0,
        value: e
    });
    function x(e, t) {
        if (e.isOk) {
            const n = t(e.value);
            return n instanceof Promise ? n.then((e => C(e))) : C(n)
        }
        if (e.isErr) {
            const t = e.value;
            return O(t)
        }
        throw "should never get here"
    }
    var T, N, k, I = e => {
        if (e.isOk)
            return e.value;
        throw e.value
    }
    , R = e => {
        if (e.isErr)
            return e.value;
        throw e.value
    }
    , P = (e, t, ...n) => {
        let r = null
          , o = null
          , i = null
          , a = !1
          , s = !1;
        const l = []
          , c = t => {
            for (let n = 0; n < t.length; n++)
                r = t[n],
                Array.isArray(r) ? c(r) : null != r && "boolean" != typeof r && ((a = "function" != typeof e && !S(r)) && (r = String(r)),
                a && s ? l[l.length - 1].$text$ += r : l.push(a ? L(null, r) : r),
                s = a)
        }
        ;
        if (c(n),
        t) {
            t.key && (o = t.key),
            t.name && (i = t.name);
            {
                const e = t.className || t.class;
                e && (t.class = "object" != typeof e ? e : Object.keys(e).filter((t => e[t])).join(" "))
            }
        }
        if ("function" == typeof e)
            return e(null === t ? {} : t, l, M);
        const d = L(e, null);
        return d.$attrs$ = t,
        l.length > 0 && (d.$children$ = l),
        d.$key$ = o,
        d.$name$ = i,
        d
    }
    , L = (e, t) => {
        const n = {
            $flags$: 0,
            $tag$: e,
            $text$: t,
            $elm$: null,
            $children$: null,
            $attrs$: null,
            $key$: null,
            $name$: null
        };
        return n
    }
    , D = {}, M = {
        forEach: (e, t) => e.map(F).forEach(t),
        map: (e, t) => e.map(F).map(t).map(B)
    }, F = e => ({
        vattrs: e.$attrs$,
        vchildren: e.$children$,
        vkey: e.$key$,
        vname: e.$name$,
        vtag: e.$tag$,
        vtext: e.$text$
    }), B = e => {
        if ("function" == typeof e.vtag) {
            const t = {
                ...e.vattrs
            };
            return e.vkey && (t.key = e.vkey),
            e.vname && (t.name = e.vname),
            P(e.vtag, t, ...e.vchildren || [])
        }
        const t = L(e.vtag, e.vtext);
        return t.$attrs$ = e.vattrs,
        t.$children$ = e.vchildren,
        t.$key$ = e.vkey,
        t.$name$ = e.vname,
        t
    }
    , j = (e, t, n) => {
        const r = e;
        return {
            emit: e => U(r, t, {
                bubbles: !!(4 & n),
                composed: !!(2 & n),
                cancelable: !!(1 & n),
                detail: e
            })
        }
    }
    , U = (e, t, n) => {
        const r = h.ce(t, n);
        return e.dispatchEvent(r),
        r
    }
    , G = new WeakMap, $ = e => {
        const t = e.$cmpMeta$
          , n = e.$hostElement$
          , r = t.$flags$
          , o = (t.$tagName$,
        () => {}
        )
          , i = ( (e, t, n) => {
            var r;
            const o = V(t, n)
              , i = s.get(o);
            if (e = 11 === e.nodeType ? e : u,
            i)
                if ("string" == typeof i) {
                    e = e.head || e;
                    let n, a = G.get(e);
                    if (a || G.set(e, a = new Set),
                    !a.has(o)) {
                        {
                            n = u.createElement("style"),
                            n.innerHTML = i;
                            const o = null != (r = h.$nonce$) ? r : function(e) {
                                var t, n, r;
                                return null != (r = null == (n = null == (t = e.head) ? void 0 : t.querySelector('meta[name="csp-nonce"]')) ? void 0 : n.getAttribute("content")) ? r : void 0
                            }(u);
                            if (null != o && n.setAttribute("nonce", o),
                            !(1 & t.$flags$))
                                if ("HEAD" === e.nodeName) {
                                    const t = e.querySelectorAll("link[rel=preconnect]")
                                      , r = t.length > 0 ? t[t.length - 1].nextSibling : document.querySelector("style");
                                    e.insertBefore(n, r)
                                } else
                                    "host"in e ? e.prepend(n) : e.append(n);
                            1 & t.$flags$ && "HEAD" !== e.nodeName && e.insertBefore(n, null)
                        }
                        4 & t.$flags$ && (n.innerHTML += "slot-fb{display:contents}slot-fb[hidden]{display:none}"),
                        a && a.add(o)
                    }
                } else
                    e.adoptedStyleSheets.includes(i) || (e.adoptedStyleSheets = [...e.adoptedStyleSheets, i]);
            return o
        }
        )(n.shadowRoot ? n.shadowRoot : n.getRootNode(), t, e.$modeName$);
        10 & r && 2 & r && (n["s-sc"] = i,
        n.classList.add(i + "-h"),
        2 & r && n.classList.add(i + "-s")),
        o()
    }
    , V = (e, t) => "sc-" + (t && 32 & e.$flags$ ? e.$tagName$ + "-" + t : e.$tagName$), H = (e, t, n, r, o, a) => {
        if (n !== r) {
            let s = i(e, t)
              , l = t.toLowerCase();
            if ("class" === t) {
                const t = e.classList
                  , o = z(n)
                  , i = z(r);
                t.remove(...o.filter((e => e && !i.includes(e)))),
                t.add(...i.filter((e => e && !o.includes(e))))
            } else if ("style" === t) {
                for (const t in n)
                    r && null != r[t] || (t.includes("-") ? e.style.removeProperty(t) : e.style[t] = "");
                for (const t in r)
                    n && r[t] === n[t] || (t.includes("-") ? e.style.setProperty(t, r[t]) : e.style[t] = r[t])
            } else if ("key" === t)
                ;
            else if ("ref" === t)
                r && r(e);
            else if (e.__lookupSetter__(t) || "o" !== t[0] || "n" !== t[1]) {
                const i = S(r);
                if ((s || i && null !== r) && !o)
                    try {
                        if (e.tagName.includes("-"))
                            e[t] = r;
                        else {
                            const o = null == r ? "" : r;
                            "list" === t ? s = !1 : null != n && e[t] == o || ("function" == typeof e.__lookupSetter__(t) ? e[t] = o : e.setAttribute(t, o))
                        }
                    } catch (e) {}
                let d = !1;
                l !== (l = l.replace(/^xlink\:?/, "")) && (t = l,
                d = !0),
                null == r || !1 === r ? !1 === r && "" !== e.getAttribute(t) || (d ? e.removeAttributeNS(c, t) : e.removeAttribute(t)) : (!s || 4 & a || o) && !i && (r = !0 === r ? "" : r,
                d ? e.setAttributeNS(c, t, r) : e.setAttribute(t, r))
            } else if (t = "-" === t[2] ? t.slice(3) : i(d, l) ? l.slice(2) : l[2] + t.slice(3),
            n || r) {
                const o = t.endsWith(W);
                t = t.replace(Y, ""),
                n && h.rel(e, t, n, o),
                r && h.ael(e, t, r, o)
            }
        }
    }
    , K = /\s/, z = e => e ? e.split(K) : [], W = "Capture", Y = new RegExp(W + "$"), X = (e, t, n) => {
        const r = 11 === t.$elm$.nodeType && t.$elm$.host ? t.$elm$.host : t.$elm$
          , o = e && e.$attrs$ || w
          , i = t.$attrs$ || w;
        for (const e of Z(Object.keys(o)))
            e in i || H(r, e, o[e], void 0, n, t.$flags$);
        for (const e of Z(Object.keys(i)))
            H(r, e, o[e], i[e], n, t.$flags$)
    }
    ;
    function Z(e) {
        return e.includes("ref") ? [...e.filter((e => "ref" !== e)), "ref"] : e
    }
    var q = !1
      , J = !1
      , Q = !1
      , ee = !1
      , te = (e, n, r, o) => {
        var i;
        const a = n.$children$[r];
        let s, l, c, d = 0;
        if (q || (Q = !0,
        "slot" === a.$tag$ && (T && o.classList.add(T + "-s"),
        a.$flags$ |= a.$children$ ? 2 : 1)),
        null !== a.$text$)
            s = a.$elm$ = u.createTextNode(a.$text$);
        else if (1 & a.$flags$)
            s = a.$elm$ = u.createTextNode("");
        else {
            ee || (ee = "svg" === a.$tag$),
            s = a.$elm$ = u.createElementNS(ee ? "http://www.w3.org/2000/svg" : "http://www.w3.org/1999/xhtml", !q && t.slotRelocation && 2 & a.$flags$ ? "slot-fb" : a.$tag$),
            ee && "foreignObject" === a.$tag$ && (ee = !1),
            X(null, a, ee);
            if (!!s.getRootNode().querySelector("body") && t.scoped && null != T && s["s-si"] !== T && s.classList.add(s["s-si"] = T),
            ge(s, o),
            a.$children$)
                for (d = 0; d < a.$children$.length; ++d)
                    l = te(e, a, d, s),
                    l && s.appendChild(l);
            "svg" === a.$tag$ ? ee = !1 : "foreignObject" === s.tagName && (ee = !0)
        }
        return s["s-hn"] = k,
        3 & a.$flags$ && (s["s-sr"] = !0,
        s["s-cr"] = N,
        s["s-sn"] = a.$name$ || "",
        s["s-rf"] = null == (i = a.$attrs$) ? void 0 : i.ref,
        c = e && e.$children$ && e.$children$[r],
        c && c.$tag$ === a.$tag$ && e.$elm$ && ne(e.$elm$, !1)),
        s
    }
      , ne = (e, n) => {
        h.$flags$ |= 1;
        const r = Array.from(e.childNodes);
        if (e["s-sr"] && t.experimentalSlotFixes) {
            let t = e;
            for (; t = t.nextSibling; )
                t && t["s-sn"] === e["s-sn"] && t["s-sh"] === k && r.push(t)
        }
        for (let e = r.length - 1; e >= 0; e--) {
            const t = r[e];
            t["s-hn"] !== k && t["s-ol"] && (fe(se(t), t, ae(t)),
            t["s-ol"].remove(),
            t["s-ol"] = void 0,
            t["s-sh"] = void 0,
            Q = !0),
            n && ne(t, n)
        }
        h.$flags$ &= -2
    }
      , re = (e, t, n, r, o, i) => {
        let a, s = e["s-cr"] && e["s-cr"].parentNode || e;
        for (s.shadowRoot && s.tagName === k && (s = s.shadowRoot); o <= i; ++o)
            r[o] && (a = te(null, n, o, e),
            a && (r[o].$elm$ = a,
            fe(s, a, ae(t))))
    }
      , oe = (e, t, n) => {
        for (let r = t; r <= n; ++r) {
            const t = e[r];
            if (t) {
                const e = t.$elm$;
                he(t),
                e && (J = !0,
                e["s-ol"] ? e["s-ol"].remove() : ne(e, !0),
                e.remove())
            }
        }
    }
      , ie = (e, t, n=!1) => e.$tag$ === t.$tag$ && ("slot" === e.$tag$ ? (!("$nodeId$"in e) || !n || 8 === e.$elm$.nodeType) && e.$name$ === t.$name$ : !!n || e.$key$ === t.$key$)
      , ae = e => e && e["s-ol"] || e
      , se = e => (e["s-ol"] ? e["s-ol"] : e).parentNode
      , le = (e, n, r=!1) => {
        const o = n.$elm$ = e.$elm$
          , i = e.$children$
          , a = n.$children$
          , s = n.$tag$
          , l = n.$text$;
        let c;
        null === l ? (ee = "svg" === s || "foreignObject" !== s && ee,
        ("slot" !== s || q) && X(e, n, ee),
        null !== i && null !== a ? ( (e, t, n, r, o=!1) => {
            let i, a, s = 0, l = 0, c = 0, d = 0, u = t.length - 1, p = t[0], h = t[u], f = r.length - 1, m = r[0], g = r[f];
            for (; s <= u && l <= f; )
                if (null == p)
                    p = t[++s];
                else if (null == h)
                    h = t[--u];
                else if (null == m)
                    m = r[++l];
                else if (null == g)
                    g = r[--f];
                else if (ie(p, m, o))
                    le(p, m, o),
                    p = t[++s],
                    m = r[++l];
                else if (ie(h, g, o))
                    le(h, g, o),
                    h = t[--u],
                    g = r[--f];
                else if (ie(p, g, o))
                    "slot" !== p.$tag$ && "slot" !== g.$tag$ || ne(p.$elm$.parentNode, !1),
                    le(p, g, o),
                    fe(e, p.$elm$, h.$elm$.nextSibling),
                    p = t[++s],
                    g = r[--f];
                else if (ie(h, m, o))
                    "slot" !== p.$tag$ && "slot" !== g.$tag$ || ne(h.$elm$.parentNode, !1),
                    le(h, m, o),
                    fe(e, h.$elm$, p.$elm$),
                    h = t[--u],
                    m = r[++l];
                else {
                    for (c = -1,
                    d = s; d <= u; ++d)
                        if (t[d] && null !== t[d].$key$ && t[d].$key$ === m.$key$) {
                            c = d;
                            break
                        }
                    c >= 0 ? (a = t[c],
                    a.$tag$ !== m.$tag$ ? i = te(t && t[l], n, c, e) : (le(a, m, o),
                    t[c] = void 0,
                    i = a.$elm$),
                    m = r[++l]) : (i = te(t && t[l], n, l, e),
                    m = r[++l]),
                    i && fe(se(p.$elm$), i, ae(p.$elm$))
                }
            s > u ? re(e, null == r[f + 1] ? null : r[f + 1].$elm$, n, r, l, f) : l > f && oe(t, s, u)
        }
        )(o, i, n, a, r) : null !== a ? (null !== e.$text$ && (o.textContent = ""),
        re(o, null, n, a, 0, a.length - 1)) : !r && t.updatable && null !== i && oe(i, 0, i.length - 1),
        ee && "svg" === s && (ee = !1)) : (c = o["s-cr"]) ? c.parentNode.textContent = l : e.$text$ !== l && (o.data = l)
    }
      , ce = e => {
        const t = e.childNodes;
        for (const e of t)
            if (1 === e.nodeType) {
                if (e["s-sr"]) {
                    const n = e["s-sn"];
                    e.hidden = !1;
                    for (const r of t)
                        if (r !== e)
                            if (r["s-hn"] !== e["s-hn"] || "" !== n) {
                                if (1 === r.nodeType && (n === r.getAttribute("slot") || n === r["s-sn"]) || 3 === r.nodeType && n === r["s-sn"]) {
                                    e.hidden = !0;
                                    break
                                }
                            } else if (1 === r.nodeType || 3 === r.nodeType && "" !== r.textContent.trim()) {
                                e.hidden = !0;
                                break
                            }
                }
                ce(e)
            }
    }
      , de = []
      , ue = e => {
        let n, r, o;
        for (const i of e.childNodes) {
            if (i["s-sr"] && (n = i["s-cr"]) && n.parentNode) {
                r = n.parentNode.childNodes;
                const e = i["s-sn"];
                for (o = r.length - 1; o >= 0; o--)
                    if (n = r[o],
                    !n["s-cn"] && !n["s-nr"] && n["s-hn"] !== i["s-hn"] && !t.experimentalSlotFixes)
                        if (pe(n, e)) {
                            let t = de.find((e => e.$nodeToRelocate$ === n));
                            J = !0,
                            n["s-sn"] = n["s-sn"] || e,
                            t ? (t.$nodeToRelocate$["s-sh"] = i["s-hn"],
                            t.$slotRefNode$ = i) : (n["s-sh"] = i["s-hn"],
                            de.push({
                                $slotRefNode$: i,
                                $nodeToRelocate$: n
                            })),
                            n["s-sr"] && de.map((e => {
                                pe(e.$nodeToRelocate$, n["s-sn"]) && (t = de.find((e => e.$nodeToRelocate$ === n)),
                                t && !e.$slotRefNode$ && (e.$slotRefNode$ = t.$slotRefNode$))
                            }
                            ))
                        } else
                            de.some((e => e.$nodeToRelocate$ === n)) || de.push({
                                $nodeToRelocate$: n
                            })
            }
            1 === i.nodeType && ue(i)
        }
    }
      , pe = (e, t) => 1 === e.nodeType ? null === e.getAttribute("slot") && "" === t || e.getAttribute("slot") === t : e["s-sn"] === t || "" === t
      , he = e => {
        e.$attrs$ && e.$attrs$.ref && e.$attrs$.ref(null),
        e.$children$ && e.$children$.map(he)
    }
      , fe = (e, t, n) => {
        const r = null == e ? void 0 : e.insertBefore(t, n);
        return ge(t, e),
        r
    }
      , me = e => {
        const t = [];
        return e && t.push(...e["s-scs"] || [], e["s-si"], e["s-sc"], ...me(e.parentElement)),
        t
    }
      , ge = (e, t, n=!1) => {
        var r;
        if (e && t && 1 === e.nodeType) {
            const o = new Set(me(t).filter(Boolean));
            if (o.size && (null == (r = e.classList) || r.add(...e["s-scs"] = [...o]),
            e["s-ol"] || n))
                for (const t of Array.from(e.childNodes))
                    ge(t, e, !0)
        }
    }
      , ye = (e, n, r=!1) => {
        var o, i, a, s, l;
        const c = e.$hostElement$
          , d = e.$cmpMeta$
          , p = e.$vnode$ || L(null, null)
          , f = (e => e && e.$tag$ === D)(n) ? n : P(null, null, n);
        if (k = c.tagName,
        d.$attrsToReflect$ && (f.$attrs$ = f.$attrs$ || {},
        d.$attrsToReflect$.map(( ([e,t]) => f.$attrs$[t] = c[e]))),
        r && f.$attrs$)
            for (const e of Object.keys(f.$attrs$))
                c.hasAttribute(e) && !["key", "ref", "style", "class"].includes(e) && (f.$attrs$[e] = c[e]);
        if (f.$tag$ = null,
        f.$flags$ |= 4,
        e.$vnode$ = f,
        f.$elm$ = p.$elm$ = c.shadowRoot || c,
        T = c["s-sc"],
        q = !!(1 & d.$flags$),
        N = c["s-cr"],
        J = !1,
        le(p, f, r),
        h.$flags$ |= 1,
        Q) {
            ue(f.$elm$);
            for (const e of de) {
                const t = e.$nodeToRelocate$;
                if (!t["s-ol"]) {
                    const e = u.createTextNode("");
                    e["s-nr"] = t,
                    fe(t.parentNode, t["s-ol"] = e, t)
                }
            }
            for (const e of de) {
                const t = e.$nodeToRelocate$
                  , n = e.$slotRefNode$;
                if (n) {
                    const e = n.parentNode;
                    let r = n.nextSibling;
                    {
                        let n = null == (o = t["s-ol"]) ? void 0 : o.previousSibling;
                        for (; n; ) {
                            let o = null != (i = n["s-nr"]) ? i : null;
                            if (o && o["s-sn"] === t["s-sn"] && e === o.parentNode) {
                                for (o = o.nextSibling; o === t || (null == o ? void 0 : o["s-sr"]); )
                                    o = null == o ? void 0 : o.nextSibling;
                                if (!o || !o["s-nr"]) {
                                    r = o;
                                    break
                                }
                            }
                            n = n.previousSibling
                        }
                    }
                    (!r && e !== t.parentNode || t.nextSibling !== r) && t !== r && (!t["s-hn"] && t["s-ol"] && (t["s-hn"] = t["s-ol"].parentNode.nodeName),
                    fe(e, t, r),
                    1 === t.nodeType && (t.hidden = null != (a = t["s-ih"]) && a)),
                    t && "function" == typeof n["s-rf"] && n["s-rf"](t)
                } else
                    1 === t.nodeType && (r && (t["s-ih"] = null != (s = t.hidden) && s),
                    t.hidden = !0)
            }
        }
        if (J && ce(f.$elm$),
        h.$flags$ &= -2,
        de.length = 0,
        t.experimentalScopedSlotChanges && 2 & d.$flags$)
            for (const e of f.$elm$.childNodes)
                e["s-hn"] === k || e["s-sh"] || (r && null == e["s-ih"] && (e["s-ih"] = null != (l = e.hidden) && l),
                e.hidden = !0);
        N = void 0
    }
      , ve = (e, t) => {
        t && !e.$onRenderResolve$ && t["s-p"] && t["s-p"].push(new Promise((t => e.$onRenderResolve$ = t)))
    }
      , be = (e, t) => {
        if (e.$flags$ |= 16,
        4 & e.$flags$)
            return void (e.$flags$ |= 512);
        ve(e, e.$ancestorComponent$);
        return A(( () => Ee(e, t)))
    }
      , Ee = (e, t) => {
        const n = e.$hostElement$
          , r = (e.$cmpMeta$.$tagName$,
        () => {}
        )
          , o = n;
        if (!o)
            throw new Error(`Can't render component <${n.tagName.toLowerCase()} /> with invalid Stencil runtime! Make sure this imported component is compiled with a \`externalRuntime: true\` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime`);
        let i;
        return i = ke(o, t ? "componentWillLoad" : "componentWillUpdate"),
        i = _e(i, ( () => ke(o, "componentWillRender"))),
        r(),
        _e(i, ( () => we(e, o, t)))
    }
      , _e = (e, t) => Ae(e) ? e.then(t).catch((e => {
        console.error(e),
        t()
    }
    )) : t()
      , Ae = e => e instanceof Promise || e && e.then && "function" == typeof e.then
      , we = async (e, t, n) => {
        var r;
        const o = e.$hostElement$
          , i = (e.$cmpMeta$.$tagName$,
        () => {}
        )
          , a = o["s-rc"];
        n && $(e);
        const s = (e.$cmpMeta$.$tagName$,
        () => {}
        );
        Ce(e, t, o, n),
        a && (a.map((e => e())),
        o["s-rc"] = void 0),
        s(),
        i();
        {
            const t = null != (r = o["s-p"]) ? r : []
              , n = () => xe(e);
            0 === t.length ? n() : (Promise.all(t).then(n),
            e.$flags$ |= 4,
            t.length = 0)
        }
    }
      , Se = null
      , Ce = (e, n, r, o) => {
        try {
            Se = n,
            n = n.render && n.render(),
            e.$flags$ &= -17,
            e.$flags$ |= 2,
            (t.hasRenderFn || t.reflect) && (t.vdomRender || t.reflect) && (t.hydrateServerSide || ye(e, n, o))
        } catch (t) {
            a(t, e.$hostElement$)
        }
        return Se = null,
        null
    }
      , Oe = () => Se
      , xe = e => {
        e.$cmpMeta$.$tagName$;
        const t = e.$hostElement$
          , n = () => {}
          , r = t
          , o = e.$ancestorComponent$;
        ke(r, "componentDidRender"),
        64 & e.$flags$ ? (ke(r, "componentDidUpdate"),
        n()) : (e.$flags$ |= 64,
        Ie(t),
        ke(r, "componentDidLoad"),
        n(),
        e.$onReadyResolve$(t),
        o || Ne()),
        e.$onRenderResolve$ && (e.$onRenderResolve$(),
        e.$onRenderResolve$ = void 0),
        512 & e.$flags$ && _(( () => be(e, !1))),
        e.$flags$ &= -517
    }
      , Te = e => {
        {
            const t = o(e)
              , n = t.$hostElement$.isConnected;
            return n && 2 == (18 & t.$flags$) && be(t, !1),
            n
        }
    }
      , Ne = e => {
        Ie(u.documentElement),
        _(( () => U(d, "appload", {
            detail: {
                namespace: "app"
            }
        })))
    }
      , ke = (e, t, n) => {
        if (e && e[t])
            try {
                return e[t](n)
            } catch (e) {
                a(e)
            }
    }
      , Ie = e => {
        var n;
        return e.classList.add(null != (n = t.hydratedSelectorName) ? n : "hydrated")
    }
      , Re = (e, t, n, r) => {
        const i = o(e)
          , s = e
          , l = i.$instanceValues$.get(t)
          , c = i.$flags$
          , d = s;
        var u, p;
        u = n,
        p = r.$members$[t][0],
        n = null == u || S(u) ? u : 4 & p ? "false" !== u && ("" === u || !!u) : 2 & p ? parseFloat(u) : 1 & p ? String(u) : u;
        const h = Number.isNaN(l) && Number.isNaN(n);
        if (n !== l && !h) {
            if (i.$instanceValues$.set(t, n),
            r.$watchers$ && 128 & c) {
                const e = r.$watchers$[t];
                e && e.map((e => {
                    try {
                        d[e](n, l, t)
                    } catch (e) {
                        a(e, s)
                    }
                }
                ))
            }
            if (2 == (18 & c)) {
                if (d.componentShouldUpdate && !1 === d.componentShouldUpdate(n, l, t))
                    return;
                be(i, !1)
            }
        }
    }
      , Pe = (e, t, n) => {
        var r, i;
        const a = e.prototype;
        if (t.$members$ || t.$watchers$ || e.watchers) {
            e.watchers && !t.$watchers$ && (t.$watchers$ = e.watchers);
            const n = Object.entries(null != (r = t.$members$) ? r : {});
            n.map(( ([e,[n]]) => {
                (31 & n || 32 & n) && Object.defineProperty(a, e, {
                    get() {
                        return t = e,
                        o(this).$instanceValues$.get(t);
                        var t
                    },
                    set(n) {
                        Re(this, e, n, t)
                    },
                    configurable: !0,
                    enumerable: !0
                })
            }
            ));
            {
                const r = new Map;
                a.attributeChangedCallback = function(e, n, i) {
                    h.jmp(( () => {
                        var s;
                        const l = r.get(e);
                        if (this.hasOwnProperty(l))
                            i = this[l],
                            delete this[l];
                        else {
                            if (a.hasOwnProperty(l) && "number" == typeof this[l] && this[l] == i)
                                return;
                            if (null == l) {
                                const r = o(this)
                                  , a = null == r ? void 0 : r.$flags$;
                                if (a && !(8 & a) && 128 & a && i !== n) {
                                    const r = this
                                      , o = null == (s = t.$watchers$) ? void 0 : s[e];
                                    null == o || o.forEach((t => {
                                        null != r[t] && r[t].call(r, i, n, e)
                                    }
                                    ))
                                }
                                return
                            }
                        }
                        this[l] = (null !== i || "boolean" != typeof this[l]) && i
                    }
                    ))
                }
                ,
                e.observedAttributes = Array.from(new Set([...Object.keys(null != (i = t.$watchers$) ? i : {}), ...n.filter(( ([e,t]) => 15 & t[0])).map(( ([e,n]) => {
                    var o;
                    const i = n[1] || e;
                    return r.set(i, e),
                    512 & n[0] && (null == (o = t.$attrsToReflect$) || o.push([e, i])),
                    i
                }
                ))]))
            }
        }
        return e
    }
      , Le = async (e, t, n, r) => {
        let o;
        if (!(32 & t.$flags$)) {
            t.$flags$ |= 32,
            n.$lazyBundleId$;
            {
                o = e.constructor;
                const n = e.localName;
                customElements.whenDefined(n).then(( () => t.$flags$ |= 128))
            }
            if (o && o.style) {
                let r;
                "string" == typeof o.style ? r = o.style : "string" != typeof o.style && (t.$modeName$ = (e => l.map((t => t(e))).find((e => !!e)))(e),
                t.$modeName$ && (r = o.style[t.$modeName$]));
                const i = V(n, t.$modeName$);
                if (!s.has(i)) {
                    const e = (n.$tagName$,
                    () => {}
                    );
                    ( (e, t, n) => {
                        let r = s.get(e);
                        m && n ? (r = r || new CSSStyleSheet,
                        "string" == typeof r ? r = t : r.replaceSync(t)) : r = t,
                        s.set(e, r)
                    }
                    )(i, r, !!(1 & n.$flags$)),
                    e()
                }
            }
        }
        const i = t.$ancestorComponent$
          , a = () => be(t, !0);
        i && i["s-rc"] ? i["s-rc"].push(a) : a()
    }
      , De = e => {
        const t = e["s-cr"] = u.createComment("");
        t["s-cn"] = !0,
        fe(e, t, e.firstChild)
    }
      , Me = (e, t) => {
        const n = {
            $flags$: t[0],
            $tagName$: t[1]
        };
        n.$members$ = t[2],
        n.$listeners$ = t[3],
        n.$watchers$ = e.$watchers$,
        n.$attrsToReflect$ = [];
        const i = e.prototype.connectedCallback
          , a = e.prototype.disconnectedCallback;
        return Object.assign(e.prototype, {
            __registerHost() {
                ( (e, t) => {
                    const n = {
                        $flags$: 0,
                        $hostElement$: e,
                        $cmpMeta$: t,
                        $instanceValues$: new Map
                    };
                    n.$onReadyPromise$ = new Promise((e => n.$onReadyResolve$ = e)),
                    e["s-p"] = [],
                    e["s-rc"] = [],
                    r.set(e, n)
                }
                )(this, n)
            },
            connectedCallback() {
                const e = o(this);
                Be(this, e, n.$listeners$),
                (e => {
                    if (!(1 & h.$flags$)) {
                        const t = o(e)
                          , n = t.$cmpMeta$
                          , r = (n.$tagName$,
                        () => {}
                        );
                        if (1 & t.$flags$)
                            Be(e, t, n.$listeners$),
                            (null == t ? void 0 : t.$lazyInstance$) ? t.$lazyInstance$ : (null == t ? void 0 : t.$onReadyPromise$) && t.$onReadyPromise$.then(( () => {
                                t.$lazyInstance$
                            }
                            ));
                        else {
                            t.$flags$ |= 1,
                            12 & n.$flags$ && De(e);
                            {
                                let n = e;
                                for (; n = n.parentNode || n.host; )
                                    if (n["s-p"]) {
                                        ve(t, t.$ancestorComponent$ = n);
                                        break
                                    }
                            }
                            n.$members$ && Object.entries(n.$members$).map(( ([t,[n]]) => {
                                if (31 & n && e.hasOwnProperty(t)) {
                                    const n = e[t];
                                    delete e[t],
                                    e[t] = n
                                }
                            }
                            )),
                            Le(e, t, n)
                        }
                        r()
                    }
                }
                )(this),
                i && i.call(this)
            },
            disconnectedCallback() {
                (async e => {
                    if (!(1 & h.$flags$)) {
                        const t = o(e);
                        t.$rmListeners$ && (t.$rmListeners$.map((e => e())),
                        t.$rmListeners$ = void 0)
                    }
                }
                )(this),
                a && a.call(this)
            },
            __attachShadow() {
                if (this.shadowRoot) {
                    if ("open" !== this.shadowRoot.mode)
                        throw new Error(`Unable to re-use existing shadow root for ${n.$tagName$}! Mode is set to ${this.shadowRoot.mode} but Stencil only supports open shadow roots.`)
                } else
                    this.attachShadow({
                        mode: "open",
                        delegatesFocus: !!(16 & n.$flags$)
                    })
            }
        }),
        e.is = n.$tagName$,
        Pe(e, n)
    }
      , Fe = (e, t) => t
      , Be = (e, t, n, r) => {
        n && n.map(( ([n,r,o]) => {
            const i = Ue(e, n)
              , a = je(t, o)
              , s = Ge(n);
            h.ael(i, r, a, s),
            (t.$rmListeners$ = t.$rmListeners$ || []).push(( () => h.rel(i, r, a, s)))
        }
        ))
    }
      , je = (e, n) => r => {
        try {
            t.lazyLoad || e.$hostElement$[n](r)
        } catch (e) {
            a(e)
        }
    }
      , Ue = (e, t) => 4 & t ? u : 8 & t ? d : 16 & t ? u.body : e
      , Ge = e => f ? {
        passive: !!(1 & e),
        capture: !!(2 & e)
    } : !!(2 & e);
    const $e = "/idapps/xauth"
      , Ve = "ppPortal";
    function He(e, t) {
        return new Promise(( (n, r) => {
            const o = document.getElementById(Ve);
            if (!o || !o.contentWindow)
                return void r(new Error("You must initialize the portal!"));
            o.promises.push({
                resolve: n,
                reject: r
            });
            const i = o.promises.length - 1
              , a = {
                name: "proxyFetch",
                url: e,
                idx: i,
                hasAbortSignal: !1
            };
            if (t) {
                const e = Object.assign({}, t)
                  , {signal: n, headers: r} = e;
                n && (a.hasAbortSignal = !0,
                n.addEventListener("abort", ( () => {
                    const e = {
                        name: "proxyFetchAbort",
                        idx: i
                    };
                    o && o.contentWindow && o.contentWindow.postMessage(e, "*")
                }
                ), {
                    once: !0
                }),
                delete e.signal),
                r && (e.headers = function(e) {
                    if (!(e instanceof Headers))
                        return e;
                    const t = {};
                    for (const n of e.entries())
                        t[n[0]] = n[1];
                    return t
                }(r)),
                a.options = e
            }
            o.contentWindow.postMessage(a, "*")
        }
        ))
    }
    const Ke = e => !("isConnected"in e) || e.isConnected
      , ze = ( (e, t) => {
        let n;
        return (...r) => {
            n && clearTimeout(n),
            n = setTimeout(( () => {
                n = 0,
                e(...r)
            }
            ), t)
        }
    }
    )((e => {
        for (let t of e.keys())
            e.set(t, e.get(t).filter(Ke))
    }
    ), 2e3)
      , We = e => "function" == typeof e ? e() : e
      , Ye = (e, t) => {
        const n = e.indexOf(t);
        n >= 0 && (e[n] = e[e.length - 1],
        e.length--)
    }
    ;
    var Xe = {
        global: {
            aria: {
                address: {
                    form: {
                        clearAutocompleteInputField: "clear text",
                        line2: "Apartment, suite, building (optional)",
                        countryCode: "{country} country code"
                    }
                },
                branding: {
                    altText: "Fastlane by PayPal"
                },
                button: {
                    selected: "selected",
                    disabled: "selection not available"
                },
                card: {
                    cardArt: "{brand} credit card",
                    maskedCardInfo: "{brand} credit card ending in {lastDigits}"
                },
                errors: {
                    formSubmittedWithSingleError: "There's a problem with {number} field.",
                    formSubmittedWithMultipleErrors: "There's a problem with {number} fields."
                },
                expandable: {
                    expand: "expand view",
                    collapse: "collapse view"
                },
                infoIcon: "information",
                logo: "logo",
                modal: {
                    back: "go back",
                    close: "return to previously viewed screen"
                },
                toggle: {
                    toggleOn: "toggle on",
                    toggleOff: "toggle off"
                }
            },
            errors: {
                retrieve: "Something went wrong while loading your information."
            }
        },
        address: {
            toast: {
                addressAdded: "Address added to checkout."
            },
            review: {
                title: {
                    shipping: "Shipping address",
                    billing: "Billing address"
                },
                button: {
                    add: "Add an address",
                    viewOrAdd: "View or add addresses"
                }
            },
            selection: {
                title: "Choose an address",
                button: "Add an address",
                disallowed: "This store doesn't ship to these addresses"
            },
            add: {
                title: {
                    shipping: "Add a shipping address",
                    billing: "Add a billing address"
                },
                form: {
                    country: "Country",
                    firstName: "First name",
                    lastName: "Last name",
                    streetAddress: "Street address",
                    line2: "Apt., ste., bldg. (optional)",
                    city: "City",
                    state: "State",
                    postalCode: "ZIP code",
                    company: "Company name (optional)",
                    phone: "Phone number",
                    countryCode: "Code",
                    errors: {
                        inputInvalid: "Enter a valid {label}",
                        inputRequired: "{label} is required"
                    }
                },
                button: "Add Address",
                error: {
                    couldNotAdd: "We couldnʼt add your address. Please try again later.",
                    restrictedCountryAndState: "This store only ships to certain states and countries",
                    restrictedCountry: "This store does not ship to this country.",
                    restrictedState: "This store does not ship to this state."
                },
                confirm: {
                    title: "Confirm your address",
                    recommended: "Recommended address",
                    entered: "Entered address",
                    button: "Confirm Address"
                }
            }
        },
        auth: {
            customer: "Customer",
            email: "Email",
            nextButton: "Next",
            closeButton: "Close",
            continueButton: "Continue",
            payAnotherWayButton: "Pay Another Way",
            notConfirmed: "We can't confirm it's you right now",
            getOtpCodeHeading: "Log in fast with a one-time code",
            getACode: "Get a code",
            getNewCode: "Get a new code",
            sendOtpCodeHeading: "Letʼs confirm itʼs you",
            sendOtpCodeHeadingB: "We sent you a text",
            sendOtpCodeSubHeadingA: "Enter the code sent to {phoneNumber} to review your info and checkout.",
            sendOtpCodeSubHeadingB: "You already saved info with Fastlane. Enter the code sent to {phoneNumber} for faster checkout.",
            sendOtpCodeSubHeadingC: "Enter the code sent to {phoneNumber}",
            subHeading: "You already saved info with Fastlane. Log in with a passkey or code for a faster checkout.",
            loginWithYourPasskeyBtn: "Log in with Your Passkey",
            sendOtpCodeBtn: "Send a code to {phoneNumber}",
            passkeyNotWork: "Your passkey didn’t work. We’ll log you in another way.",
            invalidCode: "Check your code and try again.",
            invalidCodeB: "The code didn’t work. Let’s try a different way.",
            unexpectedError: "Things don't appear to be working right now.",
            unableSendOtp: "We're having trouble texting you a code."
        },
        branding: {
            badge: {
                text: "Powered by"
            }
        },
        consent: {
            toggleLabel: "Save your info with Fastlane for faster checkouts",
            explanation: "Pay in one click everywhere Fastlane is used.",
            expand: "How it works",
            codeExplanation: "By saving your info, you agree to get codes by text to use Fastlane everywhere it’s available.",
            legalAgreement: {
                text: "You also agree to the {terms} and {privacyStatement}.",
                terms: "terms",
                privacyStatement: "privacy statement"
            },
            tooltip: {
                explanation1: "Get one-time codes to use cards and addresses you’ve saved.",
                explanation2: "Your payment info is encrypted when it's stored and sent to places you shop.",
                explanation3: "Speed through checkout everywhere Fastlane is available.",
                heading1: "Autofill your checkouts",
                heading2: "Protect your info",
                heading3: "Use across stores"
            }
        },
        creditCardFields: {
            errorMessage: "Card type not recognized.",
            nameLabel: "Name on card",
            cardNumberLabel: "Card number",
            cardIconAltText: "credit card company logo",
            expirationLabel: "Expiration",
            expirationPlaceholder: "MM/YY",
            cvvLabel: "CVV"
        },
        deliveryMethod: {
            title: "Delivery method",
            option: "Get it {date} ({method})",
            free: "Free"
        },
        memberSignUp: {
            title: "Use your saved information",
            explanation: "We’ll autofill your card and address from PayPal here, and at every checkout that uses Fastlane. Get a code to confirm it’s you.",
            legalAgreement: {
                text: "By entering the code, you’ll create a Fastlane profile and agree to the Fastlane {terms} and {privacyStatement}.",
                terms: "terms",
                privacyStatement: "privacy statement"
            },
            getCode: "Text Code to {maskedPhoneNumber}"
        },
        paymentComponent: {
            changeLink: "Change",
            billingSameAsShipping: "Billing address same as shipping"
        },
        paymentInfo: {
            toast: {
                cardAdded: "Card added to checkout."
            },
            review: {
                title: "Payment info",
                button: {
                    add: "Add a card",
                    viewOrAdd: "View or add cards"
                }
            },
            selection: {
                title: "Choose a card",
                button: "Add a card",
                disallowed: "Not accepted at this store"
            },
            add: {
                title: "Add a card",
                form: {
                    cardNumber: "Card number",
                    cvv: "CVV",
                    error: {
                        enterValidCard: "Enter a valid card number"
                    },
                    billingAddress: "Billing address"
                },
                button: "Add Card"
            }
        },
        paymentSummary: {
            title: "Payment summary",
            subTotal: "Sub total",
            shipping: "Shipping",
            tax: "Tax",
            total: "Total"
        },
        payNow: {
            error: {
                couldNotComplete: "We couldnʼt complete your transaction. Please try again later."
            },
            button: "Pay {amount}",
            payingNow: "Paying now",
            thanks: "Thanks for using Fastlane!",
            exit: {
                exitConnect: "Exit Fastlane checkout?",
                subText: "Youʼll end your faster checkout with Fastlane.",
                button: {
                    exit: "Pay Another Way",
                    continue: "Continue with Fastlane"
                }
            }
        },
        phoneField: {
            label: "Mobile number"
        },
        radioOptions: {
            moreOptions: "Choose from more options"
        },
        selectionList: {
            noResults: "No matching results"
        },
        wallet: {
            addCard: "Add a card",
            allowedFI: "This store accepts",
            ccErr: {
                disallowedFI: "This store doesn't accept {disallowedFI}.",
                disallowedFIGeneric: "This store doesn't accept this card type.",
                generic: "Something went wrong. Please try again later.",
                genericFixable: {
                    text: "Something went wrong. Please {tryAgain}.",
                    link: "try again"
                },
                incomplete: "Please fill in your credit card details.",
                inputRequired: "{label} is required",
                inputInvalid: "Enter a valid {label}",
                invalidEntry: "Check your card information and try again.",
                labels: {
                    number: "Card number",
                    cvv: "Security code",
                    expirationDate: "Expiration date",
                    cardholderName: "Name on card"
                }
            },
            cancel: "Cancel",
            change: "Change",
            seeMoreCards: "See more cards",
            use: "USE",
            useDifCard: "Use a different card"
        },
        watermark: {
            tooltip: {
                text: "This store uses Fastlane by PayPal for faster checkouts. See Fastlane’s {privacyStatement}.",
                privacyStatement: "privacy statement"
            }
        }
    };
    const Ze = {
        accountType: void 0,
        authTimedOut: !1,
        customerId: "",
        email: "",
        optedOutOfOTP: !1,
        targetAuthAssertion: "",
        userCanceled: !1,
        geoLocation: "",
        isAccountActive: void 0,
        isAccountCompliant: void 0,
        isAccountRiskSafe: void 0,
        convertedToGuest: !1
    }
      , qe = "C"
      , Je = "P"
      , Qe = {
        guestCheckout: "guestCheckout",
        storeAccountCreation: "storeAccountCreation"
    }
      , et = {
        BT: "BT",
        PPCP: "PPCP"
    }
      , tt = "light"
      , nt = {
        selectedCardId: ""
    }
      , rt = {
        selectedAddressId: ""
    }
      , ot = {
        allowedCardBrands: [],
        allowedLocations: {},
        authState: Ze,
        axoEnv: "production",
        billingAddressCountry: "",
        cardSelectorState: nt,
        cmid: "",
        content: Xe,
        hostBaseFontSize: "",
        isFastlaneEnabled: !1,
        isIdentityLoading: !1,
        intendedExperience: Qe.guestCheckout,
        locale: "en-US",
        localeUrl: "",
        merchantState: {
            merchantId: ""
        },
        optInToggleDefaultState: !0,
        overrides: {
            geoLocOverride: ""
        },
        paymentComponentState: {},
        shippingAddressSelectorState: rt,
        showOptInToggle: !0,
        shouldExposeConsentComponent: void 0,
        viewNav: void 0
    }
      , it = ( (e, t) => {
        const n = ( (e, t=( (e, t) => e !== t)) => {
            const n = We(e);
            let r = new Map(Object.entries(null != n ? n : {}));
            const o = {
                dispose: [],
                get: [],
                set: [],
                reset: []
            }
              , i = () => {
                var t;
                r = new Map(Object.entries(null !== (t = We(e)) && void 0 !== t ? t : {})),
                o.reset.forEach((e => e()))
            }
              , a = e => (o.get.forEach((t => t(e))),
            r.get(e))
              , s = (e, n) => {
                const i = r.get(e);
                t(n, i, e) && (r.set(e, n),
                o.set.forEach((t => t(e, n, i))))
            }
              , l = "undefined" == typeof Proxy ? {} : new Proxy(n,{
                get: (e, t) => a(t),
                ownKeys: e => Array.from(r.keys()),
                getOwnPropertyDescriptor: () => ({
                    enumerable: !0,
                    configurable: !0
                }),
                has: (e, t) => r.has(t),
                set: (e, t, n) => (s(t, n),
                !0)
            })
              , c = (e, t) => (o[e].push(t),
            () => {
                Ye(o[e], t)
            }
            );
            return {
                state: l,
                get: a,
                set: s,
                on: c,
                onChange: (t, n) => {
                    const r = c("set", ( (e, r) => {
                        e === t && n(r)
                    }
                    ))
                      , o = c("reset", ( () => n(We(e)[t])));
                    return () => {
                        r(),
                        o()
                    }
                }
                ,
                use: (...e) => {
                    const t = e.reduce(( (e, t) => (t.set && e.push(c("set", t.set)),
                    t.get && e.push(c("get", t.get)),
                    t.reset && e.push(c("reset", t.reset)),
                    t.dispose && e.push(c("dispose", t.dispose)),
                    e)), []);
                    return () => t.forEach((e => e()))
                }
                ,
                dispose: () => {
                    o.dispose.forEach((e => e())),
                    i()
                }
                ,
                reset: i,
                forceUpdate: e => {
                    const t = r.get(e);
                    o.set.forEach((n => n(e, t, t)))
                }
            }
        }
        )(e, t);
        return n.use(( () => {
            const e = new Map;
            return {
                dispose: () => e.clear(),
                get: t => {
                    const n = Oe();
                    n && ( (e, t, n) => {
                        const r = e.get(t);
                        r ? r.includes(n) || r.push(n) : e.set(t, [n])
                    }
                    )(e, t, n)
                }
                ,
                set: t => {
                    const n = e.get(t);
                    n && e.set(t, n.filter(Te)),
                    ze(e)
                }
                ,
                reset: () => {
                    e.forEach((e => e.forEach(Te))),
                    ze(e)
                }
            }
        }
        )()),
        n
    }
    )(Object.assign({
        clearProfileData: () => {
            it.state.cardSelectorState = nt,
            it.state.shippingAddressSelectorState = rt,
            it.state.fullProfile = void 0,
            it.state.showOptInToggle = !0
        }
        ,
        clearSessionState: () => {
            it.state.authState = Ze,
            it.state.clearProfileData()
        }
        ,
        update: (e, t) => {
            const n = it.get(e);
            if (n || it.set(e, t),
            "object" == typeof n && "object" == typeof t)
                return it.set(e, Object.assign(Object.assign({}, n), t));
            "object" == typeof n && "object" != typeof t && console.warn(`axoStore key(${String(e)}) was a ${typeof n} and is being replaced by ${typeof t}.`),
            it.set(e, t)
        }
    }, ot));
    it.onChange("locale", (async e => {
        const t = it.get("localeUrl");
        t ? it.set("content", await (async (e, t) => {
            if ("en-US" === e)
                return Xe;
            const n = ( (e, t, n="US") => `${t}${n}/${e}/main.json`)(e, t);
            try {
                const e = await fetch(n, {
                    headers: {
                        "Content-Type": "text/plain"
                    }
                })
                  , t = await e.text();
                return await JSON.parse(t)
            } catch (e) {
                return console.log(e),
                Xe
            }
        }
        )(e, t)) : console.log("Error: localeUrl not set")
    }
    ));
    var at = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
    function st(e) {
        return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
    }
    var lt = {
        exports: {}
    };
    !function(e, t) {
        "undefined" != typeof self && self,
        e.exports = function(e) {
            var t = {};
            function n(r) {
                if (t[r])
                    return t[r].exports;
                var o = t[r] = {
                    i: r,
                    l: !1,
                    exports: {}
                };
                return e[r].call(o.exports, o, o.exports, n),
                o.l = !0,
                o.exports
            }
            return n.m = e,
            n.c = t,
            n.d = function(e, t, r) {
                n.o(e, t) || Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: r
                })
            }
            ,
            n.r = function(e) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }),
                Object.defineProperty(e, "__esModule", {
                    value: !0
                })
            }
            ,
            n.t = function(e, t) {
                if (1 & t && (e = n(e)),
                8 & t)
                    return e;
                if (4 & t && "object" == typeof e && e && e.__esModule)
                    return e;
                var r = Object.create(null);
                if (n.r(r),
                Object.defineProperty(r, "default", {
                    enumerable: !0,
                    value: e
                }),
                2 & t && "string" != typeof e)
                    for (var o in e)
                        n.d(r, o, function(t) {
                            return e[t]
                        }
                        .bind(null, o));
                return r
            }
            ,
            n.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default
                }
                : function() {
                    return e
                }
                ;
                return n.d(t, "a", t),
                t
            }
            ,
            n.o = function(e, t) {
                return {}.hasOwnProperty.call(e, t)
            }
            ,
            n.p = "",
            n(n.s = 0)
        }([function(e, t, n) {
            function r() {
                return (r = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n)
                            ({}).hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                }
                ).apply(this, arguments)
            }
            function o(e) {
                try {
                    if (!e)
                        return !1;
                    if ("undefined" != typeof Promise && e instanceof Promise)
                        return !0;
                    if ("undefined" != typeof window && "function" == typeof window.Window && e instanceof window.Window)
                        return !1;
                    if ("undefined" != typeof window && "function" == typeof window.constructor && e instanceof window.constructor)
                        return !1;
                    var t = {}.toString;
                    if (t) {
                        var n = t.call(e);
                        if ("[object Window]" === n || "[object global]" === n || "[object DOMWindow]" === n)
                            return !1
                    }
                    if ("function" == typeof e.then)
                        return !0
                } catch (e) {
                    return !1
                }
                return !1
            }
            n.r(t),
            n.d(t, "Logger", (function() {
                return le
            }
            )),
            n.d(t, "LOG_LEVEL", (function() {
                return Q
            }
            )),
            n.d(t, "PROTOCOL", (function() {
                return ee
            }
            )),
            n.d(t, "canUseSendBeacon", (function() {
                return oe
            }
            )),
            n.d(t, "extendIfDefined", (function() {
                return ae
            }
            )),
            n.d(t, "sendBeacon", (function() {
                return ie
            }
            )),
            n.d(t, "getHTTPTransport", (function() {
                return se
            }
            ));
            var i, a = [], s = [], l = 0;
            function c() {
                if (!l && i) {
                    var e = i;
                    i = null,
                    e.resolve()
                }
            }
            function d() {
                l += 1
            }
            function u() {
                l -= 1,
                c()
            }
            var p = function() {
                function e(e) {
                    var t = this;
                    if (this.resolved = void 0,
                    this.rejected = void 0,
                    this.errorHandled = void 0,
                    this.value = void 0,
                    this.error = void 0,
                    this.handlers = void 0,
                    this.dispatching = void 0,
                    this.stack = void 0,
                    this.resolved = !1,
                    this.rejected = !1,
                    this.errorHandled = !1,
                    this.handlers = [],
                    e) {
                        var n, r, o = !1, i = !1, a = !1;
                        d();
                        try {
                            e((function(e) {
                                a ? t.resolve(e) : (o = !0,
                                n = e)
                            }
                            ), (function(e) {
                                a ? t.reject(e) : (i = !0,
                                r = e)
                            }
                            ))
                        } catch (e) {
                            return u(),
                            void this.reject(e)
                        }
                        u(),
                        a = !0,
                        o ? this.resolve(n) : i && this.reject(r)
                    }
                }
                var t = e.prototype;
                return t.resolve = function(e) {
                    if (this.resolved || this.rejected)
                        return this;
                    if (o(e))
                        throw new Error("Can not resolve promise with another promise");
                    return this.resolved = !0,
                    this.value = e,
                    this.dispatch(),
                    this
                }
                ,
                t.reject = function(e) {
                    var t = this;
                    if (this.resolved || this.rejected)
                        return this;
                    if (o(e))
                        throw new Error("Can not reject promise with another promise");
                    if (!e) {
                        var n = e && "function" == typeof e.toString ? e.toString() : {}.toString.call(e);
                        e = new Error("Expected reject to be called with Error, got " + n)
                    }
                    return this.rejected = !0,
                    this.error = e,
                    this.errorHandled || setTimeout((function() {
                        t.errorHandled || function(e, t) {
                            if (-1 === a.indexOf(e)) {
                                a.push(e),
                                setTimeout((function() {
                                    throw e
                                }
                                ), 1);
                                for (var n = 0; n < s.length; n++)
                                    s[n](e, t)
                            }
                        }(e, t)
                    }
                    ), 1),
                    this.dispatch(),
                    this
                }
                ,
                t.asyncReject = function(e) {
                    return this.errorHandled = !0,
                    this.reject(e),
                    this
                }
                ,
                t.dispatch = function() {
                    var t = this.resolved
                      , n = this.rejected
                      , r = this.handlers;
                    if (!this.dispatching && (t || n)) {
                        this.dispatching = !0,
                        d();
                        for (var i = function(e, t) {
                            return e.then((function(e) {
                                t.resolve(e)
                            }
                            ), (function(e) {
                                t.reject(e)
                            }
                            ))
                        }, a = 0; a < r.length; a++) {
                            var s = r[a]
                              , l = s.onSuccess
                              , c = s.onError
                              , p = s.promise
                              , h = void 0;
                            if (t)
                                try {
                                    h = l ? l(this.value) : this.value
                                } catch (e) {
                                    p.reject(e);
                                    continue
                                }
                            else if (n) {
                                if (!c) {
                                    p.reject(this.error);
                                    continue
                                }
                                try {
                                    h = c(this.error)
                                } catch (e) {
                                    p.reject(e);
                                    continue
                                }
                            }
                            if (h instanceof e && (h.resolved || h.rejected)) {
                                var f = h;
                                f.resolved ? p.resolve(f.value) : p.reject(f.error),
                                f.errorHandled = !0
                            } else
                                o(h) ? h instanceof e && (h.resolved || h.rejected) ? h.resolved ? p.resolve(h.value) : p.reject(h.error) : i(h, p) : p.resolve(h)
                        }
                        r.length = 0,
                        this.dispatching = !1,
                        u()
                    }
                }
                ,
                t.then = function(t, n) {
                    if (t && "function" != typeof t && !t.call)
                        throw new Error("Promise.then expected a function for success handler");
                    if (n && "function" != typeof n && !n.call)
                        throw new Error("Promise.then expected a function for error handler");
                    var r = new e;
                    return this.handlers.push({
                        promise: r,
                        onSuccess: t,
                        onError: n
                    }),
                    this.errorHandled = !0,
                    this.dispatch(),
                    r
                }
                ,
                t.catch = function(e) {
                    return this.then(void 0, e)
                }
                ,
                t.finally = function(t) {
                    if (t && "function" != typeof t && !t.call)
                        throw new Error("Promise.finally expected a function");
                    return this.then((function(n) {
                        return e.try(t).then((function() {
                            return n
                        }
                        ))
                    }
                    ), (function(n) {
                        return e.try(t).then((function() {
                            throw n
                        }
                        ))
                    }
                    ))
                }
                ,
                t.timeout = function(e, t) {
                    var n = this;
                    if (this.resolved || this.rejected)
                        return this;
                    var r = setTimeout((function() {
                        n.resolved || n.rejected || n.reject(t || new Error("Promise timed out after " + e + "ms"))
                    }
                    ), e);
                    return this.then((function(e) {
                        return clearTimeout(r),
                        e
                    }
                    ))
                }
                ,
                t.toPromise = function() {
                    if ("undefined" == typeof Promise)
                        throw new TypeError("Could not find Promise");
                    return Promise.resolve(this)
                }
                ,
                t.lazy = function() {
                    return this.errorHandled = !0,
                    this
                }
                ,
                e.resolve = function(t) {
                    return t instanceof e ? t : o(t) ? new e((function(e, n) {
                        return t.then(e, n)
                    }
                    )) : (new e).resolve(t)
                }
                ,
                e.reject = function(t) {
                    return (new e).reject(t)
                }
                ,
                e.asyncReject = function(t) {
                    return (new e).asyncReject(t)
                }
                ,
                e.all = function(t) {
                    var n = new e
                      , r = t.length
                      , i = [].slice();
                    if (!r)
                        return n.resolve(i),
                        n;
                    for (var a = function(e, t, o) {
                        return t.then((function(t) {
                            i[e] = t,
                            0 == (r -= 1) && n.resolve(i)
                        }
                        ), (function(e) {
                            o.reject(e)
                        }
                        ))
                    }, s = 0; s < t.length; s++) {
                        var l = t[s];
                        if (l instanceof e) {
                            if (l.resolved) {
                                i[s] = l.value,
                                r -= 1;
                                continue
                            }
                        } else if (!o(l)) {
                            i[s] = l,
                            r -= 1;
                            continue
                        }
                        a(s, e.resolve(l), n)
                    }
                    return 0 === r && n.resolve(i),
                    n
                }
                ,
                e.hash = function(t) {
                    var n = {}
                      , r = []
                      , i = function(e) {
                        if (t.hasOwnProperty(e)) {
                            var i = t[e];
                            o(i) ? r.push(i.then((function(t) {
                                n[e] = t
                            }
                            ))) : n[e] = i
                        }
                    };
                    for (var a in t)
                        i(a);
                    return e.all(r).then((function() {
                        return n
                    }
                    ))
                }
                ,
                e.map = function(t, n) {
                    return e.all(t.map(n))
                }
                ,
                e.onPossiblyUnhandledException = function(e) {
                    return function(e) {
                        return s.push(e),
                        {
                            cancel: function() {
                                s.splice(s.indexOf(e), 1)
                            }
                        }
                    }(e)
                }
                ,
                e.try = function(t, n, r) {
                    if (t && "function" != typeof t && !t.call)
                        throw new Error("Promise.try expected a function");
                    var o;
                    d();
                    try {
                        o = t.apply(n, r || [])
                    } catch (t) {
                        return u(),
                        e.reject(t)
                    }
                    return u(),
                    e.resolve(o)
                }
                ,
                e.delay = function(t) {
                    return new e((function(e) {
                        setTimeout(e, t)
                    }
                    ))
                }
                ,
                e.isPromise = function(t) {
                    return !!(t && t instanceof e) || o(t)
                }
                ,
                e.flush = function() {
                    return function(e) {
                        var t = i = i || new e;
                        return c(),
                        t
                    }(e)
                }
                ,
                e
            }();
            function h(e, t) {
                return (h = Object.setPrototypeOf || function(e, t) {
                    return e.__proto__ = t,
                    e
                }
                )(e, t)
            }
            function f(e, t) {
                e.prototype = Object.create(t.prototype),
                e.prototype.constructor = e,
                h(e, t)
            }
            var m = "Call was rejected by callee.\r\n";
            function g(e) {
                return void 0 === e && (e = window),
                e.location.protocol
            }
            function y(e) {
                if (void 0 === e && (e = window),
                e.mockDomain) {
                    var t = e.mockDomain.split("//")[0];
                    if (t)
                        return t
                }
                return g(e)
            }
            function v(e) {
                return void 0 === e && (e = window),
                "about:" === y(e)
            }
            function b(e) {
                try {
                    return !0
                } catch (e) {}
                return !1
            }
            function E(e) {
                void 0 === e && (e = window);
                var t = e.location;
                if (!t)
                    throw new Error("Can not read window location");
                var n = g(e);
                if (!n)
                    throw new Error("Can not read window protocol");
                if ("file:" === n)
                    return "file://";
                if ("about:" === n) {
                    var r = function(e) {
                        if (void 0 === e && (e = window),
                        e)
                            try {
                                if (e.parent && e.parent !== e)
                                    return e.parent
                            } catch (e) {}
                    }(e);
                    return r && b() ? E(r) : "about://"
                }
                var o = t.host;
                if (!o)
                    throw new Error("Can not read window host");
                return n + "//" + o
            }
            function _(e) {
                void 0 === e && (e = window);
                var t = E(e);
                return t && e.mockDomain && 0 === e.mockDomain.indexOf("mock:") ? e.mockDomain : t
            }
            function A(e) {
                if (!function(e) {
                    try {
                        if (e === window)
                            return !0
                    } catch (e) {}
                    try {
                        var t = Object.getOwnPropertyDescriptor(e, "location");
                        if (t && !1 === t.enumerable)
                            return !1
                    } catch (e) {}
                    try {
                        if (v(e) && b())
                            return !0
                    } catch (e) {}
                    try {
                        if (function(e) {
                            return void 0 === e && (e = window),
                            "mock:" === y(e)
                        }(e) && b())
                            return !0
                    } catch (e) {}
                    try {
                        if (E(e) === E(window))
                            return !0
                    } catch (e) {}
                    return !1
                }(e))
                    return !1;
                try {
                    if (e === window)
                        return !0;
                    if (v(e) && b())
                        return !0;
                    if (_(window) === _(e))
                        return !0
                } catch (e) {}
                return !1
            }
            var w = []
              , S = [];
            function C(e, t) {
                void 0 === t && (t = !0);
                try {
                    if (e === window)
                        return !1
                } catch (e) {
                    return !0
                }
                try {
                    if (!e)
                        return !0
                } catch (e) {
                    return !0
                }
                try {
                    if (e.closed)
                        return !0
                } catch (e) {
                    return !e || e.message !== m
                }
                if (t && A(e))
                    try {
                        if (e.mockclosed)
                            return !0
                    } catch (e) {}
                try {
                    if (!e.parent || !e.top)
                        return !0
                } catch (e) {}
                var n = function(e, t) {
                    for (var n = 0; n < e.length; n++)
                        try {
                            if (e[n] === t)
                                return n
                        } catch (e) {}
                    return -1
                }(w, e);
                if (-1 !== n) {
                    var r = S[n];
                    if (r && function(e) {
                        if (!e.contentWindow)
                            return !0;
                        if (!e.parentNode)
                            return !0;
                        var t = e.ownerDocument;
                        if (t && t.documentElement && !t.documentElement.contains(e)) {
                            for (var n = e; n.parentNode && n.parentNode !== n; )
                                n = n.parentNode;
                            if (!n.host || !t.documentElement.contains(n.host))
                                return !0
                        }
                        return !1
                    }(r))
                        return !0
                }
                return !1
            }
            function O(e) {
                try {
                    if (e === window)
                        return !0
                } catch (e) {
                    if (e && e.message === m)
                        return !0
                }
                try {
                    if ("[object Window]" === {}.toString.call(e))
                        return !0
                } catch (e) {
                    if (e && e.message === m)
                        return !0
                }
                try {
                    if (window.Window && e instanceof window.Window)
                        return !0
                } catch (e) {
                    if (e && e.message === m)
                        return !0
                }
                try {
                    if (e && e.self === e)
                        return !0
                } catch (e) {
                    if (e && e.message === m)
                        return !0
                }
                try {
                    if (e && e.parent === e)
                        return !0
                } catch (e) {
                    if (e && e.message === m)
                        return !0
                }
                try {
                    if (e && e.top === e)
                        return !0
                } catch (e) {
                    if (e && e.message === m)
                        return !0
                }
                try {
                    if (e && "__unlikely_value__" === e.__cross_domain_utils_window_check__)
                        return !1
                } catch (e) {
                    return !0
                }
                try {
                    if ("postMessage"in e && "self"in e && "location"in e)
                        return !0
                } catch (e) {}
                return !1
            }
            function x(e, t) {
                for (var n = 0; n < e.length; n++)
                    try {
                        if (e[n] === t)
                            return n
                    } catch (e) {}
                return -1
            }
            var T, N = function() {
                function e() {
                    if (this.name = void 0,
                    this.weakmap = void 0,
                    this.keys = void 0,
                    this.values = void 0,
                    this.name = "__weakmap_" + (1e9 * Math.random() >>> 0) + "__",
                    function() {
                        if ("undefined" == typeof WeakMap)
                            return !1;
                        if (void 0 === Object.freeze)
                            return !1;
                        try {
                            var e = new WeakMap
                              , t = {};
                            return Object.freeze(t),
                            e.set(t, "__testvalue__"),
                            "__testvalue__" === e.get(t)
                        } catch (e) {
                            return !1
                        }
                    }())
                        try {
                            this.weakmap = new WeakMap
                        } catch (e) {}
                    this.keys = [],
                    this.values = []
                }
                var t = e.prototype;
                return t._cleanupClosedWindows = function() {
                    for (var e = this.weakmap, t = this.keys, n = 0; n < t.length; n++) {
                        var r = t[n];
                        if (O(r) && C(r)) {
                            if (e)
                                try {
                                    e.delete(r)
                                } catch (e) {}
                            t.splice(n, 1),
                            this.values.splice(n, 1),
                            n -= 1
                        }
                    }
                }
                ,
                t.isSafeToReadWrite = function(e) {
                    return !O(e)
                }
                ,
                t.set = function(e, t) {
                    if (!e)
                        throw new Error("WeakMap expected key");
                    var n = this.weakmap;
                    if (n)
                        try {
                            n.set(e, t)
                        } catch (e) {
                            delete this.weakmap
                        }
                    if (this.isSafeToReadWrite(e))
                        try {
                            var r = this.name
                              , o = e[r];
                            return void (o && o[0] === e ? o[1] = t : Object.defineProperty(e, r, {
                                value: [e, t],
                                writable: !0
                            }))
                        } catch (e) {}
                    this._cleanupClosedWindows();
                    var i = this.keys
                      , a = this.values
                      , s = x(i, e);
                    -1 === s ? (i.push(e),
                    a.push(t)) : a[s] = t
                }
                ,
                t.get = function(e) {
                    if (!e)
                        throw new Error("WeakMap expected key");
                    var t = this.weakmap;
                    if (t)
                        try {
                            if (t.has(e))
                                return t.get(e)
                        } catch (e) {
                            delete this.weakmap
                        }
                    if (this.isSafeToReadWrite(e))
                        try {
                            var n = e[this.name];
                            return n && n[0] === e ? n[1] : void 0
                        } catch (e) {}
                    this._cleanupClosedWindows();
                    var r = x(this.keys, e);
                    if (-1 !== r)
                        return this.values[r]
                }
                ,
                t.delete = function(e) {
                    if (!e)
                        throw new Error("WeakMap expected key");
                    var t = this.weakmap;
                    if (t)
                        try {
                            t.delete(e)
                        } catch (e) {
                            delete this.weakmap
                        }
                    if (this.isSafeToReadWrite(e))
                        try {
                            var n = e[this.name];
                            n && n[0] === e && (n[0] = n[1] = void 0)
                        } catch (e) {}
                    this._cleanupClosedWindows();
                    var r = this.keys
                      , o = x(r, e);
                    -1 !== o && (r.splice(o, 1),
                    this.values.splice(o, 1))
                }
                ,
                t.has = function(e) {
                    if (!e)
                        throw new Error("WeakMap expected key");
                    var t = this.weakmap;
                    if (t)
                        try {
                            if (t.has(e))
                                return !0
                        } catch (e) {
                            delete this.weakmap
                        }
                    if (this.isSafeToReadWrite(e))
                        try {
                            var n = e[this.name];
                            return !(!n || n[0] !== e)
                        } catch (e) {}
                    return this._cleanupClosedWindows(),
                    -1 !== x(this.keys, e)
                }
                ,
                t.getOrSet = function(e, t) {
                    if (this.has(e))
                        return this.get(e);
                    var n = t();
                    return this.set(e, n),
                    n
                }
                ,
                e
            }();
            function k(e) {
                return (k = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                }
                )(e)
            }
            function I() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                    return !1;
                if (Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}
                    ))),
                    !0
                } catch (e) {
                    return !1
                }
            }
            function R(e, t, n) {
                return (R = I() ? Reflect.construct : function(e, t, n) {
                    var r = [null];
                    r.push.apply(r, t);
                    var o = new (Function.bind.apply(e, r));
                    return n && h(o, n.prototype),
                    o
                }
                ).apply(null, arguments)
            }
            function P(e) {
                var t = "function" == typeof Map ? new Map : void 0;
                return (P = function(e) {
                    if (null === e || (n = e,
                    -1 === Function.toString.call(n).indexOf("[native code]")))
                        return e;
                    var n;
                    if ("function" != typeof e)
                        throw new TypeError("Super expression must either be null or a function");
                    if (void 0 !== t) {
                        if (t.has(e))
                            return t.get(e);
                        t.set(e, r)
                    }
                    function r() {
                        return R(e, arguments, k(this).constructor)
                    }
                    return r.prototype = Object.create(e.prototype, {
                        constructor: {
                            value: r,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    h(r, e)
                }
                )(e)
            }
            function L(e) {
                return e.name || e.__name__ || e.displayName || "anonymous"
            }
            function D(e, t) {
                try {
                    delete e.name,
                    e.name = t
                } catch (e) {}
                return e.__name__ = e.displayName = t,
                e
            }
            function M() {
                var e = "0123456789abcdef";
                return "uid_" + "xxxxxxxxxx".replace(/./g, (function() {
                    return e.charAt(Math.floor(Math.random() * e.length))
                }
                )) + "_" + function(e) {
                    if ("function" == typeof btoa)
                        return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g, (function(e, t) {
                            return String.fromCharCode(parseInt(t, 16))
                        }
                        ))).replace(/[=]/g, "");
                    if ("undefined" != typeof Buffer)
                        return Buffer.from(e, "utf8").toString("base64").replace(/[=]/g, "");
                    throw new Error("Can not find window.btoa or Buffer")
                }((new Date).toISOString().slice(11, 19).replace("T", ".")).replace(/[^a-zA-Z0-9]/g, "").toLowerCase()
            }
            function F(e) {
                try {
                    return JSON.stringify([].slice.call(e), (function(e, t) {
                        return "function" == typeof t ? "memoize[" + function(e) {
                            if (T = T || new N,
                            null == e || "object" != typeof e && "function" != typeof e)
                                throw new Error("Invalid object");
                            var t = T.get(e);
                            return t || (t = typeof e + ":" + M(),
                            T.set(e, t)),
                            t
                        }(t) + "]" : function(e) {
                            var t = !1;
                            try {
                                (e instanceof window.Element || null !== e && "object" == typeof e && 1 === e.nodeType && "object" == typeof e.style && "object" == typeof e.ownerDocument) && (t = !0)
                            } catch (e) {}
                            return t
                        }(t) ? {} : t
                    }
                    ))
                } catch (e) {
                    throw new Error("Arguments not serializable -- can not be used to memoize")
                }
            }
            function B() {
                return {}
            }
            var j = 0
              , U = 0;
            function G(e, t) {
                void 0 === t && (t = {});
                var n, r, o = t.thisNamespace, i = void 0 !== o && o, a = t.time, s = j;
                j += 1;
                var l = function() {
                    for (var t = arguments.length, o = new Array(t), l = 0; l < t; l++)
                        o[l] = arguments[l];
                    var c, d;
                    s < U && (n = null,
                    r = null,
                    s = j,
                    j += 1),
                    c = i ? (r = r || new N).getOrSet(this, B) : n = n || {};
                    try {
                        d = F(o)
                    } catch (t) {
                        return e.apply(this, arguments)
                    }
                    var u = c[d];
                    if (u && a && Date.now() - u.time < a && (delete c[d],
                    u = null),
                    u)
                        return u.value;
                    var p = Date.now()
                      , h = e.apply(this, arguments);
                    return c[d] = {
                        time: p,
                        value: h
                    },
                    h
                };
                return l.reset = function() {
                    n = null,
                    r = null
                }
                ,
                D(l, (t.name || L(e)) + "::memoized")
            }
            function $() {}
            function V(e, t) {
                void 0 === t && (t = Boolean);
                var n = {};
                for (var r in e)
                    e.hasOwnProperty(r) && t(e[r], r) && (n[r] = e[r]);
                return n
            }
            G.clear = function() {
                U = j
            }
            ,
            G((function(e) {
                if (Object.values)
                    return Object.values(e);
                var t = [];
                for (var n in e)
                    e.hasOwnProperty(n) && t.push(e[n]);
                return t
            }
            ));
            var H, K = function(e) {
                function t(t) {
                    var n;
                    return (n = e.call(this, t) || this).name = n.constructor.name,
                    "function" == typeof Error.captureStackTrace ? Error.captureStackTrace(function(e) {
                        if (void 0 === e)
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return e
                    }(n), n.constructor) : n.stack = new Error(t).stack,
                    n
                }
                return f(t, e),
                t
            }(P(Error));
            function z() {
                return Boolean(document.body) && "complete" === document.readyState
            }
            function W() {
                return Boolean(document.body) && "interactive" === document.readyState
            }
            function Y() {
                return "undefined" != typeof window && void 0 !== window.location
            }
            G((function() {
                return new p((function(e) {
                    if (z() || W())
                        return e();
                    var t = setInterval((function() {
                        if (z() || W())
                            return clearInterval(t),
                            e()
                    }
                    ), 10)
                }
                ))
            }
            )),
            f((function() {
                return H.apply(this, arguments) || this
            }
            ), H = K);
            var X = "undefined" != typeof document ? document.currentScript : null
              , Z = G((function() {
                if (X)
                    return X;
                if (X = function() {
                    try {
                        var e = function() {
                            try {
                                throw new Error("_")
                            } catch (e) {
                                return e.stack || ""
                            }
                        }()
                          , t = /.*at [^(]*\((.*):(.+):(.+)\)$/gi.exec(e)
                          , n = t && t[1];
                        if (!n)
                            return;
                        for (var r = 0, o = [].slice.call(document.getElementsByTagName("script")).reverse(); r < o.length; r++) {
                            var i = o[r];
                            if (i.src && i.src === n)
                                return i
                        }
                    } catch (e) {}
                }())
                    return X;
                throw new Error("Can not determine current script")
            }
            ))
              , q = M();
            G((function() {
                var e;
                try {
                    e = Z()
                } catch (e) {
                    return q
                }
                var t = e.getAttribute("data-uid");
                if (t && "string" == typeof t)
                    return t;
                if ((t = e.getAttribute("data-uid-auto")) && "string" == typeof t)
                    return t;
                if (e.src) {
                    var n = function(e) {
                        for (var t = "", n = 0; n < e.length; n++) {
                            var r = e[n].charCodeAt(0) * n;
                            e[n + 1] && (r += e[n + 1].charCodeAt(0) * (n - 1)),
                            t += String.fromCharCode(97 + Math.abs(r) % 26)
                        }
                        return t
                    }(JSON.stringify({
                        src: e.src,
                        dataset: e.dataset
                    }));
                    t = "uid_" + n.slice(n.length - 30)
                } else
                    t = M();
                return e.setAttribute("data-uid-auto", t),
                t
            }
            ));
            var J = []
              , Q = {
                DEBUG: "debug",
                INFO: "info",
                WARN: "warn",
                ERROR: "error"
            }
              , ee = {
                FILE: "file:"
            }
              , te = [Q.WARN, Q.ERROR]
              , ne = [Q.ERROR, Q.WARN, Q.INFO, Q.DEBUG]
              , re = Q.WARN
              , oe = function(e) {
                var t = e.headers
                  , n = e.enableSendBeacon
                  , r = t && Object.keys(t).length;
                return !!(window && window.navigator.sendBeacon && !r && n && window.Blob)
            }
              , ie = function(e) {
                var t = e.win
                  , n = void 0 === t ? window : t
                  , r = e.url
                  , o = e.data
                  , i = e.useBlob
                  , a = void 0 === i || i;
                try {
                    var s = JSON.stringify(o);
                    if (!n.navigator.sendBeacon)
                        throw new Error("No sendBeacon available");
                    if (a) {
                        var l = new Blob([s],{
                            type: "application/json"
                        });
                        return n.navigator.sendBeacon(r, l)
                    }
                    return n.navigator.sendBeacon(r, s)
                } catch (e) {
                    return !1
                }
            }
              , ae = function(e, t) {
                for (var n in t)
                    t.hasOwnProperty(n) && (e[n] = t[n])
            };
            function se(e) {
                return function(t) {
                    var n = t.url
                      , r = t.method
                      , o = t.headers
                      , i = t.json
                      , a = t.enableSendBeacon
                      , s = void 0 !== a && a;
                    return p.try((function() {
                        var t = e || window
                          , a = A(t) ? function(e) {
                            if (!A(e))
                                throw new Error("Expected window to be same domain");
                            return e
                        }(t) : window
                          , l = !1;
                        return oe({
                            headers: o,
                            enableSendBeacon: s
                        }) && (l = ie({
                            win: a,
                            url: n,
                            data: i,
                            useBlob: !0
                        })),
                        l || function(e) {
                            var t = e.url
                              , n = e.method
                              , r = void 0 === n ? "get" : n
                              , o = e.headers
                              , i = void 0 === o ? {} : o
                              , a = e.json
                              , s = e.data
                              , l = e.body
                              , c = e.win
                              , d = void 0 === c ? window : c
                              , u = e.timeout
                              , h = void 0 === u ? 0 : u;
                            return new p((function(e, n) {
                                if (a && s || a && l || s && a)
                                    throw new Error("Only options.json or options.data or options.body should be passed");
                                for (var o = {}, c = 0, u = Object.keys(i); c < u.length; c++) {
                                    var p = u[c];
                                    o[p.toLowerCase()] = i[p]
                                }
                                a ? o["content-type"] = o["content-type"] || "application/json" : (s || l) && (o["content-type"] = o["content-type"] || "application/x-www-form-urlencoded; charset=utf-8"),
                                o.accept = o.accept || "application/json";
                                for (var f = 0; f < J.length; f++)
                                    for (var m = (0,
                                    J[f])(), g = 0, y = Object.keys(m); g < y.length; g++) {
                                        var v = y[g];
                                        o[v.toLowerCase()] = m[v]
                                    }
                                var b = new d.XMLHttpRequest;
                                for (var E in b.addEventListener("load", (function() {
                                    var o = function(e) {
                                        void 0 === e && (e = "");
                                        for (var t = {}, n = 0, r = e.trim().split("\n"); n < r.length; n++) {
                                            var o = r[n].split(":")
                                              , i = o[0]
                                              , a = o.slice(1);
                                            t[i.toLowerCase()] = a.join(":").trim()
                                        }
                                        return t
                                    }(this.getAllResponseHeaders());
                                    if (!this.status)
                                        return n(new Error("Request to " + r.toLowerCase() + " " + t + " failed: no response status code."));
                                    var i = o["content-type"]
                                      , a = i && (0 === i.indexOf("application/json") || 0 === i.indexOf("text/json"))
                                      , s = this.responseText;
                                    try {
                                        s = JSON.parse(s)
                                    } catch (e) {
                                        if (a)
                                            return n(new Error("Invalid json: " + this.responseText + "."))
                                    }
                                    return e({
                                        status: this.status,
                                        headers: o,
                                        body: s
                                    })
                                }
                                ), !1),
                                b.addEventListener("error", (function(e) {
                                    n(new Error("Request to " + r.toLowerCase() + " " + t + " failed: " + e.toString() + "."))
                                }
                                ), !1),
                                b.open(r, t, !0),
                                o)
                                    o.hasOwnProperty(E) && b.setRequestHeader(E, o[E]);
                                a ? l = JSON.stringify(a) : s && (l = Object.keys(s).map((function(e) {
                                    return encodeURIComponent(e) + "=" + (s ? encodeURIComponent(s[e]) : "")
                                }
                                )).join("&")),
                                b.timeout = h,
                                b.ontimeout = function() {
                                    n(new Error("Request to " + r.toLowerCase() + " " + t + " has timed out"))
                                }
                                ,
                                b.send(l)
                            }
                            ))
                        }({
                            win: a,
                            url: n,
                            method: r,
                            headers: o,
                            json: i
                        })
                    }
                    )).then($)
                }
            }
            function le(e) {
                var t = e.url
                  , n = e.prefix
                  , o = e.metricNamespacePrefix
                  , i = e.logLevel
                  , a = void 0 === i ? re : i
                  , s = e.transport
                  , l = void 0 === s ? se() : s
                  , c = e.flushInterval
                  , d = void 0 === c ? 6e4 : c
                  , u = e.enableSendBeacon
                  , h = void 0 !== u && u
                  , f = []
                  , m = []
                  , g = []
                  , y = []
                  , v = []
                  , b = []
                  , E = []
                  , _ = [];
                function A(e, t, n) {
                    if (Y() && window.console && window.console.log && !(ne.indexOf(e) > ne.indexOf(a))) {
                        var r = [t];
                        r.push(n),
                        (n.error || n.warning) && r.push("\n\n", n.error || n.warning);
                        try {
                            window.console[e] && window.console[e].apply ? window.console[e].apply(window.console, r) : window.console.log && window.console.log.apply && window.console.log.apply(window.console, r)
                        } catch (e) {}
                    }
                }
                function w() {
                    return p.try((function() {
                        if (Y() && window.location.protocol !== ee.FILE && (f.length || m.length || g.length)) {
                            for (var e = {}, n = 0; n < v.length; n++)
                                ae(e, (0,
                                v[n])(e));
                            for (var r, o = {}, i = 0; i < _.length; i++)
                                ae(o, (0,
                                _[i])(o));
                            return t && (r = l({
                                method: "POST",
                                url: t,
                                headers: o,
                                json: {
                                    events: f,
                                    meta: e,
                                    tracking: m,
                                    metrics: g
                                },
                                enableSendBeacon: h
                            }).catch($)),
                            f = [],
                            m = [],
                            g = [],
                            p.resolve(r).then($)
                        }
                    }
                    ))
                }
                var S, C, O = function(e, t) {
                    var n, r;
                    return void 0 === t && (t = 50),
                    D((function() {
                        r && clearTimeout(r);
                        var o = n = n || new p;
                        return r = setTimeout((function() {
                            n = null,
                            r = null,
                            p.try(e).then((function(e) {
                                o.resolve(e)
                            }
                            ), (function(e) {
                                o.reject(e)
                            }
                            ))
                        }
                        ), t),
                        o
                    }
                    ), L(e) + "::promiseDebounced")
                }(w);
                function x(e, t, o) {
                    if (void 0 === o && (o = {}),
                    !Y())
                        return k;
                    n && (t = n + "_" + t);
                    for (var i = r({}, V(o), {
                        timestamp: Date.now().toString()
                    }), a = 0; a < y.length; a++)
                        ae(i, (0,
                        y[a])(i));
                    return function(e, t, n) {
                        f.push({
                            level: e,
                            event: t,
                            payload: n
                        }),
                        -1 !== te.indexOf(e) && O()
                    }(e, t, i),
                    A(e, t, i),
                    k
                }
                function T(e, t) {
                    return e.push(t),
                    k
                }
                function N(e) {
                    if (!Y())
                        return k;
                    o && (e.metricNamespace = o + "." + e.metricNamespace),
                    E.length > 0 && !e.dimensions && (e.dimensions = {});
                    for (var t = 0; t < E.length; t++)
                        ae(e.dimensions || {}, (0,
                        E[t])(e.dimensions || {}));
                    return A(Q.DEBUG, "metric." + e.metricNamespace, e.dimensions || {}),
                    g.push(e),
                    k
                }
                Y() && (S = O,
                C = d,
                function e() {
                    setTimeout((function() {
                        S(),
                        e()
                    }
                    ), C)
                }()),
                "object" == typeof window && (window.addEventListener("beforeunload", (function() {
                    w()
                }
                )),
                window.addEventListener("unload", (function() {
                    w()
                }
                )),
                window.addEventListener("pagehide", (function() {
                    w()
                }
                )));
                var k = {
                    debug: function(e, t) {
                        return x(Q.DEBUG, e, t)
                    },
                    info: function(e, t) {
                        return x(Q.INFO, e, t)
                    },
                    warn: function(e, t) {
                        return x(Q.WARN, e, t)
                    },
                    error: function(e, t) {
                        return x(Q.ERROR, e, t)
                    },
                    track: function(e) {
                        if (void 0 === e && (e = {}),
                        !Y())
                            return k;
                        for (var t = V(e), n = 0; n < b.length; n++)
                            ae(t, (0,
                            b[n])(t));
                        return A(Q.DEBUG, "track", t),
                        m.push(t),
                        k
                    },
                    metric: N,
                    metricCounter: function(e) {
                        var t;
                        return N({
                            metricNamespace: e.namespace,
                            metricEventName: e.event,
                            metricValue: null != (t = e.value) ? t : 1,
                            metricType: "counter",
                            dimensions: e.dimensions
                        })
                    },
                    metricGauge: function(e) {
                        return N({
                            metricNamespace: e.namespace,
                            metricEventName: e.event,
                            metricValue: e.value,
                            metricType: "gauge",
                            dimensions: e.dimensions
                        })
                    },
                    flush: O,
                    immediateFlush: w,
                    addPayloadBuilder: function(e) {
                        return T(y, e)
                    },
                    addMetaBuilder: function(e) {
                        return T(v, e)
                    },
                    addMetricDimensionBuilder: function(e) {
                        return T(E, e)
                    },
                    addTrackingBuilder: function(e) {
                        return T(b, e)
                    },
                    addHeaderBuilder: function(e) {
                        return T(_, e)
                    },
                    setTransport: function(e) {
                        return l = e,
                        k
                    },
                    configure: function(e) {
                        return e.url && (t = e.url),
                        e.prefix && (n = e.prefix),
                        e.logLevel && (a = e.logLevel),
                        e.transport && (l = e.transport),
                        e.flushInterval && (d = e.flushInterval),
                        e.enableSendBeacon && (h = e.enableSendBeacon),
                        k
                    },
                    __buffer__: {
                        get events() {
                            return f
                        },
                        get tracking() {
                            return m
                        },
                        get metrics() {
                            return g
                        }
                    }
                };
                return Object.defineProperty(k, "__buffer__", {
                    writable: !1
                }),
                k
            }
        }
        ])
    }(lt);
    var ct = lt.exports
      , dt = {
        exports: {}
    };
    !function(e, t) {
        "undefined" != typeof self && self,
        e.exports = function(e) {
            var t = {};
            function n(r) {
                if (t[r])
                    return t[r].exports;
                var o = t[r] = {
                    i: r,
                    l: !1,
                    exports: {}
                };
                return e[r].call(o.exports, o, o.exports, n),
                o.l = !0,
                o.exports
            }
            return n.m = e,
            n.c = t,
            n.d = function(e, t, r) {
                n.o(e, t) || Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: r
                })
            }
            ,
            n.r = function(e) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }),
                Object.defineProperty(e, "__esModule", {
                    value: !0
                })
            }
            ,
            n.t = function(e, t) {
                if (1 & t && (e = n(e)),
                8 & t)
                    return e;
                if (4 & t && "object" == typeof e && e && e.__esModule)
                    return e;
                var r = Object.create(null);
                if (n.r(r),
                Object.defineProperty(r, "default", {
                    enumerable: !0,
                    value: e
                }),
                2 & t && "string" != typeof e)
                    for (var o in e)
                        n.d(r, o, function(t) {
                            return e[t]
                        }
                        .bind(null, o));
                return r
            }
            ,
            n.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default
                }
                : function() {
                    return e
                }
                ;
                return n.d(t, "a", t),
                t
            }
            ,
            n.o = function(e, t) {
                return {}.hasOwnProperty.call(e, t)
            }
            ,
            n.p = "",
            n(n.s = 0)
        }([function(e, t, n) {
            n.r(t),
            n.d(t, "getUserAgent", (function() {
                return o
            }
            )),
            n.d(t, "isDevice", (function() {
                return a
            }
            )),
            n.d(t, "isTablet", (function() {
                return s
            }
            )),
            n.d(t, "isWebView", (function() {
                return l
            }
            )),
            n.d(t, "isStandAlone", (function() {
                return c
            }
            )),
            n.d(t, "isFacebookWebView", (function() {
                return d
            }
            )),
            n.d(t, "isFirefox", (function() {
                return u
            }
            )),
            n.d(t, "isFirefoxIOS", (function() {
                return p
            }
            )),
            n.d(t, "isEdgeIOS", (function() {
                return h
            }
            )),
            n.d(t, "isOperaMini", (function() {
                return f
            }
            )),
            n.d(t, "isAndroid", (function() {
                return m
            }
            )),
            n.d(t, "isIos", (function() {
                return g
            }
            )),
            n.d(t, "isIOS14", (function() {
                return y
            }
            )),
            n.d(t, "isGoogleSearchApp", (function() {
                return v
            }
            )),
            n.d(t, "isQQBrowser", (function() {
                return b
            }
            )),
            n.d(t, "isIosWebview", (function() {
                return E
            }
            )),
            n.d(t, "isSFVC", (function() {
                return _
            }
            )),
            n.d(t, "isSFVCorSafari", (function() {
                return A
            }
            )),
            n.d(t, "isAndroidWebview", (function() {
                return w
            }
            )),
            n.d(t, "isIE", (function() {
                return S
            }
            )),
            n.d(t, "isIECompHeader", (function() {
                return C
            }
            )),
            n.d(t, "isElectron", (function() {
                return O
            }
            )),
            n.d(t, "isIEIntranet", (function() {
                return x
            }
            )),
            n.d(t, "isMacOsCna", (function() {
                return T
            }
            )),
            n.d(t, "supportsPopups", (function() {
                return N
            }
            )),
            n.d(t, "isChrome", (function() {
                return k
            }
            )),
            n.d(t, "isSafari", (function() {
                return I
            }
            )),
            n.d(t, "isIpadOs", (function() {
                return R
            }
            )),
            n.d(t, "isApplePaySupported", (function() {
                return P
            }
            )),
            n.d(t, "isCrossSiteTrackingEnabled", (function() {
                return L
            }
            )),
            n.d(t, "getBody", (function() {
                return Yt
            }
            )),
            n.d(t, "isDocumentReady", (function() {
                return Xt
            }
            )),
            n.d(t, "isDocumentInteractive", (function() {
                return Zt
            }
            )),
            n.d(t, "urlEncode", (function() {
                return qt
            }
            )),
            n.d(t, "waitForWindowReady", (function() {
                return Jt
            }
            )),
            n.d(t, "waitForDocumentReady", (function() {
                return Qt
            }
            )),
            n.d(t, "waitForDocumentBody", (function() {
                return en
            }
            )),
            n.d(t, "parseQuery", (function() {
                return tn
            }
            )),
            n.d(t, "getQueryParam", (function() {
                return nn
            }
            )),
            n.d(t, "urlWillRedirectPage", (function() {
                return rn
            }
            )),
            n.d(t, "formatQuery", (function() {
                return on
            }
            )),
            n.d(t, "extendQuery", (function() {
                return an
            }
            )),
            n.d(t, "extendUrl", (function() {
                return sn
            }
            )),
            n.d(t, "redirect", (function() {
                return ln
            }
            )),
            n.d(t, "hasMetaViewPort", (function() {
                return cn
            }
            )),
            n.d(t, "isElementVisible", (function() {
                return dn
            }
            )),
            n.d(t, "getPerformance", (function() {
                return un
            }
            )),
            n.d(t, "enablePerformance", (function() {
                return pn
            }
            )),
            n.d(t, "getPageRenderTime", (function() {
                return hn
            }
            )),
            n.d(t, "htmlEncode", (function() {
                return fn
            }
            )),
            n.d(t, "isBrowser", (function() {
                return mn
            }
            )),
            n.d(t, "querySelectorAll", (function() {
                return gn
            }
            )),
            n.d(t, "onClick", (function() {
                return yn
            }
            )),
            n.d(t, "getScript", (function() {
                return vn
            }
            )),
            n.d(t, "isLocalStorageEnabled", (function() {
                return bn
            }
            )),
            n.d(t, "getBrowserLocales", (function() {
                return En
            }
            )),
            n.d(t, "appendChild", (function() {
                return _n
            }
            )),
            n.d(t, "getElementSafe", (function() {
                return An
            }
            )),
            n.d(t, "getElement", (function() {
                return wn
            }
            )),
            n.d(t, "elementReady", (function() {
                return Sn
            }
            )),
            n.d(t, "PopupOpenError", (function() {
                return On
            }
            )),
            n.d(t, "popup", (function() {
                return xn
            }
            )),
            n.d(t, "writeToWindow", (function() {
                return Tn
            }
            )),
            n.d(t, "writeElementToWindow", (function() {
                return Nn
            }
            )),
            n.d(t, "setStyle", (function() {
                return kn
            }
            )),
            n.d(t, "awaitFrameLoad", (function() {
                return In
            }
            )),
            n.d(t, "awaitFrameWindow", (function() {
                return Rn
            }
            )),
            n.d(t, "createElement", (function() {
                return Pn
            }
            )),
            n.d(t, "iframe", (function() {
                return Ln
            }
            )),
            n.d(t, "addEventListener", (function() {
                return Dn
            }
            )),
            n.d(t, "bindEvents", (function() {
                return Mn
            }
            )),
            n.d(t, "setVendorCSS", (function() {
                return Bn
            }
            )),
            n.d(t, "animate", (function() {
                return Gn
            }
            )),
            n.d(t, "makeElementVisible", (function() {
                return $n
            }
            )),
            n.d(t, "makeElementInvisible", (function() {
                return Vn
            }
            )),
            n.d(t, "showElement", (function() {
                return Hn
            }
            )),
            n.d(t, "hideElement", (function() {
                return Kn
            }
            )),
            n.d(t, "destroyElement", (function() {
                return zn
            }
            )),
            n.d(t, "showAndAnimate", (function() {
                return Wn
            }
            )),
            n.d(t, "animateAndHide", (function() {
                return Yn
            }
            )),
            n.d(t, "addClass", (function() {
                return Xn
            }
            )),
            n.d(t, "removeClass", (function() {
                return Zn
            }
            )),
            n.d(t, "isElementClosed", (function() {
                return qn
            }
            )),
            n.d(t, "watchElementForClose", (function() {
                return Jn
            }
            )),
            n.d(t, "fixScripts", (function() {
                return Qn
            }
            )),
            n.d(t, "onResize", (function() {
                return er
            }
            )),
            n.d(t, "getResourceLoadTime", (function() {
                return tr
            }
            )),
            n.d(t, "isShadowElement", (function() {
                return nr
            }
            )),
            n.d(t, "getShadowRoot", (function() {
                return rr
            }
            )),
            n.d(t, "getShadowHost", (function() {
                return or
            }
            )),
            n.d(t, "insertShadowSlot", (function() {
                return ir
            }
            )),
            n.d(t, "preventClickFocus", (function() {
                return ar
            }
            )),
            n.d(t, "getStackTrace", (function() {
                return sr
            }
            )),
            n.d(t, "getCurrentScript", (function() {
                return cr
            }
            )),
            n.d(t, "getCurrentScriptUID", (function() {
                return ur
            }
            )),
            n.d(t, "submitForm", (function() {
                return pr
            }
            )),
            n.d(t, "experiment", (function() {
                return yr
            }
            )),
            n.d(t, "getGlobalNameSpace", (function() {
                return vr
            }
            )),
            n.d(t, "getStorage", (function() {
                return hr
            }
            )),
            n.d(t, "isElement", (function() {
                return Ae
            }
            )),
            n.d(t, "getFunctionName", (function() {
                return we
            }
            )),
            n.d(t, "setFunctionName", (function() {
                return Se
            }
            )),
            n.d(t, "base64encode", (function() {
                return Ce
            }
            )),
            n.d(t, "base64decode", (function() {
                return Oe
            }
            )),
            n.d(t, "uniqueID", (function() {
                return xe
            }
            )),
            n.d(t, "getGlobal", (function() {
                return Te
            }
            )),
            n.d(t, "getObjectID", (function() {
                return Ne
            }
            )),
            n.d(t, "getEmptyObject", (function() {
                return Ie
            }
            )),
            n.d(t, "memoize", (function() {
                return Le
            }
            )),
            n.d(t, "promiseIdentity", (function() {
                return De
            }
            )),
            n.d(t, "memoizePromise", (function() {
                return Me
            }
            )),
            n.d(t, "promisify", (function() {
                return Fe
            }
            )),
            n.d(t, "inlineMemoize", (function() {
                return Be
            }
            )),
            n.d(t, "noop", (function() {
                return je
            }
            )),
            n.d(t, "once", (function() {
                return Ue
            }
            )),
            n.d(t, "hashStr", (function() {
                return Ge
            }
            )),
            n.d(t, "strHashStr", (function() {
                return $e
            }
            )),
            n.d(t, "match", (function() {
                return Ve
            }
            )),
            n.d(t, "awaitKey", (function() {
                return He
            }
            )),
            n.d(t, "stringifyError", (function() {
                return Ke
            }
            )),
            n.d(t, "stringifyErrorMessage", (function() {
                return ze
            }
            )),
            n.d(t, "stringify", (function() {
                return We
            }
            )),
            n.d(t, "domainMatches", (function() {
                return Ye
            }
            )),
            n.d(t, "patchMethod", (function() {
                return Xe
            }
            )),
            n.d(t, "extend", (function() {
                return Ze
            }
            )),
            n.d(t, "values", (function() {
                return qe
            }
            )),
            n.d(t, "memoizedValues", (function() {
                return Je
            }
            )),
            n.d(t, "perc", (function() {
                return Qe
            }
            )),
            n.d(t, "min", (function() {
                return et
            }
            )),
            n.d(t, "max", (function() {
                return tt
            }
            )),
            n.d(t, "roundUp", (function() {
                return nt
            }
            )),
            n.d(t, "regexMap", (function() {
                return rt
            }
            )),
            n.d(t, "svgToBase64", (function() {
                return ot
            }
            )),
            n.d(t, "objFilter", (function() {
                return it
            }
            )),
            n.d(t, "identity", (function() {
                return st
            }
            )),
            n.d(t, "regexTokenize", (function() {
                return lt
            }
            )),
            n.d(t, "promiseDebounce", (function() {
                return ct
            }
            )),
            n.d(t, "safeInterval", (function() {
                return dt
            }
            )),
            n.d(t, "isInteger", (function() {
                return ut
            }
            )),
            n.d(t, "isFloat", (function() {
                return pt
            }
            )),
            n.d(t, "serializePrimitive", (function() {
                return ht
            }
            )),
            n.d(t, "deserializePrimitive", (function() {
                return ft
            }
            )),
            n.d(t, "dotify", (function() {
                return mt
            }
            )),
            n.d(t, "undotify", (function() {
                return gt
            }
            )),
            n.d(t, "eventEmitter", (function() {
                return yt
            }
            )),
            n.d(t, "camelToDasherize", (function() {
                return vt
            }
            )),
            n.d(t, "dasherizeToCamel", (function() {
                return bt
            }
            )),
            n.d(t, "capitalizeFirstLetter", (function() {
                return Et
            }
            )),
            n.d(t, "get", (function() {
                return _t
            }
            )),
            n.d(t, "safeTimeout", (function() {
                return At
            }
            )),
            n.d(t, "defineLazyProp", (function() {
                return wt
            }
            )),
            n.d(t, "arrayFrom", (function() {
                return St
            }
            )),
            n.d(t, "isObject", (function() {
                return Ct
            }
            )),
            n.d(t, "isObjectObject", (function() {
                return Ot
            }
            )),
            n.d(t, "isPlainObject", (function() {
                return xt
            }
            )),
            n.d(t, "replaceObject", (function() {
                return Tt
            }
            )),
            n.d(t, "copyProp", (function() {
                return Nt
            }
            )),
            n.d(t, "regex", (function() {
                return kt
            }
            )),
            n.d(t, "regexAll", (function() {
                return It
            }
            )),
            n.d(t, "isDefined", (function() {
                return Rt
            }
            )),
            n.d(t, "cycle", (function() {
                return Pt
            }
            )),
            n.d(t, "debounce", (function() {
                return Lt
            }
            )),
            n.d(t, "isRegex", (function() {
                return Dt
            }
            )),
            n.d(t, "weakMapMemoize", (function() {
                return Mt
            }
            )),
            n.d(t, "weakMapMemoizePromise", (function() {
                return Ft
            }
            )),
            n.d(t, "getOrSet", (function() {
                return Bt
            }
            )),
            n.d(t, "cleanup", (function() {
                return jt
            }
            )),
            n.d(t, "tryCatch", (function() {
                return Ut
            }
            )),
            n.d(t, "removeFromArray", (function() {
                return Gt
            }
            )),
            n.d(t, "assertExists", (function() {
                return $t
            }
            )),
            n.d(t, "unique", (function() {
                return Vt
            }
            )),
            n.d(t, "constHas", (function() {
                return Ht
            }
            )),
            n.d(t, "dedupeErrors", (function() {
                return Kt
            }
            )),
            n.d(t, "ExtendableError", (function() {
                return zt
            }
            )),
            n.d(t, "sanitizeUrl", (function() {
                return Wt
            }
            )),
            n.d(t, "request", (function() {
                return Er
            }
            )),
            n.d(t, "addHeaderBuilder", (function() {
                return _r
            }
            )),
            n.d(t, "TYPES", (function() {
                return Ar
            }
            )),
            n.d(t, "memoized", (function() {
                return wr
            }
            )),
            n.d(t, "promise", (function() {
                return Sr
            }
            )),
            n.d(t, "isPerc", (function() {
                return Cr
            }
            )),
            n.d(t, "isPx", (function() {
                return Or
            }
            )),
            n.d(t, "toNum", (function() {
                return xr
            }
            )),
            n.d(t, "toPx", (function() {
                return Tr
            }
            )),
            n.d(t, "toCSS", (function() {
                return Nr
            }
            )),
            n.d(t, "percOf", (function() {
                return kr
            }
            )),
            n.d(t, "normalizeDimension", (function() {
                return Ir
            }
            )),
            n.d(t, "wrapPromise", (function() {
                return Rr
            }
            )),
            n.d(t, "KEY_CODES", (function() {
                return pe
            }
            )),
            n.d(t, "ATTRIBUTES", (function() {
                return he
            }
            )),
            n.d(t, "UID_HASH_LENGTH", (function() {
                return fe
            }
            )),
            n.d(t, "invalidProtocolRegex", (function() {
                return me
            }
            )),
            n.d(t, "htmlEntitiesRegex", (function() {
                return ge
            }
            )),
            n.d(t, "htmlCtrlEntityRegex", (function() {
                return ye
            }
            )),
            n.d(t, "ctrlCharactersRegex", (function() {
                return ve
            }
            )),
            n.d(t, "urlSchemeRegex", (function() {
                return be
            }
            )),
            n.d(t, "relativeFirstCharacters", (function() {
                return Ee
            }
            )),
            n.d(t, "BLANK_URL", (function() {
                return _e
            }
            )),
            n.d(t, "sfvcScreens", (function() {
                return r
            }
            ));
            var r = {
                932: {
                    textSizeHeights: [746, 742, 738],
                    textSizeHeightsNoTabs: [854, 852, 850, 848],
                    zoomHeight: {
                        1.15: [746, 742, 738],
                        1.25: [746, 743],
                        1.5: [746, 743],
                        1.75: [746, 742, 739],
                        2: [746, 742],
                        2.5: [745, 743],
                        3: [749],
                        3.01: [749]
                    },
                    maybeSafari: {
                        1: [732],
                        1.15: [733],
                        1.25: [738, 733],
                        1.5: [738, 732],
                        1.75: [732],
                        2: [738, 732],
                        2.5: [738, 733],
                        3: [743, 740, 734],
                        3.01: [743, 740, 734]
                    }
                },
                926: {
                    textSizeHeights: [752, 748, 744, 738],
                    textSizeHeightsNoTabs: [860, 858, 856, 854],
                    zoomHeight: {
                        1.15: [752, 747, 744, 738],
                        1.25: [753, 748, 744, 738],
                        1.5: [752, 749, 744, 738],
                        1.75: [753, 747, 744, 739],
                        2: [752, 748, 744],
                        2.5: [753, 748],
                        3: [753, 744]
                    },
                    maybeSafari: {
                        2: [738],
                        2.5: [745, 738],
                        3: [747, 738]
                    }
                },
                896: {
                    textSizeHeights: [721, 717, 713, 707],
                    textSizeHeightsNoTabs: [829, 827, 825, 823],
                    zoomHeight: {
                        1.15: [721, 716, 713, 707],
                        1.25: [721, 718, 713, 708],
                        1.5: [722, 717, 713],
                        1.75: [721, 718, 712, 707],
                        2: [722, 718, 714, 708],
                        2.5: [720, 718, 713, 708],
                        3: [720, 717, 708]
                    },
                    maybeSafari: {
                        1.5: [707],
                        3: [714]
                    }
                },
                852: {
                    textSizeHeights: [666, 662, 658],
                    textSizeHeightsNoTabs: [774, 772, 770, 768],
                    zoomHeight: {
                        1.15: [666, 662, 658],
                        1.25: [665, 661, 658],
                        1.5: [666, 662, 659],
                        1.75: [667, 662],
                        1.99: [663, 659],
                        2: [663, 659],
                        2.5: [665, 663],
                        3: [666, 663]
                    },
                    maybeSafari: {
                        1: [652],
                        1.15: [652],
                        1.25: [651],
                        1.5: [653],
                        1.75: [658, 653],
                        1.99: [655, 649],
                        2: [655, 649],
                        2.5: [658, 653],
                        3: [657, 651]
                    }
                },
                844: {
                    textSizeHeights: [670, 666, 662, 656],
                    textSizeHeightsNoTabs: [778, 776, 774, 772],
                    zoomHeight: {
                        1.15: [670, 666, 662],
                        1.25: [670, 666, 663, 656],
                        1.5: [671, 666, 662],
                        1.75: [670, 667, 662, 656],
                        2: [670, 666, 662],
                        2.5: [670, 663],
                        3: [669, 666, 663, 657]
                    },
                    maybeSafari: {
                        1.15: [656],
                        1.5: [656],
                        2: [656],
                        2.5: [665, 655],
                        3: [663]
                    }
                },
                812: {
                    textSizeHeights: [641, 637, 633, 627],
                    textSizeHeightsNoTabs: [749, 747, 745, 743],
                    zoomHeight: {
                        1.15: [641, 637, 633, 627],
                        1.25: [641, 638, 633, 628],
                        1.5: [641, 638, 633, 627],
                        1.75: [641, 637, 634],
                        2: [642, 638, 634, 628],
                        2.5: [640, 638, 633, 628],
                        3: [642, 633]
                    },
                    maybeSafari: {
                        1.75: [627],
                        3: [636, 627]
                    }
                },
                736: {
                    textSizeHeights: [628, 624, 620, 614],
                    textSizeHeightsNoTabs: [736, 734, 732, 730],
                    zoomHeight: {
                        1.15: [628, 624, 620, 614],
                        1.25: [628, 624, 620, 614],
                        1.5: [629, 624, 620],
                        1.75: [628, 625, 620, 614],
                        2: [628, 624, 620],
                        2.5: [628, 625, 620, 615],
                        3: [627, 624, 615]
                    },
                    maybeSafari: {
                        1.5: [614],
                        2: [614],
                        3: [621]
                    }
                },
                667: {
                    textSizeHeights: [559, 555, 551, 545],
                    textSizeHeightsNoTabs: [667, 665, 663, 661],
                    zoomHeight: {
                        1.15: [559, 555, 551, 545],
                        1.25: [559, 555, 551, 545],
                        1.5: [560, 555, 551],
                        1.75: [558, 555, 551],
                        2: [560, 556, 552, 546],
                        2.5: [560, 555, 550],
                        3: [558, 555, 546]
                    },
                    maybeSafari: {
                        1.5: [545],
                        1.75: [544],
                        2.5: [545],
                        3: [552]
                    }
                }
            };
            function o() {
                return window.navigator.mockUserAgent || window.navigator.userAgent
            }
            var i = /ip(a|ro)d|silk|xoom|playbook|tablet|kindle|Nexus 7|GT-P10|SC-01C|SHW-M180S|SM-T320|SGH-T849|SCH-I800|SHW-M180L|SPH-P100|SGH-I987|zt180|HTC( Flyer|_Flyer)|Sprint ATP51|ViewPad7|pandigital(sprnova|nova)|Ideos S7|Dell Streak 7|Advent Vega|A101IT|A70BHT|MID7015|Next2|nook|FOLIO|MB511.*RUTEM|Mac OS.*Silk/i;
            function a(e) {
                return void 0 === e && (e = o()),
                !!e.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)
            }
            function s(e) {
                return void 0 === e && (e = o()),
                i.test(e)
            }
            function l(e) {
                return void 0 === e && (e = o()),
                /(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)|.*WKWebView/i.test(e) || /\bwv\b/.test(e) || /Android.*Version\/(\d)\.(\d)/i.test(e)
            }
            function c() {
                return !0 === window.navigator.standalone || window.matchMedia("(display-mode: standalone)").matches
            }
            function d(e) {
                return void 0 === e && (e = o()),
                /FBAN/.test(e) || /FBAV/.test(e)
            }
            function u(e) {
                return void 0 === e && (e = o()),
                /Firefox/i.test(e)
            }
            function p(e) {
                return void 0 === e && (e = o()),
                /FxiOS/i.test(e)
            }
            function h(e) {
                return void 0 === e && (e = o()),
                /EdgiOS/i.test(e)
            }
            function f(e) {
                return void 0 === e && (e = o()),
                /Opera Mini/i.test(e)
            }
            function m(e) {
                return void 0 === e && (e = o()),
                /Android/.test(e)
            }
            function g(e) {
                return void 0 === e && (e = o()),
                /iPhone|iPod|iPad/.test(e)
            }
            function y(e) {
                return void 0 === e && (e = o()),
                /iPhone.*OS.*(1)?(?:(1)[0-4]| [0-9])_/.test(e)
            }
            function v(e) {
                return void 0 === e && (e = o()),
                /\bGSA\b/.test(e)
            }
            function b(e) {
                return void 0 === e && (e = o()),
                /QQBrowser/.test(e)
            }
            function E(e) {
                return void 0 === e && (e = o()),
                !!g(e) && (!!v(e) || /.+AppleWebKit(?!.*Safari)|.*WKWebView/.test(e))
            }
            function _(e) {
                if (void 0 === e && (e = o()),
                g(e)) {
                    var t = window.innerHeight
                      , n = Math.round(window.screen.width / window.innerWidth * 100) / 100
                      , i = Math.round(t * n)
                      , a = null;
                    if (y(e))
                        a = r[window.outerHeight];
                    else {
                        if (1 !== n)
                            return !0;
                        a = r[window.outerHeight]
                    }
                    return !a || (n > 1 && a.zoomHeight && a.zoomHeight[n] ? -1 !== a.zoomHeight[n].indexOf(i) : -1 !== a.textSizeHeights.indexOf(i) || -1 !== a.textSizeHeightsNoTabs.indexOf(i))
                }
                return !1
            }
            function A(e) {
                if (void 0 === e && (e = o()),
                g(e)) {
                    var t = _(e)
                      , n = y(e) ? r[window.outerHeight] : null;
                    if (!n)
                        return !1;
                    var i = window.innerHeight
                      , a = Math.round(window.screen.width / window.innerWidth * 100) / 100
                      , s = Math.round(i * a)
                      , l = n.maybeSafari
                      , c = !1;
                    return a > 1 && l[a] && -1 !== l[a].indexOf(s) && (c = !0),
                    t || c
                }
                return !1
            }
            function w(e) {
                return void 0 === e && (e = o()),
                !!m(e) && /Version\/[\d.]+/.test(e) && !f(e)
            }
            function S() {
                return !!window.document.documentMode || Boolean(window.navigator && window.navigator.userAgent && /Edge|MSIE|rv:11/i.test(window.navigator.userAgent))
            }
            function C() {
                var e = window.document.querySelector('meta[http-equiv="X-UA-Compatible"]')
                  , t = window.document.querySelector('meta[content="IE=edge"]');
                return !(!e || !t)
            }
            function O() {
                return !("undefined" == typeof process || !process.versions || !process.versions.electron)
            }
            function x() {
                if (window.document.documentMode)
                    try {
                        var e = window.status;
                        return window.status = "testIntranetMode",
                        "testIntranetMode" === window.status && (window.status = e,
                        !0)
                    } catch (e) {
                        return !1
                    }
                return !1
            }
            function T() {
                var e = o();
                return /Macintosh.*AppleWebKit(?!.*Safari)/i.test(e)
            }
            function N(e) {
                return void 0 === e && (e = o()),
                !(l(e) || E(e) || w(e) || f(e) || p(e) || h(e) || d(e) || b(e) || O() || T() || c())
            }
            function k(e) {
                return void 0 === e && (e = o()),
                /Chrome|Chromium|CriOS/.test(e) && !/SamsungBrowser|Silk|EdgA/.test(e)
            }
            function I(e) {
                return void 0 === e && (e = o()),
                /Safari/.test(e) && !k(e) && !/Silk|FxiOS|EdgiOS/.test(e)
            }
            function R(e) {
                return void 0 === e && (e = o()),
                !(/iPhone|iPod/.test(e) || !(/iPad/.test(e) || I(e) && navigator.maxTouchPoints >= 1))
            }
            function P() {
                try {
                    if (window.ApplePaySession && window.ApplePaySession.supportsVersion(3) && window.ApplePaySession.canMakePayments())
                        return !0
                } catch (e) {
                    return !1
                }
                return !1
            }
            function L(e) {
                return -1 === window.document.cookie.indexOf(e)
            }
            function D(e, t) {
                return (D = Object.setPrototypeOf || function(e, t) {
                    return e.__proto__ = t,
                    e
                }
                )(e, t)
            }
            function M(e, t) {
                e.prototype = Object.create(t.prototype),
                e.prototype.constructor = e,
                D(e, t)
            }
            function F() {
                return (F = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n)
                            ({}).hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                }
                ).apply(this, arguments)
            }
            function B(e) {
                try {
                    if (!e)
                        return !1;
                    if ("undefined" != typeof Promise && e instanceof Promise)
                        return !0;
                    if ("undefined" != typeof window && "function" == typeof window.Window && e instanceof window.Window)
                        return !1;
                    if ("undefined" != typeof window && "function" == typeof window.constructor && e instanceof window.constructor)
                        return !1;
                    var t = {}.toString;
                    if (t) {
                        var n = t.call(e);
                        if ("[object Window]" === n || "[object global]" === n || "[object DOMWindow]" === n)
                            return !1
                    }
                    if ("function" == typeof e.then)
                        return !0
                } catch (e) {
                    return !1
                }
                return !1
            }
            var j, U = [], G = [], $ = 0;
            function V() {
                if (!$ && j) {
                    var e = j;
                    j = null,
                    e.resolve()
                }
            }
            function H() {
                $ += 1
            }
            function K() {
                $ -= 1,
                V()
            }
            var z = function() {
                function e(e) {
                    var t = this;
                    if (this.resolved = void 0,
                    this.rejected = void 0,
                    this.errorHandled = void 0,
                    this.value = void 0,
                    this.error = void 0,
                    this.handlers = void 0,
                    this.dispatching = void 0,
                    this.stack = void 0,
                    this.resolved = !1,
                    this.rejected = !1,
                    this.errorHandled = !1,
                    this.handlers = [],
                    e) {
                        var n, r, o = !1, i = !1, a = !1;
                        H();
                        try {
                            e((function(e) {
                                a ? t.resolve(e) : (o = !0,
                                n = e)
                            }
                            ), (function(e) {
                                a ? t.reject(e) : (i = !0,
                                r = e)
                            }
                            ))
                        } catch (e) {
                            return K(),
                            void this.reject(e)
                        }
                        K(),
                        a = !0,
                        o ? this.resolve(n) : i && this.reject(r)
                    }
                }
                var t = e.prototype;
                return t.resolve = function(e) {
                    if (this.resolved || this.rejected)
                        return this;
                    if (B(e))
                        throw new Error("Can not resolve promise with another promise");
                    return this.resolved = !0,
                    this.value = e,
                    this.dispatch(),
                    this
                }
                ,
                t.reject = function(e) {
                    var t = this;
                    if (this.resolved || this.rejected)
                        return this;
                    if (B(e))
                        throw new Error("Can not reject promise with another promise");
                    if (!e) {
                        var n = e && "function" == typeof e.toString ? e.toString() : {}.toString.call(e);
                        e = new Error("Expected reject to be called with Error, got " + n)
                    }
                    return this.rejected = !0,
                    this.error = e,
                    this.errorHandled || setTimeout((function() {
                        t.errorHandled || function(e, t) {
                            if (-1 === U.indexOf(e)) {
                                U.push(e),
                                setTimeout((function() {
                                    throw e
                                }
                                ), 1);
                                for (var n = 0; n < G.length; n++)
                                    G[n](e, t)
                            }
                        }(e, t)
                    }
                    ), 1),
                    this.dispatch(),
                    this
                }
                ,
                t.asyncReject = function(e) {
                    return this.errorHandled = !0,
                    this.reject(e),
                    this
                }
                ,
                t.dispatch = function() {
                    var t = this.resolved
                      , n = this.rejected
                      , r = this.handlers;
                    if (!this.dispatching && (t || n)) {
                        this.dispatching = !0,
                        H();
                        for (var o = function(e, t) {
                            return e.then((function(e) {
                                t.resolve(e)
                            }
                            ), (function(e) {
                                t.reject(e)
                            }
                            ))
                        }, i = 0; i < r.length; i++) {
                            var a = r[i]
                              , s = a.onSuccess
                              , l = a.onError
                              , c = a.promise
                              , d = void 0;
                            if (t)
                                try {
                                    d = s ? s(this.value) : this.value
                                } catch (e) {
                                    c.reject(e);
                                    continue
                                }
                            else if (n) {
                                if (!l) {
                                    c.reject(this.error);
                                    continue
                                }
                                try {
                                    d = l(this.error)
                                } catch (e) {
                                    c.reject(e);
                                    continue
                                }
                            }
                            if (d instanceof e && (d.resolved || d.rejected)) {
                                var u = d;
                                u.resolved ? c.resolve(u.value) : c.reject(u.error),
                                u.errorHandled = !0
                            } else
                                B(d) ? d instanceof e && (d.resolved || d.rejected) ? d.resolved ? c.resolve(d.value) : c.reject(d.error) : o(d, c) : c.resolve(d)
                        }
                        r.length = 0,
                        this.dispatching = !1,
                        K()
                    }
                }
                ,
                t.then = function(t, n) {
                    if (t && "function" != typeof t && !t.call)
                        throw new Error("Promise.then expected a function for success handler");
                    if (n && "function" != typeof n && !n.call)
                        throw new Error("Promise.then expected a function for error handler");
                    var r = new e;
                    return this.handlers.push({
                        promise: r,
                        onSuccess: t,
                        onError: n
                    }),
                    this.errorHandled = !0,
                    this.dispatch(),
                    r
                }
                ,
                t.catch = function(e) {
                    return this.then(void 0, e)
                }
                ,
                t.finally = function(t) {
                    if (t && "function" != typeof t && !t.call)
                        throw new Error("Promise.finally expected a function");
                    return this.then((function(n) {
                        return e.try(t).then((function() {
                            return n
                        }
                        ))
                    }
                    ), (function(n) {
                        return e.try(t).then((function() {
                            throw n
                        }
                        ))
                    }
                    ))
                }
                ,
                t.timeout = function(e, t) {
                    var n = this;
                    if (this.resolved || this.rejected)
                        return this;
                    var r = setTimeout((function() {
                        n.resolved || n.rejected || n.reject(t || new Error("Promise timed out after " + e + "ms"))
                    }
                    ), e);
                    return this.then((function(e) {
                        return clearTimeout(r),
                        e
                    }
                    ))
                }
                ,
                t.toPromise = function() {
                    if ("undefined" == typeof Promise)
                        throw new TypeError("Could not find Promise");
                    return Promise.resolve(this)
                }
                ,
                t.lazy = function() {
                    return this.errorHandled = !0,
                    this
                }
                ,
                e.resolve = function(t) {
                    return t instanceof e ? t : B(t) ? new e((function(e, n) {
                        return t.then(e, n)
                    }
                    )) : (new e).resolve(t)
                }
                ,
                e.reject = function(t) {
                    return (new e).reject(t)
                }
                ,
                e.asyncReject = function(t) {
                    return (new e).asyncReject(t)
                }
                ,
                e.all = function(t) {
                    var n = new e
                      , r = t.length
                      , o = [].slice();
                    if (!r)
                        return n.resolve(o),
                        n;
                    for (var i = function(e, t, i) {
                        return t.then((function(t) {
                            o[e] = t,
                            0 == (r -= 1) && n.resolve(o)
                        }
                        ), (function(e) {
                            i.reject(e)
                        }
                        ))
                    }, a = 0; a < t.length; a++) {
                        var s = t[a];
                        if (s instanceof e) {
                            if (s.resolved) {
                                o[a] = s.value,
                                r -= 1;
                                continue
                            }
                        } else if (!B(s)) {
                            o[a] = s,
                            r -= 1;
                            continue
                        }
                        i(a, e.resolve(s), n)
                    }
                    return 0 === r && n.resolve(o),
                    n
                }
                ,
                e.hash = function(t) {
                    var n = {}
                      , r = []
                      , o = function(e) {
                        if (t.hasOwnProperty(e)) {
                            var o = t[e];
                            B(o) ? r.push(o.then((function(t) {
                                n[e] = t
                            }
                            ))) : n[e] = o
                        }
                    };
                    for (var i in t)
                        o(i);
                    return e.all(r).then((function() {
                        return n
                    }
                    ))
                }
                ,
                e.map = function(t, n) {
                    return e.all(t.map(n))
                }
                ,
                e.onPossiblyUnhandledException = function(e) {
                    return function(e) {
                        return G.push(e),
                        {
                            cancel: function() {
                                G.splice(G.indexOf(e), 1)
                            }
                        }
                    }(e)
                }
                ,
                e.try = function(t, n, r) {
                    if (t && "function" != typeof t && !t.call)
                        throw new Error("Promise.try expected a function");
                    var o;
                    H();
                    try {
                        o = t.apply(n, r || [])
                    } catch (t) {
                        return K(),
                        e.reject(t)
                    }
                    return K(),
                    e.resolve(o)
                }
                ,
                e.delay = function(t) {
                    return new e((function(e) {
                        setTimeout(e, t)
                    }
                    ))
                }
                ,
                e.isPromise = function(t) {
                    return !!(t && t instanceof e) || B(t)
                }
                ,
                e.flush = function() {
                    return function(e) {
                        var t = j = j || new e;
                        return V(),
                        t
                    }(e)
                }
                ,
                e
            }()
              , W = "Call was rejected by callee.\r\n";
            function Y(e) {
                return void 0 === e && (e = window),
                e.location.protocol
            }
            function X(e) {
                if (void 0 === e && (e = window),
                e.mockDomain) {
                    var t = e.mockDomain.split("//")[0];
                    if (t)
                        return t
                }
                return Y(e)
            }
            function Z(e) {
                return void 0 === e && (e = window),
                "about:" === X(e)
            }
            function q(e) {
                try {
                    return !0
                } catch (e) {}
                return !1
            }
            function J(e) {
                void 0 === e && (e = window);
                var t = e.location;
                if (!t)
                    throw new Error("Can not read window location");
                var n = Y(e);
                if (!n)
                    throw new Error("Can not read window protocol");
                if ("file:" === n)
                    return "file://";
                if ("about:" === n) {
                    var r = function(e) {
                        if (void 0 === e && (e = window),
                        e)
                            try {
                                if (e.parent && e.parent !== e)
                                    return e.parent
                            } catch (e) {}
                    }(e);
                    return r && q() ? J(r) : "about://"
                }
                var o = t.host;
                if (!o)
                    throw new Error("Can not read window host");
                return n + "//" + o
            }
            function Q(e) {
                void 0 === e && (e = window);
                var t = J(e);
                return t && e.mockDomain && 0 === e.mockDomain.indexOf("mock:") ? e.mockDomain : t
            }
            function ee(e) {
                if (!function(e) {
                    try {
                        if (e === window)
                            return !0
                    } catch (e) {}
                    try {
                        var t = Object.getOwnPropertyDescriptor(e, "location");
                        if (t && !1 === t.enumerable)
                            return !1
                    } catch (e) {}
                    try {
                        if (Z(e) && q())
                            return !0
                    } catch (e) {}
                    try {
                        if (function(e) {
                            return void 0 === e && (e = window),
                            "mock:" === X(e)
                        }(e) && q())
                            return !0
                    } catch (e) {}
                    try {
                        if (J(e) === J(window))
                            return !0
                    } catch (e) {}
                    return !1
                }(e))
                    return !1;
                try {
                    if (e === window)
                        return !0;
                    if (Z(e) && q())
                        return !0;
                    if (Q(window) === Q(e))
                        return !0
                } catch (e) {}
                return !1
            }
            var te = []
              , ne = [];
            function re(e, t) {
                void 0 === t && (t = !0);
                try {
                    if (e === window)
                        return !1
                } catch (e) {
                    return !0
                }
                try {
                    if (!e)
                        return !0
                } catch (e) {
                    return !0
                }
                try {
                    if (e.closed)
                        return !0
                } catch (e) {
                    return !e || e.message !== W
                }
                if (t && ee(e))
                    try {
                        if (e.mockclosed)
                            return !0
                    } catch (e) {}
                try {
                    if (!e.parent || !e.top)
                        return !0
                } catch (e) {}
                var n = function(e, t) {
                    for (var n = 0; n < e.length; n++)
                        try {
                            if (e[n] === t)
                                return n
                        } catch (e) {}
                    return -1
                }(te, e);
                if (-1 !== n) {
                    var r = ne[n];
                    if (r && function(e) {
                        if (!e.contentWindow)
                            return !0;
                        if (!e.parentNode)
                            return !0;
                        var t = e.ownerDocument;
                        if (t && t.documentElement && !t.documentElement.contains(e)) {
                            for (var n = e; n.parentNode && n.parentNode !== n; )
                                n = n.parentNode;
                            if (!n.host || !t.documentElement.contains(n.host))
                                return !0
                        }
                        return !1
                    }(r))
                        return !0
                }
                return !1
            }
            function oe(e) {
                try {
                    if (e === window)
                        return !0
                } catch (e) {
                    if (e && e.message === W)
                        return !0
                }
                try {
                    if ("[object Window]" === {}.toString.call(e))
                        return !0
                } catch (e) {
                    if (e && e.message === W)
                        return !0
                }
                try {
                    if (window.Window && e instanceof window.Window)
                        return !0
                } catch (e) {
                    if (e && e.message === W)
                        return !0
                }
                try {
                    if (e && e.self === e)
                        return !0
                } catch (e) {
                    if (e && e.message === W)
                        return !0
                }
                try {
                    if (e && e.parent === e)
                        return !0
                } catch (e) {
                    if (e && e.message === W)
                        return !0
                }
                try {
                    if (e && e.top === e)
                        return !0
                } catch (e) {
                    if (e && e.message === W)
                        return !0
                }
                try {
                    if (e && "__unlikely_value__" === e.__cross_domain_utils_window_check__)
                        return !1
                } catch (e) {
                    return !0
                }
                try {
                    if ("postMessage"in e && "self"in e && "location"in e)
                        return !0
                } catch (e) {}
                return !1
            }
            function ie(e, t) {
                for (var n = 0; n < e.length; n++)
                    try {
                        if (e[n] === t)
                            return n
                    } catch (e) {}
                return -1
            }
            var ae = function() {
                function e() {
                    if (this.name = void 0,
                    this.weakmap = void 0,
                    this.keys = void 0,
                    this.values = void 0,
                    this.name = "__weakmap_" + (1e9 * Math.random() >>> 0) + "__",
                    function() {
                        if ("undefined" == typeof WeakMap)
                            return !1;
                        if (void 0 === Object.freeze)
                            return !1;
                        try {
                            var e = new WeakMap
                              , t = {};
                            return Object.freeze(t),
                            e.set(t, "__testvalue__"),
                            "__testvalue__" === e.get(t)
                        } catch (e) {
                            return !1
                        }
                    }())
                        try {
                            this.weakmap = new WeakMap
                        } catch (e) {}
                    this.keys = [],
                    this.values = []
                }
                var t = e.prototype;
                return t._cleanupClosedWindows = function() {
                    for (var e = this.weakmap, t = this.keys, n = 0; n < t.length; n++) {
                        var r = t[n];
                        if (oe(r) && re(r)) {
                            if (e)
                                try {
                                    e.delete(r)
                                } catch (e) {}
                            t.splice(n, 1),
                            this.values.splice(n, 1),
                            n -= 1
                        }
                    }
                }
                ,
                t.isSafeToReadWrite = function(e) {
                    return !oe(e)
                }
                ,
                t.set = function(e, t) {
                    if (!e)
                        throw new Error("WeakMap expected key");
                    var n = this.weakmap;
                    if (n)
                        try {
                            n.set(e, t)
                        } catch (e) {
                            delete this.weakmap
                        }
                    if (this.isSafeToReadWrite(e))
                        try {
                            var r = this.name
                              , o = e[r];
                            return void (o && o[0] === e ? o[1] = t : Object.defineProperty(e, r, {
                                value: [e, t],
                                writable: !0
                            }))
                        } catch (e) {}
                    this._cleanupClosedWindows();
                    var i = this.keys
                      , a = this.values
                      , s = ie(i, e);
                    -1 === s ? (i.push(e),
                    a.push(t)) : a[s] = t
                }
                ,
                t.get = function(e) {
                    if (!e)
                        throw new Error("WeakMap expected key");
                    var t = this.weakmap;
                    if (t)
                        try {
                            if (t.has(e))
                                return t.get(e)
                        } catch (e) {
                            delete this.weakmap
                        }
                    if (this.isSafeToReadWrite(e))
                        try {
                            var n = e[this.name];
                            return n && n[0] === e ? n[1] : void 0
                        } catch (e) {}
                    this._cleanupClosedWindows();
                    var r = ie(this.keys, e);
                    if (-1 !== r)
                        return this.values[r]
                }
                ,
                t.delete = function(e) {
                    if (!e)
                        throw new Error("WeakMap expected key");
                    var t = this.weakmap;
                    if (t)
                        try {
                            t.delete(e)
                        } catch (e) {
                            delete this.weakmap
                        }
                    if (this.isSafeToReadWrite(e))
                        try {
                            var n = e[this.name];
                            n && n[0] === e && (n[0] = n[1] = void 0)
                        } catch (e) {}
                    this._cleanupClosedWindows();
                    var r = this.keys
                      , o = ie(r, e);
                    -1 !== o && (r.splice(o, 1),
                    this.values.splice(o, 1))
                }
                ,
                t.has = function(e) {
                    if (!e)
                        throw new Error("WeakMap expected key");
                    var t = this.weakmap;
                    if (t)
                        try {
                            if (t.has(e))
                                return !0
                        } catch (e) {
                            delete this.weakmap
                        }
                    if (this.isSafeToReadWrite(e))
                        try {
                            var n = e[this.name];
                            return !(!n || n[0] !== e)
                        } catch (e) {}
                    return this._cleanupClosedWindows(),
                    -1 !== ie(this.keys, e)
                }
                ,
                t.getOrSet = function(e, t) {
                    if (this.has(e))
                        return this.get(e);
                    var n = t();
                    return this.set(e, n),
                    n
                }
                ,
                e
            }();
            function se(e) {
                return (se = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                }
                )(e)
            }
            function le() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                    return !1;
                if (Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}
                    ))),
                    !0
                } catch (e) {
                    return !1
                }
            }
            function ce(e, t, n) {
                return (ce = le() ? Reflect.construct : function(e, t, n) {
                    var r = [null];
                    r.push.apply(r, t);
                    var o = new (Function.bind.apply(e, r));
                    return n && D(o, n.prototype),
                    o
                }
                ).apply(null, arguments)
            }
            function de(e) {
                var t = "function" == typeof Map ? new Map : void 0;
                return (de = function(e) {
                    if (null === e || (n = e,
                    -1 === Function.toString.call(n).indexOf("[native code]")))
                        return e;
                    var n;
                    if ("function" != typeof e)
                        throw new TypeError("Super expression must either be null or a function");
                    if (void 0 !== t) {
                        if (t.has(e))
                            return t.get(e);
                        t.set(e, r)
                    }
                    function r() {
                        return ce(e, arguments, se(this).constructor)
                    }
                    return r.prototype = Object.create(e.prototype, {
                        constructor: {
                            value: r,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    D(r, e)
                }
                )(e)
            }
            var ue, pe = {
                ENTER: 13,
                SPACE: 32
            }, he = {
                UID: "data-uid"
            }, fe = 30, me = /([^\w]*)(javascript|data|vbscript)/im, ge = /&#(\w+)(^\w|;)?/g, ye = /&(newline|tab);/gi, ve = /[\u0000-\u001F\u007F-\u009F\u2000-\u200D\uFEFF]/gim, be = /^.+(:|&colon;)/gim, Ee = [".", "/"], _e = "about:blank";
            function Ae(e) {
                var t = !1;
                try {
                    (e instanceof window.Element || null !== e && "object" == typeof e && 1 === e.nodeType && "object" == typeof e.style && "object" == typeof e.ownerDocument) && (t = !0)
                } catch (e) {}
                return t
            }
            function we(e) {
                return e.name || e.__name__ || e.displayName || "anonymous"
            }
            function Se(e, t) {
                try {
                    delete e.name,
                    e.name = t
                } catch (e) {}
                return e.__name__ = e.displayName = t,
                e
            }
            function Ce(e) {
                if ("function" == typeof btoa)
                    return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g, (function(e, t) {
                        return String.fromCharCode(parseInt(t, 16))
                    }
                    ))).replace(/[=]/g, "");
                if ("undefined" != typeof Buffer)
                    return Buffer.from(e, "utf8").toString("base64").replace(/[=]/g, "");
                throw new Error("Can not find window.btoa or Buffer")
            }
            function Oe(e) {
                if ("function" == typeof atob)
                    return decodeURIComponent([].map.call(atob(e), (function(e) {
                        return "%" + ("00" + e.charCodeAt(0).toString(16)).slice(-2)
                    }
                    )).join(""));
                if ("undefined" != typeof Buffer)
                    return Buffer.from(e, "base64").toString("utf8");
                throw new Error("Can not find window.atob or Buffer")
            }
            function xe() {
                var e = "0123456789abcdef";
                return "uid_" + "xxxxxxxxxx".replace(/./g, (function() {
                    return e.charAt(Math.floor(Math.random() * e.length))
                }
                )) + "_" + Ce((new Date).toISOString().slice(11, 19).replace("T", ".")).replace(/[^a-zA-Z0-9]/g, "").toLowerCase()
            }
            function Te() {
                if ("undefined" != typeof window)
                    return window;
                if ("undefined" != typeof window)
                    return window;
                if (void 0 !== at)
                    return at;
                throw new Error("No global found")
            }
            function Ne(e) {
                if (ue = ue || new ae,
                null == e || "object" != typeof e && "function" != typeof e)
                    throw new Error("Invalid object");
                var t = ue.get(e);
                return t || (t = typeof e + ":" + xe(),
                ue.set(e, t)),
                t
            }
            function ke(e) {
                try {
                    return JSON.stringify([].slice.call(e), (function(e, t) {
                        return "function" == typeof t ? "memoize[" + Ne(t) + "]" : Ae(t) ? {} : t
                    }
                    ))
                } catch (e) {
                    throw new Error("Arguments not serializable -- can not be used to memoize")
                }
            }
            function Ie() {
                return {}
            }
            var Re = 0
              , Pe = 0;
            function Le(e, t) {
                void 0 === t && (t = {});
                var n, r, o = t.thisNamespace, i = void 0 !== o && o, a = t.time, s = Re;
                Re += 1;
                var l = function() {
                    for (var t = arguments.length, o = new Array(t), l = 0; l < t; l++)
                        o[l] = arguments[l];
                    var c, d;
                    s < Pe && (n = null,
                    r = null,
                    s = Re,
                    Re += 1),
                    c = i ? (r = r || new ae).getOrSet(this, Ie) : n = n || {};
                    try {
                        d = ke(o)
                    } catch (t) {
                        return e.apply(this, arguments)
                    }
                    var u = c[d];
                    if (u && a && Date.now() - u.time < a && (delete c[d],
                    u = null),
                    u)
                        return u.value;
                    var p = Date.now()
                      , h = e.apply(this, arguments);
                    return c[d] = {
                        time: p,
                        value: h
                    },
                    h
                };
                return l.reset = function() {
                    n = null,
                    r = null
                }
                ,
                Se(l, (t.name || we(e)) + "::memoized")
            }
            function De(e) {
                return z.resolve(e)
            }
            function Me(e) {
                var t = {};
                function n() {
                    for (var n = arguments, r = this, o = arguments.length, i = new Array(o), a = 0; a < o; a++)
                        i[a] = arguments[a];
                    var s = ke(i);
                    return t.hasOwnProperty(s) || (t[s] = z.try((function() {
                        return e.apply(r, n)
                    }
                    )).finally((function() {
                        delete t[s]
                    }
                    ))),
                    t[s]
                }
                return n.reset = function() {
                    t = {}
                }
                ,
                Se(n, we(e) + "::promiseMemoized")
            }
            function Fe(e, t) {
                function n() {
                    return z.try(e, this, arguments)
                }
                return void 0 === t && (t = {}),
                t.name && (n.displayName = t.name + ":promisified"),
                Se(n, we(e) + "::promisified")
            }
            function Be(e, t, n) {
                void 0 === n && (n = []);
                var r = e.__inline_memoize_cache__ = e.__inline_memoize_cache__ || {}
                  , o = ke(n);
                return r.hasOwnProperty(o) ? r[o] : r[o] = t.apply(void 0, n)
            }
            function je() {}
            function Ue(e) {
                var t = !1;
                return Se((function() {
                    if (!t)
                        return t = !0,
                        e.apply(this, arguments)
                }
                ), we(e) + "::once")
            }
            function Ge(e) {
                for (var t = 0, n = 0; n < e.length; n++)
                    t += e[n].charCodeAt(0) * Math.pow(n % 10 + 1, 5);
                return Math.floor(Math.pow(Math.sqrt(t), 5))
            }
            function $e(e) {
                for (var t = "", n = 0; n < e.length; n++) {
                    var r = e[n].charCodeAt(0) * n;
                    e[n + 1] && (r += e[n + 1].charCodeAt(0) * (n - 1)),
                    t += String.fromCharCode(97 + Math.abs(r) % 26)
                }
                return t
            }
            function Ve(e, t) {
                var n = e.match(t);
                if (n)
                    return n[1]
            }
            function He(e, t) {
                return new z((function(n) {
                    var r = e[t];
                    if (r)
                        return n(r);
                    delete e[t],
                    Object.defineProperty(e, t, {
                        configurable: !0,
                        set: function(e) {
                            (r = e) && n(r)
                        },
                        get: function() {
                            return r
                        }
                    })
                }
                ))
            }
            function Ke(e, t) {
                if (void 0 === t && (t = 1),
                t >= 3)
                    return "stringifyError stack overflow";
                try {
                    if (!e)
                        return "<unknown error: " + {}.toString.call(e) + ">";
                    if ("string" == typeof e)
                        return e;
                    if (e instanceof Error) {
                        var n = e && e.stack
                          , r = e && e.message;
                        if (n && r)
                            return -1 !== n.indexOf(r) ? n : r + "\n" + n;
                        if (n)
                            return n;
                        if (r)
                            return r
                    }
                    return e && e.toString && "function" == typeof e.toString ? e.toString() : {}.toString.call(e)
                } catch (e) {
                    return "Error while stringifying error: " + Ke(e, t + 1)
                }
            }
            function ze(e) {
                var t = "<unknown error: " + {}.toString.call(e) + ">";
                return e ? e instanceof Error ? e.message || t : "string" == typeof e.message && e.message || t : t
            }
            function We(e) {
                return "string" == typeof e ? e : e && e.toString && "function" == typeof e.toString ? e.toString() : {}.toString.call(e)
            }
            function Ye(e, t) {
                var n = (e = e.split("://")[1]).indexOf(t);
                return -1 !== n && e.slice(n) === t
            }
            function Xe(e, t, n) {
                var r = e[t];
                e[t] = function() {
                    var e = arguments
                      , t = this;
                    return n({
                        context: this,
                        args: [].slice.call(arguments),
                        original: r,
                        callOriginal: function() {
                            return r.apply(t, e)
                        }
                    })
                }
            }
            function Ze(e, t) {
                if (!t)
                    return e;
                if (Object.assign)
                    return Object.assign(e, t);
                for (var n in t)
                    t.hasOwnProperty(n) && (e[n] = t[n]);
                return e
            }
            function qe(e) {
                if (Object.values)
                    return Object.values(e);
                var t = [];
                for (var n in e)
                    e.hasOwnProperty(n) && t.push(e[n]);
                return t
            }
            Le.clear = function() {
                Pe = Re
            }
            ;
            var Je = Le(qe);
            function Qe(e, t) {
                return Math.round(e * t / 100)
            }
            function et() {
                return Math.min.apply(Math, arguments)
            }
            function tt() {
                return Math.max.apply(Math, arguments)
            }
            function nt(e, t) {
                var n = e % t;
                return n ? e - n + t : e
            }
            function rt(e, t, n) {
                var r = [];
                return e.replace(t, (function(e) {
                    r.push(n ? n.apply(null, arguments) : e)
                }
                )),
                r
            }
            function ot(e) {
                return "data:image/svg+xml;base64," + Ce(e)
            }
            function it(e, t) {
                void 0 === t && (t = Boolean);
                var n = {};
                for (var r in e)
                    e.hasOwnProperty(r) && t(e[r], r) && (n[r] = e[r]);
                return n
            }
            function st(e) {
                return e
            }
            function lt(e, t) {
                var n = [];
                return e.replace(t, (function(e) {
                    return n.push(e),
                    ""
                }
                )),
                n
            }
            function ct(e, t) {
                var n, r;
                return void 0 === t && (t = 50),
                Se((function() {
                    r && clearTimeout(r);
                    var o = n = n || new z;
                    return r = setTimeout((function() {
                        n = null,
                        r = null,
                        z.try(e).then((function(e) {
                            o.resolve(e)
                        }
                        ), (function(e) {
                            o.reject(e)
                        }
                        ))
                    }
                    ), t),
                    o
                }
                ), we(e) + "::promiseDebounced")
            }
            function dt(e, t) {
                var n;
                return function r() {
                    n = setTimeout((function() {
                        e(),
                        r()
                    }
                    ), t)
                }(),
                {
                    cancel: function() {
                        clearTimeout(n)
                    }
                }
            }
            function ut(e) {
                return Boolean(e.match(/^[0-9]+$/))
            }
            function pt(e) {
                return Boolean(e.match(/^[0-9]+\.[0-9]+$/))
            }
            function ht(e) {
                return e.toString()
            }
            function ft(e) {
                return "true" === e || "false" !== e && (ut(e) ? parseInt(e, 10) : pt(e) ? parseFloat(e) : e)
            }
            function mt(e, t, n) {
                for (var r in void 0 === t && (t = ""),
                void 0 === n && (n = {}),
                t = t ? t + "." : t,
                e)
                    e.hasOwnProperty(r) && null != e[r] && "function" != typeof e[r] && (e[r] && Array.isArray(e[r]) && e[r].length && e[r].every((function(e) {
                        return "object" != typeof e
                    }
                    )) ? n["" + t + r + "[]"] = e[r].join(",") : e[r] && "object" == typeof e[r] ? n = mt(e[r], "" + t + r, n) : n["" + t + r] = ht(e[r]));
                return n
            }
            function gt(e) {
                var t = {};
                for (var n in e)
                    if (e.hasOwnProperty(n) && "string" == typeof e[n]) {
                        var r = e[n];
                        n.match(/^.+\[\]$/) ? (n = n.slice(0, -2),
                        r = r.split(",").map(ft)) : r = ft(r);
                        for (var o = t, i = n.split("."), a = 0; a < i.length; a++) {
                            var s = i[a]
                              , l = a + 1 === i.length
                              , c = !l && ut(i[a + 1]);
                            if ("constructor" === s || "prototype" === s || "__proto__" === s)
                                throw new Error("Disallowed key: " + s);
                            l ? o[s] = r : o = o[s] = o[s] || (c ? [] : {})
                        }
                    }
                return t
            }
            function yt() {
                var e = {}
                  , t = {}
                  , n = {
                    on: function(e, n) {
                        var r = t[e] = t[e] || [];
                        r.push(n);
                        var o = !1;
                        return {
                            cancel: function() {
                                o || (o = !0,
                                r.splice(r.indexOf(n), 1))
                            }
                        }
                    },
                    once: function(e, t) {
                        var r = n.on(e, (function() {
                            r.cancel(),
                            t()
                        }
                        ));
                        return r
                    },
                    trigger: function(e) {
                        for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), o = 1; o < n; o++)
                            r[o - 1] = arguments[o];
                        var i = t[e]
                          , a = [];
                        if (i)
                            for (var s = function() {
                                var e = i[l];
                                a.push(z.try((function() {
                                    return e.apply(void 0, r)
                                }
                                )))
                            }, l = 0; l < i.length; l++)
                                s();
                        return z.all(a).then(je)
                    },
                    triggerOnce: function(t) {
                        if (e[t])
                            return z.resolve();
                        e[t] = !0;
                        for (var r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)
                            o[i - 1] = arguments[i];
                        return n.trigger.apply(n, [t].concat(o))
                    },
                    reset: function() {
                        t = {}
                    }
                };
                return n
            }
            function vt(e) {
                return e.replace(/([A-Z])/g, (function(e) {
                    return "-" + e.toLowerCase()
                }
                ))
            }
            function bt(e) {
                return e.replace(/-([a-z])/g, (function(e) {
                    return e[1].toUpperCase()
                }
                ))
            }
            function Et(e) {
                return e.charAt(0).toUpperCase() + e.slice(1).toLowerCase()
            }
            function _t(e, t, n) {
                if (!t)
                    return n;
                for (var r = t.split("."), o = 0; o < r.length; o++) {
                    if ("object" != typeof e || null === e)
                        return n;
                    e = e[r[o]]
                }
                return void 0 === e ? n : e
            }
            function At(e, t) {
                var n = dt((function() {
                    (t -= 100) <= 0 && (n.cancel(),
                    e())
                }
                ), 100)
            }
            function wt(e, t, n) {
                if (Array.isArray(e)) {
                    if ("number" != typeof t)
                        throw new TypeError("Array key must be number")
                } else if ("object" == typeof e && null !== e && "string" != typeof t)
                    throw new TypeError("Object key must be string");
                Object.defineProperty(e, t, {
                    configurable: !0,
                    enumerable: !0,
                    get: function() {
                        delete e[t];
                        var r = n();
                        return e[t] = r,
                        r
                    },
                    set: function(n) {
                        delete e[t],
                        e[t] = n
                    }
                })
            }
            function St(e) {
                return [].slice.call(e)
            }
            function Ct(e) {
                return "object" == typeof e && null !== e
            }
            function Ot(e) {
                return Ct(e) && "[object Object]" === {}.toString.call(e)
            }
            function xt(e) {
                if (!Ot(e))
                    return !1;
                var t = e.constructor;
                if ("function" != typeof t)
                    return !1;
                var n = t.prototype;
                return !!Ot(n) && !!n.hasOwnProperty("isPrototypeOf")
            }
            function Tt(e, t, n) {
                if (void 0 === n && (n = ""),
                Array.isArray(e)) {
                    for (var r = e.length, o = [], i = function(r) {
                        wt(o, r, (function() {
                            var o = n ? n + "." + r : "" + r
                              , i = t(e[r], r, o);
                            return (xt(i) || Array.isArray(i)) && (i = Tt(i, t, o)),
                            i
                        }
                        ))
                    }, a = 0; a < r; a++)
                        i(a);
                    return o
                }
                if (xt(e)) {
                    var s = {}
                      , l = function(r) {
                        if (!e.hasOwnProperty(r))
                            return 1;
                        wt(s, r, (function() {
                            var o = n ? n + "." + r : "" + r
                              , i = t(e[r], r, o);
                            return (xt(i) || Array.isArray(i)) && (i = Tt(i, t, o)),
                            i
                        }
                        ))
                    };
                    for (var c in e)
                        l(c);
                    return s
                }
                throw new Error("Pass an object or array")
            }
            function Nt(e, t, n, r) {
                if (e.hasOwnProperty(n)) {
                    var o = Object.getOwnPropertyDescriptor(e, n);
                    Object.defineProperty(t, n, o)
                } else
                    t[n] = r
            }
            function kt(e, t, n) {
                void 0 === n && (n = 0),
                "string" == typeof e && (e = new RegExp(e));
                var r = t.slice(n).match(e);
                if (r) {
                    var o = r.index
                      , i = r[0];
                    return {
                        text: i,
                        groups: r.slice(1),
                        start: n + o,
                        end: n + o + i.length,
                        length: i.length,
                        replace: function(e) {
                            return i ? "" + i.slice(0, n + o) + e + i.slice(o + i.length) : ""
                        }
                    }
                }
            }
            function It(e, t) {
                for (var n = [], r = 0; ; ) {
                    var o = kt(e, t, r);
                    if (!o)
                        break;
                    n.push(o),
                    r = Ve.end
                }
                return n
            }
            function Rt(e) {
                return null != e
            }
            function Pt(e) {
                return z.try(e).then((function() {
                    return Pt(e)
                }
                ))
            }
            function Lt(e, t) {
                var n;
                return void 0 === t && (t = 100),
                Se((function() {
                    var r = arguments
                      , o = this;
                    clearTimeout(n),
                    n = setTimeout((function() {
                        return e.apply(o, r)
                    }
                    ), t)
                }
                ), we(e) + "::debounced")
            }
            function Dt(e) {
                return "[object RegExp]" === {}.toString.call(e)
            }
            var Mt = function(e) {
                var t = new ae;
                return function(n) {
                    var r = this;
                    return t.getOrSet(n, (function() {
                        return e.call(r, n)
                    }
                    ))
                }
            }
              , Ft = function(e) {
                var t = new ae;
                return function(n) {
                    var r = this;
                    return t.getOrSet(n, (function() {
                        return e.call(r, n).finally((function() {
                            t.delete(n)
                        }
                        ))
                    }
                    ))
                }
            };
            function Bt(e, t, n) {
                if (e.hasOwnProperty(t))
                    return e[t];
                var r = n();
                return e[t] = r,
                r
            }
            function jt(e) {
                var t, n = [], r = !1, o = {
                    set: function(t, n) {
                        return r || (e[t] = n,
                        o.register((function() {
                            delete e[t]
                        }
                        ))),
                        n
                    },
                    register: function(e) {
                        var o = Ue((function() {
                            return e(t)
                        }
                        ));
                        return r ? e(t) : n.push(o),
                        {
                            cancel: function() {
                                var e = n.indexOf(o);
                                -1 !== e && n.splice(e, 1)
                            }
                        }
                    },
                    all: function(e) {
                        t = e;
                        var o = [];
                        for (r = !0; n.length; ) {
                            var i = n.shift();
                            o.push(i())
                        }
                        return z.all(o).then(je)
                    }
                };
                return o
            }
            function Ut(e) {
                var t, n;
                try {
                    t = e()
                } catch (e) {
                    n = e
                }
                return {
                    result: t,
                    error: n
                }
            }
            function Gt(e, t) {
                var n = e.indexOf(t);
                -1 !== n && e.splice(n, 1)
            }
            function $t(e, t) {
                if (null == t)
                    throw new Error("Expected " + e + " to be present");
                return t
            }
            function Vt(e) {
                for (var t = {}, n = 0; n < e.length; n++)
                    t[e[n]] = !0;
                return Object.keys(t)
            }
            var Ht = function(e, t) {
                return -1 !== Je(e).indexOf(t)
            };
            function Kt(e) {
                var t = []
                  , n = {};
                return function(r) {
                    if (-1 === t.indexOf(r)) {
                        t.push(r);
                        var o = Ke(r);
                        if (!n[o])
                            return n[o] = !0,
                            e(r)
                    }
                }
            }
            var zt = function(e) {
                function t(t) {
                    var n;
                    return (n = e.call(this, t) || this).name = n.constructor.name,
                    "function" == typeof Error.captureStackTrace ? Error.captureStackTrace(function(e) {
                        if (void 0 === e)
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return e
                    }(n), n.constructor) : n.stack = new Error(t).stack,
                    n
                }
                return M(t, e),
                t
            }(de(Error));
            function Wt(e) {
                if (!e)
                    return _e;
                var t, n = (t = e,
                t.replace(ve, "").replace(ge, (function(e, t) {
                    return String.fromCharCode(t)
                }
                ))).replace(ye, "").replace(ve, "").trim();
                if (!n)
                    return _e;
                if (function(e) {
                    return Ee.indexOf(e[0]) > -1
                }(n))
                    return n;
                var r = n.match(be);
                return r && me.test(r[0]) ? _e : n
            }
            function Yt() {
                var e = document.body;
                if (!e)
                    throw new Error("Body element not found");
                return e
            }
            function Xt() {
                return Boolean(document.body) && "complete" === document.readyState
            }
            function Zt() {
                return Boolean(document.body) && "interactive" === document.readyState
            }
            function qt(e) {
                return encodeURIComponent(e)
            }
            function Jt() {
                return Be(Jt, (function() {
                    return new z((function(e) {
                        Xt() && e(),
                        window.addEventListener("load", (function() {
                            return e()
                        }
                        ))
                    }
                    ))
                }
                ))
            }
            var Qt = Le((function() {
                return new z((function(e) {
                    if (Xt() || Zt())
                        return e();
                    var t = setInterval((function() {
                        if (Xt() || Zt())
                            return clearInterval(t),
                            e()
                    }
                    ), 10)
                }
                ))
            }
            ));
            function en() {
                return z.try((function() {
                    return document.body ? document.body : Qt().then((function() {
                        if (document.body)
                            return document.body;
                        throw new Error("Document ready but document.body not present")
                    }
                    ))
                }
                ))
            }
            function tn(e) {
                return Be(tn, (function() {
                    var t = {};
                    if (!e)
                        return t;
                    if (-1 === e.indexOf("="))
                        return t;
                    for (var n = 0, r = e.split("&"); n < r.length; n++) {
                        var o = r[n];
                        (o = o.split("="))[0] && o[1] && (t[decodeURIComponent(o[0])] = decodeURIComponent(o[1]))
                    }
                    return t
                }
                ), [e])
            }
            function nn(e) {
                return tn(window.location.search.slice(1))[e]
            }
            function rn(e) {
                return -1 === e.indexOf("#") || 0 !== e.indexOf("#") && e.split("#")[0] !== window.location.href.split("#")[0]
            }
            function on(e) {
                return void 0 === e && (e = {}),
                Object.keys(e).filter((function(t) {
                    return "string" == typeof e[t] || "boolean" == typeof e[t]
                }
                )).map((function(t) {
                    var n = e[t];
                    if ("string" != typeof n && "boolean" != typeof n)
                        throw new TypeError("Invalid type for query");
                    return qt(t) + "=" + qt(n.toString())
                }
                )).join("&")
            }
            function an(e, t) {
                return void 0 === t && (t = {}),
                t && Object.keys(t).length ? on(F({}, tn(e), t)) : e
            }
            function sn(e, t) {
                var n, r, o = t.query || {}, i = t.hash || {}, a = e.split("#");
                r = a[1];
                var s = (n = a[0]).split("?");
                n = s[0];
                var l = an(s[1], o)
                  , c = an(r, i);
                return l && (n = n + "?" + l),
                c && (n = n + "#" + c),
                n
            }
            function ln(e, t) {
                return void 0 === t && (t = window),
                new z((function(n) {
                    t.location = e,
                    rn(e) || n()
                }
                ))
            }
            function cn() {
                var e = document.querySelector("meta[name=viewport]");
                return !(a() && window.screen.width < 660 && !e)
            }
            function dn(e) {
                return Boolean(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
            }
            function un() {
                return Be(un, (function() {
                    var e = window.performance;
                    if (e && e.now && e.timing && e.timing.connectEnd && e.timing.navigationStart && Math.abs(e.now() - Date.now()) > 1e3 && e.now() - (e.timing.connectEnd - e.timing.navigationStart) > 0)
                        return e
                }
                ))
            }
            function pn() {
                return Boolean(un())
            }
            function hn() {
                return Qt().then((function() {
                    var e = un();
                    if (e) {
                        var t = e.timing;
                        return t.connectEnd && t.domInteractive ? t.domInteractive - t.connectEnd : void 0
                    }
                }
                ))
            }
            function fn(e) {
                return void 0 === e && (e = ""),
                e.toString().replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/\//g, "&#x2F;")
            }
            function mn() {
                return "undefined" != typeof window && void 0 !== window.location
            }
            function gn(e, t) {
                return void 0 === t && (t = window.document),
                [].slice.call(t.querySelectorAll(e))
            }
            function yn(e, t) {
                e.addEventListener("touchstart", je, {
                    passive: !0
                }),
                e.addEventListener("click", t),
                e.addEventListener("keypress", (function(e) {
                    if (e.keyCode === pe.ENTER || e.keyCode === pe.SPACE)
                        return t(e)
                }
                ))
            }
            function vn(e) {
                var t = e.host
                  , n = void 0 === t ? window.location.host : t
                  , r = e.path
                  , o = e.reverse
                  , i = void 0 !== o && o;
                return Be(vn, (function() {
                    var e = "" + n + r
                      , t = [].slice.call(document.getElementsByTagName("script"));
                    i && t.reverse();
                    for (var o = 0; o < t.length; o++) {
                        var a = t[o];
                        if (a.src && a.src.replace(/^https?:\/\//, "").split("?")[0] === e)
                            return a
                    }
                }
                ), [r])
            }
            function bn() {
                return Be(bn, (function() {
                    try {
                        if ("undefined" == typeof window)
                            return !1;
                        if (window.localStorage) {
                            var e = Math.random().toString();
                            window.localStorage.setItem("__test__localStorage__", e);
                            var t = window.localStorage.getItem("__test__localStorage__");
                            if (window.localStorage.removeItem("__test__localStorage__"),
                            e === t)
                                return !0
                        }
                    } catch (e) {}
                    return !1
                }
                ))
            }
            function En() {
                var e = window.navigator
                  , t = e.languages ? [].concat(e.languages) : [];
                return e.language && t.push(e.language),
                e.userLanguage && t.push(e.userLanguage),
                t.map((function(e) {
                    if (e && e.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {
                        var t = e.split(/[-_]/);
                        return {
                            country: t[1],
                            lang: t[0]
                        }
                    }
                    return e && e.match(/^[a-z]{2}$/) ? {
                        lang: e
                    } : null
                }
                )).filter(Boolean)
            }
            function _n(e, t) {
                e.appendChild(t)
            }
            function An(e, t) {
                return void 0 === t && (t = document),
                Ae(e) ? e : "string" == typeof e ? t.querySelector(e) : void 0
            }
            function wn(e, t) {
                void 0 === t && (t = document);
                var n = An(e, t);
                if (n)
                    return n;
                throw new Error("Can not find element: " + We(e))
            }
            function Sn(e) {
                return new z((function(t, n) {
                    var r = We(e)
                      , o = An(e);
                    if (o)
                        return t(o);
                    if (Xt())
                        return n(new Error("Document is ready and element " + r + " does not exist"));
                    var i = setInterval((function() {
                        if (o = An(e))
                            t(o),
                            clearInterval(i);
                        else if (Xt())
                            return clearInterval(i),
                            n(new Error("Document is ready and element " + r + " does not exist"))
                    }
                    ), 10)
                }
                ))
            }
            var Cn, On = function(e) {
                function t() {
                    return e.apply(this, arguments) || this
                }
                return M(t, e),
                t
            }(zt);
            function xn(e, t) {
                var n = (t = t || {}).closeOnUnload
                  , r = void 0 === n ? 1 : n
                  , o = t.name
                  , i = void 0 === o ? "" : o
                  , a = t.width
                  , s = t.height
                  , l = 0
                  , c = 0;
                a && (window.outerWidth ? c = Math.round((window.outerWidth - a) / 2) + window.screenX : window.screen.width && (c = Math.round((window.screen.width - a) / 2))),
                s && (window.outerHeight ? l = Math.round((window.outerHeight - s) / 2) + window.screenY : window.screen.height && (l = Math.round((window.screen.height - s) / 2))),
                delete t.closeOnUnload,
                delete t.name,
                a && s && (t = F({
                    top: l,
                    left: c,
                    width: a,
                    height: s,
                    status: 1,
                    toolbar: 0,
                    menubar: 0,
                    resizable: 1,
                    scrollbars: 1
                }, t));
                var d, u = Object.keys(t).map((function(e) {
                    if (null != t[e])
                        return e + "=" + We(t[e])
                }
                )).filter(Boolean).join(",");
                try {
                    d = window.open(e, i, u)
                } catch (e) {
                    throw new On("Can not open popup window - " + (e.stack || e.message))
                }
                if (re(d))
                    throw new On("Can not open popup window - blocked");
                return r && window.addEventListener("unload", (function() {
                    return d.close()
                }
                )),
                d
            }
            function Tn(e, t) {
                try {
                    e.document.open(),
                    e.document.write(t),
                    e.document.close()
                } catch (n) {
                    try {
                        e.location = "javascript: document.open(); document.write(" + JSON.stringify(t) + "); document.close();"
                    } catch (e) {}
                }
            }
            function Nn(e, t) {
                var n = t.tagName.toLowerCase();
                if ("html" !== n)
                    throw new Error("Expected element to be html, got " + n);
                for (var r = e.document.documentElement, o = 0, i = St(r.children); o < i.length; o++)
                    r.removeChild(i[o]);
                for (var a = 0, s = St(t.children); a < s.length; a++)
                    r.appendChild(s[a])
            }
            function kn(e, t, n) {
                void 0 === n && (n = window.document),
                e.styleSheet ? e.styleSheet.cssText = t : e.appendChild(n.createTextNode(t))
            }
            function In(e) {
                if ((Cn = Cn || new ae).has(e)) {
                    var t = Cn.get(e);
                    if (t)
                        return t
                }
                var n = new z((function(t, n) {
                    e.addEventListener("load", (function() {
                        !function(e) {
                            if (function() {
                                for (var e = 0; e < te.length; e++) {
                                    var t = !1;
                                    try {
                                        t = te[e].closed
                                    } catch (e) {}
                                    t && (ne.splice(e, 1),
                                    te.splice(e, 1))
                                }
                            }(),
                            e && e.contentWindow)
                                try {
                                    te.push(e.contentWindow),
                                    ne.push(e)
                                } catch (e) {}
                        }(e),
                        t(e)
                    }
                    )),
                    e.addEventListener("error", (function(r) {
                        e.contentWindow ? t(e) : n(r)
                    }
                    ))
                }
                ));
                return Cn.set(e, n),
                n
            }
            function Rn(e) {
                return In(e).then((function(e) {
                    if (!e.contentWindow)
                        throw new Error("Could not find window in iframe");
                    return e.contentWindow
                }
                ))
            }
            function Pn(e, t, n) {
                void 0 === e && (e = "div"),
                void 0 === t && (t = {}),
                e = e.toLowerCase();
                var r = document.createElement(e);
                if (t.style && Ze(r.style, t.style),
                t.class && (r.className = t.class.join(" ")),
                t.id && r.setAttribute("id", t.id),
                t.attributes)
                    for (var o = 0, i = Object.keys(t.attributes); o < i.length; o++) {
                        var a = i[o];
                        r.setAttribute(a, t.attributes[a])
                    }
                if (t.styleSheet && kn(r, t.styleSheet),
                n && _n(n, r),
                t.html)
                    if ("iframe" === e) {
                        if (!n || !r.contentWindow)
                            throw new Error("Iframe html can not be written unless container provided and iframe in DOM");
                        Tn(r.contentWindow, t.html)
                    } else
                        r.innerHTML = t.html;
                return r
            }
            function Ln(e, t) {
                void 0 === e && (e = {});
                var n = e.style || {}
                  , r = Pn("iframe", {
                    attributes: F({
                        allowTransparency: "true"
                    }, e.attributes || {}),
                    style: F({
                        backgroundColor: "transparent",
                        border: "none"
                    }, n),
                    html: e.html,
                    class: e.class
                })
                  , o = window.navigator.userAgent.match(/MSIE|Edge/i);
                return r.hasAttribute("id") || r.setAttribute("id", xe()),
                In(r),
                t && wn(t).appendChild(r),
                (e.url || o) && r.setAttribute("src", e.url || "about:blank"),
                r
            }
            function Dn(e, t, n) {
                return e.addEventListener(t, n),
                {
                    cancel: function() {
                        e.removeEventListener(t, n)
                    }
                }
            }
            function Mn(e, t, n) {
                n = Ue(n);
                for (var r = 0; r < t.length; r++)
                    e.addEventListener(t[r], n);
                return {
                    cancel: Ue((function() {
                        for (var r = 0; r < t.length; r++)
                            e.removeEventListener(t[r], n)
                    }
                    ))
                }
            }
            var Fn = ["webkit", "moz", "ms", "o"];
            function Bn(e, t, n) {
                e.style[t] = n;
                for (var r = Et(t), o = 0; o < Fn.length; o++)
                    e.style["" + Fn[o] + r] = n
            }
            var jn = ["animationstart", "webkitAnimationStart", "oAnimationStart", "MSAnimationStart"]
              , Un = ["animationend", "webkitAnimationEnd", "oAnimationEnd", "MSAnimationEnd"];
            function Gn(e, t, n, r) {
                return void 0 === r && (r = 1e3),
                new z((function(o, i) {
                    var a = wn(e);
                    if (!a)
                        return o();
                    var s, l, c, d, u = !1;
                    function p() {
                        clearTimeout(s),
                        clearTimeout(l),
                        c.cancel(),
                        d.cancel()
                    }
                    c = Mn(a, jn, (function(e) {
                        e.target === a && e.animationName === t && (clearTimeout(s),
                        e.stopPropagation(),
                        c.cancel(),
                        u = !0,
                        l = setTimeout((function() {
                            p(),
                            o()
                        }
                        ), r))
                    }
                    )),
                    d = Mn(a, Un, (function(e) {
                        if (e.target === a && e.animationName === t)
                            return p(),
                            "string" == typeof e.animationName && e.animationName !== t ? i("Expected animation name to be " + t + ", found " + e.animationName) : o()
                    }
                    )),
                    Bn(a, "animationName", t),
                    s = setTimeout((function() {
                        if (!u)
                            return p(),
                            o()
                    }
                    ), 200),
                    n && n(p)
                }
                ))
            }
            function $n(e) {
                e.style.setProperty("visibility", "")
            }
            function Vn(e) {
                e.style.setProperty("visibility", "hidden", "important")
            }
            function Hn(e) {
                e.style.setProperty("display", "")
            }
            function Kn(e) {
                e.style.setProperty("display", "none", "important")
            }
            function zn(e) {
                e && e.parentNode && e.parentNode.removeChild(e)
            }
            function Wn(e, t, n) {
                var r = Gn(e, t, n);
                return Hn(e),
                r
            }
            function Yn(e, t, n) {
                return Gn(e, t, n).then((function() {
                    Kn(e)
                }
                ))
            }
            function Xn(e, t) {
                e.classList.add(t)
            }
            function Zn(e, t) {
                e.classList.remove(t)
            }
            function qn(e) {
                return !(e && e.parentNode && e.ownerDocument && e.ownerDocument.documentElement && e.ownerDocument.documentElement.contains(e))
            }
            function Jn(e, t) {
                t = Ue(t);
                var n, r, o, i = !1, a = [], s = function() {
                    i = !0;
                    for (var e = 0; e < a.length; e++)
                        a[e].disconnect();
                    n && n.cancel(),
                    o && o.removeEventListener("unload", l),
                    r && zn(r)
                }, l = function() {
                    i || (t(),
                    s())
                };
                if (qn(e))
                    return l(),
                    {
                        cancel: s
                    };
                if (window.MutationObserver)
                    for (var c = e.parentElement; c; ) {
                        var d = new window.MutationObserver((function() {
                            qn(e) && l()
                        }
                        ));
                        d.observe(c, {
                            childList: !0
                        }),
                        a.push(d),
                        c = c.parentElement
                    }
                return (r = document.createElement("iframe")).setAttribute("name", "__detect_close_" + xe() + "__"),
                r.style.display = "none",
                Rn(r).then((function(e) {
                    (o = function(e) {
                        if (!ee(e))
                            throw new Error("Expected window to be same domain");
                        return e
                    }(e)).addEventListener("unload", l)
                }
                )),
                e.appendChild(r),
                n = dt((function() {
                    qn(e) && l()
                }
                ), 1e3),
                {
                    cancel: s
                }
            }
            function Qn(e, t) {
                void 0 === t && (t = window.document);
                for (var n = 0, r = gn("script", e); n < r.length; n++) {
                    var o = r[n]
                      , i = o.parentNode;
                    if (i) {
                        var a = t.createElement("script");
                        a.text = o.textContent,
                        i.replaceChild(a, o)
                    }
                }
            }
            function er(e, t, n) {
                var r = void 0 === n ? {} : n
                  , o = r.width
                  , i = void 0 === o || o
                  , a = r.height
                  , s = void 0 === a || a
                  , l = r.interval
                  , c = void 0 === l ? 100 : l
                  , d = r.win
                  , u = void 0 === d ? window : d
                  , p = e.offsetWidth
                  , h = e.offsetHeight
                  , f = !1;
                t({
                    width: p,
                    height: h
                });
                var m, g, y = function() {
                    if (!f && dn(e)) {
                        var n = e.offsetWidth
                          , r = e.offsetHeight;
                        (i && n !== p || s && r !== h) && t({
                            width: n,
                            height: r
                        }),
                        p = n,
                        h = r
                    }
                };
                return u.addEventListener("resize", y),
                void 0 !== u.ResizeObserver ? ((m = new u.ResizeObserver(y)).observe(e),
                g = dt(y, 10 * c)) : void 0 !== u.MutationObserver ? ((m = new u.MutationObserver(y)).observe(e, {
                    attributes: !0,
                    childList: !0,
                    subtree: !0,
                    characterData: !1
                }),
                g = dt(y, 10 * c)) : g = dt(y, c),
                {
                    cancel: function() {
                        f = !0,
                        m.disconnect(),
                        window.removeEventListener("resize", y),
                        g.cancel()
                    }
                }
            }
            function tr(e) {
                var t = un();
                if (t && "function" == typeof t.getEntries)
                    for (var n = t.getEntries(), r = 0; r < n.length; r++) {
                        var o = n[r];
                        if (o && o.name && 0 === o.name.indexOf(e) && "number" == typeof o.duration)
                            return Math.floor(o.duration)
                    }
            }
            function nr(e) {
                for (; e.parentNode; )
                    e = e.parentNode;
                return "[object ShadowRoot]" === e.toString()
            }
            function rr(e) {
                for (; e.parentNode; )
                    e = e.parentNode;
                if (nr(e))
                    return e
            }
            function or(e) {
                var t = rr(e);
                if (t && t.host)
                    return t.host
            }
            function ir(e) {
                var t = or(e);
                if (!t)
                    throw new Error("Element is not in shadow dom");
                var n = "shadow-slot-" + xe()
                  , r = document.createElement("slot");
                r.setAttribute("name", n),
                e.appendChild(r);
                var o = document.createElement("div");
                return o.setAttribute("slot", n),
                t.appendChild(o),
                nr(t) ? ir(o) : o
            }
            function ar(e) {
                var t = function t(n) {
                    return e.removeEventListener("focus", t),
                    n.preventDefault(),
                    e.blur(),
                    !1
                };
                e.addEventListener("mousedown", (function() {
                    e.addEventListener("focus", t),
                    setTimeout((function() {
                        e.removeEventListener("focus", t)
                    }
                    ), 1)
                }
                ))
            }
            function sr() {
                try {
                    throw new Error("_")
                } catch (e) {
                    return e.stack || ""
                }
            }
            var lr = "undefined" != typeof document ? document.currentScript : null
              , cr = Le((function() {
                if (lr)
                    return lr;
                if (lr = function() {
                    try {
                        var e = sr()
                          , t = /.*at [^(]*\((.*):(.+):(.+)\)$/gi.exec(e)
                          , n = t && t[1];
                        if (!n)
                            return;
                        for (var r = 0, o = [].slice.call(document.getElementsByTagName("script")).reverse(); r < o.length; r++) {
                            var i = o[r];
                            if (i.src && i.src === n)
                                return i
                        }
                    } catch (e) {}
                }())
                    return lr;
                throw new Error("Can not determine current script")
            }
            ))
              , dr = xe()
              , ur = Le((function() {
                var e;
                try {
                    e = cr()
                } catch (e) {
                    return dr
                }
                var t = e.getAttribute(he.UID);
                if (t && "string" == typeof t)
                    return t;
                if ((t = e.getAttribute(he.UID + "-auto")) && "string" == typeof t)
                    return t;
                if (e.src) {
                    var n = $e(JSON.stringify({
                        src: e.src,
                        dataset: e.dataset
                    }));
                    t = "uid_" + n.slice(n.length - fe)
                } else
                    t = xe();
                return e.setAttribute(he.UID + "-auto", t),
                t
            }
            ));
            function pr(e) {
                var t = e.url
                  , n = e.target
                  , r = e.body
                  , o = e.method
                  , i = void 0 === o ? "post" : o
                  , a = document.createElement("form");
                if (a.setAttribute("target", n),
                a.setAttribute("method", i),
                a.setAttribute("action", t),
                a.style.display = "none",
                r)
                    for (var s = 0, l = Object.keys(r); s < l.length; s++) {
                        var c, d = l[s], u = document.createElement("input");
                        u.setAttribute("name", d),
                        u.setAttribute("value", null == (c = r[d]) ? void 0 : c.toString()),
                        a.appendChild(u)
                    }
                Yt().appendChild(a),
                a.submit(),
                Yt().removeChild(a)
            }
            function hr(e) {
                var t = e.name
                  , n = e.lifetime
                  , r = void 0 === n ? 12e5 : n
                  , o = e.stickySessionId;
                return Be(hr, (function() {
                    var e, n = "__" + t + "_storage__", i = xe();
                    function a(t) {
                        var r, o = bn();
                        if (e && (r = e),
                        !r && o) {
                            var a = window.localStorage.getItem(n);
                            a && (r = JSON.parse(a))
                        }
                        r || (r = Te()[n]),
                        r || (r = {
                            id: i
                        }),
                        r.id || (r.id = i),
                        e = r;
                        var s = t(r);
                        return o ? window.localStorage.setItem(n, JSON.stringify(r)) : Te()[n] = r,
                        e = null,
                        s
                    }
                    function s() {
                        return a((function(e) {
                            return e.id
                        }
                        ))
                    }
                    function l(e) {
                        return a((function(t) {
                            var n = t.__session__
                              , i = Date.now();
                            return n && i - n.created > r && (n = null),
                            n || (n = {
                                guid: o || xe(),
                                created: i
                            }),
                            t.__session__ = n,
                            e(n)
                        }
                        ))
                    }
                    return {
                        getState: a,
                        getID: s,
                        isStateFresh: function() {
                            return s() === i
                        },
                        getSessionState: function(e) {
                            return l((function(t) {
                                return t.state = t.state || {},
                                e(t.state)
                            }
                            ))
                        },
                        getSessionID: function() {
                            return l((function(e) {
                                return e.guid
                            }
                            ))
                        }
                    }
                }
                ), [{
                    name: t,
                    lifetime: r
                }])
            }
            function fr() {
                return hr({
                    name: "belter_experiment"
                })
            }
            function mr(e) {
                return fr().getSessionState((function(t) {
                    return t.loggedBeacons = t.loggedBeacons || [],
                    -1 === t.loggedBeacons.indexOf(e) && (t.loggedBeacons.push(e),
                    !0)
                }
                ))
            }
            function gr(e) {
                return Math.floor(Math.random() * e)
            }
            function yr(e) {
                var t, n = e.name, r = e.sample, o = void 0 === r ? 50 : r, i = e.logTreatment, a = void 0 === i ? je : i, s = e.logCheckpoint, l = void 0 === s ? je : s, c = e.sticky, d = void 0 === c || c ? function(e) {
                    return fr().getState((function(t) {
                        return t.throttlePercentiles = t.throttlePercentiles || {},
                        t.throttlePercentiles[e] = t.throttlePercentiles[e] || gr(100),
                        t.throttlePercentiles[e]
                    }
                    ))
                }(n) : gr(100), u = n + "_" + (t = d < o ? "test" : o >= 50 || o <= d && d < 2 * o ? "control" : "throttle"), p = !1, h = !1;
                try {
                    window.localStorage && window.localStorage.getItem(n) && (h = !0)
                } catch (e) {}
                var f = {
                    isEnabled: function() {
                        return "test" === t || h
                    },
                    isDisabled: function() {
                        return "test" !== t && !h
                    },
                    getTreatment: function() {
                        return u
                    },
                    log: function(e, t) {
                        return void 0 === t && (t = {}),
                        p ? (mr(u + "_" + JSON.stringify(t)) && a({
                            name: n,
                            treatment: u,
                            payload: t,
                            throttle: d
                        }),
                        mr(u + "_" + e + "_" + JSON.stringify(t)) && l({
                            name: n,
                            treatment: u,
                            checkpoint: e,
                            payload: t,
                            throttle: d
                        }),
                        f) : f
                    },
                    logStart: function(e) {
                        return void 0 === e && (e = {}),
                        p = !0,
                        f.log("start", e)
                    },
                    logComplete: function(e) {
                        return void 0 === e && (e = {}),
                        f.log("complete", e)
                    }
                };
                return f
            }
            function vr(e) {
                var t = e.name
                  , n = e.version
                  , r = void 0 === n ? "latest" : n
                  , o = Te()
                  , i = "__" + t + "__" + r + "_global__"
                  , a = o[i] = o[i] || {};
                return {
                    get: function(e, t) {
                        return t = t || {},
                        a[e] = a[e] || t
                    }
                }
            }
            var br = [];
            function Er(e) {
                var t = e.url
                  , n = e.method
                  , r = void 0 === n ? "get" : n
                  , o = e.headers
                  , i = void 0 === o ? {} : o
                  , a = e.json
                  , s = e.data
                  , l = e.body
                  , c = e.win
                  , d = void 0 === c ? window : c
                  , u = e.timeout
                  , p = void 0 === u ? 0 : u;
                return new z((function(e, n) {
                    if (a && s || a && l || s && a)
                        throw new Error("Only options.json or options.data or options.body should be passed");
                    for (var o = {}, c = 0, u = Object.keys(i); c < u.length; c++) {
                        var h = u[c];
                        o[h.toLowerCase()] = i[h]
                    }
                    a ? o["content-type"] = o["content-type"] || "application/json" : (s || l) && (o["content-type"] = o["content-type"] || "application/x-www-form-urlencoded; charset=utf-8"),
                    o.accept = o.accept || "application/json";
                    for (var f = 0; f < br.length; f++)
                        for (var m = (0,
                        br[f])(), g = 0, y = Object.keys(m); g < y.length; g++) {
                            var v = y[g];
                            o[v.toLowerCase()] = m[v]
                        }
                    var b = new d.XMLHttpRequest;
                    for (var E in b.addEventListener("load", (function() {
                        var o = function(e) {
                            void 0 === e && (e = "");
                            for (var t = {}, n = 0, r = e.trim().split("\n"); n < r.length; n++) {
                                var o = r[n].split(":")
                                  , i = o[0]
                                  , a = o.slice(1);
                                t[i.toLowerCase()] = a.join(":").trim()
                            }
                            return t
                        }(this.getAllResponseHeaders());
                        if (!this.status)
                            return n(new Error("Request to " + r.toLowerCase() + " " + t + " failed: no response status code."));
                        var i = o["content-type"]
                          , a = i && (0 === i.indexOf("application/json") || 0 === i.indexOf("text/json"))
                          , s = this.responseText;
                        try {
                            s = JSON.parse(s)
                        } catch (e) {
                            if (a)
                                return n(new Error("Invalid json: " + this.responseText + "."))
                        }
                        return e({
                            status: this.status,
                            headers: o,
                            body: s
                        })
                    }
                    ), !1),
                    b.addEventListener("error", (function(e) {
                        n(new Error("Request to " + r.toLowerCase() + " " + t + " failed: " + e.toString() + "."))
                    }
                    ), !1),
                    b.open(r, t, !0),
                    o)
                        o.hasOwnProperty(E) && b.setRequestHeader(E, o[E]);
                    a ? l = JSON.stringify(a) : s && (l = Object.keys(s).map((function(e) {
                        return encodeURIComponent(e) + "=" + (s ? encodeURIComponent(s[e]) : "")
                    }
                    )).join("&")),
                    b.timeout = p,
                    b.ontimeout = function() {
                        n(new Error("Request to " + r.toLowerCase() + " " + t + " has timed out"))
                    }
                    ,
                    b.send(l)
                }
                ))
            }
            function _r(e) {
                br.push(e)
            }
            var Ar = !0;
            function wr(e, t, n) {
                n.value = Le(n.value, {
                    name: t,
                    thisNamespace: !0
                })
            }
            function Sr(e, t, n) {
                n.value = Fe(n.value, {
                    name: t
                })
            }
            function Cr(e) {
                return "string" == typeof e && /^[0-9]+%$/.test(e)
            }
            function Or(e) {
                return "string" == typeof e && /^[0-9]+px$/.test(e)
            }
            function xr(e) {
                if ("number" == typeof e)
                    return e;
                var t = e.match(/^([0-9]+)(px|%)$/);
                if (!t)
                    throw new Error("Could not match css value from " + e);
                return parseInt(t[1], 10)
            }
            function Tr(e) {
                return xr(e) + "px"
            }
            function Nr(e) {
                return "number" == typeof e ? Tr(e) : Cr(e) ? e : Tr(e)
            }
            function kr(e, t) {
                return parseInt(e * xr(t) / 100, 10)
            }
            function Ir(e, t) {
                if ("number" == typeof e)
                    return e;
                if (Cr(e))
                    return kr(t, e);
                if (Or(e))
                    return xr(e);
                throw new Error("Can not normalize dimension: " + e)
            }
            function Rr(e, t) {
                var n = (void 0 === t ? {} : t).timeout
                  , r = void 0 === n ? 5e3 : n
                  , o = []
                  , i = [];
                return new z((function(t, n) {
                    var a = setTimeout((function() {
                        o.length && n(new Error("Expected " + o[0].name + " to be called in " + r + "ms")),
                        i.length && n(new Error("Expected " + i[0].name + " promise to complete in " + r + "ms"))
                    }
                    ), r)
                      , s = function(e, t) {
                        void 0 === t && (t = je);
                        var n = {
                            name: e,
                            handler: t
                        };
                        return o.push(n),
                        function() {
                            for (var r = this, a = arguments.length, s = new Array(a), l = 0; l < a; l++)
                                s[l] = arguments[l];
                            Gt(o, n);
                            var c = Ut((function() {
                                var e;
                                return (e = t).call.apply(e, [r].concat(s))
                            }
                            ))
                              , d = c.result
                              , u = c.error;
                            if (u)
                                throw i.push({
                                    name: e,
                                    promise: z.asyncReject(u)
                                }),
                                u;
                            return i.push({
                                name: e,
                                promise: z.resolve(d)
                            }),
                            d
                        }
                    }
                      , l = function(e, t) {
                        return void 0 === t && (t = je),
                        function() {
                            var n;
                            i.push({
                                name: e,
                                promise: z.asyncReject(new Error("Expected " + e + " to not be called"))
                            });
                            for (var r = arguments.length, o = new Array(r), a = 0; a < r; a++)
                                o[a] = arguments[a];
                            return (n = t).call.apply(n, [this].concat(o))
                        }
                    }
                      , c = function(e, t) {
                        void 0 === t && (t = je);
                        var n = {
                            name: e,
                            handler: t
                        };
                        return o.push(n),
                        function() {
                            for (var r = this, a = arguments.length, s = new Array(a), l = 0; l < a; l++)
                                s[l] = arguments[l];
                            Gt(o, n);
                            var c = Ut((function() {
                                var e;
                                return (e = t).call.apply(e, [r].concat(s))
                            }
                            ))
                              , d = c.result
                              , u = c.error;
                            if (u)
                                throw u;
                            return i.push({
                                name: e,
                                promise: z.resolve(d).then((function() {
                                    throw new Error("Expected " + e + " to throw an error")
                                }
                                ), je)
                            }),
                            d
                        }
                    };
                    i.push({
                        name: "wrapPromise handler",
                        promise: z.try((function() {
                            return e({
                                expect: s,
                                avoid: l,
                                expectError: c,
                                error: l,
                                wait: function() {
                                    return z.resolve()
                                }
                            })
                        }
                        ))
                    }),
                    function e() {
                        return z.try((function() {
                            if (i.length) {
                                var t = i[0];
                                return t.promise.finally((function() {
                                    Gt(i, t)
                                }
                                )).then(e)
                            }
                        }
                        )).then((function() {
                            if (o.length)
                                return z.delay(10).then(e)
                        }
                        ))
                    }().finally((function() {
                        clearTimeout(a)
                    }
                    )).then(t, n)
                }
                ))
            }
        }
        ])
    }(dt);
    var ut = dt.exports;
    const pt = {
        env: "production",
        loggerUrl: "https://www.paypal.com",
        getPortalUrl: () => "https://www.paypal.com/",
        timeouts: {
            default: 5e3
        }
    }
      , ht = {
        env: "sandbox",
        loggerUrl: "https://www.sandbox.paypal.com",
        getPortalUrl: () => "https://www.sandbox.paypal.com/",
        timeouts: {
            default: 9e3
        }
    }
      , ft = {
        env: "stage",
        loggerUrl: "",
        getPortalUrl: function() {
            var e;
            let t = "https://www.paypal.com/";
            if (null === (e = null === window || void 0 === window ? void 0 : window.location) || void 0 === e ? void 0 : e.origin)
                try {
                    t = new URL("/",window.location.origin).href
                } catch (e) {}
            return t
        },
        timeouts: {
            default: 15e3
        }
    };
    let mt;
    const gt = () => mt || (console.warn("Env has not been set yet, returning production config by default"),
    pt)
      , yt = e => {
        var t, n;
        const r = null === (t = null === window || void 0 === window ? void 0 : window.localStorage) || void 0 === t ? void 0 : t.getItem("axoLoggerUrl")
          , o = null === (n = null === window || void 0 === window ? void 0 : window.localStorage) || void 0 === n ? void 0 : n.getItem("axoPortalUrl");
        switch (e) {
        case "stage":
            mt = ft;
            break;
        case "sandbox":
            mt = ht;
            break;
        default:
            mt = pt
        }
        "production" !== mt.env && (mt = Object.assign(Object.assign(Object.assign({}, mt), r && {
            loggerUrl: r
        }), o && {
            getPortalUrl: () => o
        }))
    }
      , vt = {
        COUNT_NAME: "pp.axo.sdk.count",
        TIMING_NAME: "pp.axo.sdk.timing.exponential",
        STATUS: {
            OK: "OK",
            ERROR: "ERROR"
        },
        FASTLANE_VERSION: "0.6"
    }
      , bt = {
        COMPONENT: "sdk.card_component",
        ACTION: {
            CREATE: "create",
            RENDER: "render",
            TOKENIZE: "tokenize",
            GETPAYMENTTOKEN: "getPaymentToken",
            UPDATEPREFILLS: "updatePrefills"
        }
    }
      , Et = {
        COMPONENT: "sdk.connect_card_component",
        ACTION: {
            CREATE: "create",
            RENDER: "render",
            TOKENIZE: "tokenize",
            GETPAYMENTTOKEN: "getPaymentToken"
        }
    }
      , _t = "sdk.card_selector"
      , At = {
        ADD: "add",
        SELECT: "select",
        SHOW: "show"
    }
      , wt = {
        COMPONENT: "sdk.card_selector.billing_address",
        ACTION: {
            ADD: "add",
            SELECT: "select"
        }
    }
      , St = "sdk.hcf"
      , Ct = {
        CREATE: "create"
    }
      , Ot = "sdk.payment_component"
      , xt = {
        CREATE: "create",
        RENDER: "render",
        TOKENIZE: "tokenize",
        UPDATEPREFILLS: "updatePrefills"
    }
      , Tt = "sdk.loading"
      , Nt = {
        CREATE: "create",
        PORTAL: "portal"
    }
      , kt = "sdk.shipping_address_selector"
      , It = {
        ADD: "add",
        SELECT: "select",
        SHOW: "show",
        PERSIST: "persist"
    }
      , Rt = {
        COMPONENT: "sdk.watermark_component",
        ACTION: {
            CREATE: "create",
            RENDER: "render"
        }
    }
      , Pt = {
        COMPONENT: "sdk.connect_watermark_component",
        ACTION: {
            CREATE: "create",
            RENDER: "render"
        }
    }
      , Lt = "sdk.consent_component"
      , Dt = {
        CREATE: "create",
        RENDER: "render",
        GET_RENDER_STATE: "getRenderState",
        UPDATE_PREFILLS: "updatePrefills",
        GET_CONSENT_DETAILS: "getConsentDetails"
    }
      , Mt = "sdk.identity_component"
      , Ft = {
        LOOKUP: "lookupCustomerByEmail",
        SUBMIT_OTP: "submitOTP",
        TRIGGER_AUTHENTICATION: "triggerAuthentication"
    };
    let Bt = "unknown"
      , jt = "unknown";
    function Ut() {
        const e = it.get("authState");
        let {customerId: t, accountType: n} = e || {};
        const r = ct.Logger({
            url: `${gt().loggerUrl}/xoplatform/logger/api/logger`,
            flushInterval: 5e3,
            enableSendBeacon: !0
        });
        function o(e) {
            r.wrap(( () => {
                switch (e) {
                case "C":
                    return {
                        buyer_type: "axo_member",
                        buyer_type_code: 1
                    };
                case "P":
                    return {
                        buyer_type: "paypal_member",
                        buyer_type_code: 2
                    };
                default:
                    return {
                        buyer_type: "axo_guest",
                        buyer_type_code: 0
                    }
                }
            }
            ), ["addTrackingBuilder", "addMetricDimensionBuilder"])
        }
        function i(e) {
            r.addTrackingBuilder(( () => ({
                encr_axo_cust_id: e
            })))
        }
        return r.addHeaderBuilder(( () => ({
            "x-paypal-fpti": JSON.stringify({
                cco_product_flow: "axo"
            })
        }))),
        r.addTrackingBuilder(( () => {
            const e = ut.isIos() ? "iOS" : ut.isAndroid() ? "Android" : null;
            return Object.assign(Object.assign({
                cco_product_flow: "AXO",
                component: "axo_sdk"
            }, e && {
                platform: e
            }), {
                sdk_version: "boba",
                t: Date.now()
            })
        }
        )),
        r.setMetricMerchantId = e => {
            Bt = e
        }
        ,
        r.setIntendedExperience = e => {
            jt = e
        }
        ,
        r.countMetric = ({component: e, action: t, status: n, value: o=1}) => (r.metric({
            dimensions: {
                component: e,
                action: t,
                status: n,
                fastlane_version: vt.FASTLANE_VERSION,
                merchant_id: Bt,
                intended_experience: jt
            },
            metricEventName: "unused",
            metricNamespace: vt.COUNT_NAME,
            metricValue: o,
            metricType: "counter"
        }),
        r),
        r.timingMetric = ({component: e, action: t, timingValue: n}) => (r.metric({
            dimensions: {
                component: e,
                action: t,
                fastlane_version: vt.FASTLANE_VERSION,
                merchant_id: Bt,
                intended_experience: jt
            },
            metricEventName: "unused",
            metricNamespace: vt.TIMING_NAME,
            metricValue: Number(n),
            metricType: "histogram"
        }),
        r),
        r.interactionMetric = ({component: e, action: t, status: n, value: o, timingValue: i}) => (r.countMetric({
            component: e,
            action: t,
            status: n,
            value: o
        }),
        r.timingMetric({
            component: e,
            action: t,
            timingValue: i
        }),
        r),
        r.addFptiHeaderBuilder = e => r.addHeaderBuilder((t => {
            const {"x-paypal-fpti": n} = t
              , r = JSON.parse(n);
            return {
                "x-paypal-fpti": JSON.stringify(Object.assign(Object.assign({}, r), e(r)))
            }
        }
        )),
        r.trackExperiment = ({experimentId: e, treatmentId: t}) => {
            r.track({
                experimentation_experience: e,
                experimentation_treatment: t,
                event_name: "axo_sdk_experimentation_decision_occurred"
            })
        }
        ,
        r.wrap = (e, t) => {
            t.forEach((t => {
                "function" == typeof r[t] ? r[t](e) : console.warn(`Method ${t} does not exist on logger`)
            }
            ))
        }
        ,
        n && o(n),
        t && i(t),
        it.onChange("authState", (e => {
            const {accountType: r, customerId: a} = e;
            void 0 !== r && n != r && (n = r,
            o(n)),
            t != a && (t = a,
            i(t))
        }
        )),
        r
    }
    let Gt = null;
    function $t() {
        return Gt || (Gt = Ut()),
        Gt
    }
    async function Vt(e, t={}) {
        const n = gt()
          , {timeout: r=n.timeouts.default, createTimeoutError: o=(e => new Error(e)), resourceName: i="unknown resource"} = t;
        let a;
        const s = e()
          , l = new Promise(( (e, t) => {
            a = setTimeout(( () => {
                t(o(`${i} timed out after ${r} ms`))
            }
            ), r)
        }
        ));
        return l.catch(( () => {
            $t().track({
                event_name: "axo_sdk_internal_timeout_triggered",
                int_error_code: "REQUEST_TIMEOUT",
                int_error_desc: `${i} timed out after ${r} ms`
            })
        }
        )),
        Promise.race([s, l]).finally(( () => {
            void 0 !== a && (clearTimeout(a),
            a = void 0)
        }
        ))
    }
    function Ht() {
        it.state.update("authState", {
            authTimedOut: !0,
            customerId: "",
            accountType: "",
            targetAuthAssertion: ""
        })
    }
    function Kt(e, t=200) {
        let n = {
            status: t,
            headers: {
                "Content-Type": "application/json"
            }
        };
        return 200 === t && (n.statusText = "OK"),
        new Response(JSON.stringify(e),n)
    }
    const zt = {
        TOO_MANY_REQUESTS: 429,
        REQUEST_TIMEOUT: 408,
        SERVICE_UNAVAILABLE: 503
    };
    function Wt(e, t) {
        const n = Object.assign({}, e);
        return t.forEach((e => {
            delete n[e]
        }
        )),
        n
    }
    function Yt(e) {
        try {
            if (!e)
                return !1;
            if ("undefined" != typeof Promise && e instanceof Promise)
                return !0;
            if ("undefined" != typeof window && "function" == typeof window.Window && e instanceof window.Window)
                return !1;
            if ("undefined" != typeof window && "function" == typeof window.constructor && e instanceof window.constructor)
                return !1;
            const t = {}.toString;
            if (t) {
                const n = t.call(e);
                if ("[object Window]" === n || "[object global]" === n || "[object DOMWindow]" === n)
                    return !1
            }
            if ("function" == typeof e.then)
                return !0
        } catch (e) {
            return !1
        }
        return !1
    }
    const Xt = []
      , Zt = [];
    let qt, Jt = 0;
    function Qt() {
        if (!Jt && qt) {
            const e = qt;
            qt = null,
            e.resolve()
        }
    }
    function en() {
        Jt += 1
    }
    function tn() {
        Jt -= 1,
        Qt()
    }
    class nn {
        constructor(e) {
            if (this.resolved = !1,
            this.rejected = !1,
            this.errorHandled = !1,
            this.handlers = [],
            e) {
                let t, n, r = !1, o = !1, i = !1;
                en();
                try {
                    e((e => {
                        i ? this.resolve(e) : (r = !0,
                        t = e)
                    }
                    ), (e => {
                        i ? this.reject(e) : (o = !0,
                        n = e)
                    }
                    ))
                } catch (e) {
                    return tn(),
                    void this.reject(e)
                }
                tn(),
                i = !0,
                r ? this.resolve(t) : o && this.reject(n)
            }
        }
        resolve(e) {
            if (this.resolved || this.rejected)
                return this;
            if (Yt(e))
                throw new Error("Can not resolve promise with another promise");
            return this.resolved = !0,
            this.value = e,
            this.dispatch(),
            this
        }
        reject(e) {
            if (this.resolved || this.rejected)
                return this;
            if (Yt(e))
                throw new Error("Can not reject promise with another promise");
            if (!e) {
                const t = e && "function" == typeof e.toString ? e.toString() : Object.prototype.toString.call(e);
                e = new Error(`Expected reject to be called with Error, got ${t}`)
            }
            return this.rejected = !0,
            this.error = e,
            this.errorHandled || setTimeout(( () => {
                this.errorHandled || function(e, t) {
                    if (-1 === Xt.indexOf(e)) {
                        Xt.push(e),
                        setTimeout(( () => {
                            throw e
                        }
                        ), 1);
                        for (let n = 0; n < Zt.length; n++)
                            Zt[n](e, t)
                    }
                }(e, this)
            }
            ), 1),
            this.dispatch(),
            this
        }
        asyncReject(e) {
            return this.errorHandled = !0,
            this.reject(e),
            this
        }
        dispatch() {
            const {dispatching: e, resolved: t, rejected: n, handlers: r} = this;
            if (e)
                return;
            if (!t && !n)
                return;
            this.dispatching = !0,
            en();
            const o = (e, t) => e.then((e => {
                t.resolve(e)
            }
            ), (e => {
                t.reject(e)
            }
            ));
            for (let e = 0; e < r.length; e++) {
                const {onSuccess: i, onError: a, promise: s} = r[e];
                let l;
                if (t)
                    try {
                        l = i ? i(this.value) : this.value
                    } catch (e) {
                        s.reject(e);
                        continue
                    }
                else if (n) {
                    if (!a) {
                        s.reject(this.error);
                        continue
                    }
                    try {
                        l = a(this.error)
                    } catch (e) {
                        s.reject(e);
                        continue
                    }
                }
                if (l instanceof nn && (l.resolved || l.rejected)) {
                    const e = l;
                    e.resolved ? s.resolve(e.value) : s.reject(e.error),
                    e.errorHandled = !0
                } else
                    Yt(l) ? l instanceof nn && (l.resolved || l.rejected) ? l.resolved ? s.resolve(l.value) : s.reject(l.error) : o(l, s) : s.resolve(l)
            }
            r.length = 0,
            this.dispatching = !1,
            tn()
        }
        then(e, t) {
            if (e && "function" != typeof e && !e.call)
                throw new Error("Promise.then expected a function for success handler");
            if (t && "function" != typeof t && !t.call)
                throw new Error("Promise.then expected a function for error handler");
            const n = new nn;
            return this.handlers.push({
                promise: n,
                onSuccess: e,
                onError: t
            }),
            this.errorHandled = !0,
            this.dispatch(),
            n
        }
        catch(e) {
            return this.then(void 0, e)
        }
        finally(e) {
            if (e && "function" != typeof e && !e.call)
                throw new Error("Promise.finally expected a function");
            return this.then((t => nn.try(e).then(( () => t))), (t => nn.try(e).then(( () => {
                throw t
            }
            ))))
        }
        timeout(e, t) {
            if (this.resolved || this.rejected)
                return this;
            const n = setTimeout(( () => {
                this.resolved || this.rejected || this.reject(t || new Error(`Promise timed out after ${e}ms`))
            }
            ), e);
            return this.then((e => (clearTimeout(n),
            e)))
        }
        toPromise() {
            if ("undefined" == typeof Promise)
                throw new TypeError("Could not find Promise");
            return Promise.resolve(this)
        }
        lazy() {
            return this.errorHandled = !0,
            this
        }
        static resolve(e) {
            if (e instanceof nn) {
                return e
            }
            return Yt(e) ? new nn(( (t, n) => e.then(t, n))) : (new nn).resolve(e)
        }
        static reject(e) {
            return (new nn).reject(e)
        }
        static asyncReject(e) {
            return (new nn).asyncReject(e)
        }
        static all(e) {
            const t = new nn;
            let n = e.length;
            const r = [].slice();
            if (!n)
                return t.resolve(r),
                t;
            const o = (e, o, i) => o.then((o => {
                r[e] = o,
                n -= 1,
                0 === n && t.resolve(r)
            }
            ), (e => {
                i.reject(e)
            }
            ));
            for (let i = 0; i < e.length; i++) {
                const a = e[i];
                if (a instanceof nn) {
                    if (a.resolved) {
                        r[i] = a.value,
                        n -= 1;
                        continue
                    }
                } else if (!Yt(a)) {
                    r[i] = a,
                    n -= 1;
                    continue
                }
                o(i, nn.resolve(a), t)
            }
            return 0 === n && t.resolve(r),
            t
        }
        static hash(e) {
            const t = {}
              , n = [];
            for (const r in e)
                if (e.hasOwnProperty(r)) {
                    const o = e[r];
                    Yt(o) ? n.push(o.then((e => {
                        t[r] = e
                    }
                    ))) : t[r] = o
                }
            return nn.all(n).then(( () => t))
        }
        static map(e, t) {
            return nn.all(e.map(t))
        }
        static onPossiblyUnhandledException(e) {
            return function(e) {
                return Zt.push(e),
                {
                    cancel() {
                        Zt.splice(Zt.indexOf(e), 1)
                    }
                }
            }(e)
        }
        static try(e, t, n) {
            if (e && "function" != typeof e && !e.call)
                throw new Error("Promise.try expected a function");
            let r;
            en();
            try {
                r = e.apply(t, n || [])
            } catch (e) {
                return tn(),
                nn.reject(e)
            }
            tn();
            return nn.resolve(r)
        }
        static delay(e) {
            return new nn((t => {
                setTimeout(t, e)
            }
            ))
        }
        static isPromise(e) {
            return !!(e && e instanceof nn) || Yt(e)
        }
        static flush() {
            return function(e) {
                const t = qt = qt || new e;
                return Qt(),
                t
            }(nn)
        }
    }
    const rn = {
        MOCK: "mock:",
        FILE: "file:",
        ABOUT: "about:"
    }
      , on = "Call was rejected by callee.\r\n";
    function an(e=window) {
        return e.location.protocol
    }
    function sn(e=window) {
        if (e.mockDomain) {
            const t = e.mockDomain.split("//")[0];
            if (t)
                return t
        }
        return an(e)
    }
    function ln(e=window) {
        return sn(e) === rn.ABOUT
    }
    function cn(e) {
        try {
            return e && e.location && e.location.href,
            !0
        } catch (e) {}
        return !1
    }
    function dn(e=window) {
        const t = e.location;
        if (!t)
            throw new Error("Can not read window location");
        const n = an(e);
        if (!n)
            throw new Error("Can not read window protocol");
        if (n === rn.FILE)
            return `${rn.FILE}//`;
        if (n === rn.ABOUT) {
            const t = function(e=window) {
                if (e)
                    try {
                        if (e.parent && e.parent !== e)
                            return e.parent
                    } catch (e) {}
            }(e);
            return t && cn(t) ? dn(t) : `${rn.ABOUT}//`
        }
        const r = t.host;
        if (!r)
            throw new Error("Can not read window host");
        return `${n}//${r}`
    }
    function un(e=window) {
        const t = dn(e);
        return t && e.mockDomain && 0 === e.mockDomain.indexOf(rn.MOCK) ? e.mockDomain : t
    }
    function pn(e) {
        try {
            if (e === window)
                return !0
        } catch (e) {}
        try {
            const t = Object.getOwnPropertyDescriptor(e, "location");
            if (t && !1 === t.enumerable)
                return !1
        } catch (e) {}
        try {
            if (ln(e) && cn(e))
                return !0
        } catch (e) {}
        try {
            if (function(e=window) {
                return sn(e) === rn.MOCK
            }(e) && cn(e))
                return !0
        } catch (e) {}
        try {
            if (dn(e) === dn(window))
                return !0
        } catch (e) {}
        return !1
    }
    function hn(e) {
        if (!pn(e))
            return !1;
        try {
            if (e === window)
                return !0;
            if (ln(e) && cn(e))
                return !0;
            if (un(window) === un(e))
                return !0
        } catch (e) {}
        return !1
    }
    const fn = []
      , mn = [];
    function gn(e, t=!0) {
        try {
            if (e === window)
                return !1
        } catch (e) {
            return !0
        }
        try {
            if (!e)
                return !0
        } catch (e) {
            return !0
        }
        try {
            if (e.closed)
                return !0
        } catch (e) {
            return !e || e.message !== on
        }
        if (t && hn(e))
            try {
                if (e.mockclosed)
                    return !0
            } catch (e) {}
        try {
            if (!e.parent || !e.top)
                return !0
        } catch (e) {}
        const n = function(e, t) {
            for (let n = 0; n < e.length; n++)
                try {
                    if (e[n] === t)
                        return n
                } catch (e) {}
            return -1
        }(fn, e);
        if (-1 !== n) {
            const e = mn[n];
            if (e && function(e) {
                if (!e.contentWindow)
                    return !0;
                if (!e.parentNode)
                    return !0;
                const t = e.ownerDocument;
                if (t && t.documentElement && !t.documentElement.contains(e)) {
                    let n = e;
                    for (; n.parentNode && n.parentNode !== n; )
                        n = n.parentNode;
                    if (!n.host || !t.documentElement.contains(n.host))
                        return !0
                }
                return !1
            }(e))
                return !0
        }
        return !1
    }
    function yn(e) {
        try {
            if (e === window)
                return !0
        } catch (e) {
            if (e && e.message === on)
                return !0
        }
        try {
            if ("[object Window]" === Object.prototype.toString.call(e))
                return !0
        } catch (e) {
            if (e && e.message === on)
                return !0
        }
        try {
            if (window.Window && e instanceof window.Window)
                return !0
        } catch (e) {
            if (e && e.message === on)
                return !0
        }
        try {
            if (e && e.self === e)
                return !0
        } catch (e) {
            if (e && e.message === on)
                return !0
        }
        try {
            if (e && e.parent === e)
                return !0
        } catch (e) {
            if (e && e.message === on)
                return !0
        }
        try {
            if (e && e.top === e)
                return !0
        } catch (e) {
            if (e && e.message === on)
                return !0
        }
        try {
            0
        } catch (e) {
            return !0
        }
        try {
            if (e && "__unlikely_value__" === e.__cross_domain_utils_window_check__)
                return !1
        } catch (e) {
            return !0
        }
        try {
            if ("postMessage"in e && "self"in e && "location"in e)
                return !0
        } catch (e) {}
        return !1
    }
    function vn(e, t) {
        for (let n = 0; n < e.length; n++)
            try {
                if (e[n] === t)
                    return n
            } catch (e) {}
        return -1
    }
    class bn {
        constructor() {
            if (this.name = `__weakmap_${1e9 * Math.random() >>> 0}__`,
            function() {
                if ("undefined" == typeof WeakMap)
                    return !1;
                if (void 0 === Object.freeze)
                    return !1;
                try {
                    const e = new WeakMap
                      , t = {}
                      , n = "__testvalue__";
                    return Object.freeze(t),
                    e.set(t, n),
                    e.get(t) === n
                } catch (e) {
                    return !1
                }
            }())
                try {
                    this.weakmap = new WeakMap
                } catch (e) {}
            this.keys = [],
            this.values = []
        }
        _cleanupClosedWindows() {
            const e = this.weakmap
              , t = this.keys;
            for (let n = 0; n < t.length; n++) {
                const r = t[n];
                if (yn(r) && gn(r)) {
                    if (e)
                        try {
                            e.delete(r)
                        } catch (e) {}
                    t.splice(n, 1),
                    this.values.splice(n, 1),
                    n -= 1
                }
            }
        }
        isSafeToReadWrite(e) {
            if (yn(e))
                return !1;
            try {
                e && e.self,
                e && e[this.name]
            } catch (e) {
                return !1
            }
            return !0
        }
        set(e, t) {
            if (!e)
                throw new Error("WeakMap expected key");
            const n = this.weakmap;
            if (n)
                try {
                    n.set(e, t)
                } catch (e) {
                    delete this.weakmap
                }
            if (this.isSafeToReadWrite(e))
                try {
                    const n = this.name
                      , r = e[n];
                    return void (r && r[0] === e ? r[1] = t : Object.defineProperty(e, n, {
                        value: [e, t],
                        writable: !0
                    }))
                } catch (e) {}
            this._cleanupClosedWindows();
            const r = this.keys
              , o = this.values
              , i = vn(r, e);
            -1 === i ? (r.push(e),
            o.push(t)) : o[i] = t
        }
        get(e) {
            if (!e)
                throw new Error("WeakMap expected key");
            const t = this.weakmap;
            if (t)
                try {
                    if (t.has(e))
                        return t.get(e)
                } catch (e) {
                    delete this.weakmap
                }
            if (this.isSafeToReadWrite(e))
                try {
                    const t = e[this.name];
                    return t && t[0] === e ? t[1] : void 0
                } catch (e) {}
            this._cleanupClosedWindows();
            const n = vn(this.keys, e);
            if (-1 !== n)
                return this.values[n]
        }
        delete(e) {
            if (!e)
                throw new Error("WeakMap expected key");
            const t = this.weakmap;
            if (t)
                try {
                    t.delete(e)
                } catch (e) {
                    delete this.weakmap
                }
            if (this.isSafeToReadWrite(e))
                try {
                    const t = e[this.name];
                    t && t[0] === e && (t[0] = t[1] = void 0)
                } catch (e) {}
            this._cleanupClosedWindows();
            const n = this.keys
              , r = vn(n, e);
            -1 !== r && (n.splice(r, 1),
            this.values.splice(r, 1))
        }
        has(e) {
            if (!e)
                throw new Error("WeakMap expected key");
            const t = this.weakmap;
            if (t)
                try {
                    if (t.has(e))
                        return !0
                } catch (e) {
                    delete this.weakmap
                }
            if (this.isSafeToReadWrite(e))
                try {
                    const t = e[this.name];
                    return !(!t || t[0] !== e)
                } catch (e) {}
            this._cleanupClosedWindows();
            return -1 !== vn(this.keys, e)
        }
        getOrSet(e, t) {
            if (this.has(e))
                return this.get(e);
            const n = t();
            return this.set(e, n),
            n
        }
    }
    const En = "data-uid";
    function _n(e) {
        return e.name || e.__name__ || e.displayName || "anonymous"
    }
    function An(e, t) {
        try {
            delete e.name,
            e.name = t
        } catch (e) {}
        return e.__name__ = e.displayName = t,
        e
    }
    function wn() {
        const e = "0123456789abcdef";
        return `uid_${"xxxxxxxxxx".replace(/./g, ( () => e.charAt(Math.floor(16 * Math.random()))))}_${function(e) {
            if ("function" == typeof btoa)
                return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g, ( (e, t) => String.fromCharCode(parseInt(t, 16))))).replace(/[=]/g, "");
            if ("undefined" != typeof Buffer)
                return Buffer.from(e, "utf8").toString("base64").replace(/[=]/g, "");
            throw new Error("Can not find window.btoa or Buffer")
        }((new Date).toISOString().slice(11, 19).replace("T", ".")).replace(/[^a-zA-Z0-9]/g, "").toLowerCase()}`
    }
    let Sn;
    function Cn(e) {
        try {
            return JSON.stringify(Array.prototype.slice.call(e), ( (e, t) => "function" == typeof t ? `memoize[${function(e) {
                if (Sn = Sn || new bn,
                null == e || "object" != typeof e && "function" != typeof e)
                    throw new Error("Invalid object");
                lett = Sn.get(e);
                return t || (t = `${typeof e}:${wn()}`,
                Sn.set(e, t)),
                t
            }(t)}]` : function(e) {
                let t = !1;
                try {
                    (e instanceof window.Element || null !== e && "object" == typeof e && 1 === e.nodeType && "object" == typeof e.style && "object" == typeof e.ownerDocument) && (t = !0)
                } catch (e) {}
                return t
            }(t) ? {} : t))
        } catch (e) {
            throw new Error("Arguments not serializable -- can not be used to memoize")
        }
    }
    function On() {
        return {}
    }
    let xn = 0
      , Tn = 0;
    function Nn(e, t={}) {
        const {thisNamespace: n=!1, time: r} = t;
        let o, i, a = xn;
        xn += 1;
        const s = function(...t) {
            let s, l;
            a < Tn && (o = null,
            i = null,
            a = xn,
            xn += 1),
            n ? (i = i || new bn,
            s = i.getOrSet(this, On)) : s = o = o || {};
            try {
                l = Cn(t)
            } catch (t) {
                return e.apply(this, arguments)
            }
            let c = s[l];
            if (c && r && Date.now() - c.time < r && (delete s[l],
            c = null),
            c)
                return c.value;
            const d = Date.now()
              , u = e.apply(this, arguments);
            return s[l] = {
                time: d,
                value: u
            },
            u
        };
        s.reset = () => {
            o = null,
            i = null
        }
        ;
        return An(s, `${t.name || _n(e)}::memoized`)
    }
    function kn(...e) {}
    function In(e, t=Boolean) {
        const n = {};
        for (const r in e)
            e.hasOwnProperty(r) && t(e[r], r) && (n[r] = e[r]);
        return n
    }
    function Rn() {
        return Boolean(document.body) && "complete" === document.readyState
    }
    function Pn() {
        return Boolean(document.body) && "interactive" === document.readyState
    }
    function Ln() {
        return "undefined" != typeof window && void 0 !== window.location
    }
    function Dn() {
        try {
            const e = function() {
                try {
                    throw new Error("_")
                } catch (e) {
                    return e.stack || ""
                }
            }()
              , t = /.*at [^(]*\((.*):(.+):(.+)\)$/gi.exec(e)
              , n = t && t[1];
            if (!n)
                return;
            for (const e of Array.prototype.slice.call(document.getElementsByTagName("script")).reverse())
                if (e.src && e.src === n)
                    return e
        } catch (e) {}
    }
    Nn.clear = () => {
        Tn = xn
    }
    ,
    Nn((function(e) {
        if (Object.values)
            return Object.values(e);
        const t = [];
        for (const n in e)
            e.hasOwnProperty(n) && t.push(e[n]);
        return t
    }
    )),
    Nn(( () => new nn((e => {
        if (Rn() || Pn())
            return e();
        const t = setInterval(( () => {
            if (Rn() || Pn())
                return clearInterval(t),
                e()
        }
        ), 10)
    }
    ))));
    let Mn = "undefined" != typeof document ? document.currentScript : null;
    const Fn = Nn(( () => {
        if (Mn)
            return Mn;
        if (Mn = Dn(),
        Mn)
            return Mn;
        throw new Error("Can not determine current script")
    }
    ))
      , Bn = wn();
    Nn(( () => {
        let e;
        try {
            e = Fn()
        } catch (e) {
            return Bn
        }
        let t = e.getAttribute(En);
        if (t && "string" == typeof t)
            return t;
        if (t = e.getAttribute(`${En}-auto`),
        t && "string" == typeof t)
            return t;
        if (e.src) {
            const {src: n, dataset: r} = e
              , o = function(e) {
                let t = "";
                for (let n = 0; n < e.length; n++) {
                    let r = e[n].charCodeAt(0) * n;
                    e[n + 1] && (r += e[n + 1].charCodeAt(0) * (n - 1)),
                    t += String.fromCharCode(97 + Math.abs(r) % 26)
                }
                return t
            }(JSON.stringify({
                src: n,
                dataset: r
            }));
            t = `uid_${o.slice(o.length - 30)}`
        } else
            t = wn();
        return e.setAttribute(`${En}-auto`, t),
        t
    }
    ));
    const jn = {
        CONTENT_TYPE: "content-type",
        ACCEPT: "accept"
    }
      , Un = [];
    const Gn = {
        DEBUG: "debug",
        INFO: "info",
        WARN: "warn",
        ERROR: "error"
    }
      , $n = {
        FILE: "file:"
    }
      , Vn = [Gn.WARN, Gn.ERROR]
      , Hn = [Gn.ERROR, Gn.WARN, Gn.INFO, Gn.DEBUG]
      , Kn = 6e4
      , zn = Gn.WARN
      , Wn = ({headers: e, enableSendBeacon: t}) => {
        const n = e && Object.keys(e).length;
        return !!(window && window.navigator.sendBeacon && !n && t && window.Blob)
    }
      , Yn = ({win: e=window, url: t, data: n, useBlob: r=!0}) => {
        try {
            const o = JSON.stringify(n);
            if (!e.navigator.sendBeacon)
                throw new Error("No sendBeacon available");
            if (r) {
                const n = new Blob([o],{
                    type: "application/json"
                });
                return e.navigator.sendBeacon(t, n)
            }
            return e.navigator.sendBeacon(t, o)
        } catch (e) {
            return !1
        }
    }
      , Xn = (e, t) => {
        for (const n in t)
            t.hasOwnProperty(n) && (e[n] = t[n])
    }
    ;
    function Zn(e) {
        return ({url: t, method: n, headers: r, json: o, enableSendBeacon: i=!1}) => nn.try(( () => {
            const a = e || window
              , s = hn(a) ? function(e) {
                if (!hn(e))
                    throw new Error("Expected window to be same domain");
                return e
            }(a) : window;
            let l = !1;
            return Wn({
                headers: r,
                enableSendBeacon: i
            }) && (l = Yn({
                win: s,
                url: t,
                data: o,
                useBlob: !0
            })),
            l || function({url: e, method: t="get", headers: n={}, json: r, data: o, body: i, win: a=window, timeout: s=0}) {
                return new nn(( (l, c) => {
                    if (r && o || r && i || o && r)
                        throw new Error("Only options.json or options.data or options.body should be passed");
                    const d = {};
                    for (const e of Object.keys(n))
                        d[e.toLowerCase()] = n[e];
                    r ? d[jn.CONTENT_TYPE] = d[jn.CONTENT_TYPE] || "application/json" : (o || i) && (d[jn.CONTENT_TYPE] = d[jn.CONTENT_TYPE] || "application/x-www-form-urlencoded; charset=utf-8"),
                    d[jn.ACCEPT] = d[jn.ACCEPT] || "application/json";
                    for (const e of Un) {
                        const t = e();
                        for (const e of Object.keys(t))
                            d[e.toLowerCase()] = t[e]
                    }
                    const u = new a.XMLHttpRequest;
                    u.addEventListener("load", (function() {
                        const n = function(e="") {
                            const t = {};
                            for (const n of e.trim().split("\n")) {
                                const [e,...r] = n.split(":");
                                t[e.toLowerCase()] = r.join(":").trim()
                            }
                            return t
                        }(this.getAllResponseHeaders());
                        if (!this.status)
                            return c(new Error(`Request to ${t.toLowerCase()} ${e} failed: no response status code.`));
                        const r = n["content-type"]
                          , o = r && (0 === r.indexOf("application/json") || 0 === r.indexOf("text/json"));
                        let i = this.responseText;
                        try {
                            i = JSON.parse(i)
                        } catch (e) {
                            if (o)
                                return c(new Error(`Invalid json: ${this.responseText}.`))
                        }
                        const a = {
                            status: this.status,
                            headers: n,
                            body: i
                        };
                        return l(a)
                    }
                    ), !1),
                    u.addEventListener("error", (n => {
                        c(new Error(`Request to ${t.toLowerCase()} ${e} failed: ${n.toString()}.`))
                    }
                    ), !1),
                    u.open(t, e, !0);
                    for (const e in d)
                        d.hasOwnProperty(e) && u.setRequestHeader(e, d[e]);
                    r ? i = JSON.stringify(r) : o && (i = Object.keys(o).map((e => `${encodeURIComponent(e)}=${o ? encodeURIComponent(o[e]) : ""}`)).join("&")),
                    u.timeout = s,
                    u.ontimeout = function() {
                        c(new Error(`Request to ${t.toLowerCase()} ${e} has timed out`))
                    }
                    ,
                    u.send(i)
                }
                ))
            }({
                win: s,
                url: t,
                method: n,
                headers: r,
                json: o
            })
        }
        )).then(kn)
    }
    function qn({url: e, prefix: t, metricNamespacePrefix: n, logLevel: r=zn, transport: o=Zn(), flushInterval: i=Kn, enableSendBeacon: a=!1}) {
        let s = []
          , l = []
          , c = [];
        const d = []
          , u = []
          , p = []
          , h = []
          , f = [];
        function m(e, t, n) {
            if (!Ln() || !window.console || !window.console.log)
                return;
            if (Hn.indexOf(e) > Hn.indexOf(r))
                return;
            const o = [t];
            o.push(n),
            (n.error || n.warning) && o.push("\n\n", n.error || n.warning);
            try {
                window.console[e] && window.console[e].apply ? window.console[e].apply(window.console, o) : window.console.log && window.console.log.apply && window.console.log.apply(window.console, o)
            } catch (e) {}
        }
        function g() {
            return nn.try(( () => {
                if (!Ln() || window.location.protocol === $n.FILE)
                    return;
                if (!s.length && !l.length && !c.length)
                    return;
                const t = {};
                for (const e of u)
                    Xn(t, e(t));
                const n = {};
                for (const e of f)
                    Xn(n, e(n));
                let r;
                return e && (r = o({
                    method: "POST",
                    url: e,
                    headers: n,
                    json: {
                        events: s,
                        meta: t,
                        tracking: l,
                        metrics: c
                    },
                    enableSendBeacon: a
                }).catch(kn)),
                s = [],
                l = [],
                c = [],
                nn.resolve(r).then(kn)
            }
            ))
        }
        const y = function(e, t=50) {
            let n, r;
            return An((function() {
                r && clearTimeout(r);
                const o = n = n || new nn;
                return r = setTimeout(( () => {
                    n = null,
                    r = null,
                    nn.try(e).then((e => {
                        o.resolve(e)
                    }
                    ), (e => {
                        o.reject(e)
                    }
                    ))
                }
                ), t),
                o
            }
            ), `${_n(e)}::promiseDebounced`)
        }(g);
        function v(e, n, r={}) {
            if (!Ln())
                return _;
            t && (n = `${t}_${n}`);
            const o = {
                ...In(r),
                timestamp: Date.now().toString()
            };
            for (const e of d)
                Xn(o, e(o));
            return function(e, t, n) {
                s.push({
                    level: e,
                    event: t,
                    payload: n
                }),
                -1 !== Vn.indexOf(e) && y()
            }(e, n, o),
            m(e, n, o),
            _
        }
        function b(e, t) {
            return e.push(t),
            _
        }
        function E(e) {
            if (!Ln())
                return _;
            n && (e.metricNamespace = `${n}.${e.metricNamespace}`),
            h.length > 0 && !e.dimensions && (e.dimensions = {});
            for (const t of h)
                Xn(e.dimensions || {}, t(e.dimensions || {}));
            return m(Gn.DEBUG, `metric.${e.metricNamespace}`, e.dimensions || {}),
            c.push(e),
            _
        }
        Ln() && function(e, t) {
            let n;
            (function r() {
                n = setTimeout(( () => {
                    e(),
                    r()
                }
                ), t)
            }
            )()
        }(y, i),
        "object" == typeof window && (window.addEventListener("beforeunload", ( () => {
            g()
        }
        )),
        window.addEventListener("unload", ( () => {
            g()
        }
        )),
        window.addEventListener("pagehide", ( () => {
            g()
        }
        )));
        const _ = {
            debug: function(e, t) {
                return v(Gn.DEBUG, e, t)
            },
            info: function(e, t) {
                return v(Gn.INFO, e, t)
            },
            warn: function(e, t) {
                return v(Gn.WARN, e, t)
            },
            error: function(e, t) {
                return v(Gn.ERROR, e, t)
            },
            track: function(e={}) {
                if (!Ln())
                    return _;
                const t = In(e);
                for (const e of p)
                    Xn(t, e(t));
                return m(Gn.DEBUG, "track", t),
                l.push(t),
                _
            },
            metric: E,
            metricCounter: function(e) {
                return E({
                    metricNamespace: e.namespace,
                    metricEventName: e.event,
                    metricValue: (t = e.value,
                    n = () => 1,
                    null != t ? t : n()),
                    metricType: "counter",
                    dimensions: e.dimensions
                });
                var t, n
            },
            metricGauge: function(e) {
                return E({
                    metricNamespace: e.namespace,
                    metricEventName: e.event,
                    metricValue: e.value,
                    metricType: "gauge",
                    dimensions: e.dimensions
                })
            },
            flush: y,
            immediateFlush: g,
            addPayloadBuilder: function(e) {
                return b(d, e)
            },
            addMetaBuilder: function(e) {
                return b(u, e)
            },
            addMetricDimensionBuilder: function(e) {
                return b(h, e)
            },
            addTrackingBuilder: function(e) {
                return b(p, e)
            },
            addHeaderBuilder: function(e) {
                return b(f, e)
            },
            setTransport: function(e) {
                return o = e,
                _
            },
            configure: function(n) {
                return n.url && (e = n.url),
                n.prefix && (t = n.prefix),
                n.logLevel && (r = n.logLevel),
                n.transport && (o = n.transport),
                n.flushInterval && (i = n.flushInterval),
                n.enableSendBeacon && (a = n.enableSendBeacon),
                _
            },
            __buffer__: {
                get events() {
                    return s
                },
                get tracking() {
                    return l
                },
                get metrics() {
                    return c
                }
            }
        };
        return Object.defineProperty(_, "__buffer__", {
            writable: !1
        }),
        _
    }
    function Jn() {
        return function(e, t, n=[]) {
            const r = e.__inline_memoize_cache__ = e.__inline_memoize_cache__ || {}
              , o = Cn(n);
            return r.hasOwnProperty(o) ? r[o] : r[o] = t(...n)
        }(Jn, ( () => {
            const e = qn({
                url: `${gt().loggerUrl}/xoplatform/logger/api/logger`,
                enableSendBeacon: !0
            });
            return e.addTrackingBuilder(( () => ({
                component: "axo_partner",
                merchant_event_source: "client",
                url: JSON.stringify({
                    domain: window.location.hostname,
                    url: window.location.href
                }),
                t: Date.now()
            }))),
            e
        }
        ))
    }
    const Qn = "pp_axo";
    const er = {
        CHECKPOINTS: {
            AUTH_FLOW_TRIGGERED: `${Qn}_auth_flow_triggered`,
            CARD_FORM_RENDERED: `${Qn}_card_form_rendered`,
            CARD_COMPONENT_INVOKED: `${Qn}_card_component_invoked`,
            CARD_FORM_INVOKED: `${Qn}_card_form_invoked`,
            CARD_SELECTOR_INVOKED: `${Qn}_card_selector_invoked`,
            CHECK_FASTLANE_ENABLED_TRIGGERED: `${Qn}_check_fastlane_enabled_triggered`,
            EMAIL_LOOKUP_START: `${Qn}_email_lookup_start`,
            FASTLANE_FETCH_INVOKED: `${Qn}_fastlane_fetch_invoked`,
            FETCH_EXPERIMENTS: `${Qn}_fetch_experiments`,
            GET_BT_CLIENT_CONFIGURATION_TRIGGERED: `${Qn}_get_bt_client_configuration_triggered`,
            PAYMENT_COMPONENT_INVOKED: `${Qn}_payment_component_invoked`,
            SDK_INIT_INVOKED: `${Qn}_sdk_init_invoked`,
            SHIPPING_ADDRESS_FORM_RENDERED: `${Qn}_shipping_address_form_rendered`,
            SHIPPING_ADDRESS_FORM_INVOKED: `${Qn}_shipping_address_form_invoked`,
            SHIPPING_ADDRESS_SELECTOR_INVOKED: `${Qn}_shipping_address_selector_invoked`,
            TOKENIZE_ATTEMPTED: `${Qn}_tokenize_attempted`,
            WORLD_READY_LOAD_METADATA_TRIGGERED: `${Qn}_world_ready_load_metadata_triggered`
        },
        setCheckpoint: function(e) {
            performance.mark(e)
        },
        getTimeElapsedSinceCheckpoint: function(e) {
            const t = $t();
            try {
                if (!performance.getEntriesByName(e).length)
                    return "";
                const t = `time_since_${e}`
                  , n = performance.measure(t, e);
                if (!n || !n.duration) {
                    const e = performance.getEntriesByName(t)
                      , n = e.length && e[e.length - 1];
                    return n ? String(n.duration) : ""
                }
                return String(n.duration)
            } catch (n) {
                return t.track({
                    event_name: "axo_sdk_error",
                    event_type: "im",
                    int_error_code: "PERFORMANCE_MEASURE_ERROR",
                    int_error_desc: `error measuring ${e}: ` + (null == n ? void 0 : n.message)
                }),
                ""
            }
        }
    };
    function tr(e) {
        return function(e) {
            return !("object" != typeof e || null === e || Array.isArray(e) || e.hasOwnProperty("timeout") && "number" != typeof e.timeout && "boolean" != typeof e.timeout)
        }(e) && "function" == typeof e.responseValidationFunction && (!e.hasOwnProperty("filterInvalidData") || "boolean" == typeof e.filterInvalidData)
    }
    async function nr(e, t) {
        const n = $t()
          , {timeout: r=!1} = t || {}
          , o = it.get("untilPortalReady")
          , i = e.toString()
          , a = `${er.CHECKPOINTS.FASTLANE_FETCH_INVOKED}_${i}`;
        let s, l;
        if (er.setCheckpoint(a),
        o && await o,
        t) {
            let e;
            if (e = tr(t) ? Wt(t, ["timeout", "responseValidationFunction", "filterInvalidData"]) : Wt(t, ["timeout"]),
            t.hasOwnProperty("body") && t.body) {
                if ("string" != typeof t.body)
                    throw new Error("body must be a string");
                l = Object.assign(Object.assign({}, e), {
                    body: t.body
                })
            } else
                l = Wt(e, ["body"]);
            0 === Object.keys(l).length && (l = void 0)
        }
        if (r) {
            const e = {
                timeout: !0 === r ? void 0 : r,
                resourceName: i
            };
            s = l ? await Vt(( () => He(i, l)), e) : await Vt(( () => He(i)), e)
        } else
            s = l ? await He(i, l) : await He(i);
        if (t && t.hasOwnProperty("responseValidationFunction")) {
            const {filterInvalidData: e=!1, responseValidationFunction: r} = t;
            if (r) {
                const t = await s.json();
                if (!r(t)) {
                    if (e) {
                        const e = function(e, t) {
                            const n = JSON.parse(JSON.stringify(e))
                              , r = $t()
                              , {customerProfileData: o} = n;
                            if (o) {
                                const e = {
                                    addresses: new Set,
                                    payment_tokens: new Set
                                };
                                null == t || t.forEach((t => {
                                    const [,n,r,o] = t.instancePath.split("/");
                                    if ("customerProfileData" !== n || !e[r])
                                        throw new Error("encountered error that should not be ignored");
                                    e[r].add(o)
                                }
                                )),
                                e.addresses.size > 0 && r.warn("axo_sdk_profile_data_invalid_addresses", e.addresses.size),
                                e.payment_tokens.size > 0 && r.warn("axo_sdk_profile_data_invalid_payment_tokens", e.payment_tokens.size);
                                for (const t of Object.keys(e)) {
                                    const n = e[t]
                                      , r = o[t];
                                    n.size > 0 && Array.isArray(r) && (o[t] = r.filter(( (e, t) => !n.has(String(t)))))
                                }
                            }
                            return n
                        }(t, r.errors);
                        return n.track({
                            event_name: "axo_fastlane_fetch_filtered_data_occurred",
                            duration: er.getTimeElapsedSinceCheckpoint(a),
                            int_error_desc: JSON.stringify(r.errors),
                            url_path: i
                        }),
                        Kt(e, s.status)
                    }
                    return n.track({
                        event_name: "axo_fastlane_fetch_validation_error_occurred",
                        duration: er.getTimeElapsedSinceCheckpoint(a),
                        int_error_desc: JSON.stringify(r.errors),
                        url_path: i
                    }),
                    Kt({
                        errors: r.errors
                    }, zt.SERVICE_UNAVAILABLE)
                }
                return n.track({
                    event_name: "axo_fastlane_fetch_completed",
                    duration: er.getTimeElapsedSinceCheckpoint(a),
                    url_path: i
                }),
                Kt(t, s.status)
            }
        }
        return s
    }
    function rr(e, {instancePath: t="", parentData: n, parentDataProperty: r, rootData: o=e}={}) {
        let i = null
          , a = 0;
        if (e && "object" == typeof e && !Array.isArray(e)) {
            if (void 0 !== e.id) {
                let n = e.id;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/id",
                        schemaPath: "#/properties/id/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.ctxId) {
                let n = e.ctxId;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/ctxId",
                        schemaPath: "#/properties/ctxId/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.type) {
                let n = e.type;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/type",
                        schemaPath: "#/properties/type/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.country) {
                let n = e.country;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/country",
                        schemaPath: "#/properties/country/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.status) {
                let n = e.status;
                if (("number" != typeof n || !isFinite(n)) && null !== n) {
                    const e = {
                        instancePath: t + "/status",
                        schemaPath: "#/properties/status/type",
                        keyword: "type",
                        params: {
                            type: "number"
                        },
                        message: "must be number"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.r) {
                let n = e.r;
                if (("number" != typeof n || !isFinite(n)) && null !== n) {
                    const e = {
                        instancePath: t + "/r",
                        schemaPath: "#/properties/r/type",
                        keyword: "type",
                        params: {
                            type: "number"
                        },
                        message: "must be number"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.c) {
                let n = e.c;
                if (("number" != typeof n || !isFinite(n)) && null !== n) {
                    const e = {
                        instancePath: t + "/c",
                        schemaPath: "#/properties/c/type",
                        keyword: "type",
                        params: {
                            type: "number"
                        },
                        message: "must be number"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
        } else {
            const e = {
                instancePath: t,
                schemaPath: "#/type",
                keyword: "type",
                params: {
                    type: "object"
                },
                message: "must be object"
            };
            null === i ? i = [e] : i.push(e),
            a++
        }
        return rr.errors = i,
        0 === a
    }
    function or(e, {instancePath: t="", parentData: n, parentDataProperty: r, rootData: o=e}={}) {
        let i = null
          , a = 0;
        if (e && "object" == typeof e && !Array.isArray(e)) {
            if (void 0 === e.challenges) {
                const e = {
                    instancePath: t,
                    schemaPath: "#/required",
                    keyword: "required",
                    params: {
                        missingProperty: "challenges"
                    },
                    message: "must have required property 'challenges'"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
            if (void 0 === e.nonce) {
                const e = {
                    instancePath: t,
                    schemaPath: "#/required",
                    keyword: "required",
                    params: {
                        missingProperty: "nonce"
                    },
                    message: "must have required property 'nonce'"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
            if (void 0 !== e.challenges) {
                let n = e.challenges;
                if (Array.isArray(n)) {
                    const e = n.length;
                    for (let r = 0; r < e; r++) {
                        let e = n[r];
                        if (e && "object" == typeof e && !Array.isArray(e)) {
                            if (void 0 === e.challenge_data) {
                                const e = {
                                    instancePath: t + "/challenges/" + r,
                                    schemaPath: "#/properties/challenges/items/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "challenge_data"
                                    },
                                    message: "must have required property 'challenge_data'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 === e.challenge_type) {
                                const e = {
                                    instancePath: t + "/challenges/" + r,
                                    schemaPath: "#/properties/challenges/items/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "challenge_type"
                                    },
                                    message: "must have required property 'challenge_type'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.challenge_data) {
                                let n = e.challenge_data;
                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                    if (void 0 === n.phones) {
                                        const e = {
                                            instancePath: t + "/challenges/" + r + "/challenge_data",
                                            schemaPath: "#/properties/challenges/items/properties/challenge_data/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "phones"
                                            },
                                            message: "must have required property 'phones'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.phones) {
                                        let e = n.phones;
                                        if (Array.isArray(e)) {
                                            const n = e.length;
                                            for (let o = 0; o < n; o++) {
                                                let n = e[o];
                                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                                    if (void 0 === n.challenge_id) {
                                                        const e = {
                                                            instancePath: t + "/challenges/" + r + "/challenge_data/phones/" + o,
                                                            schemaPath: "#/properties/challenges/items/properties/challenge_data/properties/phones/items/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "challenge_id"
                                                            },
                                                            message: "must have required property 'challenge_id'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 === n.masked_phone_number) {
                                                        const e = {
                                                            instancePath: t + "/challenges/" + r + "/challenge_data/phones/" + o,
                                                            schemaPath: "#/properties/challenges/items/properties/challenge_data/properties/phones/items/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "masked_phone_number"
                                                            },
                                                            message: "must have required property 'masked_phone_number'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.challenge_id && "string" != typeof n.challenge_id) {
                                                        const e = {
                                                            instancePath: t + "/challenges/" + r + "/challenge_data/phones/" + o + "/challenge_id",
                                                            schemaPath: "#/properties/challenges/items/properties/challenge_data/properties/phones/items/properties/challenge_id/type",
                                                            keyword: "type",
                                                            params: {
                                                                type: "string"
                                                            },
                                                            message: "must be string"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.masked_phone_number && "string" != typeof n.masked_phone_number) {
                                                        const e = {
                                                            instancePath: t + "/challenges/" + r + "/challenge_data/phones/" + o + "/masked_phone_number",
                                                            schemaPath: "#/properties/challenges/items/properties/challenge_data/properties/phones/items/properties/masked_phone_number/type",
                                                            keyword: "type",
                                                            params: {
                                                                type: "string"
                                                            },
                                                            message: "must be string"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.notified) {
                                                        let e = n.notified;
                                                        if ("boolean" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/challenges/" + r + "/challenge_data/phones/" + o + "/notified",
                                                                schemaPath: "#/properties/challenges/items/properties/challenge_data/properties/phones/items/properties/notified/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "boolean"
                                                                },
                                                                message: "must be boolean"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                } else {
                                                    const e = {
                                                        instancePath: t + "/challenges/" + r + "/challenge_data/phones/" + o,
                                                        schemaPath: "#/properties/challenges/items/properties/challenge_data/properties/phones/items/type",
                                                        keyword: "type",
                                                        params: {
                                                            type: "object"
                                                        },
                                                        message: "must be object"
                                                    };
                                                    null === i ? i = [e] : i.push(e),
                                                    a++
                                                }
                                            }
                                        } else {
                                            const e = {
                                                instancePath: t + "/challenges/" + r + "/challenge_data/phones",
                                                schemaPath: "#/properties/challenges/items/properties/challenge_data/properties/phones/type",
                                                keyword: "type",
                                                params: {
                                                    type: "array"
                                                },
                                                message: "must be array"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                } else {
                                    const e = {
                                        instancePath: t + "/challenges/" + r + "/challenge_data",
                                        schemaPath: "#/properties/challenges/items/properties/challenge_data/type",
                                        keyword: "type",
                                        params: {
                                            type: "object"
                                        },
                                        message: "must be object"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                            if (void 0 !== e.challenge_type && "string" != typeof e.challenge_type) {
                                const e = {
                                    instancePath: t + "/challenges/" + r + "/challenge_type",
                                    schemaPath: "#/properties/challenges/items/properties/challenge_type/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                        } else {
                            const e = {
                                instancePath: t + "/challenges/" + r,
                                schemaPath: "#/properties/challenges/items/type",
                                keyword: "type",
                                params: {
                                    type: "object"
                                },
                                message: "must be object"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                } else {
                    const e = {
                        instancePath: t + "/challenges",
                        schemaPath: "#/properties/challenges/type",
                        keyword: "type",
                        params: {
                            type: "array"
                        },
                        message: "must be array"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.nonce && "string" != typeof e.nonce) {
                const e = {
                    instancePath: t + "/nonce",
                    schemaPath: "#/properties/nonce/type",
                    keyword: "type",
                    params: {
                        type: "string"
                    },
                    message: "must be string"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
        } else {
            const e = {
                instancePath: t,
                schemaPath: "#/type",
                keyword: "type",
                params: {
                    type: "object"
                },
                message: "must be object"
            };
            null === i ? i = [e] : i.push(e),
            a++
        }
        return or.errors = i,
        0 === a
    }
    function ir(e, {instancePath: t="", parentData: n, parentDataProperty: r, rootData: o=e}={}) {
        let i = null
          , a = 0;
        if (e && "object" == typeof e && !Array.isArray(e)) {
            if (void 0 === e.status) {
                const e = {
                    instancePath: t,
                    schemaPath: "#/required",
                    keyword: "required",
                    params: {
                        missingProperty: "status"
                    },
                    message: "must have required property 'status'"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
            if (void 0 === e.nonce) {
                const e = {
                    instancePath: t,
                    schemaPath: "#/required",
                    keyword: "required",
                    params: {
                        missingProperty: "nonce"
                    },
                    message: "must have required property 'nonce'"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
            if (void 0 !== e.status && "string" != typeof e.status) {
                const e = {
                    instancePath: t + "/status",
                    schemaPath: "#/properties/status/type",
                    keyword: "type",
                    params: {
                        type: "string"
                    },
                    message: "must be string"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
            if (void 0 !== e.nonce && "string" != typeof e.nonce) {
                const e = {
                    instancePath: t + "/nonce",
                    schemaPath: "#/properties/nonce/type",
                    keyword: "type",
                    params: {
                        type: "string"
                    },
                    message: "must be string"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
        } else {
            const e = {
                instancePath: t,
                schemaPath: "#/type",
                keyword: "type",
                params: {
                    type: "object"
                },
                message: "must be object"
            };
            null === i ? i = [e] : i.push(e),
            a++
        }
        return ir.errors = i,
        0 === a
    }
    function ar(e, {instancePath: t="", parentData: n, parentDataProperty: r, rootData: o=e}={}) {
        let i = null
          , a = 0;
        if (e && "object" == typeof e && !Array.isArray(e)) {
            if (void 0 === e.customerProfileData) {
                const e = {
                    instancePath: t,
                    schemaPath: "#/required",
                    keyword: "required",
                    params: {
                        missingProperty: "customerProfileData"
                    },
                    message: "must have required property 'customerProfileData'"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
            if (void 0 !== e.accessToken) {
                let n = e.accessToken;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/accessToken",
                        schemaPath: "#/properties/accessToken/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.customerProfileData) {
                let n = e.customerProfileData;
                if (n && "object" == typeof n && !Array.isArray(n)) {
                    if (void 0 !== n.addresses) {
                        let e = n.addresses;
                        if (!Array.isArray(e) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/addresses",
                                schemaPath: "#/properties/customerProfileData/properties/addresses/type",
                                keyword: "type",
                                params: {
                                    type: "array"
                                },
                                message: "must be array"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (Array.isArray(e)) {
                            const n = e.length;
                            for (let r = 0; r < n; r++) {
                                let n = e[r];
                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                    if (void 0 === n.address_line_1) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "address_line_1"
                                            },
                                            message: "must have required property 'address_line_1'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 === n.admin_area_2) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "admin_area_2"
                                            },
                                            message: "must have required property 'admin_area_2'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 === n.country_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "country_code"
                                            },
                                            message: "must have required property 'country_code'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 === n.postal_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "postal_code"
                                            },
                                            message: "must have required property 'postal_code'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.address_line_1 && "string" != typeof n.address_line_1) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r + "/address_line_1",
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/address_line_1/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.address_line_2) {
                                        let e = n.address_line_2;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/address_line_2",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/address_line_2/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.admin_area_1) {
                                        let e = n.admin_area_1;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/admin_area_1",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/admin_area_1/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.admin_area_2 && "string" != typeof n.admin_area_2) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r + "/admin_area_2",
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/admin_area_2/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.company) {
                                        let e = n.company;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/company",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/company/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.country_code && "string" != typeof n.country_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r + "/country_code",
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/country_code/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.id) {
                                        let e = n.id;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/id",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/id/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.is_default_Address) {
                                        let e = n.is_default_Address;
                                        if ("boolean" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/is_default_Address",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/is_default_Address/type",
                                                keyword: "type",
                                                params: {
                                                    type: "boolean"
                                                },
                                                message: "must be boolean"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.links) {
                                        let e = n.links;
                                        if (!Array.isArray(e) && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/type",
                                                keyword: "type",
                                                params: {
                                                    type: "array"
                                                },
                                                message: "must be array"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                        if (Array.isArray(e)) {
                                            const n = e.length;
                                            for (let o = 0; o < n; o++) {
                                                let n = e[o];
                                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                                    if (void 0 !== n.encType) {
                                                        let e = n.encType;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o + "/encType",
                                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/properties/encType/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                    if (void 0 !== n.href) {
                                                        let e = n.href;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o + "/href",
                                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/properties/href/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                    if (void 0 !== n.method) {
                                                        let e = n.method;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o + "/method",
                                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/properties/method/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                    if (void 0 !== n.rel) {
                                                        let e = n.rel;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o + "/rel",
                                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/properties/rel/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                } else {
                                                    const e = {
                                                        instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o,
                                                        schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/type",
                                                        keyword: "type",
                                                        params: {
                                                            type: "object"
                                                        },
                                                        message: "must be object"
                                                    };
                                                    null === i ? i = [e] : i.push(e),
                                                    a++
                                                }
                                            }
                                        }
                                    }
                                    if (void 0 !== n.postal_code && "string" != typeof n.postal_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r + "/postal_code",
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/postal_code/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.preferred) {
                                        let e = n.preferred;
                                        if ("boolean" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/preferred",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/preferred/type",
                                                keyword: "type",
                                                params: {
                                                    type: "boolean"
                                                },
                                                message: "must be boolean"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                } else {
                                    const e = {
                                        instancePath: t + "/customerProfileData/addresses/" + r,
                                        schemaPath: "#/properties/customerProfileData/properties/addresses/items/type",
                                        keyword: "type",
                                        params: {
                                            type: "object"
                                        },
                                        message: "must be object"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                        }
                    }
                    if (void 0 !== n.create_time) {
                        let e = n.create_time;
                        if ("string" != typeof e && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/create_time",
                                schemaPath: "#/properties/customerProfileData/properties/create_time/type",
                                keyword: "type",
                                params: {
                                    type: "string"
                                },
                                message: "must be string"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                    if (void 0 !== n.email) {
                        let e = n.email;
                        if ("string" != typeof e && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/email",
                                schemaPath: "#/properties/customerProfileData/properties/email/type",
                                keyword: "type",
                                params: {
                                    type: "string"
                                },
                                message: "must be string"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                    if (void 0 !== n.id) {
                        let e = n.id;
                        if ("string" != typeof e && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/id",
                                schemaPath: "#/properties/customerProfileData/properties/id/type",
                                keyword: "type",
                                params: {
                                    type: "string"
                                },
                                message: "must be string"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                    if (void 0 !== n.id_token) {
                        let e = n.id_token;
                        if ("string" != typeof e && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/id_token",
                                schemaPath: "#/properties/customerProfileData/properties/id_token/type",
                                keyword: "type",
                                params: {
                                    type: "string"
                                },
                                message: "must be string"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                    if (void 0 !== n.links) {
                        let e = n.links;
                        if (!Array.isArray(e) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/links",
                                schemaPath: "#/properties/customerProfileData/properties/links/type",
                                keyword: "type",
                                params: {
                                    type: "array"
                                },
                                message: "must be array"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (Array.isArray(e)) {
                            const n = e.length;
                            for (let r = 0; r < n; r++) {
                                let n = e[r];
                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                    if (void 0 !== n.encType) {
                                        let e = n.encType;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/links/" + r + "/encType",
                                                schemaPath: "#/properties/customerProfileData/properties/links/items/properties/encType/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.href) {
                                        let e = n.href;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/links/" + r + "/href",
                                                schemaPath: "#/properties/customerProfileData/properties/links/items/properties/href/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.method) {
                                        let e = n.method;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/links/" + r + "/method",
                                                schemaPath: "#/properties/customerProfileData/properties/links/items/properties/method/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.rel) {
                                        let e = n.rel;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/links/" + r + "/rel",
                                                schemaPath: "#/properties/customerProfileData/properties/links/items/properties/rel/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                } else {
                                    const e = {
                                        instancePath: t + "/customerProfileData/links/" + r,
                                        schemaPath: "#/properties/customerProfileData/properties/links/items/type",
                                        keyword: "type",
                                        params: {
                                            type: "object"
                                        },
                                        message: "must be object"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                        }
                    }
                    if (void 0 !== n.name) {
                        let e = n.name;
                        if ((!e || "object" != typeof e || Array.isArray(e)) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/name",
                                schemaPath: "#/properties/customerProfileData/properties/name/type",
                                keyword: "type",
                                params: {
                                    type: "object"
                                },
                                message: "must be object"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (e && "object" == typeof e && !Array.isArray(e)) {
                            if (void 0 !== e.given_name) {
                                let n = e.given_name;
                                if ("string" != typeof n && null !== n) {
                                    const e = {
                                        instancePath: t + "/customerProfileData/name/given_name",
                                        schemaPath: "#/properties/customerProfileData/properties/name/properties/given_name/type",
                                        keyword: "type",
                                        params: {
                                            type: "string"
                                        },
                                        message: "must be string"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                            if (void 0 !== e.surname) {
                                let n = e.surname;
                                if ("string" != typeof n && null !== n) {
                                    const e = {
                                        instancePath: t + "/customerProfileData/name/surname",
                                        schemaPath: "#/properties/customerProfileData/properties/name/properties/surname/type",
                                        keyword: "type",
                                        params: {
                                            type: "string"
                                        },
                                        message: "must be string"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                        }
                    }
                    if (void 0 !== n.payment_tokens) {
                        let e = n.payment_tokens;
                        if (!Array.isArray(e) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/payment_tokens",
                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/type",
                                keyword: "type",
                                params: {
                                    type: "array"
                                },
                                message: "must be array"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (Array.isArray(e)) {
                            const n = e.length;
                            for (let r = 0; r < n; r++) {
                                let n = e[r];
                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                    if (void 0 === n.payment_source) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/payment_tokens/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "payment_source"
                                            },
                                            message: "must have required property 'payment_source'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.id) {
                                        let e = n.id;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/id",
                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/id/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.payment_source) {
                                        let e = n.payment_source;
                                        if (e && "object" == typeof e && !Array.isArray(e)) {
                                            if (void 0 === e.card) {
                                                const e = {
                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source",
                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/required",
                                                    keyword: "required",
                                                    params: {
                                                        missingProperty: "card"
                                                    },
                                                    message: "must have required property 'card'"
                                                };
                                                null === i ? i = [e] : i.push(e),
                                                a++
                                            }
                                            if (void 0 !== e.card) {
                                                let n = e.card;
                                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                                    if (void 0 === n.billing_address) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "billing_address"
                                                            },
                                                            message: "must have required property 'billing_address'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 === n.brand) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "brand"
                                                            },
                                                            message: "must have required property 'brand'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 === n.expiry) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "expiry"
                                                            },
                                                            message: "must have required property 'expiry'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 === n.last_digits) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "last_digits"
                                                            },
                                                            message: "must have required property 'last_digits'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.billing_address) {
                                                        let e = n.billing_address;
                                                        if (e && "object" == typeof e && !Array.isArray(e)) {
                                                            if (void 0 === e.address_line_1) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/required",
                                                                    keyword: "required",
                                                                    params: {
                                                                        missingProperty: "address_line_1"
                                                                    },
                                                                    message: "must have required property 'address_line_1'"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 === e.admin_area_2) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/required",
                                                                    keyword: "required",
                                                                    params: {
                                                                        missingProperty: "admin_area_2"
                                                                    },
                                                                    message: "must have required property 'admin_area_2'"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 === e.country_code) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/required",
                                                                    keyword: "required",
                                                                    params: {
                                                                        missingProperty: "country_code"
                                                                    },
                                                                    message: "must have required property 'country_code'"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 === e.postal_code) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/required",
                                                                    keyword: "required",
                                                                    params: {
                                                                        missingProperty: "postal_code"
                                                                    },
                                                                    message: "must have required property 'postal_code'"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.address_line_1 && "string" != typeof e.address_line_1) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/address_line_1",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/address_line_1/type",
                                                                    keyword: "type",
                                                                    params: {
                                                                        type: "string"
                                                                    },
                                                                    message: "must be string"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.address_line_2) {
                                                                let n = e.address_line_2;
                                                                if ("string" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/address_line_2",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/address_line_2/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "string"
                                                                        },
                                                                        message: "must be string"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.admin_area_1) {
                                                                let n = e.admin_area_1;
                                                                if ("string" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/admin_area_1",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/admin_area_1/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "string"
                                                                        },
                                                                        message: "must be string"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.admin_area_2 && "string" != typeof e.admin_area_2) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/admin_area_2",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/admin_area_2/type",
                                                                    keyword: "type",
                                                                    params: {
                                                                        type: "string"
                                                                    },
                                                                    message: "must be string"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.company) {
                                                                let n = e.company;
                                                                if ("string" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/company",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/company/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "string"
                                                                        },
                                                                        message: "must be string"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.country_code && "string" != typeof e.country_code) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/country_code",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/country_code/type",
                                                                    keyword: "type",
                                                                    params: {
                                                                        type: "string"
                                                                    },
                                                                    message: "must be string"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.id) {
                                                                let n = e.id;
                                                                if ("string" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/id",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/id/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "string"
                                                                        },
                                                                        message: "must be string"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.is_default_Address) {
                                                                let n = e.is_default_Address;
                                                                if ("boolean" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/is_default_Address",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/is_default_Address/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "boolean"
                                                                        },
                                                                        message: "must be boolean"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.links) {
                                                                let n = e.links;
                                                                if (!Array.isArray(n) && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "array"
                                                                        },
                                                                        message: "must be array"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                                if (Array.isArray(n)) {
                                                                    const e = n.length;
                                                                    for (let o = 0; o < e; o++) {
                                                                        let e = n[o];
                                                                        if (e && "object" == typeof e && !Array.isArray(e)) {
                                                                            if (void 0 !== e.encType) {
                                                                                let n = e.encType;
                                                                                if ("string" != typeof n && null !== n) {
                                                                                    const e = {
                                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o + "/encType",
                                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/properties/encType/type",
                                                                                        keyword: "type",
                                                                                        params: {
                                                                                            type: "string"
                                                                                        },
                                                                                        message: "must be string"
                                                                                    };
                                                                                    null === i ? i = [e] : i.push(e),
                                                                                    a++
                                                                                }
                                                                            }
                                                                            if (void 0 !== e.href) {
                                                                                let n = e.href;
                                                                                if ("string" != typeof n && null !== n) {
                                                                                    const e = {
                                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o + "/href",
                                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/properties/href/type",
                                                                                        keyword: "type",
                                                                                        params: {
                                                                                            type: "string"
                                                                                        },
                                                                                        message: "must be string"
                                                                                    };
                                                                                    null === i ? i = [e] : i.push(e),
                                                                                    a++
                                                                                }
                                                                            }
                                                                            if (void 0 !== e.method) {
                                                                                let n = e.method;
                                                                                if ("string" != typeof n && null !== n) {
                                                                                    const e = {
                                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o + "/method",
                                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/properties/method/type",
                                                                                        keyword: "type",
                                                                                        params: {
                                                                                            type: "string"
                                                                                        },
                                                                                        message: "must be string"
                                                                                    };
                                                                                    null === i ? i = [e] : i.push(e),
                                                                                    a++
                                                                                }
                                                                            }
                                                                            if (void 0 !== e.rel) {
                                                                                let n = e.rel;
                                                                                if ("string" != typeof n && null !== n) {
                                                                                    const e = {
                                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o + "/rel",
                                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/properties/rel/type",
                                                                                        keyword: "type",
                                                                                        params: {
                                                                                            type: "string"
                                                                                        },
                                                                                        message: "must be string"
                                                                                    };
                                                                                    null === i ? i = [e] : i.push(e),
                                                                                    a++
                                                                                }
                                                                            }
                                                                        } else {
                                                                            const e = {
                                                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o,
                                                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/type",
                                                                                keyword: "type",
                                                                                params: {
                                                                                    type: "object"
                                                                                },
                                                                                message: "must be object"
                                                                            };
                                                                            null === i ? i = [e] : i.push(e),
                                                                            a++
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            if (void 0 !== e.postal_code && "string" != typeof e.postal_code) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/postal_code",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/postal_code/type",
                                                                    keyword: "type",
                                                                    params: {
                                                                        type: "string"
                                                                    },
                                                                    message: "must be string"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.preferred) {
                                                                let n = e.preferred;
                                                                if ("boolean" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/preferred",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/preferred/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "boolean"
                                                                        },
                                                                        message: "must be boolean"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                        } else {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "object"
                                                                },
                                                                message: "must be object"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                    if (void 0 !== n.brand && "string" != typeof n.brand) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/brand",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/brand/type",
                                                            keyword: "type",
                                                            params: {
                                                                type: "string"
                                                            },
                                                            message: "must be string"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.expiry && "string" != typeof n.expiry) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/expiry",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/expiry/type",
                                                            keyword: "type",
                                                            params: {
                                                                type: "string"
                                                            },
                                                            message: "must be string"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.last_digits && "string" != typeof n.last_digits) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/last_digits",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/last_digits/type",
                                                            keyword: "type",
                                                            params: {
                                                                type: "string"
                                                            },
                                                            message: "must be string"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.name) {
                                                        let e = n.name;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/name",
                                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/name/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                } else {
                                                    const e = {
                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/type",
                                                        keyword: "type",
                                                        params: {
                                                            type: "object"
                                                        },
                                                        message: "must be object"
                                                    };
                                                    null === i ? i = [e] : i.push(e),
                                                    a++
                                                }
                                            }
                                        } else {
                                            const e = {
                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source",
                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/type",
                                                keyword: "type",
                                                params: {
                                                    type: "object"
                                                },
                                                message: "must be object"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                } else {
                                    const e = {
                                        instancePath: t + "/customerProfileData/payment_tokens/" + r,
                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/type",
                                        keyword: "type",
                                        params: {
                                            type: "object"
                                        },
                                        message: "must be object"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                        }
                    }
                    if (void 0 !== n.phones) {
                        let e = n.phones;
                        if (!Array.isArray(e) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/phones",
                                schemaPath: "#/properties/customerProfileData/properties/phones/type",
                                keyword: "type",
                                params: {
                                    type: "array"
                                },
                                message: "must be array"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (Array.isArray(e)) {
                            const n = e.length;
                            for (let r = 0; r < n; r++) {
                                let n = e[r];
                                if ((!n || "object" != typeof n || Array.isArray(n)) && null !== n) {
                                    const e = {
                                        instancePath: t + "/customerProfileData/phones/" + r,
                                        schemaPath: "#/properties/customerProfileData/properties/phones/items/type",
                                        keyword: "type",
                                        params: {
                                            type: "object"
                                        },
                                        message: "must be object"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                    if (void 0 === n.country_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/phones/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/phones/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "country_code"
                                            },
                                            message: "must have required property 'country_code'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 === n.national_number) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/phones/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/phones/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "national_number"
                                            },
                                            message: "must have required property 'national_number'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.country_code && "string" != typeof n.country_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/phones/" + r + "/country_code",
                                            schemaPath: "#/properties/customerProfileData/properties/phones/items/properties/country_code/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.national_number && "string" != typeof n.national_number) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/phones/" + r + "/national_number",
                                            schemaPath: "#/properties/customerProfileData/properties/phones/items/properties/national_number/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                }
                            }
                        }
                    }
                } else {
                    const e = {
                        instancePath: t + "/customerProfileData",
                        schemaPath: "#/properties/customerProfileData/type",
                        keyword: "type",
                        params: {
                            type: "object"
                        },
                        message: "must be object"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.targetAuthAssertion) {
                let n = e.targetAuthAssertion;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/targetAuthAssertion",
                        schemaPath: "#/properties/targetAuthAssertion/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.error) {
                let n = e.error;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/error",
                        schemaPath: "#/properties/error/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.error_description) {
                let n = e.error_description;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/error_description",
                        schemaPath: "#/properties/error_description/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
        } else {
            const e = {
                instancePath: t,
                schemaPath: "#/type",
                keyword: "type",
                params: {
                    type: "object"
                },
                message: "must be object"
            };
            null === i ? i = [e] : i.push(e),
            a++
        }
        return ar.errors = i,
        0 === a
    }
    function sr(e, {instancePath: t="", parentData: n, parentDataProperty: r, rootData: o=e}={}) {
        let i = null
          , a = 0;
        if (e && "object" == typeof e && !Array.isArray(e)) {
            if (void 0 === e.customerProfileData) {
                const e = {
                    instancePath: t,
                    schemaPath: "#/required",
                    keyword: "required",
                    params: {
                        missingProperty: "customerProfileData"
                    },
                    message: "must have required property 'customerProfileData'"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
            if (void 0 !== e.customerProfileData) {
                let n = e.customerProfileData;
                if (n && "object" == typeof n && !Array.isArray(n)) {
                    if (void 0 !== n.addresses) {
                        let e = n.addresses;
                        if (!Array.isArray(e) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/addresses",
                                schemaPath: "#/properties/customerProfileData/properties/addresses/type",
                                keyword: "type",
                                params: {
                                    type: "array"
                                },
                                message: "must be array"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (Array.isArray(e)) {
                            const n = e.length;
                            for (let r = 0; r < n; r++) {
                                let n = e[r];
                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                    if (void 0 === n.address_line_1) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "address_line_1"
                                            },
                                            message: "must have required property 'address_line_1'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 === n.admin_area_2) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "admin_area_2"
                                            },
                                            message: "must have required property 'admin_area_2'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 === n.country_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "country_code"
                                            },
                                            message: "must have required property 'country_code'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 === n.postal_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "postal_code"
                                            },
                                            message: "must have required property 'postal_code'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.address_line_1 && "string" != typeof n.address_line_1) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r + "/address_line_1",
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/address_line_1/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.address_line_2) {
                                        let e = n.address_line_2;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/address_line_2",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/address_line_2/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.admin_area_1) {
                                        let e = n.admin_area_1;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/admin_area_1",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/admin_area_1/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.admin_area_2 && "string" != typeof n.admin_area_2) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r + "/admin_area_2",
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/admin_area_2/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.company) {
                                        let e = n.company;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/company",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/company/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.country_code && "string" != typeof n.country_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r + "/country_code",
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/country_code/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.id) {
                                        let e = n.id;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/id",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/id/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.is_default_Address) {
                                        let e = n.is_default_Address;
                                        if ("boolean" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/is_default_Address",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/is_default_Address/type",
                                                keyword: "type",
                                                params: {
                                                    type: "boolean"
                                                },
                                                message: "must be boolean"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.links) {
                                        let e = n.links;
                                        if (!Array.isArray(e) && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/type",
                                                keyword: "type",
                                                params: {
                                                    type: "array"
                                                },
                                                message: "must be array"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                        if (Array.isArray(e)) {
                                            const n = e.length;
                                            for (let o = 0; o < n; o++) {
                                                let n = e[o];
                                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                                    if (void 0 !== n.encType) {
                                                        let e = n.encType;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o + "/encType",
                                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/properties/encType/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                    if (void 0 !== n.href) {
                                                        let e = n.href;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o + "/href",
                                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/properties/href/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                    if (void 0 !== n.method) {
                                                        let e = n.method;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o + "/method",
                                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/properties/method/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                    if (void 0 !== n.rel) {
                                                        let e = n.rel;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o + "/rel",
                                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/properties/rel/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                } else {
                                                    const e = {
                                                        instancePath: t + "/customerProfileData/addresses/" + r + "/links/" + o,
                                                        schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/links/items/type",
                                                        keyword: "type",
                                                        params: {
                                                            type: "object"
                                                        },
                                                        message: "must be object"
                                                    };
                                                    null === i ? i = [e] : i.push(e),
                                                    a++
                                                }
                                            }
                                        }
                                    }
                                    if (void 0 !== n.postal_code && "string" != typeof n.postal_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/addresses/" + r + "/postal_code",
                                            schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/postal_code/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.preferred) {
                                        let e = n.preferred;
                                        if ("boolean" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/addresses/" + r + "/preferred",
                                                schemaPath: "#/properties/customerProfileData/properties/addresses/items/properties/preferred/type",
                                                keyword: "type",
                                                params: {
                                                    type: "boolean"
                                                },
                                                message: "must be boolean"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                } else {
                                    const e = {
                                        instancePath: t + "/customerProfileData/addresses/" + r,
                                        schemaPath: "#/properties/customerProfileData/properties/addresses/items/type",
                                        keyword: "type",
                                        params: {
                                            type: "object"
                                        },
                                        message: "must be object"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                        }
                    }
                    if (void 0 !== n.create_time) {
                        let e = n.create_time;
                        if ("string" != typeof e && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/create_time",
                                schemaPath: "#/properties/customerProfileData/properties/create_time/type",
                                keyword: "type",
                                params: {
                                    type: "string"
                                },
                                message: "must be string"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                    if (void 0 !== n.email) {
                        let e = n.email;
                        if ("string" != typeof e && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/email",
                                schemaPath: "#/properties/customerProfileData/properties/email/type",
                                keyword: "type",
                                params: {
                                    type: "string"
                                },
                                message: "must be string"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                    if (void 0 !== n.id) {
                        let e = n.id;
                        if ("string" != typeof e && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/id",
                                schemaPath: "#/properties/customerProfileData/properties/id/type",
                                keyword: "type",
                                params: {
                                    type: "string"
                                },
                                message: "must be string"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                    if (void 0 !== n.id_token) {
                        let e = n.id_token;
                        if ("string" != typeof e && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/id_token",
                                schemaPath: "#/properties/customerProfileData/properties/id_token/type",
                                keyword: "type",
                                params: {
                                    type: "string"
                                },
                                message: "must be string"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                    if (void 0 !== n.links) {
                        let e = n.links;
                        if (!Array.isArray(e) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/links",
                                schemaPath: "#/properties/customerProfileData/properties/links/type",
                                keyword: "type",
                                params: {
                                    type: "array"
                                },
                                message: "must be array"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (Array.isArray(e)) {
                            const n = e.length;
                            for (let r = 0; r < n; r++) {
                                let n = e[r];
                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                    if (void 0 !== n.encType) {
                                        let e = n.encType;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/links/" + r + "/encType",
                                                schemaPath: "#/properties/customerProfileData/properties/links/items/properties/encType/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.href) {
                                        let e = n.href;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/links/" + r + "/href",
                                                schemaPath: "#/properties/customerProfileData/properties/links/items/properties/href/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.method) {
                                        let e = n.method;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/links/" + r + "/method",
                                                schemaPath: "#/properties/customerProfileData/properties/links/items/properties/method/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.rel) {
                                        let e = n.rel;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/links/" + r + "/rel",
                                                schemaPath: "#/properties/customerProfileData/properties/links/items/properties/rel/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                } else {
                                    const e = {
                                        instancePath: t + "/customerProfileData/links/" + r,
                                        schemaPath: "#/properties/customerProfileData/properties/links/items/type",
                                        keyword: "type",
                                        params: {
                                            type: "object"
                                        },
                                        message: "must be object"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                        }
                    }
                    if (void 0 !== n.name) {
                        let e = n.name;
                        if ((!e || "object" != typeof e || Array.isArray(e)) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/name",
                                schemaPath: "#/properties/customerProfileData/properties/name/type",
                                keyword: "type",
                                params: {
                                    type: "object"
                                },
                                message: "must be object"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (e && "object" == typeof e && !Array.isArray(e)) {
                            if (void 0 !== e.given_name) {
                                let n = e.given_name;
                                if ("string" != typeof n && null !== n) {
                                    const e = {
                                        instancePath: t + "/customerProfileData/name/given_name",
                                        schemaPath: "#/properties/customerProfileData/properties/name/properties/given_name/type",
                                        keyword: "type",
                                        params: {
                                            type: "string"
                                        },
                                        message: "must be string"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                            if (void 0 !== e.surname) {
                                let n = e.surname;
                                if ("string" != typeof n && null !== n) {
                                    const e = {
                                        instancePath: t + "/customerProfileData/name/surname",
                                        schemaPath: "#/properties/customerProfileData/properties/name/properties/surname/type",
                                        keyword: "type",
                                        params: {
                                            type: "string"
                                        },
                                        message: "must be string"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                        }
                    }
                    if (void 0 !== n.payment_tokens) {
                        let e = n.payment_tokens;
                        if (!Array.isArray(e) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/payment_tokens",
                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/type",
                                keyword: "type",
                                params: {
                                    type: "array"
                                },
                                message: "must be array"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (Array.isArray(e)) {
                            const n = e.length;
                            for (let r = 0; r < n; r++) {
                                let n = e[r];
                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                    if (void 0 === n.payment_source) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/payment_tokens/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "payment_source"
                                            },
                                            message: "must have required property 'payment_source'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.id) {
                                        let e = n.id;
                                        if ("string" != typeof e && null !== e) {
                                            const e = {
                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/id",
                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/id/type",
                                                keyword: "type",
                                                params: {
                                                    type: "string"
                                                },
                                                message: "must be string"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                    if (void 0 !== n.payment_source) {
                                        let e = n.payment_source;
                                        if (e && "object" == typeof e && !Array.isArray(e)) {
                                            if (void 0 === e.card) {
                                                const e = {
                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source",
                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/required",
                                                    keyword: "required",
                                                    params: {
                                                        missingProperty: "card"
                                                    },
                                                    message: "must have required property 'card'"
                                                };
                                                null === i ? i = [e] : i.push(e),
                                                a++
                                            }
                                            if (void 0 !== e.card) {
                                                let n = e.card;
                                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                                    if (void 0 === n.billing_address) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "billing_address"
                                                            },
                                                            message: "must have required property 'billing_address'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 === n.brand) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "brand"
                                                            },
                                                            message: "must have required property 'brand'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 === n.expiry) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "expiry"
                                                            },
                                                            message: "must have required property 'expiry'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 === n.last_digits) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/required",
                                                            keyword: "required",
                                                            params: {
                                                                missingProperty: "last_digits"
                                                            },
                                                            message: "must have required property 'last_digits'"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.billing_address) {
                                                        let e = n.billing_address;
                                                        if (e && "object" == typeof e && !Array.isArray(e)) {
                                                            if (void 0 === e.address_line_1) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/required",
                                                                    keyword: "required",
                                                                    params: {
                                                                        missingProperty: "address_line_1"
                                                                    },
                                                                    message: "must have required property 'address_line_1'"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 === e.admin_area_2) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/required",
                                                                    keyword: "required",
                                                                    params: {
                                                                        missingProperty: "admin_area_2"
                                                                    },
                                                                    message: "must have required property 'admin_area_2'"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 === e.country_code) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/required",
                                                                    keyword: "required",
                                                                    params: {
                                                                        missingProperty: "country_code"
                                                                    },
                                                                    message: "must have required property 'country_code'"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 === e.postal_code) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/required",
                                                                    keyword: "required",
                                                                    params: {
                                                                        missingProperty: "postal_code"
                                                                    },
                                                                    message: "must have required property 'postal_code'"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.address_line_1 && "string" != typeof e.address_line_1) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/address_line_1",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/address_line_1/type",
                                                                    keyword: "type",
                                                                    params: {
                                                                        type: "string"
                                                                    },
                                                                    message: "must be string"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.address_line_2) {
                                                                let n = e.address_line_2;
                                                                if ("string" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/address_line_2",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/address_line_2/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "string"
                                                                        },
                                                                        message: "must be string"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.admin_area_1) {
                                                                let n = e.admin_area_1;
                                                                if ("string" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/admin_area_1",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/admin_area_1/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "string"
                                                                        },
                                                                        message: "must be string"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.admin_area_2 && "string" != typeof e.admin_area_2) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/admin_area_2",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/admin_area_2/type",
                                                                    keyword: "type",
                                                                    params: {
                                                                        type: "string"
                                                                    },
                                                                    message: "must be string"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.company) {
                                                                let n = e.company;
                                                                if ("string" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/company",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/company/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "string"
                                                                        },
                                                                        message: "must be string"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.country_code && "string" != typeof e.country_code) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/country_code",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/country_code/type",
                                                                    keyword: "type",
                                                                    params: {
                                                                        type: "string"
                                                                    },
                                                                    message: "must be string"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.id) {
                                                                let n = e.id;
                                                                if ("string" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/id",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/id/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "string"
                                                                        },
                                                                        message: "must be string"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.is_default_Address) {
                                                                let n = e.is_default_Address;
                                                                if ("boolean" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/is_default_Address",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/is_default_Address/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "boolean"
                                                                        },
                                                                        message: "must be boolean"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                            if (void 0 !== e.links) {
                                                                let n = e.links;
                                                                if (!Array.isArray(n) && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "array"
                                                                        },
                                                                        message: "must be array"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                                if (Array.isArray(n)) {
                                                                    const e = n.length;
                                                                    for (let o = 0; o < e; o++) {
                                                                        let e = n[o];
                                                                        if (e && "object" == typeof e && !Array.isArray(e)) {
                                                                            if (void 0 !== e.encType) {
                                                                                let n = e.encType;
                                                                                if ("string" != typeof n && null !== n) {
                                                                                    const e = {
                                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o + "/encType",
                                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/properties/encType/type",
                                                                                        keyword: "type",
                                                                                        params: {
                                                                                            type: "string"
                                                                                        },
                                                                                        message: "must be string"
                                                                                    };
                                                                                    null === i ? i = [e] : i.push(e),
                                                                                    a++
                                                                                }
                                                                            }
                                                                            if (void 0 !== e.href) {
                                                                                let n = e.href;
                                                                                if ("string" != typeof n && null !== n) {
                                                                                    const e = {
                                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o + "/href",
                                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/properties/href/type",
                                                                                        keyword: "type",
                                                                                        params: {
                                                                                            type: "string"
                                                                                        },
                                                                                        message: "must be string"
                                                                                    };
                                                                                    null === i ? i = [e] : i.push(e),
                                                                                    a++
                                                                                }
                                                                            }
                                                                            if (void 0 !== e.method) {
                                                                                let n = e.method;
                                                                                if ("string" != typeof n && null !== n) {
                                                                                    const e = {
                                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o + "/method",
                                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/properties/method/type",
                                                                                        keyword: "type",
                                                                                        params: {
                                                                                            type: "string"
                                                                                        },
                                                                                        message: "must be string"
                                                                                    };
                                                                                    null === i ? i = [e] : i.push(e),
                                                                                    a++
                                                                                }
                                                                            }
                                                                            if (void 0 !== e.rel) {
                                                                                let n = e.rel;
                                                                                if ("string" != typeof n && null !== n) {
                                                                                    const e = {
                                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o + "/rel",
                                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/properties/rel/type",
                                                                                        keyword: "type",
                                                                                        params: {
                                                                                            type: "string"
                                                                                        },
                                                                                        message: "must be string"
                                                                                    };
                                                                                    null === i ? i = [e] : i.push(e),
                                                                                    a++
                                                                                }
                                                                            }
                                                                        } else {
                                                                            const e = {
                                                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/links/" + o,
                                                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/links/items/type",
                                                                                keyword: "type",
                                                                                params: {
                                                                                    type: "object"
                                                                                },
                                                                                message: "must be object"
                                                                            };
                                                                            null === i ? i = [e] : i.push(e),
                                                                            a++
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            if (void 0 !== e.postal_code && "string" != typeof e.postal_code) {
                                                                const e = {
                                                                    instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/postal_code",
                                                                    schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/postal_code/type",
                                                                    keyword: "type",
                                                                    params: {
                                                                        type: "string"
                                                                    },
                                                                    message: "must be string"
                                                                };
                                                                null === i ? i = [e] : i.push(e),
                                                                a++
                                                            }
                                                            if (void 0 !== e.preferred) {
                                                                let n = e.preferred;
                                                                if ("boolean" != typeof n && null !== n) {
                                                                    const e = {
                                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address/preferred",
                                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/properties/preferred/type",
                                                                        keyword: "type",
                                                                        params: {
                                                                            type: "boolean"
                                                                        },
                                                                        message: "must be boolean"
                                                                    };
                                                                    null === i ? i = [e] : i.push(e),
                                                                    a++
                                                                }
                                                            }
                                                        } else {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/billing_address",
                                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/billing_address/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "object"
                                                                },
                                                                message: "must be object"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                    if (void 0 !== n.brand && "string" != typeof n.brand) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/brand",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/brand/type",
                                                            keyword: "type",
                                                            params: {
                                                                type: "string"
                                                            },
                                                            message: "must be string"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.expiry && "string" != typeof n.expiry) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/expiry",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/expiry/type",
                                                            keyword: "type",
                                                            params: {
                                                                type: "string"
                                                            },
                                                            message: "must be string"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.last_digits && "string" != typeof n.last_digits) {
                                                        const e = {
                                                            instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/last_digits",
                                                            schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/last_digits/type",
                                                            keyword: "type",
                                                            params: {
                                                                type: "string"
                                                            },
                                                            message: "must be string"
                                                        };
                                                        null === i ? i = [e] : i.push(e),
                                                        a++
                                                    }
                                                    if (void 0 !== n.name) {
                                                        let e = n.name;
                                                        if ("string" != typeof e && null !== e) {
                                                            const e = {
                                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card/name",
                                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/properties/name/type",
                                                                keyword: "type",
                                                                params: {
                                                                    type: "string"
                                                                },
                                                                message: "must be string"
                                                            };
                                                            null === i ? i = [e] : i.push(e),
                                                            a++
                                                        }
                                                    }
                                                } else {
                                                    const e = {
                                                        instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source/card",
                                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/properties/card/type",
                                                        keyword: "type",
                                                        params: {
                                                            type: "object"
                                                        },
                                                        message: "must be object"
                                                    };
                                                    null === i ? i = [e] : i.push(e),
                                                    a++
                                                }
                                            }
                                        } else {
                                            const e = {
                                                instancePath: t + "/customerProfileData/payment_tokens/" + r + "/payment_source",
                                                schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/properties/payment_source/type",
                                                keyword: "type",
                                                params: {
                                                    type: "object"
                                                },
                                                message: "must be object"
                                            };
                                            null === i ? i = [e] : i.push(e),
                                            a++
                                        }
                                    }
                                } else {
                                    const e = {
                                        instancePath: t + "/customerProfileData/payment_tokens/" + r,
                                        schemaPath: "#/properties/customerProfileData/properties/payment_tokens/items/type",
                                        keyword: "type",
                                        params: {
                                            type: "object"
                                        },
                                        message: "must be object"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                            }
                        }
                    }
                    if (void 0 !== n.phones) {
                        let e = n.phones;
                        if (!Array.isArray(e) && null !== e) {
                            const e = {
                                instancePath: t + "/customerProfileData/phones",
                                schemaPath: "#/properties/customerProfileData/properties/phones/type",
                                keyword: "type",
                                params: {
                                    type: "array"
                                },
                                message: "must be array"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                        if (Array.isArray(e)) {
                            const n = e.length;
                            for (let r = 0; r < n; r++) {
                                let n = e[r];
                                if ((!n || "object" != typeof n || Array.isArray(n)) && null !== n) {
                                    const e = {
                                        instancePath: t + "/customerProfileData/phones/" + r,
                                        schemaPath: "#/properties/customerProfileData/properties/phones/items/type",
                                        keyword: "type",
                                        params: {
                                            type: "object"
                                        },
                                        message: "must be object"
                                    };
                                    null === i ? i = [e] : i.push(e),
                                    a++
                                }
                                if (n && "object" == typeof n && !Array.isArray(n)) {
                                    if (void 0 === n.country_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/phones/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/phones/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "country_code"
                                            },
                                            message: "must have required property 'country_code'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 === n.national_number) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/phones/" + r,
                                            schemaPath: "#/properties/customerProfileData/properties/phones/items/required",
                                            keyword: "required",
                                            params: {
                                                missingProperty: "national_number"
                                            },
                                            message: "must have required property 'national_number'"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.country_code && "string" != typeof n.country_code) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/phones/" + r + "/country_code",
                                            schemaPath: "#/properties/customerProfileData/properties/phones/items/properties/country_code/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                    if (void 0 !== n.national_number && "string" != typeof n.national_number) {
                                        const e = {
                                            instancePath: t + "/customerProfileData/phones/" + r + "/national_number",
                                            schemaPath: "#/properties/customerProfileData/properties/phones/items/properties/national_number/type",
                                            keyword: "type",
                                            params: {
                                                type: "string"
                                            },
                                            message: "must be string"
                                        };
                                        null === i ? i = [e] : i.push(e),
                                        a++
                                    }
                                }
                            }
                        }
                    }
                } else {
                    const e = {
                        instancePath: t + "/customerProfileData",
                        schemaPath: "#/properties/customerProfileData/type",
                        keyword: "type",
                        params: {
                            type: "object"
                        },
                        message: "must be object"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.targetAuthAssertion) {
                let n = e.targetAuthAssertion;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/targetAuthAssertion",
                        schemaPath: "#/properties/targetAuthAssertion/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.error) {
                let n = e.error;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/error",
                        schemaPath: "#/properties/error/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
            if (void 0 !== e.error_description) {
                let n = e.error_description;
                if ("string" != typeof n && null !== n) {
                    const e = {
                        instancePath: t + "/error_description",
                        schemaPath: "#/properties/error_description/type",
                        keyword: "type",
                        params: {
                            type: "string"
                        },
                        message: "must be string"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
        } else {
            const e = {
                instancePath: t,
                schemaPath: "#/type",
                keyword: "type",
                params: {
                    type: "object"
                },
                message: "must be object"
            };
            null === i ? i = [e] : i.push(e),
            a++
        }
        return sr.errors = i,
        0 === a
    }
    const lr = Error("Error while getting challenges")
      , cr = Error("Error while validating OTP")
      , dr = Error("Error while fetching profile")
      , ur = Error("HTTP Error")
      , pr = Error("OTP validation limit exceeded")
      , hr = Error("HTTP Error");
    let fr;
    function mr(e) {
        const {cmid: t} = e
          , n = {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "paypal-client-metadata-id": t,
                "x-paypal-fpti": `{"client_session_id":"${t}"}`
            },
            timeout: !0
        }
          , r = $t();
        return fr || (fr = {
            lookupEmail: async (e, t={}) => {
                try {
                    const {geoLocOverride: t} = it.get("overrides")
                      , r = it.get("axoEnv")
                      , o = Object.assign(Object.assign({}, n), {
                        headers: Object.assign(Object.assign({}, n.headers), "production" !== r && t ? {
                            PP_GEO_LOC: t
                        } : {}),
                        body: JSON.stringify(e),
                        responseValidationFunction: rr
                    })
                      , i = await nr(`${$e}/lookup`, o);
                    return i.json()
                } catch (e) {
                    const t = e instanceof Error && e.message || btoa(JSON.stringify(e));
                    throw r.error("axo_sdk_lookupEmail_error", {
                        error: t
                    }),
                    e
                }
            }
            ,
            getChallenges: async (e, t={}) => {
                try {
                    const t = Object.assign(Object.assign({}, n), {
                        body: JSON.stringify(e),
                        responseValidationFunction: or
                    })
                      , o = await nr(`${$e}/challenges`, t)
                      , i = await o.json();
                    if (o.ok && i && i.challenges && 0 !== i.challenges.length || r.track({
                        event_name: "axo_get_challenges_error_occurred",
                        event_category: "otp_module",
                        event_type: "im",
                        int_error_code: o.ok ? "SERVER_ERROR" : "NETWORK_ERROR",
                        int_error_desc: o.ok ? "CHALLENGES_RESPONSE_JSON_INVALID" : `Challenges returned with status code ${o.status}`,
                        intent: "checkout"
                    }),
                    !o.ok)
                        throw lr;
                    return i
                } catch (e) {
                    const t = e instanceof Error && e.message || btoa(JSON.stringify(e));
                    throw r.error("axo_sdk_getChallenges_error", {
                        error: t
                    }),
                    e
                }
            }
            ,
            sendOtp: async (e, t={}) => {
                const o = !!(null == t ? void 0 : t.isResend);
                try {
                    const t = Object.assign(Object.assign({}, n), {
                        body: JSON.stringify(e),
                        responseValidationFunction: ir
                    })
                      , i = await nr(`${$e}/otp/send`, t)
                      , a = await i.json();
                    if (!i.ok || !a || "success" !== a.status)
                        throw r.track({
                            event_name: o ? "axo_otp_resend_failure" : "axo_send_otp_error_occurred",
                            event_category: "otp_module",
                            event_type: "im",
                            int_error_code: i.ok ? "SERVER_ERROR" : "NETWORK_ERROR",
                            int_error_desc: i.ok ? "SEND_OTP_RESPONSE_JSON_INVALID" : `Send OTP returned with status code ${i.status}`,
                            intent: "checkout",
                            transition_name: o ? "resend_otp_failed" : "send_otp_failed"
                        }),
                        cr;
                    return a
                } catch (e) {
                    const t = e instanceof Error && e.message || btoa(JSON.stringify(e));
                    throw r.error("axo_sdk_sendOtp_error", {
                        error: t
                    }),
                    e
                }
            }
            ,
            verifyOtp: async (e, t={}) => {
                try {
                    const t = Object.assign(Object.assign({}, n), {
                        body: JSON.stringify(e),
                        responseValidationFunction: ar,
                        filterInvalidData: !0
                    })
                      , o = await nr(`${$e}/otp/verify`, t);
                    if (!o.ok || 200 !== o.status)
                        throw r.track({
                            event_name: "axo_otp_entry_failure",
                            event_category: "otp_module",
                            event_type: "im",
                            int_error_code: "NETWORK_ERROR",
                            int_error_desc: `Verify OTP returned with status code ${o.status}`,
                            intent: "checkout"
                        }),
                        hr;
                    const i = await o.json();
                    if (o.ok && (!i || i.error)) {
                        if (r.track({
                            event_name: "axo_otp_entry_failure",
                            event_category: "otp_module",
                            event_type: "im",
                            int_error_code: i ? i.error : "SERVER_ERROR",
                            int_error_desc: i ? i.error_description : "VERIFY_OTP_RESPONSE_JSON_INVALID",
                            intent: "checkout"
                        }),
                        "OTP_VALIDATION_LIMIT_EXCEEDED" === (null == i ? void 0 : i.error_description))
                            throw pr;
                        throw cr
                    }
                    return i
                } catch (e) {
                    const t = e instanceof Error && e.message || btoa(JSON.stringify(e));
                    throw r.error("axo_sdk_verifyOtp_error", {
                        error: t
                    }),
                    e
                }
            }
            ,
            optOut: async (e, t={}) => {
                try {
                    const t = Object.assign(Object.assign({}, n), {
                        body: JSON.stringify(e)
                    });
                    await nr(`${$e}/optout`, t)
                } catch (e) {
                    const t = e instanceof Error && e.message || btoa(JSON.stringify(e));
                    throw r.error("axo_sdk_optOut_error", {
                        error: t
                    }),
                    e
                }
            }
            ,
            profile: async (e, t={}) => {
                try {
                    const t = Object.assign(Object.assign({}, n), {
                        body: JSON.stringify(e),
                        responseValidationFunction: sr,
                        filterInvalidData: !0
                    })
                      , r = await nr(`${$e}/profile`, t);
                    if (!r.ok || 200 !== r.status)
                        throw ur;
                    return r.json()
                } catch (e) {
                    const t = e instanceof Response && `getActiveSession returned with status code ${e.status}` || e instanceof Error && e.message || btoa(JSON.stringify(e));
                    throw r.error("axo_sdk_identity_get_active_session_error", {
                        error: t
                    }),
                    dr
                }
            }
        }),
        fr
    }
    Object.assign(Object.assign({}, Ze), {
        accountType: "C",
        customerId: "fake-id",
        isAccountActive: !0,
        geoLocation: "US"
    }),
    Object.assign(Object.assign({}, Ze), {
        accountType: "",
        customerId: "",
        isAccountActive: !1,
        geoLocation: "US"
    }),
    Object.assign(Object.assign({}, Ze), {
        accountType: "P",
        customerId: "",
        isAccountActive: !1,
        geoLocation: "US"
    });
    const gr = {
        firstName: "John",
        lastName: "Doe"
    };
    Object.assign(Object.assign({}, gr), {
        fullName: `${gr.firstName} ${gr.lastName}`
    });
    const yr = "Address First name"
      , vr = "Address Surname"
      , br = {
        firstName: yr,
        lastName: vr
    };
    Object.assign(Object.assign({}, br), {
        fullName: `${br.firstName} ${br.lastName}`
    });
    const Er = {
        company: "PayPal",
        streetAddress: "1330 Halford St.",
        extendedAddress: "Apt 321",
        locality: "Austin",
        region: "TX",
        postalCode: "95051",
        countryCodeNumeric: 1,
        countryCodeAlpha2: "US",
        countryCodeAlpha3: "USA"
    }
      , _r = {
        addressLine1: Er.streetAddress,
        addressLine2: Er.extendedAddress,
        adminArea1: Er.region,
        adminArea2: Er.locality,
        postalCode: Er.postalCode,
        countryCode: Er.countryCodeAlpha2
    }
      , Ar = Object.assign(Object.assign(Object.assign({}, br), Er), {
        phone: {
            countryCode: "1",
            nationalNumber: "5855204528"
        }
    })
      , wr = Object.assign(Object.assign({}, {
        company: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, LLC",
        streetAddress: "123456789 Jean Baptiste Point du Sable Lake Shore Drive",
        extendedAddress: "Building 21, Apartment 54321",
        locality: "Chicago",
        region: "IL",
        postalCode: "60611",
        countryCodeNumeric: 1,
        countryCodeAlpha2: "US",
        countryCodeAlpha3: "USA"
    }), {
        phone: {
            countryCode: "1",
            nationalNumber: "5855204528"
        }
    })
      , Sr = Ar;
    ( () => {
        const e = Object.assign({}, Ar);
        delete e.phone,
        Object.assign(Object.assign({}, e), {
            phoneNumber: "15855204528"
        })
    }
    )(),
    Object.assign({}, _r);
    const Cr = {
        id: "MOCK_1",
        ordinal: 1,
        address: Ar
    };
    Object.assign(Object.assign({}, Cr), {
        address: Object.assign(Object.assign({}, Ar), {
            region: "TX",
            countryCodeAlpha2: "US",
            countryCodeAlpha3: "USA"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_2",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "Calgary",
            region: "AL",
            countryCodeAlpha2: "CA",
            countryCodeAlpha3: "CA"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_3",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "Taichung City",
            region: "",
            countryCodeAlpha2: "TW",
            countryCodeAlpha3: "TW"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_4",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "Los Angeles",
            region: "CA",
            countryCodeAlpha2: "US",
            countryCodeAlpha3: "USA"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_5",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "New York City",
            region: "NY",
            countryCodeAlpha2: "US",
            countryCodeAlpha3: "USA"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_6",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "Taipei City",
            region: "",
            countryCodeAlpha2: "TW",
            countryCodeAlpha3: "TW"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_7",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "San Francisco",
            region: "CA",
            countryCodeAlpha2: "US",
            countryCodeAlpha3: "USA"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_8",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "Berat",
            region: "",
            countryCodeAlpha2: "AL",
            countryCodeAlpha3: "AL"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_9",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "Phoenix",
            region: "AZ",
            countryCodeAlpha2: "US",
            countryCodeAlpha3: "USA"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_10",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "Hsinchu",
            region: "",
            countryCodeAlpha2: "TW",
            countryCodeAlpha3: "TW"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_11",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "Anchorage",
            region: "AK",
            countryCodeAlpha2: "US",
            countryCodeAlpha3: "USA"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_12",
        address: Object.assign(Object.assign({}, Ar), {
            locality: "Toronto",
            region: "ON",
            countryCodeAlpha2: "CA",
            countryCodeAlpha3: "CA"
        })
    }),
    Object.assign(Object.assign({}, Cr), {
        id: "MOCK_13",
        address: wr
    });
    const Or = {
        id: "MOCK_ID",
        ordinal: 1,
        paymentToken: {
            id: "MOCK_NONCE",
            paymentSource: {
                card: {
                    brand: "VISA",
                    expiry: "2025-04",
                    lastDigits: "4526",
                    name: "John Doe",
                    billingAddress: Sr
                }
            }
        }
    };
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_0",
        ordinal: 1,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "AMEX"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_1",
        ordinal: 2,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "MASTERCARD"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_2",
        ordinal: 3,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "VISA"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_3",
        ordinal: 4,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "DISCOVER"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_4",
        ordinal: 5,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "CHINAUNIONPAY"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_5",
        ordinal: 6,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "JCB"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_6",
        ordinal: 7,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "DISCOVER"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_7",
        ordinal: 8,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "VISA"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_8",
        ordinal: 9,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "MASTERCARD"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_9",
        ordinal: 10,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "AMEX"
                })
            })
        })
    }),
    Object.assign(Object.assign({}, Or), {
        id: "MOCK_ID_10",
        ordinal: 11,
        paymentToken: Object.assign(Object.assign({}, Or.paymentToken), {
            paymentSource: Object.assign(Object.assign({}, Or.paymentToken.paymentSource), {
                card: Object.assign(Object.assign({}, Or.paymentToken.paymentSource.card), {
                    brand: "VISA"
                })
            })
        })
    }),
    (new Date).getFullYear(),
    (new Date).getFullYear();
    const xr = {
        nonce: "tokencc_bf_cbtrr4_g8n7tp_bg3gmb_8wxxrh_f6z",
        details: {
            cardholderName: "Ryan OneCard",
            expirationMonth: "05",
            expirationYear: "2024",
            bin: "411111",
            cardType: "Visa",
            lastFour: "1111",
            lastTwo: "11"
        },
        description: "ending in 11",
        type: "CreditCard",
        binData: {
            prepaid: "Unknown",
            healthcare: "Unknown",
            debit: "Unknown",
            durbinRegulated: "Unknown",
            commercial: "Unknown",
            payroll: "Unknown",
            issuingBank: "Unknown",
            countryOfIssuance: "Unknown",
            productId: "Unknown"
        }
    }
      , Tr = async e => {
        if (e) {
            return Or
        }
        throw new Error("Invalid args")
    }
    ;
    function Nr(e, {instancePath: t="", parentData: n, parentDataProperty: r, rootData: o=e}={}) {
        let i = null
          , a = 0;
        if (e && "object" == typeof e && !Array.isArray(e)) {
            if (void 0 === e.address) {
                const e = {
                    instancePath: t,
                    schemaPath: "#/required",
                    keyword: "required",
                    params: {
                        missingProperty: "address"
                    },
                    message: "must have required property 'address'"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
            if (void 0 !== e.address) {
                let n = e.address;
                if (n && "object" == typeof n && !Array.isArray(n)) {
                    if (void 0 === n.address_line_1) {
                        const e = {
                            instancePath: t + "/address",
                            schemaPath: "#/properties/address/required",
                            keyword: "required",
                            params: {
                                missingProperty: "address_line_1"
                            },
                            message: "must have required property 'address_line_1'"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 === n.address_line_2) {
                        const e = {
                            instancePath: t + "/address",
                            schemaPath: "#/properties/address/required",
                            keyword: "required",
                            params: {
                                missingProperty: "address_line_2"
                            },
                            message: "must have required property 'address_line_2'"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 === n.admin_area_1) {
                        const e = {
                            instancePath: t + "/address",
                            schemaPath: "#/properties/address/required",
                            keyword: "required",
                            params: {
                                missingProperty: "admin_area_1"
                            },
                            message: "must have required property 'admin_area_1'"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 === n.admin_area_2) {
                        const e = {
                            instancePath: t + "/address",
                            schemaPath: "#/properties/address/required",
                            keyword: "required",
                            params: {
                                missingProperty: "admin_area_2"
                            },
                            message: "must have required property 'admin_area_2'"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 === n.postal_code) {
                        const e = {
                            instancePath: t + "/address",
                            schemaPath: "#/properties/address/required",
                            keyword: "required",
                            params: {
                                missingProperty: "postal_code"
                            },
                            message: "must have required property 'postal_code'"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 === n.country_code) {
                        const e = {
                            instancePath: t + "/address",
                            schemaPath: "#/properties/address/required",
                            keyword: "required",
                            params: {
                                missingProperty: "country_code"
                            },
                            message: "must have required property 'country_code'"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 !== n.name) {
                        let e = n.name;
                        if (e && "object" == typeof e && !Array.isArray(e)) {
                            if (void 0 === e.given_name) {
                                const e = {
                                    instancePath: t + "/address/name",
                                    schemaPath: "#/properties/address/properties/name/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "given_name"
                                    },
                                    message: "must have required property 'given_name'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 === e.surname) {
                                const e = {
                                    instancePath: t + "/address/name",
                                    schemaPath: "#/properties/address/properties/name/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "surname"
                                    },
                                    message: "must have required property 'surname'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.given_name && "string" != typeof e.given_name) {
                                const e = {
                                    instancePath: t + "/address/name/given_name",
                                    schemaPath: "#/properties/address/properties/name/properties/given_name/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.surname && "string" != typeof e.surname) {
                                const e = {
                                    instancePath: t + "/address/name/surname",
                                    schemaPath: "#/properties/address/properties/name/properties/surname/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                        } else {
                            const e = {
                                instancePath: t + "/address/name",
                                schemaPath: "#/properties/address/properties/name/type",
                                keyword: "type",
                                params: {
                                    type: "object"
                                },
                                message: "must be object"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                    if (void 0 !== n.address_line_1 && "string" != typeof n.address_line_1) {
                        const e = {
                            instancePath: t + "/address/address_line_1",
                            schemaPath: "#/properties/address/properties/address_line_1/type",
                            keyword: "type",
                            params: {
                                type: "string"
                            },
                            message: "must be string"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 !== n.address_line_2 && "string" != typeof n.address_line_2) {
                        const e = {
                            instancePath: t + "/address/address_line_2",
                            schemaPath: "#/properties/address/properties/address_line_2/type",
                            keyword: "type",
                            params: {
                                type: "string"
                            },
                            message: "must be string"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 !== n.admin_area_1 && "string" != typeof n.admin_area_1) {
                        const e = {
                            instancePath: t + "/address/admin_area_1",
                            schemaPath: "#/properties/address/properties/admin_area_1/type",
                            keyword: "type",
                            params: {
                                type: "string"
                            },
                            message: "must be string"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 !== n.admin_area_2 && "string" != typeof n.admin_area_2) {
                        const e = {
                            instancePath: t + "/address/admin_area_2",
                            schemaPath: "#/properties/address/properties/admin_area_2/type",
                            keyword: "type",
                            params: {
                                type: "string"
                            },
                            message: "must be string"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 !== n.postal_code && "string" != typeof n.postal_code) {
                        const e = {
                            instancePath: t + "/address/postal_code",
                            schemaPath: "#/properties/address/properties/postal_code/type",
                            keyword: "type",
                            params: {
                                type: "string"
                            },
                            message: "must be string"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 !== n.country_code && "string" != typeof n.country_code) {
                        const e = {
                            instancePath: t + "/address/country_code",
                            schemaPath: "#/properties/address/properties/country_code/type",
                            keyword: "type",
                            params: {
                                type: "string"
                            },
                            message: "must be string"
                        };
                        null === i ? i = [e] : i.push(e),
                        a++
                    }
                    if (void 0 !== n.phone_number) {
                        let e = n.phone_number;
                        if (e && "object" == typeof e && !Array.isArray(e)) {
                            if (void 0 === e.country_code) {
                                const e = {
                                    instancePath: t + "/address/phone_number",
                                    schemaPath: "#/properties/address/properties/phone_number/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "country_code"
                                    },
                                    message: "must have required property 'country_code'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 === e.national_number) {
                                const e = {
                                    instancePath: t + "/address/phone_number",
                                    schemaPath: "#/properties/address/properties/phone_number/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "national_number"
                                    },
                                    message: "must have required property 'national_number'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.country_code && "string" != typeof e.country_code) {
                                const e = {
                                    instancePath: t + "/address/phone_number/country_code",
                                    schemaPath: "#/properties/address/properties/phone_number/properties/country_code/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.national_number && "string" != typeof e.national_number) {
                                const e = {
                                    instancePath: t + "/address/phone_number/national_number",
                                    schemaPath: "#/properties/address/properties/phone_number/properties/national_number/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                        } else {
                            const e = {
                                instancePath: t + "/address/phone_number",
                                schemaPath: "#/properties/address/properties/phone_number/type",
                                keyword: "type",
                                params: {
                                    type: "object"
                                },
                                message: "must be object"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                } else {
                    const e = {
                        instancePath: t + "/address",
                        schemaPath: "#/properties/address/type",
                        keyword: "type",
                        params: {
                            type: "object"
                        },
                        message: "must be object"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
        } else {
            const e = {
                instancePath: t,
                schemaPath: "#/type",
                keyword: "type",
                params: {
                    type: "object"
                },
                message: "must be object"
            };
            null === i ? i = [e] : i.push(e),
            a++
        }
        return Nr.errors = i,
        0 === a
    }
    const kr = async e => {
        const t = it.get("authState").customerId
          , n = $t()
          , r = gt()
          , o = `${new URL("/fastlane-core/v1/api",r.getPortalUrl())}/customers/${t}/address`;
        try {
            return (await nr(o, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    address: e
                }),
                timeout: !0,
                responseValidationFunction: Nr
            })).json()
        } catch (e) {
            throw n.track({
                event_name: "axo_sdk_error_updating_profile_add_shipping",
                int_error_code: e.code,
                int_error_desc: e.toString()
            }),
            e
        }
    }
    ;
    let Ir;
    const Rr = /{[a-zA-Z_$][0-9a-zA-Z_$]*}/g;
    function Pr(e, t) {
        const n = (e => {
            const t = it.get("content");
            return t ? e.split(".").reduce(( (e, t) => "string" == typeof e ? e : e[t] || ""), t) : null
        }
        )(e);
        return n ? ( (e, t) => {
            const n = [...e.matchAll(Rr)].map(( ([e]) => [e, (null == t ? void 0 : t[e.slice(1, -1)]) || ""]))
              , r = n.reduce(( (e, [t,n]) => e.flatMap((e => "string" == typeof e ? ( (e, t) => e.flatMap((e => [e, t])).slice(0, -1))(e.split(t), n) : [e]))), [e]);
            return n.every(( ([e,t]) => "string" == typeof t)) ? r.join("") : r
        }
        )(n, t) : ""
    }
    const Lr = "crypto.subtle not available in this environment";
    async function Dr(e, t="SHA-256") {
        var n;
        if ("function" != typeof (null === (n = null === crypto || void 0 === crypto ? void 0 : crypto.subtle) || void 0 === n ? void 0 : n.digest))
            throw $t().track({
                event_name: "axo_crypto_lib_not_available",
                int_error_desc: "crypto_lib_not_available"
            }),
            new Error(Lr);
        const r = (o = e,
        (new TextEncoder).encode(o));
        var o;
        return await crypto.subtle.digest(t, r)
    }
    async function Mr(e, t="SHA-256") {
        return function(e) {
            const t = new Uint8Array(e);
            return btoa(String.fromCharCode(...t))
        }(await Dr(e, t))
    }
    async function Fr(e, t="SHA-256") {
        return (await Mr(e, t)).replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "")
    }
    function Br(e) {
        return "[object Object]" === Object.prototype.toString.call(e)
    }
    function jr(e, t) {
        for (const n in t)
            if (t.hasOwnProperty(n)) {
                const r = t[n];
                Br(r) && void 0 !== e[n] && Br(e[n]) ? (e[n] && Br(e[n]) || (e[n] = {}),
                jr(e[n], r)) : e[n] = r
            }
    }
    const Ur = e => "function" == typeof (null == e ? void 0 : e.toString) ? "[object Object]" === Object.prototype.toString.call(e) ? `An error occurred: ${JSON.stringify(e)}` : "function" == typeof e ? JSON.stringify(e.toString()) : e.toString() : `An error occurred: ${e}`
      , Gr = "hashedEmail"
      , $r = "merchantId"
      , Vr = "accountType"
      , Hr = "c"
      , Kr = "r"
      , zr = "intendedExperience";
    function Wr(e, {instancePath: t="", parentData: n, parentDataProperty: r, rootData: o=e}={}) {
        let i = null
          , a = 0;
        if (e && "object" == typeof e && !Array.isArray(e)) {
            if (void 0 === e.treatments) {
                const e = {
                    instancePath: t,
                    schemaPath: "#/required",
                    keyword: "required",
                    params: {
                        missingProperty: "treatments"
                    },
                    message: "must have required property 'treatments'"
                };
                null === i ? i = [e] : i.push(e),
                a++
            }
            if (void 0 !== e.treatments) {
                let n = e.treatments;
                if (Array.isArray(n)) {
                    const e = n.length;
                    for (let r = 0; r < e; r++) {
                        let e = n[r];
                        if (e && "object" == typeof e && !Array.isArray(e)) {
                            if (void 0 === e.experiment_id) {
                                const e = {
                                    instancePath: t + "/treatments/" + r,
                                    schemaPath: "#/properties/treatments/items/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "experiment_id"
                                    },
                                    message: "must have required property 'experiment_id'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 === e.experiment_name) {
                                const e = {
                                    instancePath: t + "/treatments/" + r,
                                    schemaPath: "#/properties/treatments/items/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "experiment_name"
                                    },
                                    message: "must have required property 'experiment_name'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 === e.treatment_id) {
                                const e = {
                                    instancePath: t + "/treatments/" + r,
                                    schemaPath: "#/properties/treatments/items/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "treatment_id"
                                    },
                                    message: "must have required property 'treatment_id'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 === e.treatment_name) {
                                const e = {
                                    instancePath: t + "/treatments/" + r,
                                    schemaPath: "#/properties/treatments/items/required",
                                    keyword: "required",
                                    params: {
                                        missingProperty: "treatment_name"
                                    },
                                    message: "must have required property 'treatment_name'"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.experiment_id && "string" != typeof e.experiment_id) {
                                const e = {
                                    instancePath: t + "/treatments/" + r + "/experiment_id",
                                    schemaPath: "#/properties/treatments/items/properties/experiment_id/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.experiment_name && "string" != typeof e.experiment_name) {
                                const e = {
                                    instancePath: t + "/treatments/" + r + "/experiment_name",
                                    schemaPath: "#/properties/treatments/items/properties/experiment_name/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.treatment_id && "string" != typeof e.treatment_id) {
                                const e = {
                                    instancePath: t + "/treatments/" + r + "/treatment_id",
                                    schemaPath: "#/properties/treatments/items/properties/treatment_id/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.treatment_name && "string" != typeof e.treatment_name) {
                                const e = {
                                    instancePath: t + "/treatments/" + r + "/treatment_name",
                                    schemaPath: "#/properties/treatments/items/properties/treatment_name/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                            if (void 0 !== e.allocation_name && "string" != typeof e.allocation_name) {
                                const e = {
                                    instancePath: t + "/treatments/" + r + "/allocation_name",
                                    schemaPath: "#/properties/treatments/items/properties/allocation_name/type",
                                    keyword: "type",
                                    params: {
                                        type: "string"
                                    },
                                    message: "must be string"
                                };
                                null === i ? i = [e] : i.push(e),
                                a++
                            }
                        } else {
                            const e = {
                                instancePath: t + "/treatments/" + r,
                                schemaPath: "#/properties/treatments/items/type",
                                keyword: "type",
                                params: {
                                    type: "object"
                                },
                                message: "must be object"
                            };
                            null === i ? i = [e] : i.push(e),
                            a++
                        }
                    }
                } else {
                    const e = {
                        instancePath: t + "/treatments",
                        schemaPath: "#/properties/treatments/type",
                        keyword: "type",
                        params: {
                            type: "array"
                        },
                        message: "must be array"
                    };
                    null === i ? i = [e] : i.push(e),
                    a++
                }
            }
        } else {
            const e = {
                instancePath: t,
                schemaPath: "#/type",
                keyword: "type",
                params: {
                    type: "object"
                },
                message: "must be object"
            };
            null === i ? i = [e] : i.push(e),
            a++
        }
        return Wr.errors = i,
        0 === a
    }
    class Yr {
        constructor() {
            if (this.store = it,
            this.intendedExperience = Qe.guestCheckout,
            this.cache = {},
            this.abortControllers = {},
            this.subscriptions = [],
            this.logger = $t(),
            this.errorEventName = "axo_error_fetching_experiments",
            this.isFastlaneEnabled = it.get("isFastlaneEnabled"),
            this.isFastlaneEnabled)
                try {
                    this.logger.track({
                        event_name: "axo_sdk_experimentation_is_enabled"
                    });
                    const e = it.get("authState");
                    this.accountType = e.accountType,
                    this.isAccountCompliant = e.isAccountCompliant,
                    this.isAccountRiskSafe = e.isAccountRiskSafe,
                    this.merchantId = it.get("merchantState").merchantId,
                    this.intendedExperience = it.get("intendedExperience"),
                    e.email && Fr(e.email, "SHA-256").then((e => (this.hashedEmail = e,
                    this.fetchTreatments()))),
                    this.subscriptions.push(this.store.onChange("merchantState", (e => {
                        const {merchantId: t} = e;
                        t !== this.merchantId && (this.merchantId = t,
                        this.fetchTreatments())
                    }
                    ))),
                    this.subscriptions.push(this.store.onChange("authState", (async e => {
                        const {email: t, accountType: n="", isAccountCompliant: r, isAccountRiskSafe: o} = e
                          , i = await Fr(t, "SHA-256");
                        i === this.hashedEmail && n == this.accountType && r == this.isAccountCompliant && o == this.isAccountRiskSafe || (this.accountType = n,
                        this.hashedEmail = i,
                        this.isAccountCompliant = r,
                        this.isAccountRiskSafe = o,
                        this.fetchTreatments())
                    }
                    )))
                } catch (e) {
                    this.logger.track({
                        event_name: this.errorEventName,
                        int_error_desc: Ur(e)
                    })
                }
            else
                this.logger.track({
                    event_name: "axo_sdk_experimentation_is_disabled",
                    reason: `isFastlaneEnabled is ${this.isFastlaneEnabled}`
                })
        }
        getCacheKey() {
            if (this.isFastlaneEnabled) {
                if (!this.hashedEmail || !this.merchantId || !this.intendedExperience)
                    return;
                let e = [this.hashedEmail, this.intendedExperience, this.accountType].join("_");
                if ("P" === this.accountType) {
                    if (void 0 === this.isAccountCompliant || void 0 === this.isAccountRiskSafe)
                        return;
                    e += `_${this.isAccountCompliant ? "+" : "-"}c_${this.isAccountRiskSafe ? "+" : "-"}r`
                } else if ("C" === this.accountType) {
                    if (void 0 === this.isAccountRiskSafe)
                        return;
                    e += `_${this.isAccountRiskSafe ? "+" : "-"}r`
                }
                return e
            }
        }
        getURL() {
            if (this.isFastlaneEnabled) {
                const e = new URL("/fastlane-core/v1/api/experiments",gt().getPortalUrl());
                return e.searchParams.append(Gr, this.hashedEmail),
                e.searchParams.append($r, this.merchantId),
                this.accountType && (e.searchParams.append(Vr, this.accountType),
                void 0 !== this.isAccountCompliant && e.searchParams.append(Hr, Number(this.isAccountCompliant).toString()),
                void 0 !== this.isAccountRiskSafe && e.searchParams.append(Kr, Number(this.isAccountRiskSafe).toString())),
                this.intendedExperience && e.searchParams.append(zr, this.intendedExperience),
                e
            }
            throw new Error("Not implemented")
        }
        async fetchTreatments(e=!1) {
            let t;
            if (this.isFastlaneEnabled) {
                const n = !!this.merchantId
                  , r = !!this.hashedEmail
                  , o = void 0 !== this.accountType;
                if (n && r && o) {
                    const n = this.getCacheKey();
                    if (!n)
                        return;
                    if (Object.keys(this.cache).includes(n) && !e)
                        return this.cache[n];
                    {
                        const e = this.getURL();
                        er.setCheckpoint(er.CHECKPOINTS.FETCH_EXPERIMENTS),
                        Object.keys(this.abortControllers).includes(n) && (this.abortControllers[n].abort(),
                        delete this.abortControllers[n],
                        delete this.cache[n]);
                        try {
                            this.abortControllers[n] = new AbortController,
                            this.cache[n] = nr(e, {
                                method: "GET",
                                headers: {
                                    "Content-Type": "application/json"
                                },
                                signal: this.abortControllers[n].signal,
                                timeout: !0,
                                responseValidationFunction: Wr
                            }).then((async e => (await e.json()).treatments)).finally(( () => {
                                const e = er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.FETCH_EXPERIMENTS);
                                this.logger.track({
                                    event_name: "axo_fetch_experiments",
                                    duration: e,
                                    event_type: "im",
                                    event_category: "fetch_experiment"
                                })
                            }
                            )),
                            t = await this.cache[n]
                        } catch (e) {
                            this.logger.track({
                                event_name: this.errorEventName,
                                int_error_desc: Ur(e)
                            }),
                            delete this.cache[n],
                            delete this.abortControllers[n]
                        } finally {
                            return t
                        }
                    }
                } else
                    this.logger.track({
                        event_name: "axo_error_fetching_treatments",
                        int_error_desc: JSON.stringify({
                            hasMerchantId: n,
                            hasHashedEmail: r,
                            hasAccountType: o
                        })
                    })
            }
            return t
        }
        async getActiveTreatmentByExperimentId() {
            if (this.isFastlaneEnabled) {
                const e = await this.fetchTreatments();
                return null == e ? void 0 : e.reduce(( (e, t) => {
                    const {experiment_id: n} = t;
                    return e[n] = t,
                    e
                }
                ), {})
            }
        }
        async getActiveExperimentIdByName() {
            if (this.isFastlaneEnabled) {
                const e = await this.fetchTreatments();
                return null == e ? void 0 : e.reduce(( (e, t) => {
                    const {experiment_id: n, experiment_name: r} = t;
                    return e[r] = n,
                    e
                }
                ), {})
            }
        }
        async getActiveTreatment(e) {
            if (this.isFastlaneEnabled)
                try {
                    const t = await this.getActiveTreatmentByExperimentId()
                      , n = await this.getActiveExperimentIdByName();
                    if (!n || !t)
                        throw new Error("Failed to get treatments");
                    return t[n[e]]
                } catch (e) {
                    return void this.logger.track({
                        event_name: "axo_error_getting_active_treatments",
                        int_error_desc: Ur(e)
                    })
                }
        }
        async getActiveTreatmentName(e) {
            if (this.isFastlaneEnabled) {
                const t = await this.getActiveTreatment(e);
                return null == t ? void 0 : t.treatment_name
            }
        }
        dispose() {
            this.isFastlaneEnabled && (Object.keys(this.abortControllers).forEach((e => {
                this.abortControllers[e].abort()
            }
            )),
            this.abortControllers = {},
            this.cache = {},
            this.subscriptions.forEach((e => {
                e()
            }
            )),
            this.subscriptions = [])
        }
    }
    let Xr;
    function Zr() {
        return Xr || (Xr = new Yr),
        Xr
    }
    const qr = {
        functionKeyValues: ["F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "F13", "F14", "F15"]
    }
      , Jr = (e, t) => {
        if (!Array.isArray(e) || 0 === e.length)
            return t;
        const n = (e => e.length < 1 ? {} : e.reduce(( (e, t) => {
            var n;
            const r = t.split(":")
              , o = r[0].toUpperCase()
              , i = null === (n = r[1]) || void 0 === n ? void 0 : n.toUpperCase();
            return i && e[o] ? e[o] = Object.assign(Object.assign({}, e[o]), {
                [i]: !0
            }) : e[o] = !i || {
                [i]: !0
            },
            e
        }
        ), {}))(e);
        return t.map((e => {
            const t = e.paymentToken.paymentSource.card.brand;
            return n[t] ? e : Object.assign(Object.assign({}, e), {
                disabled: !0
            })
        }
        ))
    }
    ;
    function Qr(e) {
        return Object.assign(Object.assign({}, e), {
            toBtSdkType: () => e,
            toPpSdkType() {
                return t = e,
                Object.assign(Object.assign({}, t), {
                    fullName: `${t.firstName || ""} ${t.lastName || ""}`.trim()
                });
                var t
            }
        })
    }
    function eo(e) {
        const {firstName: t, lastName: n, fullName: r} = e;
        return t && n && !r ? {
            firstName: t,
            lastName: n,
            fullName: `${t} ${n}`.trim()
        } : !t && !n || t && n ? e : {
            fullName: r
        }
    }
    function to(e, t) {
        const n = {};
        for (const r in t)
            if (Object.prototype.hasOwnProperty.call(e, r)) {
                n[t[r]] = e[r]
            }
        return n
    }
    "function" == typeof SuppressedError && SuppressedError;
    var no = function(e) {
        try {
            return !!e()
        } catch (e) {
            return !0
        }
    }
      , ro = !no((function() {
        var e = function() {}
        .bind();
        return "function" != typeof e || e.hasOwnProperty("prototype")
    }
    ))
      , oo = ro
      , io = Function.prototype
      , ao = io.call
      , so = oo && io.bind.bind(ao, ao)
      , lo = oo ? so : function(e) {
        return function() {
            return ao.apply(e, arguments)
        }
    }
      , co = lo
      , uo = co({}.toString)
      , po = co("".slice)
      , ho = function(e) {
        return po(uo(e), 8, -1)
    }
      , fo = no
      , mo = ho
      , go = Object
      , yo = lo("".split)
      , vo = fo((function() {
        return !go("z").propertyIsEnumerable(0)
    }
    )) ? function(e) {
        return "String" === mo(e) ? yo(e, "") : go(e)
    }
    : go
      , bo = function(e) {
        return null == e
    }
      , Eo = bo
      , _o = TypeError
      , Ao = function(e) {
        if (Eo(e))
            throw new _o("Can't call method on " + e);
        return e
    }
      , wo = vo
      , So = Ao
      , Co = function(e) {
        return wo(So(e))
    }
      , Oo = function(e) {
        return e && e.Math === Math && e
    }
      , xo = Oo("object" == typeof globalThis && globalThis) || Oo("object" == typeof window && window) || Oo("object" == typeof self && self) || Oo("object" == typeof at && at) || Oo("object" == typeof at && at) || function() {
        return this
    }() || Function("return this")()
      , To = {
        exports: {}
    }
      , No = xo
      , ko = Object.defineProperty
      , Io = function(e, t) {
        try {
            ko(No, e, {
                value: t,
                configurable: !0,
                writable: !0
            })
        } catch (n) {
            No[e] = t
        }
        return t
    }
      , Ro = xo
      , Po = Io
      , Lo = "__core-js_shared__"
      , Do = To.exports = Ro[Lo] || Po(Lo, {});
    (Do.versions || (Do.versions = [])).push({
        version: "3.36.0",
        mode: "global",
        copyright: "© 2014-2024 Denis Pushkarev (zloirock.ru)",
        license: "https://github.com/zloirock/core-js/blob/v3.36.0/LICENSE",
        source: "https://github.com/zloirock/core-js"
    });
    var Mo, Fo, Bo = To.exports, jo = Bo, Uo = function(e, t) {
        return jo[e] || (jo[e] = t || {})
    }, Go = Ao, $o = Object, Vo = function(e) {
        return $o(Go(e))
    }, Ho = Vo, Ko = lo({}.hasOwnProperty), zo = Object.hasOwn || function(e, t) {
        return Ko(Ho(e), t)
    }
    , Wo = lo, Yo = 0, Xo = Math.random(), Zo = Wo(1..toString), qo = function(e) {
        return "Symbol(" + (void 0 === e ? "" : e) + ")_" + Zo(++Yo + Xo, 36)
    }, Jo = "undefined" != typeof navigator && String(navigator.userAgent) || "", Qo = xo, ei = Jo, ti = Qo.process, ni = Qo.Deno, ri = ti && ti.versions || ni && ni.version, oi = ri && ri.v8;
    oi && (Fo = (Mo = oi.split("."))[0] > 0 && Mo[0] < 4 ? 1 : +(Mo[0] + Mo[1])),
    !Fo && ei && (!(Mo = ei.match(/Edge\/(\d+)/)) || Mo[1] >= 74) && (Mo = ei.match(/Chrome\/(\d+)/)) && (Fo = +Mo[1]);
    var ii = Fo
      , ai = ii
      , si = no
      , li = xo.String
      , ci = !!Object.getOwnPropertySymbols && !si((function() {
        var e = Symbol("symbol detection");
        return !li(e) || !(Object(e)instanceof Symbol) || !Symbol.sham && ai && ai < 41
    }
    ))
      , di = ci && !Symbol.sham && "symbol" == typeof Symbol.iterator
      , ui = Uo
      , pi = zo
      , hi = qo
      , fi = ci
      , mi = di
      , gi = xo.Symbol
      , yi = ui("wks")
      , vi = mi ? gi.for || gi : gi && gi.withoutSetter || hi
      , bi = function(e) {
        return pi(yi, e) || (yi[e] = fi && pi(gi, e) ? gi[e] : vi("Symbol." + e)),
        yi[e]
    }
      , Ei = "object" == typeof document && document.all
      , _i = void 0 === Ei && void 0 !== Ei ? function(e) {
        return "function" == typeof e || e === Ei
    }
    : function(e) {
        return "function" == typeof e
    }
      , Ai = _i
      , wi = function(e) {
        return "object" == typeof e ? null !== e : Ai(e)
    }
      , Si = wi
      , Ci = String
      , Oi = TypeError
      , xi = function(e) {
        if (Si(e))
            return e;
        throw new Oi(Ci(e) + " is not an object")
    }
      , Ti = {}
      , Ni = !no((function() {
        return 7 !== Object.defineProperty({}, 1, {
            get: function() {
                return 7
            }
        })[1]
    }
    ))
      , ki = Ni && no((function() {
        return 42 !== Object.defineProperty((function() {}
        ), "prototype", {
            value: 42,
            writable: !1
        }).prototype
    }
    ))
      , Ii = {}
      , Ri = wi
      , Pi = xo.document
      , Li = Ri(Pi) && Ri(Pi.createElement)
      , Di = function(e) {
        return Li ? Pi.createElement(e) : {}
    }
      , Mi = Di
      , Fi = !Ni && !no((function() {
        return 7 !== Object.defineProperty(Mi("div"), "a", {
            get: function() {
                return 7
            }
        }).a
    }
    ))
      , Bi = ro
      , ji = Function.prototype.call
      , Ui = Bi ? ji.bind(ji) : function() {
        return ji.apply(ji, arguments)
    }
      , Gi = xo
      , $i = _i
      , Vi = function(e, t) {
        return arguments.length < 2 ? (n = Gi[e],
        $i(n) ? n : void 0) : Gi[e] && Gi[e][t];
        var n
    }
      , Hi = lo({}.isPrototypeOf)
      , Ki = Vi
      , zi = _i
      , Wi = Hi
      , Yi = Object
      , Xi = di ? function(e) {
        return "symbol" == typeof e
    }
    : function(e) {
        var t = Ki("Symbol");
        return zi(t) && Wi(t.prototype, Yi(e))
    }
      , Zi = String
      , qi = function(e) {
        try {
            return Zi(e)
        } catch (e) {
            return "Object"
        }
    }
      , Ji = _i
      , Qi = qi
      , ea = TypeError
      , ta = function(e) {
        if (Ji(e))
            return e;
        throw new ea(Qi(e) + " is not a function")
    }
      , na = ta
      , ra = bo
      , oa = function(e, t) {
        var n = e[t];
        return ra(n) ? void 0 : na(n)
    }
      , ia = Ui
      , aa = _i
      , sa = wi
      , la = TypeError
      , ca = Ui
      , da = wi
      , ua = Xi
      , pa = oa
      , ha = function(e, t) {
        var n, r;
        if ("string" === t && aa(n = e.toString) && !sa(r = ia(n, e)))
            return r;
        if (aa(n = e.valueOf) && !sa(r = ia(n, e)))
            return r;
        if ("string" !== t && aa(n = e.toString) && !sa(r = ia(n, e)))
            return r;
        throw new la("Can't convert object to primitive value")
    }
      , fa = TypeError
      , ma = bi("toPrimitive")
      , ga = function(e, t) {
        if (!da(e) || ua(e))
            return e;
        var n, r = pa(e, ma);
        if (r) {
            if (void 0 === t && (t = "default"),
            n = ca(r, e, t),
            !da(n) || ua(n))
                return n;
            throw new fa("Can't convert object to primitive value")
        }
        return void 0 === t && (t = "number"),
        ha(e, t)
    }
      , ya = ga
      , va = Xi
      , ba = function(e) {
        var t = ya(e, "string");
        return va(t) ? t : t + ""
    }
      , Ea = Ni
      , _a = Fi
      , Aa = ki
      , wa = xi
      , Sa = ba
      , Ca = TypeError
      , Oa = Object.defineProperty
      , xa = Object.getOwnPropertyDescriptor
      , Ta = "enumerable"
      , Na = "configurable"
      , ka = "writable";
    Ii.f = Ea ? Aa ? function(e, t, n) {
        if (wa(e),
        t = Sa(t),
        wa(n),
        "function" == typeof e && "prototype" === t && "value"in n && ka in n && !n[ka]) {
            var r = xa(e, t);
            r && r[ka] && (e[t] = n.value,
            n = {
                configurable: Na in n ? n[Na] : r[Na],
                enumerable: Ta in n ? n[Ta] : r[Ta],
                writable: !1
            })
        }
        return Oa(e, t, n)
    }
    : Oa : function(e, t, n) {
        if (wa(e),
        t = Sa(t),
        wa(n),
        _a)
            try {
                return Oa(e, t, n)
            } catch (e) {}
        if ("get"in n || "set"in n)
            throw new Ca("Accessors not supported");
        return "value"in n && (e[t] = n.value),
        e
    }
    ;
    var Ia = Math.ceil
      , Ra = Math.floor
      , Pa = Math.trunc || function(e) {
        var t = +e;
        return (t > 0 ? Ra : Ia)(t)
    }
      , La = function(e) {
        var t = +e;
        return t != t || 0 === t ? 0 : Pa(t)
    }
      , Da = La
      , Ma = Math.max
      , Fa = Math.min
      , Ba = function(e, t) {
        var n = Da(e);
        return n < 0 ? Ma(n + t, 0) : Fa(n, t)
    }
      , ja = La
      , Ua = Math.min
      , Ga = function(e) {
        var t = ja(e);
        return t > 0 ? Ua(t, 9007199254740991) : 0
    }
      , $a = Ga
      , Va = function(e) {
        return $a(e.length)
    }
      , Ha = Co
      , Ka = Ba
      , za = Va
      , Wa = function(e) {
        return function(t, n, r) {
            var o = Ha(t)
              , i = za(o);
            if (0 === i)
                return !e && -1;
            var a, s = Ka(r, i);
            if (e && n != n) {
                for (; i > s; )
                    if ((a = o[s++]) != a)
                        return !0
            } else
                for (; i > s; s++)
                    if ((e || s in o) && o[s] === n)
                        return e || s || 0;
            return !e && -1
        }
    }
      , Ya = {
        includes: Wa(!0),
        indexOf: Wa(!1)
    }
      , Xa = {}
      , Za = zo
      , qa = Co
      , Ja = Ya.indexOf
      , Qa = Xa
      , es = lo([].push)
      , ts = function(e, t) {
        var n, r = qa(e), o = 0, i = [];
        for (n in r)
            !Za(Qa, n) && Za(r, n) && es(i, n);
        for (; t.length > o; )
            Za(r, n = t[o++]) && (~Ja(i, n) || es(i, n));
        return i
    }
      , ns = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"]
      , rs = ts
      , os = ns
      , is = Object.keys || function(e) {
        return rs(e, os)
    }
      , as = Ni
      , ss = ki
      , ls = Ii
      , cs = xi
      , ds = Co
      , us = is;
    Ti.f = as && !ss ? Object.defineProperties : function(e, t) {
        cs(e);
        for (var n, r = ds(t), o = us(t), i = o.length, a = 0; i > a; )
            ls.f(e, n = o[a++], r[n]);
        return e
    }
    ;
    var ps, hs = Vi("document", "documentElement"), fs = qo, ms = Uo("keys"), gs = function(e) {
        return ms[e] || (ms[e] = fs(e))
    }, ys = xi, vs = Ti, bs = ns, Es = Xa, _s = hs, As = Di, ws = "prototype", Ss = "script", Cs = gs("IE_PROTO"), Os = function() {}, xs = function(e) {
        return "<" + Ss + ">" + e + "</" + Ss + ">"
    }, Ts = function(e) {
        e.write(xs("")),
        e.close();
        var t = e.parentWindow.Object;
        return e = null,
        t
    }, Ns = function() {
        try {
            ps = new ActiveXObject("htmlfile")
        } catch (e) {}
        var e, t, n;
        Ns = "undefined" != typeof document ? document.domain && ps ? Ts(ps) : (t = As("iframe"),
        n = "java" + Ss + ":",
        t.style.display = "none",
        _s.appendChild(t),
        t.src = String(n),
        (e = t.contentWindow.document).open(),
        e.write(xs("document.F=Object")),
        e.close(),
        e.F) : Ts(ps);
        for (var r = bs.length; r--; )
            delete Ns[ws][bs[r]];
        return Ns()
    };
    Es[Cs] = !0;
    var ks = Object.create || function(e, t) {
        var n;
        return null !== e ? (Os[ws] = ys(e),
        n = new Os,
        Os[ws] = null,
        n[Cs] = e) : n = Ns(),
        void 0 === t ? n : vs.f(n, t)
    }
      , Is = bi
      , Rs = ks
      , Ps = Ii.f
      , Ls = Is("unscopables")
      , Ds = Array.prototype;
    void 0 === Ds[Ls] && Ps(Ds, Ls, {
        configurable: !0,
        value: Rs(null)
    });
    var Ms, Fs, Bs, js = function(e) {
        Ds[Ls][e] = !0
    }, Us = {}, Gs = _i, $s = xo.WeakMap, Vs = Gs($s) && /native code/.test(String($s)), Hs = function(e, t) {
        return {
            enumerable: !(1 & e),
            configurable: !(2 & e),
            writable: !(4 & e),
            value: t
        }
    }, Ks = Ii, zs = Hs, Ws = Ni ? function(e, t, n) {
        return Ks.f(e, t, zs(1, n))
    }
    : function(e, t, n) {
        return e[t] = n,
        e
    }
    , Ys = Vs, Xs = xo, Zs = wi, qs = Ws, Js = zo, Qs = Bo, el = gs, tl = Xa, nl = "Object already initialized", rl = Xs.TypeError, ol = Xs.WeakMap;
    if (Ys || Qs.state) {
        var il = Qs.state || (Qs.state = new ol);
        il.get = il.get,
        il.has = il.has,
        il.set = il.set,
        Ms = function(e, t) {
            if (il.has(e))
                throw new rl(nl);
            return t.facade = e,
            il.set(e, t),
            t
        }
        ,
        Fs = function(e) {
            return il.get(e) || {}
        }
        ,
        Bs = function(e) {
            return il.has(e)
        }
    } else {
        var al = el("state");
        tl[al] = !0,
        Ms = function(e, t) {
            if (Js(e, al))
                throw new rl(nl);
            return t.facade = e,
            qs(e, al, t),
            t
        }
        ,
        Fs = function(e) {
            return Js(e, al) ? e[al] : {}
        }
        ,
        Bs = function(e) {
            return Js(e, al)
        }
    }
    var sl = {
        set: Ms,
        get: Fs,
        has: Bs,
        enforce: function(e) {
            return Bs(e) ? Fs(e) : Ms(e, {})
        },
        getterFor: function(e) {
            return function(t) {
                var n;
                if (!Zs(t) || (n = Fs(t)).type !== e)
                    throw new rl("Incompatible receiver, " + e + " required");
                return n
            }
        }
    }
      , ll = {}
      , cl = {}
      , dl = {}.propertyIsEnumerable
      , ul = Object.getOwnPropertyDescriptor
      , pl = ul && !dl.call({
        1: 2
    }, 1);
    cl.f = pl ? function(e) {
        var t = ul(this, e);
        return !!t && t.enumerable
    }
    : dl;
    var hl = Ni
      , fl = Ui
      , ml = cl
      , gl = Hs
      , yl = Co
      , vl = ba
      , bl = zo
      , El = Fi
      , _l = Object.getOwnPropertyDescriptor;
    ll.f = hl ? _l : function(e, t) {
        if (e = yl(e),
        t = vl(t),
        El)
            try {
                return _l(e, t)
            } catch (e) {}
        if (bl(e, t))
            return gl(!fl(ml.f, e, t), e[t])
    }
    ;
    var Al = {
        exports: {}
    }
      , wl = Ni
      , Sl = zo
      , Cl = Function.prototype
      , Ol = wl && Object.getOwnPropertyDescriptor
      , xl = Sl(Cl, "name")
      , Tl = {
        EXISTS: xl,
        PROPER: xl && "something" === function() {}
        .name,
        CONFIGURABLE: xl && (!wl || wl && Ol(Cl, "name").configurable)
    }
      , Nl = _i
      , kl = Bo
      , Il = lo(Function.toString);
    Nl(kl.inspectSource) || (kl.inspectSource = function(e) {
        return Il(e)
    }
    );
    var Rl = kl.inspectSource
      , Pl = lo
      , Ll = no
      , Dl = _i
      , Ml = zo
      , Fl = Ni
      , Bl = Tl.CONFIGURABLE
      , jl = Rl
      , Ul = sl.enforce
      , Gl = sl.get
      , $l = String
      , Vl = Object.defineProperty
      , Hl = Pl("".slice)
      , Kl = Pl("".replace)
      , zl = Pl([].join)
      , Wl = Fl && !Ll((function() {
        return 8 !== Vl((function() {}
        ), "length", {
            value: 8
        }).length
    }
    ))
      , Yl = String(String).split("String")
      , Xl = Al.exports = function(e, t, n) {
        "Symbol(" === Hl($l(t), 0, 7) && (t = "[" + Kl($l(t), /^Symbol\(([^)]*)\).*$/, "$1") + "]"),
        n && n.getter && (t = "get " + t),
        n && n.setter && (t = "set " + t),
        (!Ml(e, "name") || Bl && e.name !== t) && (Fl ? Vl(e, "name", {
            value: t,
            configurable: !0
        }) : e.name = t),
        Wl && n && Ml(n, "arity") && e.length !== n.arity && Vl(e, "length", {
            value: n.arity
        });
        try {
            n && Ml(n, "constructor") && n.constructor ? Fl && Vl(e, "prototype", {
                writable: !1
            }) : e.prototype && (e.prototype = void 0)
        } catch (e) {}
        var r = Ul(e);
        return Ml(r, "source") || (r.source = zl(Yl, "string" == typeof t ? t : "")),
        e
    }
    ;
    Function.prototype.toString = Xl((function() {
        return Dl(this) && Gl(this).source || jl(this)
    }
    ), "toString");
    var Zl = Al.exports
      , ql = _i
      , Jl = Ii
      , Ql = Zl
      , ec = Io
      , tc = function(e, t, n, r) {
        r || (r = {});
        var o = r.enumerable
          , i = void 0 !== r.name ? r.name : t;
        if (ql(n) && Ql(n, i, r),
        r.global)
            o ? e[t] = n : ec(t, n);
        else {
            try {
                r.unsafe ? e[t] && (o = !0) : delete e[t]
            } catch (e) {}
            o ? e[t] = n : Jl.f(e, t, {
                value: n,
                enumerable: !1,
                configurable: !r.nonConfigurable,
                writable: !r.nonWritable
            })
        }
        return e
    }
      , nc = {}
      , rc = ts
      , oc = ns.concat("length", "prototype");
    nc.f = Object.getOwnPropertyNames || function(e) {
        return rc(e, oc)
    }
    ;
    var ic = {};
    ic.f = Object.getOwnPropertySymbols;
    var ac, sc, lc, cc = Vi, dc = nc, uc = ic, pc = xi, hc = lo([].concat), fc = cc("Reflect", "ownKeys") || function(e) {
        var t = dc.f(pc(e))
          , n = uc.f;
        return n ? hc(t, n(e)) : t
    }
    , mc = zo, gc = fc, yc = ll, vc = Ii, bc = no, Ec = _i, _c = /#|\.prototype\./, Ac = function(e, t) {
        var n = Sc[wc(e)];
        return n === Oc || n !== Cc && (Ec(t) ? bc(t) : !!t)
    }, wc = Ac.normalize = function(e) {
        return String(e).replace(_c, ".").toLowerCase()
    }
    , Sc = Ac.data = {}, Cc = Ac.NATIVE = "N", Oc = Ac.POLYFILL = "P", xc = Ac, Tc = xo, Nc = ll.f, kc = Ws, Ic = tc, Rc = Io, Pc = function(e, t, n) {
        for (var r = gc(t), o = vc.f, i = yc.f, a = 0; a < r.length; a++) {
            var s = r[a];
            mc(e, s) || n && mc(n, s) || o(e, s, i(t, s))
        }
    }, Lc = xc, Dc = function(e, t) {
        var n, r, o, i, a, s = e.target, l = e.global, c = e.stat;
        if (n = l ? Tc : c ? Tc[s] || Rc(s, {}) : Tc[s] && Tc[s].prototype)
            for (r in t) {
                if (i = t[r],
                o = e.dontCallGetSet ? (a = Nc(n, r)) && a.value : n[r],
                !Lc(l ? r : s + (c ? "." : "#") + r, e.forced) && void 0 !== o) {
                    if (typeof i == typeof o)
                        continue;
                    Pc(i, o)
                }
                (e.sham || o && o.sham) && kc(i, "sham", !0),
                Ic(n, r, i, e)
            }
    }, Mc = !no((function() {
        function e() {}
        return e.prototype.constructor = null,
        Object.getPrototypeOf(new e) !== e.prototype
    }
    )), Fc = zo, Bc = _i, jc = Vo, Uc = Mc, Gc = gs("IE_PROTO"), $c = Object, Vc = $c.prototype, Hc = Uc ? $c.getPrototypeOf : function(e) {
        var t = jc(e);
        if (Fc(t, Gc))
            return t[Gc];
        var n = t.constructor;
        return Bc(n) && t instanceof n ? n.prototype : t instanceof $c ? Vc : null
    }
    , Kc = no, zc = _i, Wc = wi, Yc = Hc, Xc = tc, Zc = bi("iterator"), qc = !1;
    [].keys && ("next"in (lc = [].keys()) ? (sc = Yc(Yc(lc))) !== Object.prototype && (ac = sc) : qc = !0);
    var Jc = !Wc(ac) || Kc((function() {
        var e = {};
        return ac[Zc].call(e) !== e
    }
    ));
    Jc && (ac = {}),
    zc(ac[Zc]) || Xc(ac, Zc, (function() {
        return this
    }
    ));
    var Qc = {
        IteratorPrototype: ac,
        BUGGY_SAFARI_ITERATORS: qc
    }
      , ed = Ii.f
      , td = zo
      , nd = bi("toStringTag")
      , rd = function(e, t, n) {
        e && !n && (e = e.prototype),
        e && !td(e, nd) && ed(e, nd, {
            configurable: !0,
            value: t
        })
    }
      , od = Qc.IteratorPrototype
      , id = ks
      , ad = Hs
      , sd = rd
      , ld = Us
      , cd = function() {
        return this
    }
      , dd = lo
      , ud = ta
      , pd = wi
      , hd = function(e) {
        return pd(e) || null === e
    }
      , fd = String
      , md = TypeError
      , gd = function(e, t, n) {
        try {
            return dd(ud(Object.getOwnPropertyDescriptor(e, t)[n]))
        } catch (e) {}
    }
      , yd = xi
      , vd = function(e) {
        if (hd(e))
            return e;
        throw new md("Can't set " + fd(e) + " as a prototype")
    }
      , bd = Object.setPrototypeOf || ("__proto__"in {} ? function() {
        var e, t = !1, n = {};
        try {
            (e = gd(Object.prototype, "__proto__", "set"))(n, []),
            t = n instanceof Array
        } catch (e) {}
        return function(n, r) {
            return yd(n),
            vd(r),
            t ? e(n, r) : n.__proto__ = r,
            n
        }
    }() : void 0)
      , Ed = Dc
      , _d = Ui
      , Ad = _i
      , wd = function(e, t, n, r) {
        var o = t + " Iterator";
        return e.prototype = id(od, {
            next: ad(+!r, n)
        }),
        sd(e, o, !1),
        ld[o] = cd,
        e
    }
      , Sd = Hc
      , Cd = bd
      , Od = rd
      , xd = Ws
      , Td = tc
      , Nd = Us
      , kd = Tl.PROPER
      , Id = Tl.CONFIGURABLE
      , Rd = Qc.IteratorPrototype
      , Pd = Qc.BUGGY_SAFARI_ITERATORS
      , Ld = bi("iterator")
      , Dd = "keys"
      , Md = "values"
      , Fd = "entries"
      , Bd = function() {
        return this
    }
      , jd = function(e, t, n, r, o, i, a) {
        wd(n, t, r);
        var s, l, c, d = function(e) {
            if (e === o && m)
                return m;
            if (!Pd && e && e in h)
                return h[e];
            switch (e) {
            case Dd:
            case Md:
            case Fd:
                return function() {
                    return new n(this,e)
                }
            }
            return function() {
                return new n(this)
            }
        }, u = t + " Iterator", p = !1, h = e.prototype, f = h[Ld] || h["@@iterator"] || o && h[o], m = !Pd && f || d(o), g = "Array" === t && h.entries || f;
        if (g && (s = Sd(g.call(new e))) !== Object.prototype && s.next && (Sd(s) !== Rd && (Cd ? Cd(s, Rd) : Ad(s[Ld]) || Td(s, Ld, Bd)),
        Od(s, u, !0)),
        kd && o === Md && f && f.name !== Md && (Id ? xd(h, "name", Md) : (p = !0,
        m = function() {
            return _d(f, this)
        }
        )),
        o)
            if (l = {
                values: d(Md),
                keys: i ? m : d(Dd),
                entries: d(Fd)
            },
            a)
                for (c in l)
                    (Pd || p || !(c in h)) && Td(h, c, l[c]);
            else
                Ed({
                    target: t,
                    proto: !0,
                    forced: Pd || p
                }, l);
        return h[Ld] !== m && Td(h, Ld, m, {
            name: o
        }),
        Nd[t] = m,
        l
    }
      , Ud = function(e, t) {
        return {
            value: e,
            done: t
        }
    }
      , Gd = Co
      , $d = js
      , Vd = Us
      , Hd = sl
      , Kd = Ii.f
      , zd = jd
      , Wd = Ud
      , Yd = Ni
      , Xd = "Array Iterator"
      , Zd = Hd.set
      , qd = Hd.getterFor(Xd)
      , Jd = zd(Array, "Array", (function(e, t) {
        Zd(this, {
            type: Xd,
            target: Gd(e),
            index: 0,
            kind: t
        })
    }
    ), (function() {
        var e = qd(this)
          , t = e.target
          , n = e.index++;
        if (!t || n >= t.length)
            return e.target = void 0,
            Wd(void 0, !0);
        switch (e.kind) {
        case "keys":
            return Wd(n, !1);
        case "values":
            return Wd(t[n], !1)
        }
        return Wd([n, t[n]], !1)
    }
    ), "values")
      , Qd = Vd.Arguments = Vd.Array;
    if ($d("keys"),
    $d("values"),
    $d("entries"),
    Yd && "values" !== Qd.name)
        try {
            Kd(Qd, "name", {
                value: "values"
            })
        } catch (e) {}
    var eu = ho
      , tu = lo
      , nu = function(e) {
        if ("Function" === eu(e))
            return tu(e)
    }
      , ru = ta
      , ou = ro
      , iu = nu(nu.bind)
      , au = function(e, t) {
        return ru(e),
        void 0 === t ? e : ou ? iu(e, t) : function() {
            return e.apply(t, arguments)
        }
    }
      , su = ho
      , lu = Array.isArray || function(e) {
        return "Array" === su(e)
    }
      , cu = {};
    cu[bi("toStringTag")] = "z";
    var du = "[object z]" === String(cu)
      , uu = du
      , pu = _i
      , hu = ho
      , fu = bi("toStringTag")
      , mu = Object
      , gu = "Arguments" === hu(function() {
        return arguments
    }())
      , yu = uu ? hu : function(e) {
        var t, n, r;
        return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (n = function(e, t) {
            try {
                return e[t]
            } catch (e) {}
        }(t = mu(e), fu)) ? n : gu ? hu(t) : "Object" === (r = hu(t)) && pu(t.callee) ? "Arguments" : r
    }
      , vu = lo
      , bu = no
      , Eu = _i
      , _u = yu
      , Au = Rl
      , wu = function() {}
      , Su = Vi("Reflect", "construct")
      , Cu = /^\s*(?:class|function)\b/
      , Ou = vu(Cu.exec)
      , xu = !Cu.test(wu)
      , Tu = function(e) {
        if (!Eu(e))
            return !1;
        try {
            return Su(wu, [], e),
            !0
        } catch (e) {
            return !1
        }
    }
      , Nu = function(e) {
        if (!Eu(e))
            return !1;
        switch (_u(e)) {
        case "AsyncFunction":
        case "GeneratorFunction":
        case "AsyncGeneratorFunction":
            return !1
        }
        try {
            return xu || !!Ou(Cu, Au(e))
        } catch (e) {
            return !0
        }
    };
    Nu.sham = !0;
    var ku = !Su || bu((function() {
        var e;
        return Tu(Tu.call) || !Tu(Object) || !Tu((function() {
            e = !0
        }
        )) || e
    }
    )) ? Nu : Tu
      , Iu = lu
      , Ru = ku
      , Pu = wi
      , Lu = bi("species")
      , Du = Array
      , Mu = function(e) {
        var t;
        return Iu(e) && (t = e.constructor,
        (Ru(t) && (t === Du || Iu(t.prototype)) || Pu(t) && null === (t = t[Lu])) && (t = void 0)),
        void 0 === t ? Du : t
    }
      , Fu = function(e, t) {
        return new (Mu(e))(0 === t ? 0 : t)
    }
      , Bu = au
      , ju = vo
      , Uu = Vo
      , Gu = Va
      , $u = Fu
      , Vu = lo([].push)
      , Hu = function(e) {
        var t = 1 === e
          , n = 2 === e
          , r = 3 === e
          , o = 4 === e
          , i = 6 === e
          , a = 7 === e
          , s = 5 === e || i;
        return function(l, c, d, u) {
            for (var p, h, f = Uu(l), m = ju(f), g = Gu(m), y = Bu(c, d), v = 0, b = u || $u, E = t ? b(l, g) : n || a ? b(l, 0) : void 0; g > v; v++)
                if ((s || v in m) && (h = y(p = m[v], v, f),
                e))
                    if (t)
                        E[v] = h;
                    else if (h)
                        switch (e) {
                        case 3:
                            return !0;
                        case 5:
                            return p;
                        case 6:
                            return v;
                        case 2:
                            Vu(E, p)
                        }
                    else
                        switch (e) {
                        case 4:
                            return !1;
                        case 7:
                            Vu(E, p)
                        }
            return i ? -1 : r || o ? o : E
        }
    }
      , Ku = {
        forEach: Hu(0),
        map: Hu(1),
        filter: Hu(2),
        some: Hu(3),
        every: Hu(4),
        find: Hu(5),
        findIndex: Hu(6),
        filterReject: Hu(7)
    }
      , zu = no
      , Wu = ii
      , Yu = bi("species")
      , Xu = function(e) {
        return Wu >= 51 || !zu((function() {
            var t = [];
            return (t.constructor = {})[Yu] = function() {
                return {
                    foo: 1
                }
            }
            ,
            1 !== t[e](Boolean).foo
        }
        ))
    }
      , Zu = Ku.map;
    Dc({
        target: "Array",
        proto: !0,
        forced: !Xu("map")
    }, {
        map: function(e) {
            return Zu(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var qu = Zl
      , Ju = Ii
      , Qu = function(e, t, n) {
        return n.get && qu(n.get, t, {
            getter: !0
        }),
        n.set && qu(n.set, t, {
            setter: !0
        }),
        Ju.f(e, t, n)
    }
      , ep = Ni
      , tp = Tl.EXISTS
      , np = lo
      , rp = Qu
      , op = Function.prototype
      , ip = np(op.toString)
      , ap = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/
      , sp = np(ap.exec);
    ep && !tp && rp(op, "name", {
        configurable: !0,
        get: function() {
            try {
                return sp(ap, ip(this))[1]
            } catch (e) {
                return ""
            }
        }
    });
    var lp = Ni
      , cp = lo
      , dp = Ui
      , up = no
      , pp = is
      , hp = ic
      , fp = cl
      , mp = Vo
      , gp = vo
      , yp = Object.assign
      , vp = Object.defineProperty
      , bp = cp([].concat)
      , Ep = !yp || up((function() {
        if (lp && 1 !== yp({
            b: 1
        }, yp(vp({}, "a", {
            enumerable: !0,
            get: function() {
                vp(this, "b", {
                    value: 3,
                    enumerable: !1
                })
            }
        }), {
            b: 2
        })).b)
            return !0;
        var e = {}
          , t = {}
          , n = Symbol("assign detection")
          , r = "abcdefghijklmnopqrst";
        return e[n] = 7,
        r.split("").forEach((function(e) {
            t[e] = e
        }
        )),
        7 !== yp({}, e)[n] || pp(yp({}, t)).join("") !== r
    }
    )) ? function(e, t) {
        for (var n = mp(e), r = arguments.length, o = 1, i = hp.f, a = fp.f; r > o; )
            for (var s, l = gp(arguments[o++]), c = i ? bp(pp(l), i(l)) : pp(l), d = c.length, u = 0; d > u; )
                s = c[u++],
                lp && !dp(a, l, s) || (n[s] = l[s]);
        return n
    }
    : yp
      , _p = Ep;
    Dc({
        target: "Object",
        stat: !0,
        arity: 2,
        forced: Object.assign !== _p
    }, {
        assign: _p
    });
    var Ap = yu
      , wp = du ? {}.toString : function() {
        return "[object " + Ap(this) + "]"
    }
    ;
    du || tc(Object.prototype, "toString", wp, {
        unsafe: !0
    });
    var Sp, Cp, Op, xp, Tp = "process" === ho(xo.process), Np = Vi, kp = Qu, Ip = Ni, Rp = bi("species"), Pp = function(e) {
        var t = Np(e);
        Ip && t && !t[Rp] && kp(t, Rp, {
            configurable: !0,
            get: function() {
                return this
            }
        })
    }, Lp = Hi, Dp = TypeError, Mp = function(e, t) {
        if (Lp(t, e))
            return e;
        throw new Dp("Incorrect invocation")
    }, Fp = ku, Bp = qi, jp = TypeError, Up = xi, Gp = function(e) {
        if (Fp(e))
            return e;
        throw new jp(Bp(e) + " is not a constructor")
    }, $p = bo, Vp = bi("species"), Hp = function(e, t) {
        var n, r = Up(e).constructor;
        return void 0 === r || $p(n = Up(r)[Vp]) ? t : Gp(n)
    }, Kp = ro, zp = Function.prototype, Wp = zp.apply, Yp = zp.call, Xp = "object" == typeof Reflect && Reflect.apply || (Kp ? Yp.bind(Wp) : function() {
        return Yp.apply(Wp, arguments)
    }
    ), Zp = lo([].slice), qp = TypeError, Jp = /(?:ipad|iphone|ipod).*applewebkit/i.test(Jo), Qp = xo, eh = Xp, th = au, nh = _i, rh = zo, oh = no, ih = hs, ah = Zp, sh = Di, lh = function(e, t) {
        if (e < t)
            throw new qp("Not enough arguments");
        return e
    }, ch = Jp, dh = Tp, uh = Qp.setImmediate, ph = Qp.clearImmediate, hh = Qp.process, fh = Qp.Dispatch, mh = Qp.Function, gh = Qp.MessageChannel, yh = Qp.String, vh = 0, bh = {}, Eh = "onreadystatechange";
    oh((function() {
        Sp = Qp.location
    }
    ));
    var _h = function(e) {
        if (rh(bh, e)) {
            var t = bh[e];
            delete bh[e],
            t()
        }
    }
      , Ah = function(e) {
        return function() {
            _h(e)
        }
    }
      , wh = function(e) {
        _h(e.data)
    }
      , Sh = function(e) {
        Qp.postMessage(yh(e), Sp.protocol + "//" + Sp.host)
    };
    uh && ph || (uh = function(e) {
        lh(arguments.length, 1);
        var t = nh(e) ? e : mh(e)
          , n = ah(arguments, 1);
        return bh[++vh] = function() {
            eh(t, void 0, n)
        }
        ,
        Cp(vh),
        vh
    }
    ,
    ph = function(e) {
        delete bh[e]
    }
    ,
    dh ? Cp = function(e) {
        hh.nextTick(Ah(e))
    }
    : fh && fh.now ? Cp = function(e) {
        fh.now(Ah(e))
    }
    : gh && !ch ? (xp = (Op = new gh).port2,
    Op.port1.onmessage = wh,
    Cp = th(xp.postMessage, xp)) : Qp.addEventListener && nh(Qp.postMessage) && !Qp.importScripts && Sp && "file:" !== Sp.protocol && !oh(Sh) ? (Cp = Sh,
    Qp.addEventListener("message", wh, !1)) : Cp = Eh in sh("script") ? function(e) {
        ih.appendChild(sh("script"))[Eh] = function() {
            ih.removeChild(this),
            _h(e)
        }
    }
    : function(e) {
        setTimeout(Ah(e), 0)
    }
    );
    var Ch = {
        set: uh,
        clear: ph
    }
      , Oh = xo
      , xh = Ni
      , Th = Object.getOwnPropertyDescriptor
      , Nh = function() {
        this.head = null,
        this.tail = null
    };
    Nh.prototype = {
        add: function(e) {
            var t = {
                item: e,
                next: null
            }
              , n = this.tail;
            n ? n.next = t : this.head = t,
            this.tail = t
        },
        get: function() {
            var e = this.head;
            if (e)
                return null === (this.head = e.next) && (this.tail = null),
                e.item
        }
    };
    var kh, Ih, Rh, Ph, Lh, Dh = Nh, Mh = /ipad|iphone|ipod/i.test(Jo) && "undefined" != typeof Pebble, Fh = /web0s(?!.*chrome)/i.test(Jo), Bh = xo, jh = function(e) {
        if (!xh)
            return Oh[e];
        var t = Th(Oh, e);
        return t && t.value
    }, Uh = au, Gh = Ch.set, $h = Dh, Vh = Jp, Hh = Mh, Kh = Fh, zh = Tp, Wh = Bh.MutationObserver || Bh.WebKitMutationObserver, Yh = Bh.document, Xh = Bh.process, Zh = Bh.Promise, qh = jh("queueMicrotask");
    if (!qh) {
        var Jh = new $h
          , Qh = function() {
            var e, t;
            for (zh && (e = Xh.domain) && e.exit(); t = Jh.get(); )
                try {
                    t()
                } catch (e) {
                    throw Jh.head && kh(),
                    e
                }
            e && e.enter()
        };
        Vh || zh || Kh || !Wh || !Yh ? !Hh && Zh && Zh.resolve ? ((Ph = Zh.resolve(void 0)).constructor = Zh,
        Lh = Uh(Ph.then, Ph),
        kh = function() {
            Lh(Qh)
        }
        ) : zh ? kh = function() {
            Xh.nextTick(Qh)
        }
        : (Gh = Uh(Gh, Bh),
        kh = function() {
            Gh(Qh)
        }
        ) : (Ih = !0,
        Rh = Yh.createTextNode(""),
        new Wh(Qh).observe(Rh, {
            characterData: !0
        }),
        kh = function() {
            Rh.data = Ih = !Ih
        }
        ),
        qh = function(e) {
            Jh.head || kh(),
            Jh.add(e)
        }
    }
    var ef = qh
      , tf = function(e) {
        try {
            return {
                error: !1,
                value: e()
            }
        } catch (e) {
            return {
                error: !0,
                value: e
            }
        }
    }
      , nf = xo.Promise
      , rf = "object" == typeof Deno && Deno && "object" == typeof Deno.version
      , of = !rf && !Tp && "object" == typeof window && "object" == typeof document
      , af = xo
      , sf = nf
      , lf = _i
      , cf = xc
      , df = Rl
      , uf = bi
      , pf = of
      , hf = rf
      , ff = ii;
    sf && sf.prototype;
    var mf = uf("species")
      , gf = !1
      , yf = lf(af.PromiseRejectionEvent)
      , vf = cf("Promise", (function() {
        var e = df(sf)
          , t = e !== String(sf);
        if (!t && 66 === ff)
            return !0;
        if (!ff || ff < 51 || !/native code/.test(e)) {
            var n = new sf((function(e) {
                e(1)
            }
            ))
              , r = function(e) {
                e((function() {}
                ), (function() {}
                ))
            };
            if ((n.constructor = {})[mf] = r,
            !(gf = n.then((function() {}
            ))instanceof r))
                return !0
        }
        return !t && (pf || hf) && !yf
    }
    ))
      , bf = {
        CONSTRUCTOR: vf,
        REJECTION_EVENT: yf,
        SUBCLASSING: gf
    }
      , Ef = {}
      , _f = ta
      , Af = TypeError
      , wf = function(e) {
        var t, n;
        this.promise = new e((function(e, r) {
            if (void 0 !== t || void 0 !== n)
                throw new Af("Bad Promise constructor");
            t = e,
            n = r
        }
        )),
        this.resolve = _f(t),
        this.reject = _f(n)
    };
    Ef.f = function(e) {
        return new wf(e)
    }
    ;
    var Sf, Cf, Of, xf = Dc, Tf = Tp, Nf = xo, kf = Ui, If = tc, Rf = bd, Pf = rd, Lf = Pp, Df = ta, Mf = _i, Ff = wi, Bf = Mp, jf = Hp, Uf = Ch.set, Gf = ef, $f = function(e, t) {
        try {
            1 === arguments.length ? console.error(e) : console.error(e, t)
        } catch (e) {}
    }, Vf = tf, Hf = Dh, Kf = sl, zf = nf, Wf = Ef, Yf = "Promise", Xf = bf.CONSTRUCTOR, Zf = bf.REJECTION_EVENT, qf = bf.SUBCLASSING, Jf = Kf.getterFor(Yf), Qf = Kf.set, em = zf && zf.prototype, tm = zf, nm = em, rm = Nf.TypeError, om = Nf.document, im = Nf.process, am = Wf.f, sm = am, lm = !!(om && om.createEvent && Nf.dispatchEvent), cm = "unhandledrejection", dm = function(e) {
        var t;
        return !(!Ff(e) || !Mf(t = e.then)) && t
    }, um = function(e, t) {
        var n, r, o, i = t.value, a = 1 === t.state, s = a ? e.ok : e.fail, l = e.resolve, c = e.reject, d = e.domain;
        try {
            s ? (a || (2 === t.rejection && gm(t),
            t.rejection = 1),
            !0 === s ? n = i : (d && d.enter(),
            n = s(i),
            d && (d.exit(),
            o = !0)),
            n === e.promise ? c(new rm("Promise-chain cycle")) : (r = dm(n)) ? kf(r, n, l, c) : l(n)) : c(i)
        } catch (e) {
            d && !o && d.exit(),
            c(e)
        }
    }, pm = function(e, t) {
        e.notified || (e.notified = !0,
        Gf((function() {
            for (var n, r = e.reactions; n = r.get(); )
                um(n, e);
            e.notified = !1,
            t && !e.rejection && fm(e)
        }
        )))
    }, hm = function(e, t, n) {
        var r, o;
        lm ? ((r = om.createEvent("Event")).promise = t,
        r.reason = n,
        r.initEvent(e, !1, !0),
        Nf.dispatchEvent(r)) : r = {
            promise: t,
            reason: n
        },
        !Zf && (o = Nf["on" + e]) ? o(r) : e === cm && $f("Unhandled promise rejection", n)
    }, fm = function(e) {
        kf(Uf, Nf, (function() {
            var t, n = e.facade, r = e.value;
            if (mm(e) && (t = Vf((function() {
                Tf ? im.emit("unhandledRejection", r, n) : hm(cm, n, r)
            }
            )),
            e.rejection = Tf || mm(e) ? 2 : 1,
            t.error))
                throw t.value
        }
        ))
    }, mm = function(e) {
        return 1 !== e.rejection && !e.parent
    }, gm = function(e) {
        kf(Uf, Nf, (function() {
            var t = e.facade;
            Tf ? im.emit("rejectionHandled", t) : hm("rejectionhandled", t, e.value)
        }
        ))
    }, ym = function(e, t, n) {
        return function(r) {
            e(t, r, n)
        }
    }, vm = function(e, t, n) {
        e.done || (e.done = !0,
        n && (e = n),
        e.value = t,
        e.state = 2,
        pm(e, !0))
    }, bm = function(e, t, n) {
        if (!e.done) {
            e.done = !0,
            n && (e = n);
            try {
                if (e.facade === t)
                    throw new rm("Promise can't be resolved itself");
                var r = dm(t);
                r ? Gf((function() {
                    var n = {
                        done: !1
                    };
                    try {
                        kf(r, t, ym(bm, n, e), ym(vm, n, e))
                    } catch (t) {
                        vm(n, t, e)
                    }
                }
                )) : (e.value = t,
                e.state = 1,
                pm(e, !1))
            } catch (t) {
                vm({
                    done: !1
                }, t, e)
            }
        }
    };
    if (Xf && (nm = (tm = function(e) {
        Bf(this, nm),
        Df(e),
        kf(Sf, this);
        var t = Jf(this);
        try {
            e(ym(bm, t), ym(vm, t))
        } catch (e) {
            vm(t, e)
        }
    }
    ).prototype,
    (Sf = function(e) {
        Qf(this, {
            type: Yf,
            done: !1,
            notified: !1,
            parent: !1,
            reactions: new Hf,
            rejection: !1,
            state: 0,
            value: void 0
        })
    }
    ).prototype = If(nm, "then", (function(e, t) {
        var n = Jf(this)
          , r = am(jf(this, tm));
        return n.parent = !0,
        r.ok = !Mf(e) || e,
        r.fail = Mf(t) && t,
        r.domain = Tf ? im.domain : void 0,
        0 === n.state ? n.reactions.add(r) : Gf((function() {
            um(r, n)
        }
        )),
        r.promise
    }
    )),
    Cf = function() {
        var e = new Sf
          , t = Jf(e);
        this.promise = e,
        this.resolve = ym(bm, t),
        this.reject = ym(vm, t)
    }
    ,
    Wf.f = am = function(e) {
        return e === tm || undefined === e ? new Cf(e) : sm(e)
    }
    ,
    Mf(zf) && em !== Object.prototype)) {
        Of = em.then,
        qf || If(em, "then", (function(e, t) {
            var n = this;
            return new tm((function(e, t) {
                kf(Of, n, e, t)
            }
            )).then(e, t)
        }
        ), {
            unsafe: !0
        });
        try {
            delete em.constructor
        } catch (e) {}
        Rf && Rf(em, nm)
    }
    xf({
        global: !0,
        constructor: !0,
        wrap: !0,
        forced: Xf
    }, {
        Promise: tm
    }),
    Pf(tm, Yf, !1),
    Lf(Yf);
    var Em = Us
      , _m = bi("iterator")
      , Am = Array.prototype
      , wm = function(e) {
        return void 0 !== e && (Em.Array === e || Am[_m] === e)
    }
      , Sm = yu
      , Cm = oa
      , Om = bo
      , xm = Us
      , Tm = bi("iterator")
      , Nm = function(e) {
        if (!Om(e))
            return Cm(e, Tm) || Cm(e, "@@iterator") || xm[Sm(e)]
    }
      , km = Ui
      , Im = ta
      , Rm = xi
      , Pm = qi
      , Lm = Nm
      , Dm = TypeError
      , Mm = function(e, t) {
        var n = arguments.length < 2 ? Lm(e) : t;
        if (Im(n))
            return Rm(km(n, e));
        throw new Dm(Pm(e) + " is not iterable")
    }
      , Fm = Ui
      , Bm = xi
      , jm = oa
      , Um = function(e, t, n) {
        var r, o;
        Bm(e);
        try {
            if (!(r = jm(e, "return"))) {
                if ("throw" === t)
                    throw n;
                return n
            }
            r = Fm(r, e)
        } catch (e) {
            o = !0,
            r = e
        }
        if ("throw" === t)
            throw n;
        if (o)
            throw r;
        return Bm(r),
        n
    }
      , Gm = au
      , $m = Ui
      , Vm = xi
      , Hm = qi
      , Km = wm
      , zm = Va
      , Wm = Hi
      , Ym = Mm
      , Xm = Nm
      , Zm = Um
      , qm = TypeError
      , Jm = function(e, t) {
        this.stopped = e,
        this.result = t
    }
      , Qm = Jm.prototype
      , eg = function(e, t, n) {
        var r, o, i, a, s, l, c, d = n && n.that, u = !(!n || !n.AS_ENTRIES), p = !(!n || !n.IS_RECORD), h = !(!n || !n.IS_ITERATOR), f = !(!n || !n.INTERRUPTED), m = Gm(t, d), g = function(e) {
            return r && Zm(r, "normal", e),
            new Jm(!0,e)
        }, y = function(e) {
            return u ? (Vm(e),
            f ? m(e[0], e[1], g) : m(e[0], e[1])) : f ? m(e, g) : m(e)
        };
        if (p)
            r = e.iterator;
        else if (h)
            r = e;
        else {
            if (!(o = Xm(e)))
                throw new qm(Hm(e) + " is not iterable");
            if (Km(o)) {
                for (i = 0,
                a = zm(e); a > i; i++)
                    if ((s = y(e[i])) && Wm(Qm, s))
                        return s;
                return new Jm(!1)
            }
            r = Ym(e, o)
        }
        for (l = p ? e.next : r.next; !(c = $m(l, r)).done; ) {
            try {
                s = y(c.value)
            } catch (e) {
                Zm(r, "throw", e)
            }
            if ("object" == typeof s && s && Wm(Qm, s))
                return s
        }
        return new Jm(!1)
    }
      , tg = bi("iterator")
      , ng = !1;
    try {
        var rg = 0
          , og = {
            next: function() {
                return {
                    done: !!rg++
                }
            },
            return: function() {
                ng = !0
            }
        };
        og[tg] = function() {
            return this
        }
        ,
        Array.from(og, (function() {
            throw 2
        }
        ))
    } catch (e) {}
    var ig = function(e, t) {
        try {
            if (!t && !ng)
                return !1
        } catch (e) {
            return !1
        }
        var n = !1;
        try {
            var r = {};
            r[tg] = function() {
                return {
                    next: function() {
                        return {
                            done: n = !0
                        }
                    }
                }
            }
            ,
            e(r)
        } catch (e) {}
        return n
    }
      , ag = nf
      , sg = bf.CONSTRUCTOR || !ig((function(e) {
        ag.all(e).then(void 0, (function() {}
        ))
    }
    ))
      , lg = Ui
      , cg = ta
      , dg = Ef
      , ug = tf
      , pg = eg;
    Dc({
        target: "Promise",
        stat: !0,
        forced: sg
    }, {
        all: function(e) {
            var t = this
              , n = dg.f(t)
              , r = n.resolve
              , o = n.reject
              , i = ug((function() {
                var n = cg(t.resolve)
                  , i = []
                  , a = 0
                  , s = 1;
                pg(e, (function(e) {
                    var l = a++
                      , c = !1;
                    s++,
                    lg(n, t, e).then((function(e) {
                        c || (c = !0,
                        i[l] = e,
                        --s || r(i))
                    }
                    ), o)
                }
                )),
                --s || r(i)
            }
            ));
            return i.error && o(i.value),
            n.promise
        }
    });
    var hg = Dc
      , fg = bf.CONSTRUCTOR
      , mg = nf
      , gg = Vi
      , yg = _i
      , vg = tc
      , bg = mg && mg.prototype;
    if (hg({
        target: "Promise",
        proto: !0,
        forced: fg,
        real: !0
    }, {
        catch: function(e) {
            return this.then(void 0, e)
        }
    }),
    yg(mg)) {
        var Eg = gg("Promise").prototype.catch;
        bg.catch !== Eg && vg(bg, "catch", Eg, {
            unsafe: !0
        })
    }
    var _g = Ui
      , Ag = ta
      , wg = Ef
      , Sg = tf
      , Cg = eg;
    Dc({
        target: "Promise",
        stat: !0,
        forced: sg
    }, {
        race: function(e) {
            var t = this
              , n = wg.f(t)
              , r = n.reject
              , o = Sg((function() {
                var o = Ag(t.resolve);
                Cg(e, (function(e) {
                    _g(o, t, e).then(n.resolve, r)
                }
                ))
            }
            ));
            return o.error && r(o.value),
            n.promise
        }
    });
    var Og = Ef;
    Dc({
        target: "Promise",
        stat: !0,
        forced: bf.CONSTRUCTOR
    }, {
        reject: function(e) {
            var t = Og.f(this);
            return (0,
            t.reject)(e),
            t.promise
        }
    });
    var xg = xi
      , Tg = wi
      , Ng = Ef
      , kg = Dc
      , Ig = bf.CONSTRUCTOR
      , Rg = function(e, t) {
        if (xg(e),
        Tg(t) && t.constructor === e)
            return t;
        var n = Ng.f(e);
        return (0,
        n.resolve)(t),
        n.promise
    };
    Vi("Promise"),
    kg({
        target: "Promise",
        stat: !0,
        forced: Ig
    }, {
        resolve: function(e) {
            return Rg(this, e)
        }
    });
    var Pg = yu
      , Lg = String
      , Dg = function(e) {
        if ("Symbol" === Pg(e))
            throw new TypeError("Cannot convert a Symbol value to a string");
        return Lg(e)
    }
      , Mg = xi
      , Fg = function() {
        var e = Mg(this)
          , t = "";
        return e.hasIndices && (t += "d"),
        e.global && (t += "g"),
        e.ignoreCase && (t += "i"),
        e.multiline && (t += "m"),
        e.dotAll && (t += "s"),
        e.unicode && (t += "u"),
        e.unicodeSets && (t += "v"),
        e.sticky && (t += "y"),
        t
    }
      , Bg = no
      , jg = xo.RegExp
      , Ug = Bg((function() {
        var e = jg("a", "y");
        return e.lastIndex = 2,
        null !== e.exec("abcd")
    }
    ))
      , Gg = Ug || Bg((function() {
        return !jg("a", "y").sticky
    }
    ))
      , $g = Ug || Bg((function() {
        var e = jg("^r", "gy");
        return e.lastIndex = 2,
        null !== e.exec("str")
    }
    ))
      , Vg = {
        BROKEN_CARET: $g,
        MISSED_STICKY: Gg,
        UNSUPPORTED_Y: Ug
    }
      , Hg = no
      , Kg = xo.RegExp
      , zg = Hg((function() {
        var e = Kg(".", "s");
        return !(e.dotAll && e.test("\n") && "s" === e.flags)
    }
    ))
      , Wg = no
      , Yg = xo.RegExp
      , Xg = Wg((function() {
        var e = Yg("(?<a>b)", "g");
        return "b" !== e.exec("b").groups.a || "bc" !== "b".replace(e, "$<a>c")
    }
    ))
      , Zg = Ui
      , qg = lo
      , Jg = Dg
      , Qg = Fg
      , ey = Vg
      , ty = ks
      , ny = sl.get
      , ry = zg
      , oy = Xg
      , iy = Uo("native-string-replace", String.prototype.replace)
      , ay = RegExp.prototype.exec
      , sy = ay
      , ly = qg("".charAt)
      , cy = qg("".indexOf)
      , dy = qg("".replace)
      , uy = qg("".slice)
      , py = function() {
        var e = /a/
          , t = /b*/g;
        return Zg(ay, e, "a"),
        Zg(ay, t, "a"),
        0 !== e.lastIndex || 0 !== t.lastIndex
    }()
      , hy = ey.BROKEN_CARET
      , fy = void 0 !== /()??/.exec("")[1];
    (py || fy || hy || ry || oy) && (sy = function(e) {
        var t, n, r, o, i, a, s, l = this, c = ny(l), d = Jg(e), u = c.raw;
        if (u)
            return u.lastIndex = l.lastIndex,
            t = Zg(sy, u, d),
            l.lastIndex = u.lastIndex,
            t;
        var p = c.groups
          , h = hy && l.sticky
          , f = Zg(Qg, l)
          , m = l.source
          , g = 0
          , y = d;
        if (h && (f = dy(f, "y", ""),
        -1 === cy(f, "g") && (f += "g"),
        y = uy(d, l.lastIndex),
        l.lastIndex > 0 && (!l.multiline || l.multiline && "\n" !== ly(d, l.lastIndex - 1)) && (m = "(?: " + m + ")",
        y = " " + y,
        g++),
        n = new RegExp("^(?:" + m + ")",f)),
        fy && (n = new RegExp("^" + m + "$(?!\\s)",f)),
        py && (r = l.lastIndex),
        o = Zg(ay, h ? n : l, y),
        h ? o ? (o.input = uy(o.input, g),
        o[0] = uy(o[0], g),
        o.index = l.lastIndex,
        l.lastIndex += o[0].length) : l.lastIndex = 0 : py && o && (l.lastIndex = l.global ? o.index + o[0].length : r),
        fy && o && o.length > 1 && Zg(iy, o[0], n, (function() {
            for (i = 1; i < arguments.length - 2; i++)
                void 0 === arguments[i] && (o[i] = void 0)
        }
        )),
        o && p)
            for (o.groups = a = ty(null),
            i = 0; i < p.length; i++)
                a[(s = p[i])[0]] = o[s[1]];
        return o
    }
    );
    var my = sy;
    Dc({
        target: "RegExp",
        proto: !0,
        forced: /./.exec !== my
    }, {
        exec: my
    });
    var gy = lo
      , yy = La
      , vy = Dg
      , by = Ao
      , Ey = gy("".charAt)
      , _y = gy("".charCodeAt)
      , Ay = gy("".slice)
      , wy = function(e) {
        return function(t, n) {
            var r, o, i = vy(by(t)), a = yy(n), s = i.length;
            return a < 0 || a >= s ? e ? "" : void 0 : (r = _y(i, a)) < 55296 || r > 56319 || a + 1 === s || (o = _y(i, a + 1)) < 56320 || o > 57343 ? e ? Ey(i, a) : r : e ? Ay(i, a, a + 2) : o - 56320 + (r - 55296 << 10) + 65536
        }
    }
      , Sy = {
        codeAt: wy(!1),
        charAt: wy(!0)
    }
      , Cy = Sy.charAt
      , Oy = Dg
      , xy = sl
      , Ty = jd
      , Ny = Ud
      , ky = "String Iterator"
      , Iy = xy.set
      , Ry = xy.getterFor(ky);
    Ty(String, "String", (function(e) {
        Iy(this, {
            type: ky,
            string: Oy(e),
            index: 0
        })
    }
    ), (function() {
        var e, t = Ry(this), n = t.string, r = t.index;
        return r >= n.length ? Ny(void 0, !0) : (e = Cy(n, r),
        t.index += e.length,
        Ny(e, !1))
    }
    ));
    var Py = Ui
      , Ly = tc
      , Dy = my
      , My = no
      , Fy = bi
      , By = Ws
      , jy = Fy("species")
      , Uy = RegExp.prototype
      , Gy = function(e, t, n, r) {
        var o = Fy(e)
          , i = !My((function() {
            var t = {};
            return t[o] = function() {
                return 7
            }
            ,
            7 !== ""[e](t)
        }
        ))
          , a = i && !My((function() {
            var t = !1
              , n = /a/;
            return "split" === e && ((n = {}).constructor = {},
            n.constructor[jy] = function() {
                return n
            }
            ,
            n.flags = "",
            n[o] = /./[o]),
            n.exec = function() {
                return t = !0,
                null
            }
            ,
            n[o](""),
            !t
        }
        ));
        if (!i || !a || n) {
            var s = /./[o]
              , l = t(o, ""[e], (function(e, t, n, r, o) {
                var a = t.exec;
                return a === Dy || a === Uy.exec ? i && !o ? {
                    done: !0,
                    value: Py(s, t, n, r)
                } : {
                    done: !0,
                    value: Py(e, n, t, r)
                } : {
                    done: !1
                }
            }
            ));
            Ly(String.prototype, e, l[0]),
            Ly(Uy, o, l[1])
        }
        r && By(Uy[o], "sham", !0)
    }
      , $y = Sy.charAt
      , Vy = function(e, t, n) {
        return t + (n ? $y(e, t).length : 1)
    }
      , Hy = lo
      , Ky = Vo
      , zy = Math.floor
      , Wy = Hy("".charAt)
      , Yy = Hy("".replace)
      , Xy = Hy("".slice)
      , Zy = /\$([$&'`]|\d{1,2}|<[^>]*>)/g
      , qy = /\$([$&'`]|\d{1,2})/g
      , Jy = Ui
      , Qy = xi
      , ev = _i
      , tv = ho
      , nv = my
      , rv = TypeError
      , ov = function(e, t) {
        var n = e.exec;
        if (ev(n)) {
            var r = Jy(n, e, t);
            return null !== r && Qy(r),
            r
        }
        if ("RegExp" === tv(e))
            return Jy(nv, e, t);
        throw new rv("RegExp#exec called on incompatible receiver")
    }
      , iv = Xp
      , av = Ui
      , sv = lo
      , lv = Gy
      , cv = no
      , dv = xi
      , uv = _i
      , pv = bo
      , hv = La
      , fv = Ga
      , mv = Dg
      , gv = Ao
      , yv = Vy
      , vv = oa
      , bv = function(e, t, n, r, o, i) {
        var a = n + e.length
          , s = r.length
          , l = qy;
        return void 0 !== o && (o = Ky(o),
        l = Zy),
        Yy(i, l, (function(i, l) {
            var c;
            switch (Wy(l, 0)) {
            case "$":
                return "$";
            case "&":
                return e;
            case "`":
                return Xy(t, 0, n);
            case "'":
                return Xy(t, a);
            case "<":
                c = o[Xy(l, 1, -1)];
                break;
            default:
                var d = +l;
                if (0 === d)
                    return i;
                if (d > s) {
                    var u = zy(d / 10);
                    return 0 === u ? i : u <= s ? void 0 === r[u - 1] ? Wy(l, 1) : r[u - 1] + Wy(l, 1) : i
                }
                c = r[d - 1]
            }
            return void 0 === c ? "" : c
        }
        ))
    }
      , Ev = ov
      , _v = bi("replace")
      , Av = Math.max
      , wv = Math.min
      , Sv = sv([].concat)
      , Cv = sv([].push)
      , Ov = sv("".indexOf)
      , xv = sv("".slice)
      , Tv = "$0" === "a".replace(/./, "$0")
      , Nv = !!/./[_v] && "" === /./[_v]("a", "$0")
      , kv = !cv((function() {
        var e = /./;
        return e.exec = function() {
            var e = [];
            return e.groups = {
                a: "7"
            },
            e
        }
        ,
        "7" !== "".replace(e, "$<a>")
    }
    ));
    lv("replace", (function(e, t, n) {
        var r = Nv ? "$" : "$0";
        return [function(e, n) {
            var r = gv(this)
              , o = pv(e) ? void 0 : vv(e, _v);
            return o ? av(o, e, r, n) : av(t, mv(r), e, n)
        }
        , function(e, o) {
            var i = dv(this)
              , a = mv(e);
            if ("string" == typeof o && -1 === Ov(o, r) && -1 === Ov(o, "$<")) {
                var s = n(t, i, a, o);
                if (s.done)
                    return s.value
            }
            var l = uv(o);
            l || (o = mv(o));
            var c, d = i.global;
            d && (c = i.unicode,
            i.lastIndex = 0);
            for (var u, p = []; null !== (u = Ev(i, a)) && (Cv(p, u),
            d); ) {
                "" === mv(u[0]) && (i.lastIndex = yv(a, fv(i.lastIndex), c))
            }
            for (var h, f = "", m = 0, g = 0; g < p.length; g++) {
                for (var y, v = mv((u = p[g])[0]), b = Av(wv(hv(u.index), a.length), 0), E = [], _ = 1; _ < u.length; _++)
                    Cv(E, void 0 === (h = u[_]) ? h : String(h));
                var A = u.groups;
                if (l) {
                    var w = Sv([v], E, b, a);
                    void 0 !== A && Cv(w, A),
                    y = mv(iv(o, void 0, w))
                } else
                    y = bv(v, a, b, E, A, o);
                b >= m && (f += xv(a, m, b) + y,
                m = b + v.length)
            }
            return f + xv(a, m)
        }
        ]
    }
    ), !kv || !Tv || Nv);
    var Iv = Ui
      , Rv = lo
      , Pv = Gy
      , Lv = xi
      , Dv = bo
      , Mv = Ao
      , Fv = Hp
      , Bv = Vy
      , jv = Ga
      , Uv = Dg
      , Gv = oa
      , $v = ov
      , Vv = no
      , Hv = Vg.UNSUPPORTED_Y
      , Kv = Math.min
      , zv = Rv([].push)
      , Wv = Rv("".slice)
      , Yv = !Vv((function() {
        var e = /(?:)/
          , t = e.exec;
        e.exec = function() {
            return t.apply(this, arguments)
        }
        ;
        var n = "ab".split(e);
        return 2 !== n.length || "a" !== n[0] || "b" !== n[1]
    }
    ))
      , Xv = "c" === "abbc".split(/(b)*/)[1] || 4 !== "test".split(/(?:)/, -1).length || 2 !== "ab".split(/(?:ab)*/).length || 4 !== ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length;
    Pv("split", (function(e, t, n) {
        var r = "0".split(void 0, 0).length ? function(e, n) {
            return void 0 === e && 0 === n ? [] : Iv(t, this, e, n)
        }
        : t;
        return [function(t, n) {
            var o = Mv(this)
              , i = Dv(t) ? void 0 : Gv(t, e);
            return i ? Iv(i, t, o, n) : Iv(r, Uv(o), t, n)
        }
        , function(e, o) {
            var i = Lv(this)
              , a = Uv(e);
            if (!Xv) {
                var s = n(r, i, a, o, r !== t);
                if (s.done)
                    return s.value
            }
            var l = Fv(i, RegExp)
              , c = i.unicode
              , d = (i.ignoreCase ? "i" : "") + (i.multiline ? "m" : "") + (i.unicode ? "u" : "") + (Hv ? "g" : "y")
              , u = new l(Hv ? "^(?:" + i.source + ")" : i,d)
              , p = void 0 === o ? 4294967295 : o >>> 0;
            if (0 === p)
                return [];
            if (0 === a.length)
                return null === $v(u, a) ? [a] : [];
            for (var h = 0, f = 0, m = []; f < a.length; ) {
                u.lastIndex = Hv ? 0 : f;
                var g, y = $v(u, Hv ? Wv(a, f) : a);
                if (null === y || (g = Kv(jv(u.lastIndex + (Hv ? f : 0)), a.length)) === h)
                    f = Bv(a, f, c);
                else {
                    if (zv(m, Wv(a, h, f)),
                    m.length === p)
                        return m;
                    for (var v = 1; v <= y.length - 1; v++)
                        if (zv(m, y[v]),
                        m.length === p)
                            return m;
                    f = h = g
                }
            }
            return zv(m, Wv(a, h)),
            m
        }
        ]
    }
    ), Xv || !Yv, Hv);
    var Zv = {
        CSSRuleList: 0,
        CSSStyleDeclaration: 0,
        CSSValueList: 0,
        ClientRectList: 0,
        DOMRectList: 0,
        DOMStringList: 0,
        DOMTokenList: 1,
        DataTransferItemList: 0,
        FileList: 0,
        HTMLAllCollection: 0,
        HTMLCollection: 0,
        HTMLFormElement: 0,
        HTMLSelectElement: 0,
        MediaList: 0,
        MimeTypeArray: 0,
        NamedNodeMap: 0,
        NodeList: 1,
        PaintRequestList: 0,
        Plugin: 0,
        PluginArray: 0,
        SVGLengthList: 0,
        SVGNumberList: 0,
        SVGPathSegList: 0,
        SVGPointList: 0,
        SVGStringList: 0,
        SVGTransformList: 0,
        SourceBufferList: 0,
        StyleSheetList: 0,
        TextTrackCueList: 0,
        TextTrackList: 0,
        TouchList: 0
    }
      , qv = Di("span").classList
      , Jv = qv && qv.constructor && qv.constructor.prototype
      , Qv = Jv === Object.prototype ? void 0 : Jv
      , eb = xo
      , tb = Zv
      , nb = Qv
      , rb = Jd
      , ob = Ws
      , ib = rd
      , ab = bi("iterator")
      , sb = rb.values
      , lb = function(e, t) {
        if (e) {
            if (e[ab] !== sb)
                try {
                    ob(e, ab, sb)
                } catch (t) {
                    e[ab] = sb
                }
            if (ib(e, t, !0),
            tb[t])
                for (var n in rb)
                    if (e[n] !== rb[n])
                        try {
                            ob(e, n, rb[n])
                        } catch (t) {
                            e[n] = rb[n]
                        }
        }
    };
    for (var cb in tb)
        lb(eb[cb] && eb[cb].prototype, cb);
    lb(nb, "DOMTokenList");
    !function(e) {
        var t = function(e) {
            var t, n = Object.prototype, r = n.hasOwnProperty, o = Object.defineProperty || function(e, t, n) {
                e[t] = n.value
            }
            , i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", s = i.asyncIterator || "@@asyncIterator", l = i.toStringTag || "@@toStringTag";
            function c(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                e[t]
            }
            try {
                c({}, "")
            } catch (e) {
                c = function(e, t, n) {
                    return e[t] = n
                }
            }
            function d(e, t, n, r) {
                var i = t && t.prototype instanceof y ? t : y
                  , a = Object.create(i.prototype)
                  , s = new k(r || []);
                return o(a, "_invoke", {
                    value: O(e, n, s)
                }),
                a
            }
            function u(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = d;
            var p = "suspendedStart"
              , h = "suspendedYield"
              , f = "executing"
              , m = "completed"
              , g = {};
            function y() {}
            function v() {}
            function b() {}
            var E = {};
            c(E, a, (function() {
                return this
            }
            ));
            var _ = Object.getPrototypeOf
              , A = _ && _(_(I([])));
            A && A !== n && r.call(A, a) && (E = A);
            var w = b.prototype = y.prototype = Object.create(E);
            function S(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    c(e, t, (function(e) {
                        return this._invoke(t, e)
                    }
                    ))
                }
                ))
            }
            function C(e, t) {
                function n(o, i, a, s) {
                    var l = u(e[o], e, i);
                    if ("throw" !== l.type) {
                        var c = l.arg
                          , d = c.value;
                        return d && "object" == typeof d && r.call(d, "__await") ? t.resolve(d.__await).then((function(e) {
                            n("next", e, a, s)
                        }
                        ), (function(e) {
                            n("throw", e, a, s)
                        }
                        )) : t.resolve(d).then((function(e) {
                            c.value = e,
                            a(c)
                        }
                        ), (function(e) {
                            return n("throw", e, a, s)
                        }
                        ))
                    }
                    s(l.arg)
                }
                var i;
                o(this, "_invoke", {
                    value: function(e, r) {
                        function o() {
                            return new t((function(t, o) {
                                n(e, r, t, o)
                            }
                            ))
                        }
                        return i = i ? i.then(o, o) : o()
                    }
                })
            }
            function O(e, n, r) {
                var o = p;
                return function(i, a) {
                    if (o === f)
                        throw new Error("Generator is already running");
                    if (o === m) {
                        if ("throw" === i)
                            throw a;
                        return {
                            value: t,
                            done: !0
                        }
                    }
                    for (r.method = i,
                    r.arg = a; ; ) {
                        var s = r.delegate;
                        if (s) {
                            var l = x(s, r);
                            if (l) {
                                if (l === g)
                                    continue;
                                return l
                            }
                        }
                        if ("next" === r.method)
                            r.sent = r._sent = r.arg;
                        else if ("throw" === r.method) {
                            if (o === p)
                                throw o = m,
                                r.arg;
                            r.dispatchException(r.arg)
                        } else
                            "return" === r.method && r.abrupt("return", r.arg);
                        o = f;
                        var c = u(e, n, r);
                        if ("normal" === c.type) {
                            if (o = r.done ? m : h,
                            c.arg === g)
                                continue;
                            return {
                                value: c.arg,
                                done: r.done
                            }
                        }
                        "throw" === c.type && (o = m,
                        r.method = "throw",
                        r.arg = c.arg)
                    }
                }
            }
            function x(e, n) {
                var r = n.method
                  , o = e.iterator[r];
                if (o === t)
                    return n.delegate = null,
                    "throw" === r && e.iterator.return && (n.method = "return",
                    n.arg = t,
                    x(e, n),
                    "throw" === n.method) || "return" !== r && (n.method = "throw",
                    n.arg = new TypeError("The iterator does not provide a '" + r + "' method")),
                    g;
                var i = u(o, e.iterator, n.arg);
                if ("throw" === i.type)
                    return n.method = "throw",
                    n.arg = i.arg,
                    n.delegate = null,
                    g;
                var a = i.arg;
                return a ? a.done ? (n[e.resultName] = a.value,
                n.next = e.nextLoc,
                "return" !== n.method && (n.method = "next",
                n.arg = t),
                n.delegate = null,
                g) : a : (n.method = "throw",
                n.arg = new TypeError("iterator result is not an object"),
                n.delegate = null,
                g)
            }
            function T(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]),
                2 in e && (t.finallyLoc = e[2],
                t.afterLoc = e[3]),
                this.tryEntries.push(t)
            }
            function N(e) {
                var t = e.completion || {};
                t.type = "normal",
                delete t.arg,
                e.completion = t
            }
            function k(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                e.forEach(T, this),
                this.reset(!0)
            }
            function I(e) {
                if (null != e) {
                    var n = e[a];
                    if (n)
                        return n.call(e);
                    if ("function" == typeof e.next)
                        return e;
                    if (!isNaN(e.length)) {
                        var o = -1
                          , i = function n() {
                            for (; ++o < e.length; )
                                if (r.call(e, o))
                                    return n.value = e[o],
                                    n.done = !1,
                                    n;
                            return n.value = t,
                            n.done = !0,
                            n
                        };
                        return i.next = i
                    }
                }
                throw new TypeError(typeof e + " is not iterable")
            }
            return v.prototype = b,
            o(w, "constructor", {
                value: b,
                configurable: !0
            }),
            o(b, "constructor", {
                value: v,
                configurable: !0
            }),
            v.displayName = c(b, l, "GeneratorFunction"),
            e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
            }
            ,
            e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, b) : (e.__proto__ = b,
                c(e, l, "GeneratorFunction")),
                e.prototype = Object.create(w),
                e
            }
            ,
            e.awrap = function(e) {
                return {
                    __await: e
                }
            }
            ,
            S(C.prototype),
            c(C.prototype, s, (function() {
                return this
            }
            )),
            e.AsyncIterator = C,
            e.async = function(t, n, r, o, i) {
                void 0 === i && (i = Promise);
                var a = new C(d(t, n, r, o),i);
                return e.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }
                ))
            }
            ,
            S(w),
            c(w, l, "Generator"),
            c(w, a, (function() {
                return this
            }
            )),
            c(w, "toString", (function() {
                return "[object Generator]"
            }
            )),
            e.keys = function(e) {
                var t = Object(e)
                  , n = [];
                for (var r in t)
                    n.push(r);
                return n.reverse(),
                function e() {
                    for (; n.length; ) {
                        var r = n.pop();
                        if (r in t)
                            return e.value = r,
                            e.done = !1,
                            e
                    }
                    return e.done = !0,
                    e
                }
            }
            ,
            e.values = I,
            k.prototype = {
                constructor: k,
                reset: function(e) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = t,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = t,
                    this.tryEntries.forEach(N),
                    !e)
                        for (var n in this)
                            "t" === n.charAt(0) && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = t)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type)
                        throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done)
                        throw e;
                    var n = this;
                    function o(r, o) {
                        return s.type = "throw",
                        s.arg = e,
                        n.next = r,
                        o && (n.method = "next",
                        n.arg = t),
                        !!o
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i]
                          , s = a.completion;
                        if ("root" === a.tryLoc)
                            return o("end");
                        if (a.tryLoc <= this.prev) {
                            var l = r.call(a, "catchLoc")
                              , c = r.call(a, "finallyLoc");
                            if (l && c) {
                                if (this.prev < a.catchLoc)
                                    return o(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc)
                                    return o(a.finallyLoc)
                            } else if (l) {
                                if (this.prev < a.catchLoc)
                                    return o(a.catchLoc, !0)
                            } else {
                                if (!c)
                                    throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc)
                                    return o(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var o = this.tryEntries[n];
                        if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                            var i = o;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var a = i ? i.completion : {};
                    return a.type = e,
                    a.arg = t,
                    i ? (this.method = "next",
                    this.next = i.finallyLoc,
                    g) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type)
                        throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === e.type && t && (this.next = t),
                    g
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e)
                            return this.complete(n.completion, n.afterLoc),
                            N(n),
                            g
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var o = r.arg;
                                N(n)
                            }
                            return o
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, n, r) {
                    return this.delegate = {
                        iterator: I(e),
                        resultName: n,
                        nextLoc: r
                    },
                    "next" === this.method && (this.arg = t),
                    g
                }
            },
            e
        }(e.exports);
        try {
            regeneratorRuntime = t
        } catch (e) {
            "object" == typeof globalThis ? globalThis.regeneratorRuntime = t : Function("r", "regeneratorRuntime = r")(t)
        }
    }({
        exports: {}
    });
    var db = {
        exports: {}
    }
      , ub = {
        exports: {}
    };
    !function(e) {
        /*!
  	 * CLDR JavaScript Library v0.5.4 2020-10-22T15:56Z MIT license © Rafael Xavier
  	 * http://git.io/h4lmVg
  	 */
        e.exports = function() {
            var e, t = Array.isArray || function(e) {
                return "[object Array]" === Object.prototype.toString.call(e)
            }
            , n = function(e, n) {
                if (t(e) && (e = e.join("/")),
                "string" != typeof e)
                    throw new Error('invalid path "' + e + '"');
                return (e = (e = e.replace(/^\//, "").replace(/^cldr\//, "")).replace(/{[a-zA-Z]+}/g, (function(e) {
                    return e = e.replace(/^{([^}]*)}$/, "$1"),
                    n[e]
                }
                ))).split("/")
            }, r = function(e, t) {
                var n, r;
                if (e.some)
                    return e.some(t);
                for (n = 0,
                r = e.length; n < r; n++)
                    if (t(e[n], n, e))
                        return !0;
                return !1
            }, o = function(e, t, n, o) {
                var i, a, s = n[0], l = n[1], c = e.localeSep, d = n[2], u = n.slice(3, 4);
                return o = o || {},
                "und" !== s && "Zzzz" !== l && "ZZ" !== d ? [s, l, d].concat(u) : void 0 !== t.get("supplemental/likelySubtags") ? (a = r([[s, l, d], [s, d], [s, l], [s], ["und", l]], (function(e) {
                    return i = !/\b(Zzzz|ZZ)\b/.test(e.join(c)) && t.get(["supplemental/likelySubtags", e.join(c)])
                }
                )),
                a ? (i = i.split(c),
                ["und" !== s ? s : i[0], "Zzzz" !== l ? l : i[1], "ZZ" !== d ? d : i[2]].concat(u)) : o.force ? t.get("supplemental/likelySubtags/und").split(c) : void 0) : void 0
            }, i = function(e, t, n) {
                var i, a, s = n[0], l = n[1], c = n[2], d = n[3];
                return a = r([[[s, "Zzzz", "ZZ"], [s]], [[s, "Zzzz", c], [s, c]], [[s, l, "ZZ"], [s, l]]], (function(r) {
                    var a = o(e, t, r[0]);
                    return i = r[1],
                    a && a[0] === n[0] && a[1] === n[1] && a[2] === n[2]
                }
                )),
                a ? (d && i.push(d),
                i) : n
            }, a = function(e) {
                var t, n = [];
                return (t = (e = e.replace(/_/, "-")).split("-u-"))[1] && (t[1] = t[1].split("-t-"),
                e = t[0] + (t[1][1] ? "-t-" + t[1][1] : ""),
                n[4] = t[1][0]),
                null === (t = e.split("-t-")[0].match(/^(([a-z]{2,3})(-([A-Z][a-z]{3}))?(-([A-Z]{2}|[0-9]{3}))?)((-([a-zA-Z0-9]{5,8}|[0-9][a-zA-Z0-9]{3}))*)$|^(root)$/)) ? ["und", "Zzzz", "ZZ"] : (n[0] = t[10] || t[2] || "und",
                n[1] = t[4] || "Zzzz",
                n[2] = t[6] || "ZZ",
                t[7] && t[7].length && (n[3] = t[7].slice(1)),
                n)
            }, s = function(e, t) {
                var n, r;
                if (e.forEach)
                    return e.forEach(t);
                for (n = 0,
                r = e.length; n < r; n++)
                    t(e[n], n, e)
            }, l = function(e, t, n) {
                var r = e._availableBundleMap
                  , l = e._availableBundleMapQueue;
                return l.length && (s(l, (function(n, s) {
                    var c, d, u, p;
                    if (p = a(n),
                    void 0 === (d = o(e, t, p)))
                        throw l.splice(s, 1),
                        new Error("Could not find likelySubtags for " + n);
                    u = (u = i(e, t, d)).join(e.localeSep),
                    (c = r[u]) && c.length < n.length || (r[u] = n)
                }
                )),
                e._availableBundleMapQueue = []),
                r[n] || null
            }, c = function(e) {
                var t, n = [];
                if (Object.keys)
                    return Object.keys(e);
                for (t in e)
                    n.push(t);
                return n
            }, d = function(e, t) {
                var n, r;
                return r = e + (t && JSON ? ": " + JSON.stringify(t) : ""),
                (n = new Error(r)).code = e,
                s(c(t), (function(e) {
                    n[e] = t[e]
                }
                )),
                n
            }, u = function(e, t, n) {
                if (!t)
                    throw d(e, n)
            }, p = function(e, t) {
                u("E_MISSING_PARAMETER", void 0 !== e, {
                    name: t
                })
            }, h = function(e, t, n, r) {
                u("E_INVALID_PAR_TYPE", n, {
                    expected: r,
                    name: t,
                    value: e
                })
            }, f = function(e, n) {
                h(e, n, "string" == typeof e || t(e), "String or Array")
            }, m = function(e) {
                return null !== e && "" + e == "[object Object]"
            }, g = function(e, t) {
                h(e, t, void 0 === e || m(e), "Plain Object")
            }, y = function(e, t) {
                h(e, t, "string" == typeof e, "a string")
            }, v = function(e, t) {
                var n, r = e, o = t.length;
                for (n = 0; n < o - 1; n++)
                    if (!(r = r[t[n]]))
                        return;
                return r[t[n]]
            }, b = function(e, t) {
                var n, r = e._availableBundleMapQueue, o = v(t, ["main"]);
                if (o)
                    for (n in o)
                        o.hasOwnProperty(n) && "root" !== n && -1 === r.indexOf(n) && r.push(n)
            }, E = function(e) {
                return t(e) ? e : [e]
            }, _ = (e = function() {
                var n = {}
                  , r = [].slice.call(arguments, 0);
                return s(r, (function(r) {
                    var o;
                    for (o in r)
                        o in n && "object" == typeof n[o] && !t(n[o]) ? n[o] = e(n[o], r[o]) : n[o] = r[o]
                }
                )),
                n
            }
            ,
            e), A = function(e, t, n) {
                var r, o, i;
                for (p(n[0], "json"),
                r = 0; r < n.length; r++)
                    for (i = E(n[r]),
                    o = 0; o < i.length; o++)
                        g(i[o], "json"),
                        t = _(t, i[o]),
                        b(e, i[o]);
                return t
            }, w = function(e, t, r) {
                var o = n(t, r);
                return v(e._resolved, o)
            }, S = function(e) {
                this.init(e)
            };
            return S._alwaysArray = E,
            S._coreLoad = A,
            S._createError = d,
            S._itemGetResolved = w,
            S._jsonMerge = _,
            S._pathNormalize = n,
            S._resourceGet = v,
            S._validatePresence = p,
            S._validateType = h,
            S._validateTypePath = f,
            S._validateTypePlainObject = g,
            S._availableBundleMap = {},
            S._availableBundleMapQueue = [],
            S._resolved = {},
            S.localeSep = "-",
            S.load = function() {
                S._resolved = A(S, S._resolved, arguments)
            }
            ,
            S.prototype.init = function(e) {
                var t, n, r, s, c, d, u, h, f, m = S.localeSep, g = "";
                p(e, "locale"),
                y(e, "locale"),
                5 === (d = a(e)).length && (g = m + "u" + m + (h = d.pop()),
                d[3] || d.pop()),
                f = d[3],
                n = (r = o(S, this, d, {
                    force: !0
                }) || d)[0],
                c = r[1],
                u = r[2],
                s = i(S, this, r).join(m),
                this.attributes = t = {
                    bundle: l(S, this, s),
                    minLanguageId: s + g,
                    maxLanguageId: r.join(m) + g,
                    language: n,
                    script: c,
                    territory: u,
                    region: u,
                    variant: f
                },
                h && ("-" + h).replace(/-[a-z]{3,8}|(-[a-z]{2})-([a-z]{3,8})/g, (function(e, n, r) {
                    n ? t["u" + n] = r : t["u" + e] = !0
                }
                )),
                this.locale = e
            }
            ,
            S.prototype.get = function(e) {
                return p(e, "path"),
                f(e, "path"),
                w(S, e, this.attributes)
            }
            ,
            S.prototype.main = function(e) {
                return p(e, "path"),
                f(e, "path"),
                u("E_MISSING_BUNDLE", null !== this.attributes.bundle, {
                    locale: this.locale
                }),
                e = E(e),
                this.get(["main/{bundle}"].concat(e))
            }
            ,
            S
        }()
    }(ub);
    var pb, hb = ub.exports, fb = st(hb), mb = {
        exports: {}
    };
    function gb() {
        return pb || (pb = 1,
        function(e) {
            /*!
  		 * CLDR JavaScript Library v0.5.4 2020-10-22T15:56Z MIT license © Rafael Xavier
  		 * http://git.io/h4lmVg
  		 */
            e.exports = function(e) {
                var t, n = e._pathNormalize, r = e._validatePresence, o = e._validateType;
                /*!
  		 * EventEmitter v4.2.7 - git.io/ee
  		 * Oliver Caldwell
  		 * MIT license
  		 * @preserve
  		 */
                t = function() {
                    function e() {}
                    var t = e.prototype;
                    function n(e, t) {
                        for (var n = e.length; n--; )
                            if (e[n].listener === t)
                                return n;
                        return -1
                    }
                    function r(e) {
                        return function() {
                            return this[e].apply(this, arguments)
                        }
                    }
                    return t.getListeners = function(e) {
                        var t, n, r = this._getEvents();
                        if (e instanceof RegExp)
                            for (n in t = {},
                            r)
                                r.hasOwnProperty(n) && e.test(n) && (t[n] = r[n]);
                        else
                            t = r[e] || (r[e] = []);
                        return t
                    }
                    ,
                    t.flattenListeners = function(e) {
                        var t, n = [];
                        for (t = 0; t < e.length; t += 1)
                            n.push(e[t].listener);
                        return n
                    }
                    ,
                    t.getListenersAsObject = function(e) {
                        var t, n = this.getListeners(e);
                        return n instanceof Array && ((t = {})[e] = n),
                        t || n
                    }
                    ,
                    t.addListener = function(e, t) {
                        var r, o = this.getListenersAsObject(e), i = "object" == typeof t;
                        for (r in o)
                            o.hasOwnProperty(r) && -1 === n(o[r], t) && o[r].push(i ? t : {
                                listener: t,
                                once: !1
                            });
                        return this
                    }
                    ,
                    t.on = r("addListener"),
                    t.addOnceListener = function(e, t) {
                        return this.addListener(e, {
                            listener: t,
                            once: !0
                        })
                    }
                    ,
                    t.once = r("addOnceListener"),
                    t.defineEvent = function(e) {
                        return this.getListeners(e),
                        this
                    }
                    ,
                    t.defineEvents = function(e) {
                        for (var t = 0; t < e.length; t += 1)
                            this.defineEvent(e[t]);
                        return this
                    }
                    ,
                    t.removeListener = function(e, t) {
                        var r, o, i = this.getListenersAsObject(e);
                        for (o in i)
                            i.hasOwnProperty(o) && -1 !== (r = n(i[o], t)) && i[o].splice(r, 1);
                        return this
                    }
                    ,
                    t.off = r("removeListener"),
                    t.addListeners = function(e, t) {
                        return this.manipulateListeners(!1, e, t)
                    }
                    ,
                    t.removeListeners = function(e, t) {
                        return this.manipulateListeners(!0, e, t)
                    }
                    ,
                    t.manipulateListeners = function(e, t, n) {
                        var r, o, i = e ? this.removeListener : this.addListener, a = e ? this.removeListeners : this.addListeners;
                        if ("object" != typeof t || t instanceof RegExp)
                            for (r = n.length; r--; )
                                i.call(this, t, n[r]);
                        else
                            for (r in t)
                                t.hasOwnProperty(r) && (o = t[r]) && ("function" == typeof o ? i.call(this, r, o) : a.call(this, r, o));
                        return this
                    }
                    ,
                    t.removeEvent = function(e) {
                        var t, n = typeof e, r = this._getEvents();
                        if ("string" === n)
                            delete r[e];
                        else if (e instanceof RegExp)
                            for (t in r)
                                r.hasOwnProperty(t) && e.test(t) && delete r[t];
                        else
                            delete this._events;
                        return this
                    }
                    ,
                    t.removeAllListeners = r("removeEvent"),
                    t.emitEvent = function(e, t) {
                        var n, r, o, i = this.getListenersAsObject(e);
                        for (o in i)
                            if (i.hasOwnProperty(o))
                                for (r = i[o].length; r--; )
                                    !0 === (n = i[o][r]).once && this.removeListener(e, n.listener),
                                    n.listener.apply(this, t || []) === this._getOnceReturnValue() && this.removeListener(e, n.listener);
                        return this
                    }
                    ,
                    t.trigger = r("emitEvent"),
                    t.emit = function(e) {
                        var t = Array.prototype.slice.call(arguments, 1);
                        return this.emitEvent(e, t)
                    }
                    ,
                    t.setOnceReturnValue = function(e) {
                        return this._onceReturnValue = e,
                        this
                    }
                    ,
                    t._getOnceReturnValue = function() {
                        return !this.hasOwnProperty("_onceReturnValue") || this._onceReturnValue
                    }
                    ,
                    t._getEvents = function() {
                        return this._events || (this._events = {})
                    }
                    ,
                    e.noConflict = function() {
                        return originalGlobalValue,
                        e
                    }
                    ,
                    e
                }();
                var i, a, s = function(e, t) {
                    o(e, t, void 0 === e || "function" == typeof e, "Function")
                }, l = new t;
                function c(e, t) {
                    o(e, t, "string" == typeof e || e instanceof RegExp, "String or RegExp")
                }
                function d(e, t) {
                    return function(n, o) {
                        return r(n, "event"),
                        c(n, "event"),
                        r(o, "listener"),
                        s(o, "listener"),
                        t[e].apply(t, arguments)
                    }
                }
                function u(e) {
                    return d("off", e)
                }
                function p(e) {
                    return d("on", e)
                }
                function h(e) {
                    return d("once", e)
                }
                function f() {
                    i = e.prototype.get,
                    e.prototype.get = function(e) {
                        var t = i.apply(this, arguments);
                        return e = n(e, this.attributes).join("/"),
                        l.trigger("get", [e, t]),
                        this.ee.trigger("get", [e, t]),
                        t
                    }
                }
                return e.off = u(l),
                e.on = p(l),
                e.once = h(l),
                a = e.prototype.init,
                e.prototype.init = function() {
                    var e;
                    this.ee = e = new t,
                    this.off = u(e),
                    this.on = p(e),
                    this.once = h(e),
                    a.apply(this, arguments)
                }
                ,
                e._eventInit = f,
                f(),
                e
            }(hb)
        }(mb)),
        mb.exports
    }
    var yb, vb = {
        exports: {}
    };
    function bb() {
        return yb || (yb = 1,
        function(e) {
            /*!
  		 * CLDR JavaScript Library v0.5.4 2020-10-22T15:56Z MIT license © Rafael Xavier
  		 * http://git.io/h4lmVg
  		 */
            e.exports = function(e) {
                var t = e._alwaysArray
                  , n = function(e) {
                    var n, r;
                    return n = function(n) {
                        return function(r) {
                            return r = t(r),
                            e.get([n].concat(r))
                        }
                    }
                    ,
                    (r = n("supplemental")).weekData = n("supplemental/weekData"),
                    r.weekData.firstDay = function() {
                        return e.get("supplemental/weekData/firstDay/{territory}") || e.get("supplemental/weekData/firstDay/001")
                    }
                    ,
                    r.weekData.minDays = function() {
                        var t = e.get("supplemental/weekData/minDays/{territory}") || e.get("supplemental/weekData/minDays/001");
                        return parseInt(t, 10)
                    }
                    ,
                    r.timeData = n("supplemental/timeData"),
                    r.timeData.allowed = function() {
                        return e.get("supplemental/timeData/{territory}/_allowed") || e.get("supplemental/timeData/001/_allowed")
                    }
                    ,
                    r.timeData.preferred = function() {
                        return e.get("supplemental/timeData/{territory}/_preferred") || e.get("supplemental/timeData/001/_preferred")
                    }
                    ,
                    r
                }
                  , r = e.prototype.init;
                return e.prototype.init = function() {
                    r.apply(this, arguments),
                    this.supplemental = n(this)
                }
                ,
                e
            }(hb)
        }(vb)),
        vb.exports
    }
    var Eb, _b, Ab, wb = {
        exports: {}
    };
    function Sb() {
        return Eb || (Eb = 1,
        function(e) {
            /*!
  		 * CLDR JavaScript Library v0.5.4 2020-10-22T15:56Z MIT license © Rafael Xavier
  		 * http://git.io/h4lmVg
  		 */
            e.exports = function(e) {
                var t = e._coreLoad
                  , n = e._jsonMerge
                  , r = e._pathNormalize
                  , o = e._resourceGet
                  , i = e._validatePresence
                  , a = e._validateTypePath
                  , s = function(e, t) {
                    var n, i;
                    if ("root" !== t)
                        return n = r(["supplemental/parentLocales/parentLocale", t]),
                        (i = o(e._resolved, n) || o(e._raw, n)) ? i : (i = t.substr(0, t.lastIndexOf(e.localeSep))) || "root"
                }
                  , l = function(e, t, n) {
                    var r, o = e, i = t.length;
                    for (r = 0; r < i - 1; r++)
                        o[t[r]] || (o[t[r]] = {}),
                        o = o[t[r]];
                    o[t[r]] = n
                }
                  , c = function() {
                    var e;
                    return e = function(t, i, a, c, d) {
                        var u, p, h;
                        if (void 0 !== i && i !== d)
                            return u = r(a, c),
                            void 0 !== (h = o(t._resolved, u)) && "object" != typeof h || (void 0 === (h = o(t._raw, u)) && (p = s(t, i),
                            h = e(t, p, a, n(c, {
                                bundle: p
                            }), i)),
                            void 0 !== h && l(t._resolved, u, h)),
                            h
                    }
                    ,
                    e
                }();
                return e._raw = {},
                e.load = function() {
                    e._raw = t(e, e._raw, arguments)
                }
                ,
                e.prototype.get = function(t) {
                    return i(t, "path"),
                    a(t, "path"),
                    c(e, this.attributes && this.attributes.bundle || "", t, this.attributes)
                }
                ,
                e._eventInit && e._eventInit(),
                e
            }(hb)
        }(wb)),
        wb.exports
    }
    !function(e, t) {
        /*!
  	 * Globalize v2.0.0 @DATE Released under the MIT license
  	 * https://github.com/globalizejs/globalize
  	 */
        e.exports = function(e) {
            var t = function(e) {
                return "string" == typeof e ? e : "number" == typeof e ? "" + e : JSON.stringify(e)
            }
              , n = function(e, n) {
                return e = e.replace(/{[0-9a-zA-Z-_. ]+}/g, (function(e) {
                    return e = e.replace(/^{([^}]*)}$/, "$1"),
                    t(n[e])
                }
                ))
            }
              , r = function() {
                var e = arguments[0];
                return [].slice.call(arguments, 1).forEach((function(t) {
                    var n;
                    for (n in t)
                        e[n] = t[n]
                }
                )),
                e
            }
              , o = function(e, t, o) {
                var i;
                return t = e + (t ? ": " + n(t, o) : ""),
                (i = new Error(t)).code = e,
                r(i, o),
                i
            }
              , i = function(e, t, n) {
                e.length && e[e.length - 1].type === t ? e[e.length - 1].value += n : e.push({
                    type: t,
                    value: n
                })
            }
              , a = function(e, t) {
                var n = 0
                  , r = [];
                return e.replace(/{[0-9a-zA-Z-_. ]+}/g, (function(o, a) {
                    var s = o.slice(1, -1);
                    i(r, "literal", e.slice(n, a)),
                    i(r, "variable", t[s]),
                    r[r.length - 1].name = s,
                    n += a + o.length
                }
                )),
                r.filter((function(e) {
                    return "" !== e.value
                }
                ))
            }
              , s = function(e) {
                return e.map((function(e) {
                    return e.value
                }
                )).join("")
            }
              , l = function(e) {
                return JSON.stringify(e, (function(e, t) {
                    return t && t.runtimeKey ? t.runtimeKey : t
                }
                ))
            }
              , c = function(e) {
                return [].reduce.call(e, (function(e, t) {
                    return 0 | (e = (e << 5) - e + t.charCodeAt(0))
                }
                ), 0)
            }
              , d = function(e, t, n, r) {
                var o;
                return r = r || l(n),
                (o = c(e + t + r)) > 0 ? "a" + o : "b" + Math.abs(o)
            }
              , u = function(e) {
                if (void 0 !== e.name)
                    return e.name;
                var t = /^function\s+([\w\$]+)\s*\(/.exec(e.toString());
                return t && t.length > 0 ? t[1] : void 0
            }
              , p = function(e, t, n, r) {
                var o = l(e)
                  , i = u(n)
                  , a = t.locale;
                return i ? (n.runtimeKey = d(i, a, null, o),
                n.generatorString = function() {
                    return 'Globalize("' + a + '").' + i + "(" + o.slice(1, -1) + ")"
                }
                ,
                n.runtimeArgs = r,
                n) : n
            }
              , h = function(e, t, n, r) {
                if (!n)
                    throw o(e, t, r)
            }
              , f = function(e) {
                return Array.isArray(e) ? e : e ? [e] : []
            }
              , m = function(e, t, n) {
                var r;
                r = f((n = n || {}).skip).some((function(t) {
                    return t.test(e)
                }
                )),
                h("E_MISSING_CLDR", "Missing required CLDR content `{path}`.", t || r, {
                    path: e
                })
            }
              , g = function(e) {
                h("E_DEFAULT_LOCALE_NOT_DEFINED", "Default locale has not been defined.", void 0 !== e, {})
            }
              , y = function(e, t) {
                h("E_MISSING_PARAMETER", "Missing required parameter `{name}`.", void 0 !== e, {
                    name: t
                })
            }
              , v = function(e, t, n, r) {
                h("E_PAR_OUT_OF_RANGE", "Parameter `{name}` has value `{value}` out of range [{minimum}, {maximum}].", void 0 === e || e >= n && e <= r, {
                    maximum: r,
                    minimum: n,
                    name: t,
                    value: e
                })
            }
              , b = function(e, t, n, r) {
                h("E_INVALID_PAR_TYPE", "Invalid `{name}` parameter ({value}). {expected} expected.", n, {
                    expected: r,
                    name: t,
                    value: e
                })
            }
              , E = function(t, n) {
                b(t, n, void 0 === t || "string" == typeof t || t instanceof e, "String or Cldr instance")
            }
              , _ = function(e) {
                return null !== e && "" + e == "[object Object]"
            }
              , A = function(e, t) {
                b(e, t, void 0 === e || _(e), "Plain Object")
            }
              , w = function(t) {
                return t instanceof e ? t : new e(t)
            }
              , S = function(e) {
                return e.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1")
            }
              , C = function(e, t, n) {
                var r;
                for ("string" != typeof e && (e = String(e)),
                r = e.length; r < t; r += 1)
                    e = n ? e + "0" : "0" + e;
                return e
            };
            function O(e) {
                e.once("get", m),
                e.get("supplemental/likelySubtags")
            }
            function x(e) {
                if (!(this instanceof x))
                    return new x(e);
                y(e, "locale"),
                E(e, "locale"),
                this.cldr = w(e),
                O(this.cldr)
            }
            return x.load = function() {
                e.load.apply(e, arguments)
            }
            ,
            x.locale = function(e) {
                return E(e, "locale"),
                arguments.length && (this.cldr = w(e),
                O(this.cldr)),
                this.cldr
            }
            ,
            x._alwaysArray = f,
            x._createError = o,
            x._formatMessage = n,
            x._formatMessageToParts = a,
            x._isPlainObject = _,
            x._objectExtend = r,
            x._partsJoin = s,
            x._partsPush = i,
            x._regexpEscape = S,
            x._runtimeBind = p,
            x._stringPad = C,
            x._validate = h,
            x._validateCldr = m,
            x._validateDefaultLocale = g,
            x._validateParameterPresence = y,
            x._validateParameterRange = v,
            x._validateParameterTypePlainObject = A,
            x._validateParameterType = b,
            x
        }((Ab || (Ab = 1,
        /*!
  	 * CLDR JavaScript Library v0.5.4 2020-10-22T15:56Z MIT license © Rafael Xavier
  	 * http://git.io/h4lmVg
  	 */
        _b = hb,
        gb(),
        bb(),
        Sb()),
        _b))
    }(db);
    var Cb = st(db.exports);
    /*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */
    function Ob(e) {
        return "[object Object]" === Object.prototype.toString.call(e)
    }
    function xb(e) {
        return null === e ? "null" : null !== (t = e) && "" + t == "[object Object]" && t.constructor === Object ? "plain object" : Array.isArray(e) ? "array" : e instanceof Date ? "date" : typeof e;
        var t
    }
    function Tb(e, t, n) {
        var r, o, i;
        if (e)
            return !0;
        throw o = (n = n || {}).errorClass || Error,
        i = n,
        (r = new o(t = t.replace(/{{([0-9a-zA-Z-_. ]+)}}/g, (function(e, t) {
            return "number" == typeof i[t] && isNaN(i[t]) ? "NaN" : JSON.stringify(i[t])
        }
        )).replace(/{([0-9a-zA-Z-_. ]+)}/g, (function(e, t) {
            return i[t]
        }
        )))).attributes = n,
        r
    }
    function Nb(e, t, n, r) {
        var o, i, a = xb(e);
        Tb((r = r || {}).condition || -1 !== n.indexOf(a), r.errorMessage || "Parameter `{parameterName}` must be a {expectedTypesMessage}, not {parameterType} `{{parameterValue}}`", {
            errorClass: TypeError,
            expectedTypesMessage: (o = n,
            i = "or",
            0 === o.length ? "" : 1 === o.length ? o[0] : 2 === o.length ? o.join(" " + i + " ") : o.length > 2 ? o.join(", " + i + " ") : void 0),
            parameterName: t,
            parameterType: a,
            parameterValue: e
        })
    }
    function kb(e, t, n, r) {
        Tb(function(e, t) {
            return Array.isArray(t) ? -1 !== t.indexOf(e) : e in t
        }(e, t), n, Object.assign({
            errorClass: RangeError
        }, r))
    }
    const Ib = "object" == typeof performance && performance && "function" == typeof performance.now ? performance : Date
      , Rb = "function" == typeof AbortController ? AbortController : class {
        constructor() {
            this.signal = new Db
        }
        abort(e=new Error("This operation was aborted")) {
            this.signal.reason = this.signal.reason || e,
            this.signal.aborted = !0,
            this.signal.dispatchEvent({
                type: "abort",
                target: this.signal
            })
        }
    }
      , Pb = "function" == typeof AbortSignal
      , Lb = "function" == typeof Rb.AbortSignal
      , Db = Pb ? AbortSignal : Lb ? Rb.AbortController : class {
        constructor() {
            this.reason = void 0,
            this.aborted = !1,
            this._listeners = []
        }
        dispatchEvent(e) {
            "abort" === e.type && (this.aborted = !0,
            this.onabort(e),
            this._listeners.forEach((t => t(e)), this))
        }
        onabort() {}
        addEventListener(e, t) {
            "abort" === e && this._listeners.push(t)
        }
        removeEventListener(e, t) {
            "abort" === e && (this._listeners = this._listeners.filter((e => e !== t)))
        }
    }
      , Mb = new Set
      , Fb = (e, t) => {
        const n = `LRU_CACHE_OPTION_${e}`;
        Ub(n) && Gb(n, `${e} option`, `options.${t}`, zb)
    }
      , Bb = (e, t) => {
        const n = `LRU_CACHE_METHOD_${e}`;
        if (Ub(n)) {
            const {prototype: r} = zb
              , {get: o} = Object.getOwnPropertyDescriptor(r, e);
            Gb(n, `${e} method`, `cache.${t}()`, o)
        }
    }
      , jb = (...e) => {
        "object" == typeof process && process && "function" == typeof process.emitWarning ? process.emitWarning(...e) : console.error(...e)
    }
      , Ub = e => !Mb.has(e)
      , Gb = (e, t, n, r) => {
        Mb.add(e);
        jb(`The ${t} is deprecated. Please use ${n} instead.`, "DeprecationWarning", e, r)
    }
      , $b = e => e && e === Math.floor(e) && e > 0 && isFinite(e)
      , Vb = e => $b(e) ? e <= Math.pow(2, 8) ? Uint8Array : e <= Math.pow(2, 16) ? Uint16Array : e <= Math.pow(2, 32) ? Uint32Array : e <= Number.MAX_SAFE_INTEGER ? Hb : null : null;
    class Hb extends Array {
        constructor(e) {
            super(e),
            this.fill(0)
        }
    }
    class Kb {
        constructor(e) {
            if (0 === e)
                return [];
            const t = Vb(e);
            this.heap = new t(e),
            this.length = 0
        }
        push(e) {
            this.heap[this.length++] = e
        }
        pop() {
            return this.heap[--this.length]
        }
    }
    let zb = class e {
        constructor(t={}) {
            const {max: n=0, ttl: r, ttlResolution: o=1, ttlAutopurge: i, updateAgeOnGet: a, updateAgeOnHas: s, allowStale: l, dispose: c, disposeAfter: d, noDisposeOnSet: u, noUpdateTTL: p, maxSize: h=0, maxEntrySize: f=0, sizeCalculation: m, fetchMethod: g, fetchContext: y, noDeleteOnFetchRejection: v, noDeleteOnStaleGet: b, allowStaleOnFetchRejection: E, allowStaleOnFetchAbort: _, ignoreFetchAbort: A} = t
              , {length: w, maxAge: S, stale: C} = t instanceof e ? {} : t;
            if (0 !== n && !$b(n))
                throw new TypeError("max option must be a nonnegative integer");
            const O = n ? Vb(n) : Array;
            if (!O)
                throw new Error("invalid max value: " + n);
            if (this.max = n,
            this.maxSize = h,
            this.maxEntrySize = f || this.maxSize,
            this.sizeCalculation = m || w,
            this.sizeCalculation) {
                if (!this.maxSize && !this.maxEntrySize)
                    throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");
                if ("function" != typeof this.sizeCalculation)
                    throw new TypeError("sizeCalculation set to non-function")
            }
            if (this.fetchMethod = g || null,
            this.fetchMethod && "function" != typeof this.fetchMethod)
                throw new TypeError("fetchMethod must be a function if specified");
            if (this.fetchContext = y,
            !this.fetchMethod && void 0 !== y)
                throw new TypeError("cannot set fetchContext without fetchMethod");
            if (this.keyMap = new Map,
            this.keyList = new Array(n).fill(null),
            this.valList = new Array(n).fill(null),
            this.next = new O(n),
            this.prev = new O(n),
            this.head = 0,
            this.tail = 0,
            this.free = new Kb(n),
            this.initialFill = 1,
            this.size = 0,
            "function" == typeof c && (this.dispose = c),
            "function" == typeof d ? (this.disposeAfter = d,
            this.disposed = []) : (this.disposeAfter = null,
            this.disposed = null),
            this.noDisposeOnSet = !!u,
            this.noUpdateTTL = !!p,
            this.noDeleteOnFetchRejection = !!v,
            this.allowStaleOnFetchRejection = !!E,
            this.allowStaleOnFetchAbort = !!_,
            this.ignoreFetchAbort = !!A,
            0 !== this.maxEntrySize) {
                if (0 !== this.maxSize && !$b(this.maxSize))
                    throw new TypeError("maxSize must be a positive integer if specified");
                if (!$b(this.maxEntrySize))
                    throw new TypeError("maxEntrySize must be a positive integer if specified");
                this.initializeSizeTracking()
            }
            if (this.allowStale = !!l || !!C,
            this.noDeleteOnStaleGet = !!b,
            this.updateAgeOnGet = !!a,
            this.updateAgeOnHas = !!s,
            this.ttlResolution = $b(o) || 0 === o ? o : 1,
            this.ttlAutopurge = !!i,
            this.ttl = r || S || 0,
            this.ttl) {
                if (!$b(this.ttl))
                    throw new TypeError("ttl must be a positive integer if specified");
                this.initializeTTLTracking()
            }
            if (0 === this.max && 0 === this.ttl && 0 === this.maxSize)
                throw new TypeError("At least one of max, maxSize, or ttl is required");
            if (!this.ttlAutopurge && !this.max && !this.maxSize) {
                const t = "LRU_CACHE_UNBOUNDED";
                if (Ub(t)) {
                    Mb.add(t);
                    jb("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.", "UnboundedCacheWarning", t, e)
                }
            }
            C && Fb("stale", "allowStale"),
            S && Fb("maxAge", "ttl"),
            w && Fb("length", "sizeCalculation")
        }
        getRemainingTTL(e) {
            return this.has(e, {
                updateAgeOnHas: !1
            }) ? 1 / 0 : 0
        }
        initializeTTLTracking() {
            this.ttls = new Hb(this.max),
            this.starts = new Hb(this.max),
            this.setItemTTL = (e, t, n=Ib.now()) => {
                if (this.starts[e] = 0 !== t ? n : 0,
                this.ttls[e] = t,
                0 !== t && this.ttlAutopurge) {
                    const n = setTimeout(( () => {
                        this.isStale(e) && this.delete(this.keyList[e])
                    }
                    ), t + 1);
                    n.unref && n.unref()
                }
            }
            ,
            this.updateItemAge = e => {
                this.starts[e] = 0 !== this.ttls[e] ? Ib.now() : 0
            }
            ,
            this.statusTTL = (n, r) => {
                n && (n.ttl = this.ttls[r],
                n.start = this.starts[r],
                n.now = e || t(),
                n.remainingTTL = n.now + n.ttl - n.start)
            }
            ;
            let e = 0;
            const t = () => {
                const t = Ib.now();
                if (this.ttlResolution > 0) {
                    e = t;
                    const n = setTimeout(( () => e = 0), this.ttlResolution);
                    n.unref && n.unref()
                }
                return t
            }
            ;
            this.getRemainingTTL = n => {
                const r = this.keyMap.get(n);
                return void 0 === r ? 0 : 0 === this.ttls[r] || 0 === this.starts[r] ? 1 / 0 : this.starts[r] + this.ttls[r] - (e || t())
            }
            ,
            this.isStale = n => 0 !== this.ttls[n] && 0 !== this.starts[n] && (e || t()) - this.starts[n] > this.ttls[n]
        }
        updateItemAge(e) {}
        statusTTL(e, t) {}
        setItemTTL(e, t, n) {}
        isStale(e) {
            return !1
        }
        initializeSizeTracking() {
            this.calculatedSize = 0,
            this.sizes = new Hb(this.max),
            this.removeItemSize = e => {
                this.calculatedSize -= this.sizes[e],
                this.sizes[e] = 0
            }
            ,
            this.requireSize = (e, t, n, r) => {
                if (this.isBackgroundFetch(t))
                    return 0;
                if (!$b(n)) {
                    if (!r)
                        throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");
                    if ("function" != typeof r)
                        throw new TypeError("sizeCalculation must be a function");
                    if (n = r(t, e),
                    !$b(n))
                        throw new TypeError("sizeCalculation return invalid (expect positive integer)")
                }
                return n
            }
            ,
            this.addItemSize = (e, t, n) => {
                if (this.sizes[e] = t,
                this.maxSize) {
                    const t = this.maxSize - this.sizes[e];
                    for (; this.calculatedSize > t; )
                        this.evict(!0)
                }
                this.calculatedSize += this.sizes[e],
                n && (n.entrySize = t,
                n.totalCalculatedSize = this.calculatedSize)
            }
        }
        removeItemSize(e) {}
        addItemSize(e, t) {}
        requireSize(e, t, n, r) {
            if (n || r)
                throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache")
        }
        *indexes({allowStale: e=this.allowStale}={}) {
            if (this.size)
                for (let t = this.tail; this.isValidIndex(t) && (!e && this.isStale(t) || (yield t),
                t !== this.head); )
                    t = this.prev[t]
        }
        *rindexes({allowStale: e=this.allowStale}={}) {
            if (this.size)
                for (let t = this.head; this.isValidIndex(t) && (!e && this.isStale(t) || (yield t),
                t !== this.tail); )
                    t = this.next[t]
        }
        isValidIndex(e) {
            return void 0 !== e && this.keyMap.get(this.keyList[e]) === e
        }
        *entries() {
            for (const e of this.indexes())
                void 0 === this.valList[e] || void 0 === this.keyList[e] || this.isBackgroundFetch(this.valList[e]) || (yield[this.keyList[e], this.valList[e]])
        }
        *rentries() {
            for (const e of this.rindexes())
                void 0 === this.valList[e] || void 0 === this.keyList[e] || this.isBackgroundFetch(this.valList[e]) || (yield[this.keyList[e], this.valList[e]])
        }
        *keys() {
            for (const e of this.indexes())
                void 0 === this.keyList[e] || this.isBackgroundFetch(this.valList[e]) || (yield this.keyList[e])
        }
        *rkeys() {
            for (const e of this.rindexes())
                void 0 === this.keyList[e] || this.isBackgroundFetch(this.valList[e]) || (yield this.keyList[e])
        }
        *values() {
            for (const e of this.indexes())
                void 0 === this.valList[e] || this.isBackgroundFetch(this.valList[e]) || (yield this.valList[e])
        }
        *rvalues() {
            for (const e of this.rindexes())
                void 0 === this.valList[e] || this.isBackgroundFetch(this.valList[e]) || (yield this.valList[e])
        }
        [Symbol.iterator]() {
            return this.entries()
        }
        find(e, t) {
            for (const n of this.indexes()) {
                const r = this.valList[n]
                  , o = this.isBackgroundFetch(r) ? r.__staleWhileFetching : r;
                if (void 0 !== o && e(o, this.keyList[n], this))
                    return this.get(this.keyList[n], t)
            }
        }
        forEach(e, t=this) {
            for (const n of this.indexes()) {
                const r = this.valList[n]
                  , o = this.isBackgroundFetch(r) ? r.__staleWhileFetching : r;
                void 0 !== o && e.call(t, o, this.keyList[n], this)
            }
        }
        rforEach(e, t=this) {
            for (const n of this.rindexes()) {
                const r = this.valList[n]
                  , o = this.isBackgroundFetch(r) ? r.__staleWhileFetching : r;
                void 0 !== o && e.call(t, o, this.keyList[n], this)
            }
        }
        get prune() {
            return Bb("prune", "purgeStale"),
            this.purgeStale
        }
        purgeStale() {
            let e = !1;
            for (const t of this.rindexes({
                allowStale: !0
            }))
                this.isStale(t) && (this.delete(this.keyList[t]),
                e = !0);
            return e
        }
        dump() {
            const e = [];
            for (const t of this.indexes({
                allowStale: !0
            })) {
                const n = this.keyList[t]
                  , r = this.valList[t]
                  , o = this.isBackgroundFetch(r) ? r.__staleWhileFetching : r;
                if (void 0 === o)
                    continue;
                const i = {
                    value: o
                };
                if (this.ttls) {
                    i.ttl = this.ttls[t];
                    const e = Ib.now() - this.starts[t];
                    i.start = Math.floor(Date.now() - e)
                }
                this.sizes && (i.size = this.sizes[t]),
                e.unshift([n, i])
            }
            return e
        }
        load(e) {
            this.clear();
            for (const [t,n] of e) {
                if (n.start) {
                    const e = Date.now() - n.start;
                    n.start = Ib.now() - e
                }
                this.set(t, n.value, n)
            }
        }
        dispose(e, t, n) {}
        set(e, t, {ttl: n=this.ttl, start: r, noDisposeOnSet: o=this.noDisposeOnSet, size: i=0, sizeCalculation: a=this.sizeCalculation, noUpdateTTL: s=this.noUpdateTTL, status: l}={}) {
            if (i = this.requireSize(e, t, i, a),
            this.maxEntrySize && i > this.maxEntrySize)
                return l && (l.set = "miss",
                l.maxEntrySizeExceeded = !0),
                this.delete(e),
                this;
            let c = 0 === this.size ? void 0 : this.keyMap.get(e);
            if (void 0 === c)
                c = this.newIndex(),
                this.keyList[c] = e,
                this.valList[c] = t,
                this.keyMap.set(e, c),
                this.next[this.tail] = c,
                this.prev[c] = this.tail,
                this.tail = c,
                this.size++,
                this.addItemSize(c, i, l),
                l && (l.set = "add"),
                s = !1;
            else {
                this.moveToTail(c);
                const n = this.valList[c];
                if (t !== n) {
                    if (this.isBackgroundFetch(n) ? n.__abortController.abort(new Error("replaced")) : o || (this.dispose(n, e, "set"),
                    this.disposeAfter && this.disposed.push([n, e, "set"])),
                    this.removeItemSize(c),
                    this.valList[c] = t,
                    this.addItemSize(c, i, l),
                    l) {
                        l.set = "replace";
                        const e = n && this.isBackgroundFetch(n) ? n.__staleWhileFetching : n;
                        void 0 !== e && (l.oldValue = e)
                    }
                } else
                    l && (l.set = "update")
            }
            if (0 === n || 0 !== this.ttl || this.ttls || this.initializeTTLTracking(),
            s || this.setItemTTL(c, n, r),
            this.statusTTL(l, c),
            this.disposeAfter)
                for (; this.disposed.length; )
                    this.disposeAfter(...this.disposed.shift());
            return this
        }
        newIndex() {
            return 0 === this.size ? this.tail : this.size === this.max && 0 !== this.max ? this.evict(!1) : 0 !== this.free.length ? this.free.pop() : this.initialFill++
        }
        pop() {
            if (this.size) {
                const e = this.valList[this.head];
                return this.evict(!0),
                e
            }
        }
        evict(e) {
            const t = this.head
              , n = this.keyList[t]
              , r = this.valList[t];
            return this.isBackgroundFetch(r) ? r.__abortController.abort(new Error("evicted")) : (this.dispose(r, n, "evict"),
            this.disposeAfter && this.disposed.push([r, n, "evict"])),
            this.removeItemSize(t),
            e && (this.keyList[t] = null,
            this.valList[t] = null,
            this.free.push(t)),
            this.head = this.next[t],
            this.keyMap.delete(n),
            this.size--,
            t
        }
        has(e, {updateAgeOnHas: t=this.updateAgeOnHas, status: n}={}) {
            const r = this.keyMap.get(e);
            if (void 0 !== r) {
                if (!this.isStale(r))
                    return t && this.updateItemAge(r),
                    n && (n.has = "hit"),
                    this.statusTTL(n, r),
                    !0;
                n && (n.has = "stale",
                this.statusTTL(n, r))
            } else
                n && (n.has = "miss");
            return !1
        }
        peek(e, {allowStale: t=this.allowStale}={}) {
            const n = this.keyMap.get(e);
            if (void 0 !== n && (t || !this.isStale(n))) {
                const e = this.valList[n];
                return this.isBackgroundFetch(e) ? e.__staleWhileFetching : e
            }
        }
        backgroundFetch(e, t, n, r) {
            const o = void 0 === t ? void 0 : this.valList[t];
            if (this.isBackgroundFetch(o))
                return o;
            const i = new Rb;
            n.signal && n.signal.addEventListener("abort", ( () => i.abort(n.signal.reason)));
            const a = {
                signal: i.signal,
                options: n,
                context: r
            }
              , s = (r, o=!1) => {
                const {aborted: s} = i.signal
                  , d = n.ignoreFetchAbort && void 0 !== r;
                return n.status && (s && !o ? (n.status.fetchAborted = !0,
                n.status.fetchError = i.signal.reason,
                d && (n.status.fetchAbortIgnored = !0)) : n.status.fetchResolved = !0),
                !s || d || o ? (this.valList[t] === c && (void 0 === r ? c.__staleWhileFetching ? this.valList[t] = c.__staleWhileFetching : this.delete(e) : (n.status && (n.status.fetchUpdated = !0),
                this.set(e, r, a.options))),
                r) : l(i.signal.reason)
            }
              , l = r => {
                const {aborted: o} = i.signal
                  , a = o && n.allowStaleOnFetchAbort
                  , s = a || n.allowStaleOnFetchRejection
                  , l = s || n.noDeleteOnFetchRejection;
                if (this.valList[t] === c) {
                    !l || void 0 === c.__staleWhileFetching ? this.delete(e) : a || (this.valList[t] = c.__staleWhileFetching)
                }
                if (s)
                    return n.status && void 0 !== c.__staleWhileFetching && (n.status.returnedStale = !0),
                    c.__staleWhileFetching;
                if (c.__returned === c)
                    throw r
            }
            ;
            n.status && (n.status.fetchDispatched = !0);
            const c = new Promise(( (t, r) => {
                this.fetchMethod(e, o, a).then((e => t(e)), r),
                i.signal.addEventListener("abort", ( () => {
                    n.ignoreFetchAbort && !n.allowStaleOnFetchAbort || (t(),
                    n.allowStaleOnFetchAbort && (t = e => s(e, !0)))
                }
                ))
            }
            )).then(s, (e => (n.status && (n.status.fetchRejected = !0,
            n.status.fetchError = e),
            l(e))));
            return c.__abortController = i,
            c.__staleWhileFetching = o,
            c.__returned = null,
            void 0 === t ? (this.set(e, c, {
                ...a.options,
                status: void 0
            }),
            t = this.keyMap.get(e)) : this.valList[t] = c,
            c
        }
        isBackgroundFetch(e) {
            return e && "object" == typeof e && "function" == typeof e.then && Object.prototype.hasOwnProperty.call(e, "__staleWhileFetching") && Object.prototype.hasOwnProperty.call(e, "__returned") && (e.__returned === e || null === e.__returned)
        }
        async fetch(e, {allowStale: t=this.allowStale, updateAgeOnGet: n=this.updateAgeOnGet, noDeleteOnStaleGet: r=this.noDeleteOnStaleGet, ttl: o=this.ttl, noDisposeOnSet: i=this.noDisposeOnSet, size: a=0, sizeCalculation: s=this.sizeCalculation, noUpdateTTL: l=this.noUpdateTTL, noDeleteOnFetchRejection: c=this.noDeleteOnFetchRejection, allowStaleOnFetchRejection: d=this.allowStaleOnFetchRejection, ignoreFetchAbort: u=this.ignoreFetchAbort, allowStaleOnFetchAbort: p=this.allowStaleOnFetchAbort, fetchContext: h=this.fetchContext, forceRefresh: f=!1, status: m, signal: g}={}) {
            if (!this.fetchMethod)
                return m && (m.fetch = "get"),
                this.get(e, {
                    allowStale: t,
                    updateAgeOnGet: n,
                    noDeleteOnStaleGet: r,
                    status: m
                });
            const y = {
                allowStale: t,
                updateAgeOnGet: n,
                noDeleteOnStaleGet: r,
                ttl: o,
                noDisposeOnSet: i,
                size: a,
                sizeCalculation: s,
                noUpdateTTL: l,
                noDeleteOnFetchRejection: c,
                allowStaleOnFetchRejection: d,
                allowStaleOnFetchAbort: p,
                ignoreFetchAbort: u,
                status: m,
                signal: g
            };
            let v = this.keyMap.get(e);
            if (void 0 === v) {
                m && (m.fetch = "miss");
                const t = this.backgroundFetch(e, v, y, h);
                return t.__returned = t
            }
            {
                const r = this.valList[v];
                if (this.isBackgroundFetch(r)) {
                    const e = t && void 0 !== r.__staleWhileFetching;
                    return m && (m.fetch = "inflight",
                    e && (m.returnedStale = !0)),
                    e ? r.__staleWhileFetching : r.__returned = r
                }
                const o = this.isStale(v);
                if (!f && !o)
                    return m && (m.fetch = "hit"),
                    this.moveToTail(v),
                    n && this.updateItemAge(v),
                    this.statusTTL(m, v),
                    r;
                const i = this.backgroundFetch(e, v, y, h)
                  , a = void 0 !== i.__staleWhileFetching
                  , s = a && t;
                return m && (m.fetch = a && o ? "stale" : "refresh",
                s && o && (m.returnedStale = !0)),
                s ? i.__staleWhileFetching : i.__returned = i
            }
        }
        get(e, {allowStale: t=this.allowStale, updateAgeOnGet: n=this.updateAgeOnGet, noDeleteOnStaleGet: r=this.noDeleteOnStaleGet, status: o}={}) {
            const i = this.keyMap.get(e);
            if (void 0 !== i) {
                const a = this.valList[i]
                  , s = this.isBackgroundFetch(a);
                return this.statusTTL(o, i),
                this.isStale(i) ? (o && (o.get = "stale"),
                s ? (o && (o.returnedStale = t && void 0 !== a.__staleWhileFetching),
                t ? a.__staleWhileFetching : void 0) : (r || this.delete(e),
                o && (o.returnedStale = t),
                t ? a : void 0)) : (o && (o.get = "hit"),
                s ? a.__staleWhileFetching : (this.moveToTail(i),
                n && this.updateItemAge(i),
                a))
            }
            o && (o.get = "miss")
        }
        connect(e, t) {
            this.prev[t] = e,
            this.next[e] = t
        }
        moveToTail(e) {
            e !== this.tail && (e === this.head ? this.head = this.next[e] : this.connect(this.prev[e], this.next[e]),
            this.connect(this.tail, e),
            this.tail = e)
        }
        get del() {
            return Bb("del", "delete"),
            this.delete
        }
        delete(e) {
            let t = !1;
            if (0 !== this.size) {
                const n = this.keyMap.get(e);
                if (void 0 !== n)
                    if (t = !0,
                    1 === this.size)
                        this.clear();
                    else {
                        this.removeItemSize(n);
                        const t = this.valList[n];
                        this.isBackgroundFetch(t) ? t.__abortController.abort(new Error("deleted")) : (this.dispose(t, e, "delete"),
                        this.disposeAfter && this.disposed.push([t, e, "delete"])),
                        this.keyMap.delete(e),
                        this.keyList[n] = null,
                        this.valList[n] = null,
                        n === this.tail ? this.tail = this.prev[n] : n === this.head ? this.head = this.next[n] : (this.next[this.prev[n]] = this.next[n],
                        this.prev[this.next[n]] = this.prev[n]),
                        this.size--,
                        this.free.push(n)
                    }
            }
            if (this.disposed)
                for (; this.disposed.length; )
                    this.disposeAfter(...this.disposed.shift());
            return t
        }
        clear() {
            for (const e of this.rindexes({
                allowStale: !0
            })) {
                const t = this.valList[e];
                if (this.isBackgroundFetch(t))
                    t.__abortController.abort(new Error("deleted"));
                else {
                    const n = this.keyList[e];
                    this.dispose(t, n, "delete"),
                    this.disposeAfter && this.disposed.push([t, n, "delete"])
                }
            }
            if (this.keyMap.clear(),
            this.valList.fill(null),
            this.keyList.fill(null),
            this.ttls && (this.ttls.fill(0),
            this.starts.fill(0)),
            this.sizes && this.sizes.fill(0),
            this.head = 0,
            this.tail = 0,
            this.initialFill = 1,
            this.free.length = 0,
            this.calculatedSize = 0,
            this.size = 0,
            this.disposed)
                for (; this.disposed.length; )
                    this.disposeAfter(...this.disposed.shift())
        }
        get reset() {
            return Bb("reset", "clear"),
            this.clear
        }
        get length() {
            return ( (e, t) => {
                const n = `LRU_CACHE_PROPERTY_${e}`;
                if (Ub(n)) {
                    const {prototype: r} = zb
                      , {get: o} = Object.getOwnPropertyDescriptor(r, e);
                    Gb(n, `${e} property`, `cache.${t}`, o)
                }
            }
            )("length", "size"),
            this.size
        }
        static get AbortController() {
            return Rb
        }
        static get AbortSignal() {
            return Db
        }
    }
    ;
    var Wb = zb
      , Yb = function e(t) {
        function n(e, t, r) {
            var o, i = {};
            if (Array.isArray(e))
                return e.concat(t);
            for (o in e)
                i[r ? o.toLowerCase() : o] = e[o];
            for (o in t) {
                var a = r ? o.toLowerCase() : o
                  , s = t[o];
                i[a] = a in i && "object" == typeof s ? n(i[a], s, "headers" == a) : s
            }
            return i
        }
        function r(e, r, o, i, a) {
            var s = "string" != typeof e ? (r = e).url : e
              , l = {
                config: r
            }
              , c = n(t, r)
              , d = {};
            i = i || c.data,
            (c.transformRequest || []).map((function(e) {
                i = e(i, c.headers) || i
            }
            )),
            c.auth && (d.authorization = c.auth),
            i && "object" == typeof i && "function" != typeof i.append && "function" != typeof i.text && (i = JSON.stringify(i),
            d["content-type"] = "application/json");
            try {
                d[c.xsrfHeaderName] = decodeURIComponent(document.cookie.match(RegExp("(^|; )" + c.xsrfCookieName + "=([^;]*)"))[2])
            } catch (e) {}
            return c.baseURL && (s = s.replace(/^(?!.*\/\/)\/?/, c.baseURL + "/")),
            c.params && (s += (~s.indexOf("?") ? "&" : "?") + (c.paramsSerializer ? c.paramsSerializer(c.params) : new URLSearchParams(c.params))),
            (c.fetch || fetch)(s, {
                method: (o || c.method || "get").toUpperCase(),
                body: i,
                headers: n(c.headers, d, !0),
                credentials: c.withCredentials ? "include" : a
            }).then((function(e) {
                for (var t in e)
                    "function" != typeof e[t] && (l[t] = e[t]);
                return "stream" == c.responseType ? (l.data = e.body,
                l) : e[c.responseType || "text"]().then((function(e) {
                    l.data = e,
                    l.data = JSON.parse(e)
                }
                )).catch(Object).then((function() {
                    return (c.validateStatus ? c.validateStatus(e.status) : e.ok) ? l : Promise.reject(l)
                }
                ))
            }
            ))
        }
        return t = t || {},
        r.request = r,
        r.get = function(e, t) {
            return r(e, t, "get")
        }
        ,
        r.delete = function(e, t) {
            return r(e, t, "delete")
        }
        ,
        r.head = function(e, t) {
            return r(e, t, "head")
        }
        ,
        r.options = function(e, t) {
            return r(e, t, "options")
        }
        ,
        r.post = function(e, t, n) {
            return r(e, n, "post", t)
        }
        ,
        r.put = function(e, t, n) {
            return r(e, n, "put", t)
        }
        ,
        r.patch = function(e, t, n) {
            return r(e, n, "patch", t)
        }
        ,
        r.all = Promise.all.bind(Promise),
        r.spread = function(e) {
            return e.apply.bind(e, e)
        }
        ,
        r.CancelToken = "function" == typeof AbortController ? AbortController : Object,
        r.defaults = t,
        r.create = e,
        r
    }()
      , Xb = {
        exports: {}
    };
    var Zb = {
        MAX_LENGTH: 256,
        MAX_SAFE_COMPONENT_LENGTH: 16,
        MAX_SAFE_BUILD_LENGTH: 250,
        MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991,
        RELEASE_TYPES: ["major", "premajor", "minor", "preminor", "patch", "prepatch", "prerelease"],
        SEMVER_SPEC_VERSION: "2.0.0",
        FLAG_INCLUDE_PRERELEASE: 1,
        FLAG_LOOSE: 2
    };
    var qb = "object" == typeof process && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...e) => console.error("SEMVER", ...e) : () => {}
    ;
    !function(e, t) {
        const {MAX_SAFE_COMPONENT_LENGTH: n, MAX_SAFE_BUILD_LENGTH: r, MAX_LENGTH: o} = Zb
          , i = qb
          , a = (t = e.exports = {}).re = []
          , s = t.safeRe = []
          , l = t.src = []
          , c = t.t = {};
        let d = 0;
        const u = "[a-zA-Z0-9-]"
          , p = [["\\s", 1], ["\\d", o], [u, r]]
          , h = (e, t, n) => {
            const r = (e => {
                for (const [t,n] of p)
                    e = e.split(`${t}*`).join(`${t}{0,${n}}`).split(`${t}+`).join(`${t}{1,${n}}`);
                return e
            }
            )(t)
              , o = d++;
            i(e, o, t),
            c[e] = o,
            l[o] = t,
            a[o] = new RegExp(t,n ? "g" : void 0),
            s[o] = new RegExp(r,n ? "g" : void 0)
        }
        ;
        h("NUMERICIDENTIFIER", "0|[1-9]\\d*"),
        h("NUMERICIDENTIFIERLOOSE", "\\d+"),
        h("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${u}*`),
        h("MAINVERSION", `(${l[c.NUMERICIDENTIFIER]})\\.(${l[c.NUMERICIDENTIFIER]})\\.(${l[c.NUMERICIDENTIFIER]})`),
        h("MAINVERSIONLOOSE", `(${l[c.NUMERICIDENTIFIERLOOSE]})\\.(${l[c.NUMERICIDENTIFIERLOOSE]})\\.(${l[c.NUMERICIDENTIFIERLOOSE]})`),
        h("PRERELEASEIDENTIFIER", `(?:${l[c.NUMERICIDENTIFIER]}|${l[c.NONNUMERICIDENTIFIER]})`),
        h("PRERELEASEIDENTIFIERLOOSE", `(?:${l[c.NUMERICIDENTIFIERLOOSE]}|${l[c.NONNUMERICIDENTIFIER]})`),
        h("PRERELEASE", `(?:-(${l[c.PRERELEASEIDENTIFIER]}(?:\\.${l[c.PRERELEASEIDENTIFIER]})*))`),
        h("PRERELEASELOOSE", `(?:-?(${l[c.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${l[c.PRERELEASEIDENTIFIERLOOSE]})*))`),
        h("BUILDIDENTIFIER", `${u}+`),
        h("BUILD", `(?:\\+(${l[c.BUILDIDENTIFIER]}(?:\\.${l[c.BUILDIDENTIFIER]})*))`),
        h("FULLPLAIN", `v?${l[c.MAINVERSION]}${l[c.PRERELEASE]}?${l[c.BUILD]}?`),
        h("FULL", `^${l[c.FULLPLAIN]}$`),
        h("LOOSEPLAIN", `[v=\\s]*${l[c.MAINVERSIONLOOSE]}${l[c.PRERELEASELOOSE]}?${l[c.BUILD]}?`),
        h("LOOSE", `^${l[c.LOOSEPLAIN]}$`),
        h("GTLT", "((?:<|>)?=?)"),
        h("XRANGEIDENTIFIERLOOSE", `${l[c.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),
        h("XRANGEIDENTIFIER", `${l[c.NUMERICIDENTIFIER]}|x|X|\\*`),
        h("XRANGEPLAIN", `[v=\\s]*(${l[c.XRANGEIDENTIFIER]})(?:\\.(${l[c.XRANGEIDENTIFIER]})(?:\\.(${l[c.XRANGEIDENTIFIER]})(?:${l[c.PRERELEASE]})?${l[c.BUILD]}?)?)?`),
        h("XRANGEPLAINLOOSE", `[v=\\s]*(${l[c.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[c.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[c.XRANGEIDENTIFIERLOOSE]})(?:${l[c.PRERELEASELOOSE]})?${l[c.BUILD]}?)?)?`),
        h("XRANGE", `^${l[c.GTLT]}\\s*${l[c.XRANGEPLAIN]}$`),
        h("XRANGELOOSE", `^${l[c.GTLT]}\\s*${l[c.XRANGEPLAINLOOSE]}$`),
        h("COERCEPLAIN", `(^|[^\\d])(\\d{1,${n}})(?:\\.(\\d{1,${n}}))?(?:\\.(\\d{1,${n}}))?`),
        h("COERCE", `${l[c.COERCEPLAIN]}(?:$|[^\\d])`),
        h("COERCEFULL", l[c.COERCEPLAIN] + `(?:${l[c.PRERELEASE]})?` + `(?:${l[c.BUILD]})?(?:$|[^\\d])`),
        h("COERCERTL", l[c.COERCE], !0),
        h("COERCERTLFULL", l[c.COERCEFULL], !0),
        h("LONETILDE", "(?:~>?)"),
        h("TILDETRIM", `(\\s*)${l[c.LONETILDE]}\\s+`, !0),
        t.tildeTrimReplace = "$1~",
        h("TILDE", `^${l[c.LONETILDE]}${l[c.XRANGEPLAIN]}$`),
        h("TILDELOOSE", `^${l[c.LONETILDE]}${l[c.XRANGEPLAINLOOSE]}$`),
        h("LONECARET", "(?:\\^)"),
        h("CARETTRIM", `(\\s*)${l[c.LONECARET]}\\s+`, !0),
        t.caretTrimReplace = "$1^",
        h("CARET", `^${l[c.LONECARET]}${l[c.XRANGEPLAIN]}$`),
        h("CARETLOOSE", `^${l[c.LONECARET]}${l[c.XRANGEPLAINLOOSE]}$`),
        h("COMPARATORLOOSE", `^${l[c.GTLT]}\\s*(${l[c.LOOSEPLAIN]})$|^$`),
        h("COMPARATOR", `^${l[c.GTLT]}\\s*(${l[c.FULLPLAIN]})$|^$`),
        h("COMPARATORTRIM", `(\\s*)${l[c.GTLT]}\\s*(${l[c.LOOSEPLAIN]}|${l[c.XRANGEPLAIN]})`, !0),
        t.comparatorTrimReplace = "$1$2$3",
        h("HYPHENRANGE", `^\\s*(${l[c.XRANGEPLAIN]})\\s+-\\s+(${l[c.XRANGEPLAIN]})\\s*$`),
        h("HYPHENRANGELOOSE", `^\\s*(${l[c.XRANGEPLAINLOOSE]})\\s+-\\s+(${l[c.XRANGEPLAINLOOSE]})\\s*$`),
        h("STAR", "(<|>)?=?\\s*\\*"),
        h("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$"),
        h("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$")
    }(Xb, Xb.exports);
    var Jb = Xb.exports;
    const Qb = Object.freeze({
        loose: !0
    })
      , eE = Object.freeze({});
    var tE = e => e ? "object" != typeof e ? Qb : e : eE;
    const nE = /^[0-9]+$/
      , rE = (e, t) => {
        const n = nE.test(e)
          , r = nE.test(t);
        return n && r && (e = +e,
        t = +t),
        e === t ? 0 : n && !r ? -1 : r && !n ? 1 : e < t ? -1 : 1
    }
    ;
    var oE = {
        compareIdentifiers: rE,
        rcompareIdentifiers: (e, t) => rE(t, e)
    };
    const iE = qb
      , {MAX_LENGTH: aE, MAX_SAFE_INTEGER: sE} = Zb
      , {safeRe: lE, t: cE} = Jb
      , dE = tE
      , {compareIdentifiers: uE} = oE;
    var pE = class e {
        constructor(t, n) {
            if (n = dE(n),
            t instanceof e) {
                if (t.loose === !!n.loose && t.includePrerelease === !!n.includePrerelease)
                    return t;
                t = t.version
            } else if ("string" != typeof t)
                throw new TypeError(`Invalid version. Must be a string. Got type "${typeof t}".`);
            if (t.length > aE)
                throw new TypeError(`version is longer than ${aE} characters`);
            iE("SemVer", t, n),
            this.options = n,
            this.loose = !!n.loose,
            this.includePrerelease = !!n.includePrerelease;
            const r = t.trim().match(n.loose ? lE[cE.LOOSE] : lE[cE.FULL]);
            if (!r)
                throw new TypeError(`Invalid Version: ${t}`);
            if (this.raw = t,
            this.major = +r[1],
            this.minor = +r[2],
            this.patch = +r[3],
            this.major > sE || this.major < 0)
                throw new TypeError("Invalid major version");
            if (this.minor > sE || this.minor < 0)
                throw new TypeError("Invalid minor version");
            if (this.patch > sE || this.patch < 0)
                throw new TypeError("Invalid patch version");
            r[4] ? this.prerelease = r[4].split(".").map((e => {
                if (/^[0-9]+$/.test(e)) {
                    const t = +e;
                    if (t >= 0 && t < sE)
                        return t
                }
                return e
            }
            )) : this.prerelease = [],
            this.build = r[5] ? r[5].split(".") : [],
            this.format()
        }
        format() {
            return this.version = `${this.major}.${this.minor}.${this.patch}`,
            this.prerelease.length && (this.version += `-${this.prerelease.join(".")}`),
            this.version
        }
        toString() {
            return this.version
        }
        compare(t) {
            if (iE("SemVer.compare", this.version, this.options, t),
            !(t instanceof e)) {
                if ("string" == typeof t && t === this.version)
                    return 0;
                t = new e(t,this.options)
            }
            return t.version === this.version ? 0 : this.compareMain(t) || this.comparePre(t)
        }
        compareMain(t) {
            return t instanceof e || (t = new e(t,this.options)),
            uE(this.major, t.major) || uE(this.minor, t.minor) || uE(this.patch, t.patch)
        }
        comparePre(t) {
            if (t instanceof e || (t = new e(t,this.options)),
            this.prerelease.length && !t.prerelease.length)
                return -1;
            if (!this.prerelease.length && t.prerelease.length)
                return 1;
            if (!this.prerelease.length && !t.prerelease.length)
                return 0;
            let n = 0;
            do {
                const e = this.prerelease[n]
                  , r = t.prerelease[n];
                if (iE("prerelease compare", n, e, r),
                void 0 === e && void 0 === r)
                    return 0;
                if (void 0 === r)
                    return 1;
                if (void 0 === e)
                    return -1;
                if (e !== r)
                    return uE(e, r)
            } while (++n)
        }
        compareBuild(t) {
            t instanceof e || (t = new e(t,this.options));
            let n = 0;
            do {
                const e = this.build[n]
                  , r = t.build[n];
                if (iE("build compare", n, e, r),
                void 0 === e && void 0 === r)
                    return 0;
                if (void 0 === r)
                    return 1;
                if (void 0 === e)
                    return -1;
                if (e !== r)
                    return uE(e, r)
            } while (++n)
        }
        inc(e, t, n) {
            switch (e) {
            case "premajor":
                this.prerelease.length = 0,
                this.patch = 0,
                this.minor = 0,
                this.major++,
                this.inc("pre", t, n);
                break;
            case "preminor":
                this.prerelease.length = 0,
                this.patch = 0,
                this.minor++,
                this.inc("pre", t, n);
                break;
            case "prepatch":
                this.prerelease.length = 0,
                this.inc("patch", t, n),
                this.inc("pre", t, n);
                break;
            case "prerelease":
                0 === this.prerelease.length && this.inc("patch", t, n),
                this.inc("pre", t, n);
                break;
            case "major":
                0 === this.minor && 0 === this.patch && 0 !== this.prerelease.length || this.major++,
                this.minor = 0,
                this.patch = 0,
                this.prerelease = [];
                break;
            case "minor":
                0 === this.patch && 0 !== this.prerelease.length || this.minor++,
                this.patch = 0,
                this.prerelease = [];
                break;
            case "patch":
                0 === this.prerelease.length && this.patch++,
                this.prerelease = [];
                break;
            case "pre":
                {
                    const e = Number(n) ? 1 : 0;
                    if (!t && !1 === n)
                        throw new Error("invalid increment argument: identifier is empty");
                    if (0 === this.prerelease.length)
                        this.prerelease = [e];
                    else {
                        let r = this.prerelease.length;
                        for (; --r >= 0; )
                            "number" == typeof this.prerelease[r] && (this.prerelease[r]++,
                            r = -2);
                        if (-1 === r) {
                            if (t === this.prerelease.join(".") && !1 === n)
                                throw new Error("invalid increment argument: identifier already exists");
                            this.prerelease.push(e)
                        }
                    }
                    if (t) {
                        let r = [t, e];
                        !1 === n && (r = [t]),
                        0 === uE(this.prerelease[0], t) ? isNaN(this.prerelease[1]) && (this.prerelease = r) : this.prerelease = r
                    }
                    break
                }
            default:
                throw new Error(`invalid increment argument: ${e}`)
            }
            return this.raw = this.format(),
            this.build.length && (this.raw += `+${this.build.join(".")}`),
            this
        }
    }
    ;
    const hE = pE;
    var fE = (e, t, n=!1) => {
        if (e instanceof hE)
            return e;
        try {
            return new hE(e,t)
        } catch (e) {
            if (!n)
                return null;
            throw e
        }
    }
    ;
    const mE = fE;
    var gE = (e, t) => {
        const n = mE(e, t);
        return n ? n.version : null
    }
    ;
    const yE = fE;
    var vE = (e, t) => {
        const n = yE(e.trim().replace(/^[=v]+/, ""), t);
        return n ? n.version : null
    }
    ;
    const bE = pE;
    var EE = (e, t, n, r, o) => {
        "string" == typeof n && (o = r,
        r = n,
        n = void 0);
        try {
            return new bE(e instanceof bE ? e.version : e,n).inc(t, r, o).version
        } catch (e) {
            return null
        }
    }
    ;
    const _E = fE;
    var AE = (e, t) => {
        const n = _E(e, null, !0)
          , r = _E(t, null, !0)
          , o = n.compare(r);
        if (0 === o)
            return null;
        const i = o > 0
          , a = i ? n : r
          , s = i ? r : n
          , l = !!a.prerelease.length;
        if (!!s.prerelease.length && !l)
            return s.patch || s.minor ? a.patch ? "patch" : a.minor ? "minor" : "major" : "major";
        const c = l ? "pre" : "";
        return n.major !== r.major ? c + "major" : n.minor !== r.minor ? c + "minor" : n.patch !== r.patch ? c + "patch" : "prerelease"
    }
    ;
    const wE = pE;
    var SE = (e, t) => new wE(e,t).major;
    const CE = pE;
    var OE = (e, t) => new CE(e,t).minor;
    const xE = pE;
    var TE = (e, t) => new xE(e,t).patch;
    const NE = fE;
    var kE = (e, t) => {
        const n = NE(e, t);
        return n && n.prerelease.length ? n.prerelease : null
    }
    ;
    const IE = pE;
    var RE = (e, t, n) => new IE(e,n).compare(new IE(t,n));
    const PE = RE;
    var LE = (e, t, n) => PE(t, e, n);
    const DE = RE;
    var ME = (e, t) => DE(e, t, !0);
    const FE = pE;
    var BE = (e, t, n) => {
        const r = new FE(e,n)
          , o = new FE(t,n);
        return r.compare(o) || r.compareBuild(o)
    }
    ;
    const jE = BE;
    var UE = (e, t) => e.sort(( (e, n) => jE(e, n, t)));
    const GE = BE;
    var $E = (e, t) => e.sort(( (e, n) => GE(n, e, t)));
    const VE = RE;
    var HE = (e, t, n) => VE(e, t, n) > 0;
    const KE = RE;
    var zE = (e, t, n) => KE(e, t, n) < 0;
    const WE = RE;
    var YE = (e, t, n) => 0 === WE(e, t, n);
    const XE = RE;
    var ZE = (e, t, n) => 0 !== XE(e, t, n);
    const qE = RE;
    var JE = (e, t, n) => qE(e, t, n) >= 0;
    const QE = RE;
    var e_ = (e, t, n) => QE(e, t, n) <= 0;
    const t_ = YE
      , n_ = ZE
      , r_ = HE
      , o_ = JE
      , i_ = zE
      , a_ = e_;
    var s_ = (e, t, n, r) => {
        switch (t) {
        case "===":
            return "object" == typeof e && (e = e.version),
            "object" == typeof n && (n = n.version),
            e === n;
        case "!==":
            return "object" == typeof e && (e = e.version),
            "object" == typeof n && (n = n.version),
            e !== n;
        case "":
        case "=":
        case "==":
            return t_(e, n, r);
        case "!=":
            return n_(e, n, r);
        case ">":
            return r_(e, n, r);
        case ">=":
            return o_(e, n, r);
        case "<":
            return i_(e, n, r);
        case "<=":
            return a_(e, n, r);
        default:
            throw new TypeError(`Invalid operator: ${t}`)
        }
    }
    ;
    const l_ = pE
      , c_ = fE
      , {safeRe: d_, t: u_} = Jb;
    var p_ = (e, t) => {
        if (e instanceof l_)
            return e;
        if ("number" == typeof e && (e = String(e)),
        "string" != typeof e)
            return null;
        let n = null;
        if ((t = t || {}).rtl) {
            const r = t.includePrerelease ? d_[u_.COERCERTLFULL] : d_[u_.COERCERTL];
            let o;
            for (; (o = r.exec(e)) && (!n || n.index + n[0].length !== e.length); )
                n && o.index + o[0].length === n.index + n[0].length || (n = o),
                r.lastIndex = o.index + o[1].length + o[2].length;
            r.lastIndex = -1
        } else
            n = e.match(t.includePrerelease ? d_[u_.COERCEFULL] : d_[u_.COERCE]);
        if (null === n)
            return null;
        const r = n[2]
          , o = n[3] || "0"
          , i = n[4] || "0"
          , a = t.includePrerelease && n[5] ? `-${n[5]}` : ""
          , s = t.includePrerelease && n[6] ? `+${n[6]}` : "";
        return c_(`${r}.${o}.${i}${a}${s}`, t)
    }
    ;
    var h_, f_, m_, g_, y_ = class {
        constructor() {
            this.max = 1e3,
            this.map = new Map
        }
        get(e) {
            const t = this.map.get(e);
            return void 0 === t ? void 0 : (this.map.delete(e),
            this.map.set(e, t),
            t)
        }
        delete(e) {
            return this.map.delete(e)
        }
        set(e, t) {
            if (!this.delete(e) && void 0 !== t) {
                if (this.map.size >= this.max) {
                    const e = this.map.keys().next().value;
                    this.delete(e)
                }
                this.map.set(e, t)
            }
            return this
        }
    }
    ;
    function v_() {
        if (f_)
            return h_;
        f_ = 1;
        const e = /\s+/g;
        class t {
            constructor(n, i) {
                if (i = r(i),
                n instanceof t)
                    return n.loose === !!i.loose && n.includePrerelease === !!i.includePrerelease ? n : new t(n.raw,i);
                if (n instanceof o)
                    return this.raw = n.value,
                    this.set = [[n]],
                    this.formatted = void 0,
                    this;
                if (this.options = i,
                this.loose = !!i.loose,
                this.includePrerelease = !!i.includePrerelease,
                this.raw = n.trim().replace(e, " "),
                this.set = this.raw.split("||").map((e => this.parseRange(e.trim()))).filter((e => e.length)),
                !this.set.length)
                    throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
                if (this.set.length > 1) {
                    const e = this.set[0];
                    if (this.set = this.set.filter((e => !f(e[0]))),
                    0 === this.set.length)
                        this.set = [e];
                    else if (this.set.length > 1)
                        for (const e of this.set)
                            if (1 === e.length && m(e[0])) {
                                this.set = [e];
                                break
                            }
                }
                this.formatted = void 0
            }
            get range() {
                if (void 0 === this.formatted) {
                    this.formatted = "";
                    for (let e = 0; e < this.set.length; e++) {
                        e > 0 && (this.formatted += "||");
                        const t = this.set[e];
                        for (let e = 0; e < t.length; e++)
                            e > 0 && (this.formatted += " "),
                            this.formatted += t[e].toString().trim()
                    }
                }
                return this.formatted
            }
            format() {
                return this.range
            }
            toString() {
                return this.range
            }
            parseRange(e) {
                const t = ((this.options.includePrerelease && p) | (this.options.loose && h)) + ":" + e
                  , r = n.get(t);
                if (r)
                    return r;
                const a = this.options.loose
                  , m = a ? s[l.HYPHENRANGELOOSE] : s[l.HYPHENRANGE];
                e = e.replace(m, x(this.options.includePrerelease)),
                i("hyphen replace", e),
                e = e.replace(s[l.COMPARATORTRIM], c),
                i("comparator trim", e),
                e = e.replace(s[l.TILDETRIM], d),
                i("tilde trim", e),
                e = e.replace(s[l.CARETTRIM], u),
                i("caret trim", e);
                let g = e.split(" ").map((e => y(e, this.options))).join(" ").split(/\s+/).map((e => O(e, this.options)));
                a && (g = g.filter((e => (i("loose invalid filter", e, this.options),
                !!e.match(s[l.COMPARATORLOOSE]))))),
                i("range list", g);
                const v = new Map
                  , b = g.map((e => new o(e,this.options)));
                for (const e of b) {
                    if (f(e))
                        return [e];
                    v.set(e.value, e)
                }
                v.size > 1 && v.has("") && v.delete("");
                const E = [...v.values()];
                return n.set(t, E),
                E
            }
            intersects(e, n) {
                if (!(e instanceof t))
                    throw new TypeError("a Range is required");
                return this.set.some((t => g(t, n) && e.set.some((e => g(e, n) && t.every((t => e.every((e => t.intersects(e, n)))))))))
            }
            test(e) {
                if (!e)
                    return !1;
                if ("string" == typeof e)
                    try {
                        e = new a(e,this.options)
                    } catch (e) {
                        return !1
                    }
                for (let t = 0; t < this.set.length; t++)
                    if (T(this.set[t], e, this.options))
                        return !0;
                return !1
            }
        }
        h_ = t;
        const n = new y_
          , r = tE
          , o = b_()
          , i = qb
          , a = pE
          , {safeRe: s, t: l, comparatorTrimReplace: c, tildeTrimReplace: d, caretTrimReplace: u} = Jb
          , {FLAG_INCLUDE_PRERELEASE: p, FLAG_LOOSE: h} = Zb
          , f = e => "<0.0.0-0" === e.value
          , m = e => "" === e.value
          , g = (e, t) => {
            let n = !0;
            const r = e.slice();
            let o = r.pop();
            for (; n && r.length; )
                n = r.every((e => o.intersects(e, t))),
                o = r.pop();
            return n
        }
          , y = (e, t) => (i("comp", e, t),
        e = _(e, t),
        i("caret", e),
        e = b(e, t),
        i("tildes", e),
        e = w(e, t),
        i("xrange", e),
        e = C(e, t),
        i("stars", e),
        e)
          , v = e => !e || "x" === e.toLowerCase() || "*" === e
          , b = (e, t) => e.trim().split(/\s+/).map((e => E(e, t))).join(" ")
          , E = (e, t) => {
            const n = t.loose ? s[l.TILDELOOSE] : s[l.TILDE];
            return e.replace(n, ( (t, n, r, o, a) => {
                let s;
                return i("tilde", e, t, n, r, o, a),
                v(n) ? s = "" : v(r) ? s = `>=${n}.0.0 <${+n + 1}.0.0-0` : v(o) ? s = `>=${n}.${r}.0 <${n}.${+r + 1}.0-0` : a ? (i("replaceTilde pr", a),
                s = `>=${n}.${r}.${o}-${a} <${n}.${+r + 1}.0-0`) : s = `>=${n}.${r}.${o} <${n}.${+r + 1}.0-0`,
                i("tilde return", s),
                s
            }
            ))
        }
          , _ = (e, t) => e.trim().split(/\s+/).map((e => A(e, t))).join(" ")
          , A = (e, t) => {
            i("caret", e, t);
            const n = t.loose ? s[l.CARETLOOSE] : s[l.CARET]
              , r = t.includePrerelease ? "-0" : "";
            return e.replace(n, ( (t, n, o, a, s) => {
                let l;
                return i("caret", e, t, n, o, a, s),
                v(n) ? l = "" : v(o) ? l = `>=${n}.0.0${r} <${+n + 1}.0.0-0` : v(a) ? l = "0" === n ? `>=${n}.${o}.0${r} <${n}.${+o + 1}.0-0` : `>=${n}.${o}.0${r} <${+n + 1}.0.0-0` : s ? (i("replaceCaret pr", s),
                l = "0" === n ? "0" === o ? `>=${n}.${o}.${a}-${s} <${n}.${o}.${+a + 1}-0` : `>=${n}.${o}.${a}-${s} <${n}.${+o + 1}.0-0` : `>=${n}.${o}.${a}-${s} <${+n + 1}.0.0-0`) : (i("no pr"),
                l = "0" === n ? "0" === o ? `>=${n}.${o}.${a}${r} <${n}.${o}.${+a + 1}-0` : `>=${n}.${o}.${a}${r} <${n}.${+o + 1}.0-0` : `>=${n}.${o}.${a} <${+n + 1}.0.0-0`),
                i("caret return", l),
                l
            }
            ))
        }
          , w = (e, t) => (i("replaceXRanges", e, t),
        e.split(/\s+/).map((e => S(e, t))).join(" "))
          , S = (e, t) => {
            e = e.trim();
            const n = t.loose ? s[l.XRANGELOOSE] : s[l.XRANGE];
            return e.replace(n, ( (n, r, o, a, s, l) => {
                i("xRange", e, n, r, o, a, s, l);
                const c = v(o)
                  , d = c || v(a)
                  , u = d || v(s)
                  , p = u;
                return "=" === r && p && (r = ""),
                l = t.includePrerelease ? "-0" : "",
                c ? n = ">" === r || "<" === r ? "<0.0.0-0" : "*" : r && p ? (d && (a = 0),
                s = 0,
                ">" === r ? (r = ">=",
                d ? (o = +o + 1,
                a = 0,
                s = 0) : (a = +a + 1,
                s = 0)) : "<=" === r && (r = "<",
                d ? o = +o + 1 : a = +a + 1),
                "<" === r && (l = "-0"),
                n = `${r + o}.${a}.${s}${l}`) : d ? n = `>=${o}.0.0${l} <${+o + 1}.0.0-0` : u && (n = `>=${o}.${a}.0${l} <${o}.${+a + 1}.0-0`),
                i("xRange return", n),
                n
            }
            ))
        }
          , C = (e, t) => (i("replaceStars", e, t),
        e.trim().replace(s[l.STAR], ""))
          , O = (e, t) => (i("replaceGTE0", e, t),
        e.trim().replace(s[t.includePrerelease ? l.GTE0PRE : l.GTE0], ""))
          , x = e => (t, n, r, o, i, a, s, l, c, d, u, p) => `${n = v(r) ? "" : v(o) ? `>=${r}.0.0${e ? "-0" : ""}` : v(i) ? `>=${r}.${o}.0${e ? "-0" : ""}` : a ? `>=${n}` : `>=${n}${e ? "-0" : ""}`} ${l = v(c) ? "" : v(d) ? `<${+c + 1}.0.0-0` : v(u) ? `<${c}.${+d + 1}.0-0` : p ? `<=${c}.${d}.${u}-${p}` : e ? `<${c}.${d}.${+u + 1}-0` : `<=${l}`}`.trim()
          , T = (e, t, n) => {
            for (let n = 0; n < e.length; n++)
                if (!e[n].test(t))
                    return !1;
            if (t.prerelease.length && !n.includePrerelease) {
                for (let n = 0; n < e.length; n++)
                    if (i(e[n].semver),
                    e[n].semver !== o.ANY && e[n].semver.prerelease.length > 0) {
                        const r = e[n].semver;
                        if (r.major === t.major && r.minor === t.minor && r.patch === t.patch)
                            return !0
                    }
                return !1
            }
            return !0
        }
        ;
        return h_
    }
    function b_() {
        if (g_)
            return m_;
        g_ = 1;
        const e = Symbol("SemVer ANY");
        class t {
            static get ANY() {
                return e
            }
            constructor(r, o) {
                if (o = n(o),
                r instanceof t) {
                    if (r.loose === !!o.loose)
                        return r;
                    r = r.value
                }
                r = r.trim().split(/\s+/).join(" "),
                a("comparator", r, o),
                this.options = o,
                this.loose = !!o.loose,
                this.parse(r),
                this.semver === e ? this.value = "" : this.value = this.operator + this.semver.version,
                a("comp", this)
            }
            parse(t) {
                const n = this.options.loose ? r[o.COMPARATORLOOSE] : r[o.COMPARATOR]
                  , i = t.match(n);
                if (!i)
                    throw new TypeError(`Invalid comparator: ${t}`);
                this.operator = void 0 !== i[1] ? i[1] : "",
                "=" === this.operator && (this.operator = ""),
                i[2] ? this.semver = new s(i[2],this.options.loose) : this.semver = e
            }
            toString() {
                return this.value
            }
            test(t) {
                if (a("Comparator.test", t, this.options.loose),
                this.semver === e || t === e)
                    return !0;
                if ("string" == typeof t)
                    try {
                        t = new s(t,this.options)
                    } catch (e) {
                        return !1
                    }
                return i(t, this.operator, this.semver, this.options)
            }
            intersects(e, r) {
                if (!(e instanceof t))
                    throw new TypeError("a Comparator is required");
                return "" === this.operator ? "" === this.value || new l(e.value,r).test(this.value) : "" === e.operator ? "" === e.value || new l(this.value,r).test(e.semver) : (!(r = n(r)).includePrerelease || "<0.0.0-0" !== this.value && "<0.0.0-0" !== e.value) && (!(!r.includePrerelease && (this.value.startsWith("<0.0.0") || e.value.startsWith("<0.0.0"))) && (!(!this.operator.startsWith(">") || !e.operator.startsWith(">")) || (!(!this.operator.startsWith("<") || !e.operator.startsWith("<")) || (!(this.semver.version !== e.semver.version || !this.operator.includes("=") || !e.operator.includes("=")) || (!!(i(this.semver, "<", e.semver, r) && this.operator.startsWith(">") && e.operator.startsWith("<")) || !!(i(this.semver, ">", e.semver, r) && this.operator.startsWith("<") && e.operator.startsWith(">")))))))
            }
        }
        m_ = t;
        const n = tE
          , {safeRe: r, t: o} = Jb
          , i = s_
          , a = qb
          , s = pE
          , l = v_();
        return m_
    }
    const E_ = v_();
    var __ = (e, t, n) => {
        try {
            t = new E_(t,n)
        } catch (e) {
            return !1
        }
        return t.test(e)
    }
    ;
    const A_ = v_();
    var w_ = (e, t) => new A_(e,t).set.map((e => e.map((e => e.value)).join(" ").trim().split(" ")));
    const S_ = pE
      , C_ = v_();
    var O_ = (e, t, n) => {
        let r = null
          , o = null
          , i = null;
        try {
            i = new C_(t,n)
        } catch (e) {
            return null
        }
        return e.forEach((e => {
            i.test(e) && (r && -1 !== o.compare(e) || (r = e,
            o = new S_(r,n)))
        }
        )),
        r
    }
    ;
    const x_ = pE
      , T_ = v_();
    var N_ = (e, t, n) => {
        let r = null
          , o = null
          , i = null;
        try {
            i = new T_(t,n)
        } catch (e) {
            return null
        }
        return e.forEach((e => {
            i.test(e) && (r && 1 !== o.compare(e) || (r = e,
            o = new x_(r,n)))
        }
        )),
        r
    }
    ;
    const k_ = pE
      , I_ = v_()
      , R_ = HE;
    var P_ = (e, t) => {
        e = new I_(e,t);
        let n = new k_("0.0.0");
        if (e.test(n))
            return n;
        if (n = new k_("0.0.0-0"),
        e.test(n))
            return n;
        n = null;
        for (let t = 0; t < e.set.length; ++t) {
            const r = e.set[t];
            let o = null;
            r.forEach((e => {
                const t = new k_(e.semver.version);
                switch (e.operator) {
                case ">":
                    0 === t.prerelease.length ? t.patch++ : t.prerelease.push(0),
                    t.raw = t.format();
                case "":
                case ">=":
                    o && !R_(t, o) || (o = t);
                    break;
                case "<":
                case "<=":
                    break;
                default:
                    throw new Error(`Unexpected operation: ${e.operator}`)
                }
            }
            )),
            !o || n && !R_(n, o) || (n = o)
        }
        return n && e.test(n) ? n : null
    }
    ;
    const L_ = v_();
    var D_ = (e, t) => {
        try {
            return new L_(e,t).range || "*"
        } catch (e) {
            return null
        }
    }
    ;
    const M_ = pE
      , F_ = b_()
      , {ANY: B_} = F_
      , j_ = v_()
      , U_ = __
      , G_ = HE
      , $_ = zE
      , V_ = e_
      , H_ = JE;
    var K_ = (e, t, n, r) => {
        let o, i, a, s, l;
        switch (e = new M_(e,r),
        t = new j_(t,r),
        n) {
        case ">":
            o = G_,
            i = V_,
            a = $_,
            s = ">",
            l = ">=";
            break;
        case "<":
            o = $_,
            i = H_,
            a = G_,
            s = "<",
            l = "<=";
            break;
        default:
            throw new TypeError('Must provide a hilo val of "<" or ">"')
        }
        if (U_(e, t, r))
            return !1;
        for (let n = 0; n < t.set.length; ++n) {
            const c = t.set[n];
            let d = null
              , u = null;
            if (c.forEach((e => {
                e.semver === B_ && (e = new F_(">=0.0.0")),
                d = d || e,
                u = u || e,
                o(e.semver, d.semver, r) ? d = e : a(e.semver, u.semver, r) && (u = e)
            }
            )),
            d.operator === s || d.operator === l)
                return !1;
            if ((!u.operator || u.operator === s) && i(e, u.semver))
                return !1;
            if (u.operator === l && a(e, u.semver))
                return !1
        }
        return !0
    }
    ;
    const z_ = K_;
    var W_ = (e, t, n) => z_(e, t, ">", n);
    const Y_ = K_;
    var X_ = (e, t, n) => Y_(e, t, "<", n);
    const Z_ = v_();
    var q_ = (e, t, n) => (e = new Z_(e,n),
    t = new Z_(t,n),
    e.intersects(t, n));
    const J_ = __
      , Q_ = RE;
    const eA = v_()
      , tA = b_()
      , {ANY: nA} = tA
      , rA = __
      , oA = RE
      , iA = [new tA(">=0.0.0-0")]
      , aA = [new tA(">=0.0.0")]
      , sA = (e, t, n) => {
        if (e === t)
            return !0;
        if (1 === e.length && e[0].semver === nA) {
            if (1 === t.length && t[0].semver === nA)
                return !0;
            e = n.includePrerelease ? iA : aA
        }
        if (1 === t.length && t[0].semver === nA) {
            if (n.includePrerelease)
                return !0;
            t = aA
        }
        const r = new Set;
        let o, i, a, s, l, c, d;
        for (const t of e)
            ">" === t.operator || ">=" === t.operator ? o = lA(o, t, n) : "<" === t.operator || "<=" === t.operator ? i = cA(i, t, n) : r.add(t.semver);
        if (r.size > 1)
            return null;
        if (o && i) {
            if (a = oA(o.semver, i.semver, n),
            a > 0)
                return null;
            if (0 === a && (">=" !== o.operator || "<=" !== i.operator))
                return null
        }
        for (const e of r) {
            if (o && !rA(e, String(o), n))
                return null;
            if (i && !rA(e, String(i), n))
                return null;
            for (const r of t)
                if (!rA(e, String(r), n))
                    return !1;
            return !0
        }
        let u = !(!i || n.includePrerelease || !i.semver.prerelease.length) && i.semver
          , p = !(!o || n.includePrerelease || !o.semver.prerelease.length) && o.semver;
        u && 1 === u.prerelease.length && "<" === i.operator && 0 === u.prerelease[0] && (u = !1);
        for (const e of t) {
            if (d = d || ">" === e.operator || ">=" === e.operator,
            c = c || "<" === e.operator || "<=" === e.operator,
            o)
                if (p && e.semver.prerelease && e.semver.prerelease.length && e.semver.major === p.major && e.semver.minor === p.minor && e.semver.patch === p.patch && (p = !1),
                ">" === e.operator || ">=" === e.operator) {
                    if (s = lA(o, e, n),
                    s === e && s !== o)
                        return !1
                } else if (">=" === o.operator && !rA(o.semver, String(e), n))
                    return !1;
            if (i)
                if (u && e.semver.prerelease && e.semver.prerelease.length && e.semver.major === u.major && e.semver.minor === u.minor && e.semver.patch === u.patch && (u = !1),
                "<" === e.operator || "<=" === e.operator) {
                    if (l = cA(i, e, n),
                    l === e && l !== i)
                        return !1
                } else if ("<=" === i.operator && !rA(i.semver, String(e), n))
                    return !1;
            if (!e.operator && (i || o) && 0 !== a)
                return !1
        }
        return !(o && c && !i && 0 !== a) && (!(i && d && !o && 0 !== a) && (!p && !u))
    }
      , lA = (e, t, n) => {
        if (!e)
            return t;
        const r = oA(e.semver, t.semver, n);
        return r > 0 ? e : r < 0 || ">" === t.operator && ">=" === e.operator ? t : e
    }
      , cA = (e, t, n) => {
        if (!e)
            return t;
        const r = oA(e.semver, t.semver, n);
        return r < 0 ? e : r > 0 || "<" === t.operator && "<=" === e.operator ? t : e
    }
    ;
    var dA = (e, t, n={}) => {
        if (e === t)
            return !0;
        e = new eA(e,n),
        t = new eA(t,n);
        let r = !1;
        e: for (const o of e.set) {
            for (const e of t.set) {
                const t = sA(o, e, n);
                if (r = r || null !== t,
                t)
                    continue e
            }
            if (r)
                return !1
        }
        return !0
    }
    ;
    const uA = Jb
      , pA = Zb
      , hA = pE
      , fA = oE
      , mA = (e, t, n) => {
        const r = [];
        let o = null
          , i = null;
        const a = e.sort(( (e, t) => Q_(e, t, n)));
        for (const e of a) {
            J_(e, t, n) ? (i = e,
            o || (o = e)) : (i && r.push([o, i]),
            i = null,
            o = null)
        }
        o && r.push([o, null]);
        const s = [];
        for (const [e,t] of r)
            e === t ? s.push(e) : t || e !== a[0] ? t ? e === a[0] ? s.push(`<=${t}`) : s.push(`${e} - ${t}`) : s.push(`>=${e}`) : s.push("*");
        const l = s.join(" || ")
          , c = "string" == typeof t.raw ? t.raw : String(t);
        return l.length < c.length ? l : t
    }
    ;
    var gA = st({
        parse: fE,
        valid: gE,
        clean: vE,
        inc: EE,
        diff: AE,
        major: SE,
        minor: OE,
        patch: TE,
        prerelease: kE,
        compare: RE,
        rcompare: LE,
        compareLoose: ME,
        compareBuild: BE,
        sort: UE,
        rsort: $E,
        gt: HE,
        lt: zE,
        eq: YE,
        neq: ZE,
        gte: JE,
        lte: e_,
        cmp: s_,
        coerce: p_,
        Comparator: b_(),
        Range: v_(),
        satisfies: __,
        toComparators: w_,
        maxSatisfying: O_,
        minSatisfying: N_,
        minVersion: P_,
        validRange: D_,
        outside: K_,
        gtr: W_,
        ltr: X_,
        intersects: q_,
        simplifyRange: mA,
        subset: dA,
        SemVer: hA,
        re: uA.re,
        src: uA.src,
        tokens: uA.t,
        SEMVER_SPEC_VERSION: pA.SEMVER_SPEC_VERSION,
        RELEASE_TYPES: pA.RELEASE_TYPES,
        compareIdentifiers: fA.compareIdentifiers,
        rcompareIdentifiers: fA.rcompareIdentifiers
    });
    function yA() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
            )))
        } catch (e) {}
        return (yA = function() {
            return !!e
        }
        )()
    }
    function vA() {
        vA = function() {
            return t
        }
        ;
        var e, t = {}, n = Object.prototype, r = n.hasOwnProperty, o = Object.defineProperty || function(e, t, n) {
            e[t] = n.value
        }
        , i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", s = i.asyncIterator || "@@asyncIterator", l = i.toStringTag || "@@toStringTag";
        function c(e, t, n) {
            return Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }),
            e[t]
        }
        try {
            c({}, "")
        } catch (e) {
            c = function(e, t, n) {
                return e[t] = n
            }
        }
        function d(e, t, n, r) {
            var i = t && t.prototype instanceof y ? t : y
              , a = Object.create(i.prototype)
              , s = new k(r || []);
            return o(a, "_invoke", {
                value: O(e, n, s)
            }),
            a
        }
        function u(e, t, n) {
            try {
                return {
                    type: "normal",
                    arg: e.call(t, n)
                }
            } catch (e) {
                return {
                    type: "throw",
                    arg: e
                }
            }
        }
        t.wrap = d;
        var p = "suspendedStart"
          , h = "suspendedYield"
          , f = "executing"
          , m = "completed"
          , g = {};
        function y() {}
        function v() {}
        function b() {}
        var E = {};
        c(E, a, (function() {
            return this
        }
        ));
        var _ = Object.getPrototypeOf
          , A = _ && _(_(I([])));
        A && A !== n && r.call(A, a) && (E = A);
        var w = b.prototype = y.prototype = Object.create(E);
        function S(e) {
            ["next", "throw", "return"].forEach((function(t) {
                c(e, t, (function(e) {
                    return this._invoke(t, e)
                }
                ))
            }
            ))
        }
        function C(e, t) {
            function n(o, i, a, s) {
                var l = u(e[o], e, i);
                if ("throw" !== l.type) {
                    var c = l.arg
                      , d = c.value;
                    return d && "object" == typeof d && r.call(d, "__await") ? t.resolve(d.__await).then((function(e) {
                        n("next", e, a, s)
                    }
                    ), (function(e) {
                        n("throw", e, a, s)
                    }
                    )) : t.resolve(d).then((function(e) {
                        c.value = e,
                        a(c)
                    }
                    ), (function(e) {
                        return n("throw", e, a, s)
                    }
                    ))
                }
                s(l.arg)
            }
            var i;
            o(this, "_invoke", {
                value: function(e, r) {
                    function o() {
                        return new t((function(t, o) {
                            n(e, r, t, o)
                        }
                        ))
                    }
                    return i = i ? i.then(o, o) : o()
                }
            })
        }
        function O(t, n, r) {
            var o = p;
            return function(i, a) {
                if (o === f)
                    throw new Error("Generator is already running");
                if (o === m) {
                    if ("throw" === i)
                        throw a;
                    return {
                        value: e,
                        done: !0
                    }
                }
                for (r.method = i,
                r.arg = a; ; ) {
                    var s = r.delegate;
                    if (s) {
                        var l = x(s, r);
                        if (l) {
                            if (l === g)
                                continue;
                            return l
                        }
                    }
                    if ("next" === r.method)
                        r.sent = r._sent = r.arg;
                    else if ("throw" === r.method) {
                        if (o === p)
                            throw o = m,
                            r.arg;
                        r.dispatchException(r.arg)
                    } else
                        "return" === r.method && r.abrupt("return", r.arg);
                    o = f;
                    var c = u(t, n, r);
                    if ("normal" === c.type) {
                        if (o = r.done ? m : h,
                        c.arg === g)
                            continue;
                        return {
                            value: c.arg,
                            done: r.done
                        }
                    }
                    "throw" === c.type && (o = m,
                    r.method = "throw",
                    r.arg = c.arg)
                }
            }
        }
        function x(t, n) {
            var r = n.method
              , o = t.iterator[r];
            if (o === e)
                return n.delegate = null,
                "throw" === r && t.iterator.return && (n.method = "return",
                n.arg = e,
                x(t, n),
                "throw" === n.method) || "return" !== r && (n.method = "throw",
                n.arg = new TypeError("The iterator does not provide a '" + r + "' method")),
                g;
            var i = u(o, t.iterator, n.arg);
            if ("throw" === i.type)
                return n.method = "throw",
                n.arg = i.arg,
                n.delegate = null,
                g;
            var a = i.arg;
            return a ? a.done ? (n[t.resultName] = a.value,
            n.next = t.nextLoc,
            "return" !== n.method && (n.method = "next",
            n.arg = e),
            n.delegate = null,
            g) : a : (n.method = "throw",
            n.arg = new TypeError("iterator result is not an object"),
            n.delegate = null,
            g)
        }
        function T(e) {
            var t = {
                tryLoc: e[0]
            };
            1 in e && (t.catchLoc = e[1]),
            2 in e && (t.finallyLoc = e[2],
            t.afterLoc = e[3]),
            this.tryEntries.push(t)
        }
        function N(e) {
            var t = e.completion || {};
            t.type = "normal",
            delete t.arg,
            e.completion = t
        }
        function k(e) {
            this.tryEntries = [{
                tryLoc: "root"
            }],
            e.forEach(T, this),
            this.reset(!0)
        }
        function I(t) {
            if (t || "" === t) {
                var n = t[a];
                if (n)
                    return n.call(t);
                if ("function" == typeof t.next)
                    return t;
                if (!isNaN(t.length)) {
                    var o = -1
                      , i = function n() {
                        for (; ++o < t.length; )
                            if (r.call(t, o))
                                return n.value = t[o],
                                n.done = !1,
                                n;
                        return n.value = e,
                        n.done = !0,
                        n
                    };
                    return i.next = i
                }
            }
            throw new TypeError(typeof t + " is not iterable")
        }
        return v.prototype = b,
        o(w, "constructor", {
            value: b,
            configurable: !0
        }),
        o(b, "constructor", {
            value: v,
            configurable: !0
        }),
        v.displayName = c(b, l, "GeneratorFunction"),
        t.isGeneratorFunction = function(e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
        }
        ,
        t.mark = function(e) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e, b) : (e.__proto__ = b,
            c(e, l, "GeneratorFunction")),
            e.prototype = Object.create(w),
            e
        }
        ,
        t.awrap = function(e) {
            return {
                __await: e
            }
        }
        ,
        S(C.prototype),
        c(C.prototype, s, (function() {
            return this
        }
        )),
        t.AsyncIterator = C,
        t.async = function(e, n, r, o, i) {
            void 0 === i && (i = Promise);
            var a = new C(d(e, n, r, o),i);
            return t.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                return e.done ? e.value : a.next()
            }
            ))
        }
        ,
        S(w),
        c(w, l, "Generator"),
        c(w, a, (function() {
            return this
        }
        )),
        c(w, "toString", (function() {
            return "[object Generator]"
        }
        )),
        t.keys = function(e) {
            var t = Object(e)
              , n = [];
            for (var r in t)
                n.push(r);
            return n.reverse(),
            function e() {
                for (; n.length; ) {
                    var r = n.pop();
                    if (r in t)
                        return e.value = r,
                        e.done = !1,
                        e
                }
                return e.done = !0,
                e
            }
        }
        ,
        t.values = I,
        k.prototype = {
            constructor: k,
            reset: function(t) {
                if (this.prev = 0,
                this.next = 0,
                this.sent = this._sent = e,
                this.done = !1,
                this.delegate = null,
                this.method = "next",
                this.arg = e,
                this.tryEntries.forEach(N),
                !t)
                    for (var n in this)
                        "t" === n.charAt(0) && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e)
            },
            stop: function() {
                this.done = !0;
                var e = this.tryEntries[0].completion;
                if ("throw" === e.type)
                    throw e.arg;
                return this.rval
            },
            dispatchException: function(t) {
                if (this.done)
                    throw t;
                var n = this;
                function o(r, o) {
                    return s.type = "throw",
                    s.arg = t,
                    n.next = r,
                    o && (n.method = "next",
                    n.arg = e),
                    !!o
                }
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var a = this.tryEntries[i]
                      , s = a.completion;
                    if ("root" === a.tryLoc)
                        return o("end");
                    if (a.tryLoc <= this.prev) {
                        var l = r.call(a, "catchLoc")
                          , c = r.call(a, "finallyLoc");
                        if (l && c) {
                            if (this.prev < a.catchLoc)
                                return o(a.catchLoc, !0);
                            if (this.prev < a.finallyLoc)
                                return o(a.finallyLoc)
                        } else if (l) {
                            if (this.prev < a.catchLoc)
                                return o(a.catchLoc, !0)
                        } else {
                            if (!c)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < a.finallyLoc)
                                return o(a.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function(e, t) {
                for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                    var o = this.tryEntries[n];
                    if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                        var i = o;
                        break
                    }
                }
                i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                var a = i ? i.completion : {};
                return a.type = e,
                a.arg = t,
                i ? (this.method = "next",
                this.next = i.finallyLoc,
                g) : this.complete(a)
            },
            complete: function(e, t) {
                if ("throw" === e.type)
                    throw e.arg;
                return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                this.method = "return",
                this.next = "end") : "normal" === e.type && t && (this.next = t),
                g
            },
            finish: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.finallyLoc === e)
                        return this.complete(n.completion, n.afterLoc),
                        N(n),
                        g
                }
            },
            catch: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.tryLoc === e) {
                        var r = n.completion;
                        if ("throw" === r.type) {
                            var o = r.arg;
                            N(n)
                        }
                        return o
                    }
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function(t, n, r) {
                return this.delegate = {
                    iterator: I(t),
                    resultName: n,
                    nextLoc: r
                },
                "next" === this.method && (this.arg = e),
                g
            }
        },
        t
    }
    function bA(e, t, n, r, o, i, a) {
        try {
            var s = e[i](a)
              , l = s.value
        } catch (e) {
            return void n(e)
        }
        s.done ? t(l) : Promise.resolve(l).then(r, o)
    }
    function EA(e) {
        return function() {
            var t = this
              , n = arguments;
            return new Promise((function(r, o) {
                var i = e.apply(t, n);
                function a(e) {
                    bA(i, r, o, a, s, "next", e)
                }
                function s(e) {
                    bA(i, r, o, a, s, "throw", e)
                }
                a(void 0)
            }
            ))
        }
    }
    function _A(e, t) {
        e.prototype = Object.create(t.prototype),
        e.prototype.constructor = e,
        wA(e, t)
    }
    function AA(e) {
        return AA = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e)
        }
        ,
        AA(e)
    }
    function wA(e, t) {
        return wA = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t,
            e
        }
        ,
        wA(e, t)
    }
    function SA(e) {
        var t = "function" == typeof Map ? new Map : void 0;
        return SA = function(e) {
            if (null === e || !function(e) {
                try {
                    return -1 !== Function.toString.call(e).indexOf("[native code]")
                } catch (t) {
                    return "function" == typeof e
                }
            }(e))
                return e;
            if ("function" != typeof e)
                throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== t) {
                if (t.has(e))
                    return t.get(e);
                t.set(e, n)
            }
            function n() {
                return function(e, t, n) {
                    if (yA())
                        return Reflect.construct.apply(null, arguments);
                    var r = [null];
                    r.push.apply(r, t);
                    var o = new (e.bind.apply(e, r));
                    return n && wA(o, n.prototype),
                    o
                }(e, arguments, AA(this).constructor)
            }
            return n.prototype = Object.create(e.prototype, {
                constructor: {
                    value: n,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            wA(n, e)
        }
        ,
        SA(e)
    }
    function CA(e, t) {
        var n = (void 0 === t ? {} : t).langSubtag
          , r = void 0 === n || n;
        if (e.payPalLocaleCode) {
            var o = e.payPalLocaleCode
              , i = o.locale
              , a = o.country;
            e = i.split(/[-_]/)[0] + "-" + a
        }
        return e = e.replace(/_/, "-").replace(/\bC2\b/, "CN-xbord"),
        r && (e = function(e) {
            return e.replace(/\bno\b/, "nb").replace(/\btl\b/, "fil")
        }(e)),
        e
    }
    var OA = {
        C2: "CN",
        UK: "GB"
    };
    function xA(e) {
        return OA[e] || e
    }
    var TA = {
        max: 400,
        ttl: 6e5
    }
      , NA = function() {
        function e(e) {
            void 0 === e && (e = {}),
            e = Object.assign({}, TA, e),
            this.cache = new Wb(e)
        }
        var t = e.prototype;
        return t.set = function(e, t, n) {
            return void 0 === n && (n = {}),
            this.cache.set(e, t, n)
        }
        ,
        t.get = function(e, t) {
            return void 0 === t && (t = {}),
            this.cache.get(e, t)
        }
        ,
        t.has = function(e, t) {
            return void 0 === t && (t = {}),
            this.cache.has(e, t)
        }
        ,
        t.delete = function(e) {
            return this.cache.delete(e)
        }
        ,
        t.size = function() {
            return this.cache.size
        }
        ,
        t.clear = function() {
            return this.cache.clear()
        }
        ,
        e
    }()
      , kA = function() {
        function e() {}
        return e.getRegionString = function(e) {
            return e && e.region ? xA(e.region) : xA(e)
        }
        ,
        e
    }()
      , IA = function e(t) {
        var n;
        if (!(this instanceof e))
            return new e(t);
        t = CA(t),
        Cb.load({
            main: (n = {},
            n[t] = {},
            n)
        }),
        this.globalize = new Cb(t);
        var r = this.globalize.cldr;
        this.bundle = r.attributes.bundle,
        this.locale = r.locale,
        this.language = r.attributes.language,
        this.region = r.attributes.region,
        this.market = this.region,
        this.weekInfo = {
            minDays: r.get(["supplemental/weekData/minDays", this.region]) || r.get("supplemental/weekData/minDays/001"),
            firstDay: r.get(["supplemental/weekData/firstDay", this.region]) || r.get("supplemental/weekData/firstDay/001"),
            weekendStart: r.get(["supplemental/weekData/weekendStart", this.region]) || r.get("supplemental/weekData/weekendStart/001"),
            weekendEnd: r.get(["supplemental/weekData/weekendEnd", this.region]) || r.get("supplemental/weekData/weekendEnd/001")
        },
        this.metadata = r.get(["metadata"]) || {}
    };
    IA.load = function() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
        t.map((function(e) {
            var t, n, r;
            if (!1 === Ob(t = e) || void 0 !== (n = t.constructor) && (!1 === Ob(r = n.prototype) || !1 === r.hasOwnProperty("isPrototypeOf")))
                throw new Error("Oops: Async provider not supported in browsers at the moment");
            Cb.load(e)
        }
        ))
    }
    ,
    IA._Globalize = Cb,
    IA.cache = new NA;
    var RA, PA, LA = "https://www.paypalobjects.com/worldready-i18n-metadata", DA = function(e) {
        function t(t, n) {
            var r, o = n.code, i = n.service, a = t || {
                message: "Error while loading metadata from CDN.",
                statusCode: "NA"
            }, s = a.message, l = a.statusCode, c = a.details, d = l && " Status code: " + l || "";
            return (r = e.call(this, "" + s + d) || this).name = r.constructor.name,
            r.code = o || "WORDLREADY_CDN_ERROR",
            r.details = c,
            r.statusCode = l,
            r.service = i || "NA",
            r
        }
        return _A(t, e),
        t
    }(function(e) {
        function t(t) {
            var n;
            return (n = e.call(this, t || "") || this).code = "WORLDREADY_ERROR",
            n
        }
        return _A(t, e),
        t
    }(SA(Error))), MA = (RA = EA(vA().mark((function e(t) {
        var n, r, o, i;
        return vA().wrap((function(e) {
            for (; ; )
                switch (e.prev = e.next) {
                case 0:
                    return e.prev = 0,
                    o = FA(),
                    e.next = 4,
                    Yb.get(o + "/config.json");
                case 4:
                    if (i = e.sent,
                    null == (n = i.data) || !n.versions || null == (r = i.data) || !r.versions[t]) {
                        e.next = 9;
                        break
                    }
                    return e.abrupt("return", i.data.versions[t].version);
                case 9:
                    throw new Error("Metadata for requested version (" + t + ") was not found. Please make sure you are using an official version of the worldready-js library");
                case 10:
                    e.next = 16;
                    break;
                case 12:
                    throw e.prev = 12,
                    e.t0 = e.catch(0),
                    e.t0.response && (e.t0.statusCode = e.t0.response.status),
                    new DA(e.t0,{
                        code: "CDN_LOAD_ERROR",
                        service: e.t0.statusCode && "paypalObjectsCDN"
                    });
                case 16:
                case "end":
                    return e.stop()
                }
        }
        ), e, null, [[0, 12]])
    }
    ))),
    function(e) {
        return RA.apply(this, arguments)
    }
    ), FA = function(e) {
        return function(e) {
            return e ? LA + "/" + e : "" + LA
        }(e)
    };
    IA.loadI18nMetadata = (PA = EA(vA().mark((function e(t) {
        var n, r, o, i, a, s, l, c, d, u;
        return vA().wrap((function(e) {
            for (; ; )
                switch (e.prev = e.next) {
                case 0:
                    if (e.prev = 0,
                    t && null != t && t.locale && "" !== (null == t ? void 0 : t.locale)) {
                        e.next = 3;
                        break
                    }
                    throw new Error("Invalid params were provided. Please pass a valid params object in order to load metadata from CDN.");
                case 3:
                    return Nb(n = t.locale, "locale", ["string"]),
                    r = CA(n),
                    o = gA.major("2.0.1"),
                    e.next = 9,
                    MA(o);
                case 9:
                    return i = e.sent,
                    a = FA(i),
                    s = Yb.get(a + "/" + r + ".json"),
                    l = Yb.get(a + "/supplemental.json"),
                    e.next = 15,
                    Promise.all([s, l]);
                case 15:
                    c = e.sent,
                    d = c[0],
                    u = c[1],
                    IA.load(d.data, u.data),
                    e.next = 25;
                    break;
                case 21:
                    throw e.prev = 21,
                    e.t0 = e.catch(0),
                    e.t0.response && (e.t0.statusCode = e.t0.response.status),
                    new DA(e.t0,{
                        code: "CDN_LOAD_ERROR",
                        service: e.t0.statusCode && "paypalObjectsCDN"
                    });
                case 25:
                case "end":
                    return e.stop()
                }
        }
        ), e, null, [[0, 21]])
    }
    ))),
    function(e) {
        return PA.apply(this, arguments)
    }
    );
    var BA = TypeError
      , jA = Ni
      , UA = Ii
      , GA = Hs
      , $A = function(e, t, n) {
        jA ? UA.f(e, t, GA(0, n)) : e[t] = n
    }
      , VA = Dc
      , HA = no
      , KA = lu
      , zA = wi
      , WA = Vo
      , YA = Va
      , XA = function(e) {
        if (e > 9007199254740991)
            throw BA("Maximum allowed index exceeded");
        return e
    }
      , ZA = $A
      , qA = Fu
      , JA = Xu
      , QA = ii
      , ew = bi("isConcatSpreadable")
      , tw = QA >= 51 || !HA((function() {
        var e = [];
        return e[ew] = !1,
        e.concat()[0] !== e
    }
    ))
      , nw = function(e) {
        if (!zA(e))
            return !1;
        var t = e[ew];
        return void 0 !== t ? !!t : KA(e)
    };
    VA({
        target: "Array",
        proto: !0,
        arity: 1,
        forced: !tw || !JA("concat")
    }, {
        concat: function(e) {
            var t, n, r, o, i, a = WA(this), s = qA(a, 0), l = 0;
            for (t = -1,
            r = arguments.length; t < r; t++)
                if (nw(i = -1 === t ? a : arguments[t]))
                    for (o = YA(i),
                    XA(l + o),
                    n = 0; n < o; n++,
                    l++)
                        n in i && ZA(s, l, i[n]);
                else
                    XA(l + 1),
                    ZA(s, l++, i);
            return s.length = l,
            s
        }
    });
    var rw = Ku.filter;
    Dc({
        target: "Array",
        proto: !0,
        forced: !Xu("filter")
    }, {
        filter: function(e) {
            return rw(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var ow = Ya.includes
      , iw = js;
    Dc({
        target: "Array",
        proto: !0,
        forced: no((function() {
            return !Array(1).includes()
        }
        ))
    }, {
        includes: function(e) {
            return ow(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    }),
    iw("includes");
    var aw = no
      , sw = function(e, t) {
        var n = [][e];
        return !!n && aw((function() {
            n.call(null, t || function() {
                return 1
            }
            , 1)
        }
        ))
    }
      , lw = Dc
      , cw = vo
      , dw = Co
      , uw = sw
      , pw = lo([].join);
    lw({
        target: "Array",
        proto: !0,
        forced: cw !== Object || !uw("join", ",")
    }, {
        join: function(e) {
            return pw(dw(this), void 0 === e ? "," : e)
        }
    });
    var hw = Dc
      , fw = lu
      , mw = ku
      , gw = wi
      , yw = Ba
      , vw = Va
      , bw = Co
      , Ew = $A
      , _w = bi
      , Aw = Zp
      , ww = Xu("slice")
      , Sw = _w("species")
      , Cw = Array
      , Ow = Math.max;
    hw({
        target: "Array",
        proto: !0,
        forced: !ww
    }, {
        slice: function(e, t) {
            var n, r, o, i = bw(this), a = vw(i), s = yw(e, a), l = yw(void 0 === t ? a : t, a);
            if (fw(i) && (n = i.constructor,
            (mw(n) && (n === Cw || fw(n.prototype)) || gw(n) && null === (n = n[Sw])) && (n = void 0),
            n === Cw || void 0 === n))
                return Aw(i, s, l);
            for (r = new (void 0 === n ? Cw : n)(Ow(l - s, 0)),
            o = 0; s < l; s++,
            o++)
                s in i && Ew(r, o, i[s]);
            return r.length = o,
            r
        }
    });
    var xw = Ni
      , Tw = no
      , Nw = lo
      , kw = Hc
      , Iw = is
      , Rw = Co
      , Pw = Nw(cl.f)
      , Lw = Nw([].push)
      , Dw = xw && Tw((function() {
        var e = Object.create(null);
        return e[2] = 2,
        !Pw(e, 2)
    }
    ))
      , Mw = function(e) {
        return function(t) {
            for (var n, r = Rw(t), o = Iw(r), i = Dw && null === kw(r), a = o.length, s = 0, l = []; a > s; )
                n = o[s++],
                xw && !(i ? n in r : Pw(r, n)) || Lw(l, e ? [n, r[n]] : r[n]);
            return l
        }
    }
      , Fw = {
        entries: Mw(!0),
        values: Mw(!1)
    }
      , Bw = Fw.entries;
    Dc({
        target: "Object",
        stat: !0
    }, {
        entries: function(e) {
            return Bw(e)
        }
    });
    var jw = Vo
      , Uw = is;
    Dc({
        target: "Object",
        stat: !0,
        forced: no((function() {
            Uw(1)
        }
        ))
    }, {
        keys: function(e) {
            return Uw(jw(e))
        }
    });
    var Gw = Fw.values;
    Dc({
        target: "Object",
        stat: !0
    }, {
        values: function(e) {
            return Gw(e)
        }
    });
    var $w = _i
      , Vw = wi
      , Hw = bd
      , Kw = function(e, t, n) {
        var r, o;
        return Hw && $w(r = t.constructor) && r !== n && Vw(o = r.prototype) && o !== n.prototype && Hw(e, o),
        e
    }
      , zw = wi
      , Ww = ho
      , Yw = bi("match")
      , Xw = function(e) {
        var t;
        return zw(e) && (void 0 !== (t = e[Yw]) ? !!t : "RegExp" === Ww(e))
    }
      , Zw = Ui
      , qw = zo
      , Jw = Hi
      , Qw = Fg
      , eS = RegExp.prototype
      , tS = function(e) {
        var t = e.flags;
        return void 0 !== t || "flags"in eS || qw(e, "flags") || !Jw(eS, e) ? t : Zw(Qw, e)
    }
      , nS = Ii.f
      , rS = Ni
      , oS = xo
      , iS = lo
      , aS = xc
      , sS = Kw
      , lS = Ws
      , cS = ks
      , dS = nc.f
      , uS = Hi
      , pS = Xw
      , hS = Dg
      , fS = tS
      , mS = Vg
      , gS = function(e, t, n) {
        n in e || nS(e, n, {
            configurable: !0,
            get: function() {
                return t[n]
            },
            set: function(e) {
                t[n] = e
            }
        })
    }
      , yS = tc
      , vS = no
      , bS = zo
      , ES = sl.enforce
      , _S = Pp
      , AS = zg
      , wS = Xg
      , SS = bi("match")
      , CS = oS.RegExp
      , OS = CS.prototype
      , xS = oS.SyntaxError
      , TS = iS(OS.exec)
      , NS = iS("".charAt)
      , kS = iS("".replace)
      , IS = iS("".indexOf)
      , RS = iS("".slice)
      , PS = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/
      , LS = /a/g
      , DS = /a/g
      , MS = new CS(LS) !== LS
      , FS = mS.MISSED_STICKY
      , BS = mS.UNSUPPORTED_Y
      , jS = rS && (!MS || FS || AS || wS || vS((function() {
        return DS[SS] = !1,
        CS(LS) !== LS || CS(DS) === DS || "/a/i" !== String(CS(LS, "i"))
    }
    )));
    if (aS("RegExp", jS)) {
        for (var US = function(e, t) {
            var n, r, o, i, a, s, l = uS(OS, this), c = pS(e), d = void 0 === t, u = [], p = e;
            if (!l && c && d && e.constructor === US)
                return e;
            if ((c || uS(OS, e)) && (e = e.source,
            d && (t = fS(p))),
            e = void 0 === e ? "" : hS(e),
            t = void 0 === t ? "" : hS(t),
            p = e,
            AS && "dotAll"in LS && (r = !!t && IS(t, "s") > -1) && (t = kS(t, /s/g, "")),
            n = t,
            FS && "sticky"in LS && (o = !!t && IS(t, "y") > -1) && BS && (t = kS(t, /y/g, "")),
            wS && (i = function(e) {
                for (var t, n = e.length, r = 0, o = "", i = [], a = cS(null), s = !1, l = !1, c = 0, d = ""; r <= n; r++) {
                    if ("\\" === (t = NS(e, r)))
                        t += NS(e, ++r);
                    else if ("]" === t)
                        s = !1;
                    else if (!s)
                        switch (!0) {
                        case "[" === t:
                            s = !0;
                            break;
                        case "(" === t:
                            TS(PS, RS(e, r + 1)) && (r += 2,
                            l = !0),
                            o += t,
                            c++;
                            continue;
                        case ">" === t && l:
                            if ("" === d || bS(a, d))
                                throw new xS("Invalid capture group name");
                            a[d] = !0,
                            i[i.length] = [d, c],
                            l = !1,
                            d = "";
                            continue
                        }
                    l ? d += t : o += t
                }
                return [o, i]
            }(e),
            e = i[0],
            u = i[1]),
            a = sS(CS(e, t), l ? this : OS, US),
            (r || o || u.length) && (s = ES(a),
            r && (s.dotAll = !0,
            s.raw = US(function(e) {
                for (var t, n = e.length, r = 0, o = "", i = !1; r <= n; r++)
                    "\\" !== (t = NS(e, r)) ? i || "." !== t ? ("[" === t ? i = !0 : "]" === t && (i = !1),
                    o += t) : o += "[\\s\\S]" : o += t + NS(e, ++r);
                return o
            }(e), n)),
            o && (s.sticky = !0),
            u.length && (s.groups = u)),
            e !== p)
                try {
                    lS(a, "source", "" === p ? "(?:)" : p)
                } catch (e) {}
            return a
        }, GS = dS(CS), $S = 0; GS.length > $S; )
            gS(US, CS, GS[$S++]);
        OS.constructor = US,
        US.prototype = OS,
        yS(oS, "RegExp", US, {
            constructor: !0
        })
    }
    _S("RegExp");
    var VS = Ni
      , HS = Qu
      , KS = Fg
      , zS = no
      , WS = xo.RegExp
      , YS = WS.prototype;
    VS && zS((function() {
        var e = !0;
        try {
            WS(".", "d")
        } catch (t) {
            e = !1
        }
        var t = {}
          , n = ""
          , r = e ? "dgimsy" : "gimsy"
          , o = function(e, r) {
            Object.defineProperty(t, e, {
                get: function() {
                    return n += r,
                    !0
                }
            })
        }
          , i = {
            dotAll: "s",
            global: "g",
            ignoreCase: "i",
            multiline: "m",
            sticky: "y"
        };
        for (var a in e && (i.hasIndices = "d"),
        i)
            o(a, i[a]);
        return Object.getOwnPropertyDescriptor(YS, "flags").get.call(t) !== r || n !== r
    }
    )) && HS(YS, "flags", {
        configurable: !0,
        get: KS
    });
    var XS = Tl.PROPER
      , ZS = tc
      , qS = xi
      , JS = Dg
      , QS = no
      , eC = tS
      , tC = "toString"
      , nC = RegExp.prototype
      , rC = nC[tC]
      , oC = QS((function() {
        return "/a/b" !== rC.call({
            source: "a",
            flags: "b"
        })
    }
    ))
      , iC = XS && rC.name !== tC;
    (oC || iC) && ZS(nC, tC, (function() {
        var e = qS(this);
        return "/" + JS(e.source) + "/" + JS(eC(e))
    }
    ), {
        unsafe: !0
    });
    var aC = Xw
      , sC = TypeError
      , lC = bi("match")
      , cC = Dc
      , dC = function(e) {
        if (aC(e))
            throw new sC("The method doesn't accept regular expressions");
        return e
    }
      , uC = Ao
      , pC = Dg
      , hC = function(e) {
        var t = /./;
        try {
            "/./"[e](t)
        } catch (n) {
            try {
                return t[lC] = !1,
                "/./"[e](t)
            } catch (e) {}
        }
        return !1
    }
      , fC = lo("".indexOf);
    cC({
        target: "String",
        proto: !0,
        forced: !hC("includes")
    }, {
        includes: function(e) {
            return !!~fC(pC(uC(this)), pC(dC(e)), arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var mC = Ui
      , gC = xi
      , yC = bo
      , vC = Ga
      , bC = Dg
      , EC = Ao
      , _C = oa
      , AC = Vy
      , wC = ov;
    Gy("match", (function(e, t, n) {
        return [function(t) {
            var n = EC(this)
              , r = yC(t) ? void 0 : _C(t, e);
            return r ? mC(r, t, n) : new RegExp(t)[e](bC(n))
        }
        , function(e) {
            var r = gC(this)
              , o = bC(e)
              , i = n(t, r, o);
            if (i.done)
                return i.value;
            if (!r.global)
                return wC(r, o);
            var a = r.unicode;
            r.lastIndex = 0;
            for (var s, l = [], c = 0; null !== (s = wC(r, o)); ) {
                var d = bC(s[0]);
                l[c] = d,
                "" === d && (r.lastIndex = AC(o, vC(r.lastIndex), a)),
                c++
            }
            return 0 === c ? null : l
        }
        ]
    }
    ));
    var SC = "\t\n\v\f\r                　\u2028\u2029\ufeff"
      , CC = Ao
      , OC = Dg
      , xC = SC
      , TC = lo("".replace)
      , NC = RegExp("^[" + xC + "]+")
      , kC = RegExp("(^|[^" + xC + "])[" + xC + "]+$")
      , IC = function(e) {
        return function(t) {
            var n = OC(CC(t));
            return 1 & e && (n = TC(n, NC, "")),
            2 & e && (n = TC(n, kC, "$1")),
            n
        }
    }
      , RC = {
        start: IC(1),
        end: IC(2),
        trim: IC(3)
    }
      , PC = Tl.PROPER
      , LC = no
      , DC = SC
      , MC = RC.trim;
    Dc({
        target: "String",
        proto: !0,
        forced: function(e) {
            return LC((function() {
                return !!DC[e]() || "​᠎" !== "​᠎"[e]() || PC && DC[e].name !== e
            }
            ))
        }("trim")
    }, {
        trim: function() {
            return MC(this)
        }
    });
    var FC = Ku.forEach
      , BC = sw("forEach") ? [].forEach : function(e) {
        return FC(this, e, arguments.length > 1 ? arguments[1] : void 0)
    }
      , jC = xo
      , UC = Zv
      , GC = Qv
      , $C = BC
      , VC = Ws
      , HC = function(e) {
        if (e && e.forEach !== $C)
            try {
                VC(e, "forEach", $C)
            } catch (t) {
                e.forEach = $C
            }
    };
    for (var KC in UC)
        UC[KC] && HC(jC[KC] && jC[KC].prototype);
    HC(GC);
    var zC = Dc
      , WC = Ku.find
      , YC = js
      , XC = "find"
      , ZC = !0;
    XC in [] && Array(1)[XC]((function() {
        ZC = !1
    }
    )),
    zC({
        target: "Array",
        proto: !0,
        forced: ZC
    }, {
        find: function(e) {
            return WC(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    }),
    YC(XC);
    var qC = xi
      , JC = Um
      , QC = au
      , eO = Ui
      , tO = Vo
      , nO = function(e, t, n, r) {
        try {
            return r ? t(qC(n)[0], n[1]) : t(n)
        } catch (t) {
            JC(e, "throw", t)
        }
    }
      , rO = wm
      , oO = ku
      , iO = Va
      , aO = $A
      , sO = Mm
      , lO = Nm
      , cO = Array
      , dO = function(e) {
        var t = tO(e)
          , n = oO(this)
          , r = arguments.length
          , o = r > 1 ? arguments[1] : void 0
          , i = void 0 !== o;
        i && (o = QC(o, r > 2 ? arguments[2] : void 0));
        var a, s, l, c, d, u, p = lO(t), h = 0;
        if (!p || this === cO && rO(p))
            for (a = iO(t),
            s = n ? new this(a) : cO(a); a > h; h++)
                u = i ? o(t[h], h) : t[h],
                aO(s, h, u);
        else
            for (d = (c = sO(t, p)).next,
            s = n ? new this : []; !(l = eO(d, c)).done; h++)
                u = i ? nO(c, o, [l.value, h], !0) : l.value,
                aO(s, h, u);
        return s.length = h,
        s
    };
    Dc({
        target: "Array",
        stat: !0,
        forced: !ig((function(e) {
            Array.from(e)
        }
        ))
    }, {
        from: dO
    });
    var uO = {
        exports: {}
    }
      , pO = {}
      , hO = ho
      , fO = Co
      , mO = nc.f
      , gO = Zp
      , yO = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
    pO.f = function(e) {
        return yO && "Window" === hO(e) ? function(e) {
            try {
                return mO(e)
            } catch (e) {
                return gO(yO)
            }
        }(e) : mO(fO(e))
    }
    ;
    var vO = no((function() {
        if ("function" == typeof ArrayBuffer) {
            var e = new ArrayBuffer(8);
            Object.isExtensible(e) && Object.defineProperty(e, "a", {
                value: 8
            })
        }
    }
    ))
      , bO = no
      , EO = wi
      , _O = ho
      , AO = vO
      , wO = Object.isExtensible
      , SO = bO((function() {
        wO(1)
    }
    )) || AO ? function(e) {
        return !!EO(e) && ((!AO || "ArrayBuffer" !== _O(e)) && (!wO || wO(e)))
    }
    : wO
      , CO = !no((function() {
        return Object.isExtensible(Object.preventExtensions({}))
    }
    ))
      , OO = Dc
      , xO = lo
      , TO = Xa
      , NO = wi
      , kO = zo
      , IO = Ii.f
      , RO = nc
      , PO = pO
      , LO = SO
      , DO = CO
      , MO = !1
      , FO = qo("meta")
      , BO = 0
      , jO = function(e) {
        IO(e, FO, {
            value: {
                objectID: "O" + BO++,
                weakData: {}
            }
        })
    }
      , UO = uO.exports = {
        enable: function() {
            UO.enable = function() {}
            ,
            MO = !0;
            var e = RO.f
              , t = xO([].splice)
              , n = {};
            n[FO] = 1,
            e(n).length && (RO.f = function(n) {
                for (var r = e(n), o = 0, i = r.length; o < i; o++)
                    if (r[o] === FO) {
                        t(r, o, 1);
                        break
                    }
                return r
            }
            ,
            OO({
                target: "Object",
                stat: !0,
                forced: !0
            }, {
                getOwnPropertyNames: PO.f
            }))
        },
        fastKey: function(e, t) {
            if (!NO(e))
                return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
            if (!kO(e, FO)) {
                if (!LO(e))
                    return "F";
                if (!t)
                    return "E";
                jO(e)
            }
            return e[FO].objectID
        },
        getWeakData: function(e, t) {
            if (!kO(e, FO)) {
                if (!LO(e))
                    return !0;
                if (!t)
                    return !1;
                jO(e)
            }
            return e[FO].weakData
        },
        onFreeze: function(e) {
            return DO && MO && LO(e) && !kO(e, FO) && jO(e),
            e
        }
    };
    TO[FO] = !0;
    var GO, $O = uO.exports, VO = Dc, HO = xo, KO = lo, zO = xc, WO = tc, YO = $O, XO = eg, ZO = Mp, qO = _i, JO = bo, QO = wi, ex = no, tx = ig, nx = rd, rx = Kw, ox = tc, ix = ks, ax = Qu, sx = function(e, t, n) {
        for (var r in t)
            ox(e, r, t[r], n);
        return e
    }, lx = au, cx = Mp, dx = bo, ux = eg, px = jd, hx = Ud, fx = Pp, mx = Ni, gx = $O.fastKey, yx = sl.set, vx = sl.getterFor, bx = {
        getConstructor: function(e, t, n, r) {
            var o = e((function(e, o) {
                cx(e, i),
                yx(e, {
                    type: t,
                    index: ix(null),
                    first: void 0,
                    last: void 0,
                    size: 0
                }),
                mx || (e.size = 0),
                dx(o) || ux(o, e[r], {
                    that: e,
                    AS_ENTRIES: n
                })
            }
            ))
              , i = o.prototype
              , a = vx(t)
              , s = function(e, t, n) {
                var r, o, i = a(e), s = l(e, t);
                return s ? s.value = n : (i.last = s = {
                    index: o = gx(t, !0),
                    key: t,
                    value: n,
                    previous: r = i.last,
                    next: void 0,
                    removed: !1
                },
                i.first || (i.first = s),
                r && (r.next = s),
                mx ? i.size++ : e.size++,
                "F" !== o && (i.index[o] = s)),
                e
            }
              , l = function(e, t) {
                var n, r = a(e), o = gx(t);
                if ("F" !== o)
                    return r.index[o];
                for (n = r.first; n; n = n.next)
                    if (n.key === t)
                        return n
            };
            return sx(i, {
                clear: function() {
                    for (var e = a(this), t = e.first; t; )
                        t.removed = !0,
                        t.previous && (t.previous = t.previous.next = void 0),
                        t = t.next;
                    e.first = e.last = void 0,
                    e.index = ix(null),
                    mx ? e.size = 0 : this.size = 0
                },
                delete: function(e) {
                    var t = this
                      , n = a(t)
                      , r = l(t, e);
                    if (r) {
                        var o = r.next
                          , i = r.previous;
                        delete n.index[r.index],
                        r.removed = !0,
                        i && (i.next = o),
                        o && (o.previous = i),
                        n.first === r && (n.first = o),
                        n.last === r && (n.last = i),
                        mx ? n.size-- : t.size--
                    }
                    return !!r
                },
                forEach: function(e) {
                    for (var t, n = a(this), r = lx(e, arguments.length > 1 ? arguments[1] : void 0); t = t ? t.next : n.first; )
                        for (r(t.value, t.key, this); t && t.removed; )
                            t = t.previous
                },
                has: function(e) {
                    return !!l(this, e)
                }
            }),
            sx(i, n ? {
                get: function(e) {
                    var t = l(this, e);
                    return t && t.value
                },
                set: function(e, t) {
                    return s(this, 0 === e ? 0 : e, t)
                }
            } : {
                add: function(e) {
                    return s(this, e = 0 === e ? 0 : e, e)
                }
            }),
            mx && ax(i, "size", {
                configurable: !0,
                get: function() {
                    return a(this).size
                }
            }),
            o
        },
        setStrong: function(e, t, n) {
            var r = t + " Iterator"
              , o = vx(t)
              , i = vx(r);
            px(e, t, (function(e, t) {
                yx(this, {
                    type: r,
                    target: e,
                    state: o(e),
                    kind: t,
                    last: void 0
                })
            }
            ), (function() {
                for (var e = i(this), t = e.kind, n = e.last; n && n.removed; )
                    n = n.previous;
                return e.target && (e.last = n = n ? n.next : e.state.first) ? hx("keys" === t ? n.key : "values" === t ? n.value : [n.key, n.value], !1) : (e.target = void 0,
                hx(void 0, !0))
            }
            ), n ? "entries" : "values", !n, !0),
            fx(t)
        }
    }, Ex = function(e, t, n) {
        var r = -1 !== e.indexOf("Map")
          , o = -1 !== e.indexOf("Weak")
          , i = r ? "set" : "add"
          , a = HO[e]
          , s = a && a.prototype
          , l = a
          , c = {}
          , d = function(e) {
            var t = KO(s[e]);
            WO(s, e, "add" === e ? function(e) {
                return t(this, 0 === e ? 0 : e),
                this
            }
            : "delete" === e ? function(e) {
                return !(o && !QO(e)) && t(this, 0 === e ? 0 : e)
            }
            : "get" === e ? function(e) {
                return o && !QO(e) ? void 0 : t(this, 0 === e ? 0 : e)
            }
            : "has" === e ? function(e) {
                return !(o && !QO(e)) && t(this, 0 === e ? 0 : e)
            }
            : function(e, n) {
                return t(this, 0 === e ? 0 : e, n),
                this
            }
            )
        };
        if (zO(e, !qO(a) || !(o || s.forEach && !ex((function() {
            (new a).entries().next()
        }
        )))))
            l = n.getConstructor(t, e, r, i),
            YO.enable();
        else if (zO(e, !0)) {
            var u = new l
              , p = u[i](o ? {} : -0, 1) !== u
              , h = ex((function() {
                u.has(1)
            }
            ))
              , f = tx((function(e) {
                new a(e)
            }
            ))
              , m = !o && ex((function() {
                for (var e = new a, t = 5; t--; )
                    e[i](t, t);
                return !e.has(-0)
            }
            ));
            f || ((l = t((function(e, t) {
                ZO(e, s);
                var n = rx(new a, e, l);
                return JO(t) || XO(t, n[i], {
                    that: n,
                    AS_ENTRIES: r
                }),
                n
            }
            ))).prototype = s,
            s.constructor = l),
            (h || m) && (d("delete"),
            d("has"),
            r && d("get")),
            (m || p) && d(i),
            o && s.clear && delete s.clear
        }
        return c[e] = l,
        VO({
            global: !0,
            constructor: !0,
            forced: l !== a
        }, c),
        nx(l, e),
        o || n.setStrong(l, e, r),
        l
    };
    function _x(e, t) {
        return _x = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t,
            e
        }
        ,
        _x(e, t)
    }
    function Ax(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++)
            r[n] = e[n];
        return r
    }
    function wx(e, t) {
        var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (n)
            return (n = n.call(e)).next.bind(n);
        if (Array.isArray(e) || (n = function(e, t) {
            if (e) {
                if ("string" == typeof e)
                    return Ax(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ax(e, t) : void 0
            }
        }(e)) || t && e && "number" == typeof e.length) {
            n && (e = n);
            var r = 0;
            return function() {
                return r >= e.length ? {
                    done: !0
                } : {
                    done: !1,
                    value: e[r++]
                }
            }
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }
    function Sx(e, t, n) {
        void 0 === t && (t = {}),
        void 0 === n && (n = !0);
        var r = []
          , o = 0;
        return e.replace(/{[^}]+}/g, (function(i, a) {
            r.push({
                type: "literal",
                value: e.slice(o, a)
            });
            var s = i.slice(1, -1)
              , l = {
                type: s
            };
            n && t[s] && (l.parts = Sx(t[s], t, !1)),
            r.push(l),
            o = a + i.length
        }
        )),
        r.push({
            type: "literal",
            value: e.slice(o)
        }),
        r.filter((function(e) {
            var t = e.type
              , n = e.value;
            return "literal" !== t || n
        }
        ))
    }
    Ex("Set", (function(e) {
        return function() {
            return e(this, arguments.length ? arguments[0] : void 0)
        }
    }
    ), bx),
    GO = function(e, t) {
        if ("string" == typeof t && (t = t.split(".")),
        !t.length)
            return e;
        var n = t.slice(-1);
        return t.slice(0, -1).reduce((function(e, t) {
            return e[t] || {}
        }
        ), e)[n]
    }
    ;
    var Cx = function(e, t) {
        if (void 0 === e && (e = {}),
        void 0 === t && (t = {}),
        !Object.keys(e).length || !t.primaryScript)
            return null;
        var n = t
          , r = n.finalScript
          , o = n.primaryScript;
        return e[r] || e[o] || e.Latn
    }
      , Ox = ["namePrefix", "givenName", "middleName", "surname", "secondSurname", "nameSuffix", "altName"]
      , xx = Object.assign.apply(Object, Ox.map((function(e) {
        var t;
        return (t = {})[e] = !0,
        t
    }
    )));
    function Tx(e, t) {
        var n, r = t.layouts, o = t.regionDefaultScript, i = t.localeScript, a = t.supportedScripts, s = t.requiredPropsArray, l = t.formatAs, c = t.nameFormatData;
        n = "Latn" === o ? "Latn" : function(e, t) {
            if (e.length) {
                for (var n, r = wx(e); !(n = r()).done; )
                    if (n.value.charCodeAt(0) > 591)
                        return t;
                return "Latn"
            }
        }(Object.entries(e).filter((function(e) {
            var t = e[0];
            return xx[t]
        }
        )).map((function(e) {
            return e[1]
        }
        )).join(""), o);
        var d = n || (a.includes(i) ? i || o : "Latn")
          , u = function(e, t) {
            void 0 === t && (t = {});
            if (!e)
                return;
            var n = t
              , r = n.name
              , o = n.requiredPropsArray;
            return e.map((function(e) {
                var t = e.type
                  , n = e.value;
                return "literal" !== t && (n = r[t] || ""),
                Object.assign({
                    type: t,
                    value: n
                }, "literal" !== t && {
                    required: !!o.includes(t)
                })
            }
            ))
        }(Sx(Cx(r, {
            primaryScript: o,
            finalScript: d
        })), {
            name: e,
            requiredPropsArray: s
        });
        return (u = function(e) {
            if (void 0 === e && (e = []),
            e && e.length) {
                var t = !1
                  , n = null
                  , r = [];
                return e.forEach((function(e) {
                    "literal" !== e.type ? (n && t && e.value.length && r.push(n),
                    n = null,
                    r.push(e),
                    e.value.length && (t = !0)) : n = Object.assign({}, e)
                }
                )),
                r
            }
        }(u)).forEach((function(e) {
            "literal" !== e.type && l && (e.value = function(e, t, n) {
                void 0 === t && (t = {});
                void 0 === n && (n = {});
                if (!e || !t)
                    return e;
                var r = e;
                t.titleCase && (r = function(e, t) {
                    void 0 === t && (t = {});
                    if (!e)
                        return e;
                    var n = e
                      , r = t
                      , o = r.nameFormatData.titleCase
                      , i = o.PUNCTUATIONS
                      , a = o.ALL_LOWER_CASE
                      , s = o.GAELIC_TERMS;
                    if (!(i && i.pattern && a && a.pattern && s && s.pattern))
                        return e;
                    return n = (n = (n = n.replace(new RegExp(i.pattern,i.flags), (function(e) {
                        return e.charAt(0).toUpperCase() + e.substring(1).toLowerCase()
                    }
                    ))).replace(new RegExp(s.pattern,s.flags), (function(e, t, n, r, o) {
                        return t ? n.toUpperCase() + r + o.toUpperCase() : e
                    }
                    ))).replace(new RegExp(a.pattern,a.flags), (function(e, t) {
                        return t.toLowerCase()
                    }
                    )),
                    n
                }(r, n));
                return r
            }(e.value, l, {
                nameFormatData: c
            }))
        }
        )),
        u
    }
    function Nx(e, t) {
        t = t || 0;
        var n, r, o = e.charCodeAt(t);
        return 55296 <= o && o <= 56319 ? (n = o,
        r = e.charCodeAt(t + 1),
        isNaN(r) ? n : 1024 * (n - 55296) + (r - 56320) + 65536) : !(56320 <= o && o <= 57343) && o
    }
    function kx(e, t) {
        for (var n, r, o, i, a = 0; a < e.length; a++)
            if (null === e[a].match(t)) {
                if (!1 === (r = Nx(e, a)))
                    continue;
                n = r;
                break
            }
        return n ? (o = "",
        (i = n.toString(16)).length > 4 ? o += "U+" + i : o += "U+" + ("00" + i).slice(-4),
        o.toUpperCase()) : void 0
    }
    var Ix = "person"
      , Rx = "full"
      , Px = {
        titleCase: !1
    }
      , Lx = {
        "NON-REGISTERED-BUSINESS": "nonRegistered",
        "REGISTERED-BUSINESS": "registered"
    }
      , Dx = {
        MISSING_REQUIRED: "MISSING_REQUIRED",
        INVALID_SCRIPT: "INVALID_SCRIPT",
        INVALID_ALL_PUNCTUATION: "INVALID_ALL_PUNCTUATION",
        INVALID_ALL_NUMBER: "INVALID_ALL_NUMBER",
        INVALID_ALL_RESTRICTED: "INVALID_ALL_RESTRICTED",
        INVALID_ALL_REGISTERED_ACCOUNT: "INVALID_ALL_REGISTERED_ACCOUNT",
        INVALID_MAX_LENGTH_EXCEEDED: "INVALID_MAX_LENGTH_EXCEEDED",
        INVALID_ALL_OFFENSIVE: "INVALID_ALL_OFFENSIVE",
        INVALID_ALL_MIXED_SCRIPT: "INVALID_ALL_MIXED_SCRIPT",
        INVALID_NATIONALITY_SCRIPT: "INVALID_NATIONALITY_SCRIPT",
        INVALID_CHARACTER_REPETITION: "INVALID_CHARACTER_REPETITION",
        INVALID_ALL_HONORIFICS: "INVALID_ALL_HONORIFICS",
        INVALID_BOUNDARY_PATTERN: "INVALID_BOUNDARY_PATTERN",
        INVALID_KEYBOARD_BANGING: "INVALID_KEYBOARD_BANGING",
        INVALID_SINGLE_CHARACTER: "INVALID_SINGLE_CHARACTER",
        INVALID_ALL_NON_VOWEL: "INVALID_ALL_NON_VOWEL",
        SPAM_DETECTED: "SPAM_DETECTED"
    };
    function Mx(e, t) {
        for (var n, r = !0, o = wx(new Set(t)); !(n = o()).done; ) {
            var i = n.value;
            if (!e.test(i)) {
                r = !1;
                break
            }
        }
        return r
    }
    function Fx(e, t) {
        var n = GO(t, ["business", "type"]);
        return e && n[e] || n.DEFAULT
    }
    function Bx(e, t) {
        var n = t.requiredPropsArray
          , r = t.validationsMeta
          , o = t.nationality
          , i = Ox
          , a = [];
        Object.defineProperty(a, "errors", {
            get: function() {
                return this
            }
        });
        var s = function(e, t) {
            var n = [];
            return t.forEach((function(t) {
                e[t] && "" !== e[t] || n.push({
                    code: Dx.MISSING_REQUIRED,
                    element: t
                })
            }
            )),
            n
        }(e, n)
          , l = [];
        Ox.forEach((function(t) {
            e[t] && "" !== e[t] && l.push(t)
        }
        ));
        var c = function(e, t, n) {
            var r = Ox.reduce((function(t, n) {
                return t + (e[n] || "")
            }
            ), "")
              , o = n;
            if (o && !Mx(o = new RegExp("^(" + o + ")$"), r)) {
                var i = [];
                return t.forEach((function(t) {
                    var n = kx(e[t], o);
                    void 0 !== n && i.push({
                        code: Dx.INVALID_SCRIPT,
                        element: t,
                        invalidCodePoint: n
                    })
                }
                )),
                i
            }
            return []
        }(e, l, r.validRegExString);
        if (c.length)
            return a.push.apply(a, c.concat(s)),
            a;
        var d = function(e, t) {
            var n, r = Ox.reduce((function(e, n) {
                return e + (t[n] || "")
            }
            ), ""), o = [];
            return Object.keys(e).forEach((function(t) {
                var i = e[t];
                (n = i.characterRange) && Mx(n = new RegExp("^(" + n + ")$"), r) && o.push(t)
            }
            )),
            o
        }(r.scriptValidations, e)
          , u = function(e, t) {
            var n = [];
            0 === e.length && t.forEach((function(e) {
                n.push({
                    code: Dx.INVALID_ALL_MIXED_SCRIPT,
                    element: e
                })
            }
            ));
            return n
        }(d, l);
        if (u.length)
            return a.push.apply(a, u.concat(s)),
            a;
        var p = function(e, t, n, r) {
            for (var o = [], i = n.personal.nationality, a = null != t && (i[t] || i.INTERNATIONAL) || i.DEFAULT, s = !1, l = 0; l < e.length; l++)
                if (-1 !== a.indexOf(e[l])) {
                    s = !0;
                    break
                }
            s || r.forEach((function(e) {
                o.push({
                    code: Dx.INVALID_NATIONALITY_SCRIPT,
                    element: e
                })
            }
            ));
            return o
        }(d, o, r.supportedScripts, l);
        if (p.length)
            return a.push.apply(a, p.concat(s)),
            a;
        var h = i.reduce((function(t, n) {
            return t.concat(function(e, t, n, r) {
                var o = {}
                  , i = !1;
                e[t] && r.forEach((function(r) {
                    var a = n.scriptValidations[r]
                      , s = null;
                    n.maxLength && n.maxLength[r] && n.maxLength[r][t] && (s = n.maxLength[r][t]);
                    var l = n.repetition
                      , c = n.honorificsVariation
                      , d = n.singleCharacterValidation
                      , u = n.boundaryValidation;
                    !function(e, t, n) {
                        if (!Object.keys(n.validList.pattern).includes(t) || !e[t])
                            return !1;
                        var r = n.validList.pattern[t];
                        if (r && (r = new RegExp("^(" + r + ")$","i")).test(e[t].toLowerCase()))
                            return !0;
                        return !1
                    }(e, t, a) ? (function(e, t, n, r) {
                        if (!Object.keys(n.punctuation.pattern).includes(t) || !e[t])
                            return r;
                        Gx(n.punctuation.pattern[t], e[t], t, r)
                    }(e, t, a, o),
                    function(e, t, n, r) {
                        if (!Object.keys(n.pattern).includes(t) || !e[t])
                            return r;
                        var o = n.pattern[t];
                        if (o) {
                            var i;
                            o = new RegExp("^" + o + "*?$","i"),
                            null !== (i = o.exec(e[t])) && (r.INVALID_CHARACTER_REPETITION = {
                                code: Dx.INVALID_CHARACTER_REPETITION,
                                element: t,
                                repeatedCharacter: i.find((function(e) {
                                    return ![void 0, null].includes(e) && e !== i[0]
                                }
                                ))
                            })
                        }
                    }(e, t, l, o),
                    function(e, t, n, r) {
                        if (!Object.keys(n.pattern).includes(t) || !e[t])
                            return r;
                        var o = n.pattern[t].join("|");
                        o && (o = new RegExp("^(" + o + ")$","i")).test(e[t]) && (r.INVALID_ALL_HONORIFICS = {
                            code: Dx.INVALID_ALL_HONORIFICS,
                            element: t
                        })
                    }(e, t, c, o),
                    function(e, t, n, r) {
                        if (!Object.keys(n.pattern).includes(t) || !e[t])
                            return r;
                        var o = n.pattern[t];
                        if (o && (o = new RegExp(o,"i")).test(e[t])) {
                            var i = o.exec(e[t]);
                            r.INVALID_BOUNDARY_PATTERN = {
                                code: Dx.INVALID_BOUNDARY_PATTERN,
                                element: t,
                                invalidSequence: i[0]
                            }
                        }
                    }(e, t, u, o),
                    function(e, t, n, r) {
                        if (!Object.keys(n.keyboardBanging.pattern).includes(t) || !e[t])
                            return r;
                        var o, i = n.keyboardBanging.pattern[t];
                        i && (i = new RegExp(".*?(" + i + ").*?","i")).test(e[t]) && (o = i.exec(e[t]),
                        r.INVALID_KEYBOARD_BANGING = {
                            code: Dx.INVALID_KEYBOARD_BANGING,
                            element: t,
                            invalidSequence: o[1]
                        })
                    }(e, t, a, o),
                    function(e, t, n, r) {
                        if (!n.pattern || !Object.keys(n.pattern).includes(t) || !e[t])
                            return r;
                        var o = n.pattern[t].join("|");
                        if (o) {
                            new RegExp("^(" + o + ")$","i").test(e[t]) && (r.INVALID_SINGLE_CHARACTER = {
                                code: Dx.INVALID_SINGLE_CHARACTER,
                                element: t
                            })
                        }
                    }(e, t, d, o),
                    function(e, t, n, r, o) {
                        if (!Object.keys(n.nonVowel.pattern).includes(t) || !e[t])
                            return o;
                        var i = n.nonVowel.pattern[t]
                          , a = r.singleCharacterRegex.join("|")
                          , s = r.honorificsRegex.join("|")
                          , l = r.boundaryRegex
                          , c = n.punctuationRegex;
                        a && i && s && c && l && (a = new RegExp("^(" + a + ")$","i"),
                        i = new RegExp("^(" + i + ")$","i"),
                        s = new RegExp("^(" + s + ")$","i"),
                        l = new RegExp(l,"i"),
                        c = new RegExp("^(" + c + ")*?$","i"),
                        a.test(e[t]) || s.test(e[t]) || l.test(e[t]) || c.test(e[t]) || function(e, t, n) {
                            if (!Object.keys(n.initialsRange.pattern).includes(t) || !e[t])
                                return !1;
                            var r = n.initialsRange.pattern[t];
                            if (r && (r = new RegExp("^(" + r + ")$","i")).test(e[t]))
                                return !0;
                            return !1
                        }(e, t, n) || !i.test(e[t]) || (o.INVALID_ALL_NON_VOWEL = {
                            code: Dx.INVALID_ALL_NON_VOWEL,
                            element: t
                        }))
                    }(e, t, a, n, o),
                    function(e, t, n, r) {
                        if (!Object.keys(n.offensive.pattern).includes(t) || !e[t])
                            return r;
                        Ux(n.offensive.pattern[t], e[t], t, r)
                    }(e, t, a, o),
                    function(e, t, n, r) {
                        if (!e[t] || !n)
                            return r;
                        e[t].length > n && (r.INVALID_MAX_LENGTH_EXCEEDED = {
                            code: Dx.INVALID_MAX_LENGTH_EXCEEDED,
                            element: t
                        })
                    }(e, t, s, o)) : i = !0
                }
                ));
                return i ? [] : Object.values(o)
            }(e, n, r, d))
        }
        ), []);
        return a.push.apply(a, h.concat(s)),
        a
    }
    function jx(e, t) {
        var n = t.validationsMeta
          , r = t.businessType
          , o = t.registeredBusinessType
          , i = [];
        if (!e || !e.businessName)
            return i.push({
                code: Dx.MISSING_REQUIRED,
                element: "businessName"
            }),
            i;
        var a = n.businessScriptValidations
          , s = e.businessName
          , l = function(e) {
            if ("LEGAL" === e)
                return "legal";
            if ("DOING_BUSINESS_AS" === e)
                return "doingBusinessAs";
            return "default"
        }(r)
          , c = function(e) {
            return e && Lx[e] ? Lx[e] : Lx["REGISTERED-BUSINESS"]
        }(o)
          , d = function(e, t) {
            for (var n = null, r = 0; r < t.length; r += 1) {
                var o = GO(e, ["businessScriptValidations", t[r], "characterRange"]);
                n = n ? n + "|" + o : o
            }
            return n
        }(n, Fx(r, n.supportedScripts));
        if (d && !(d = new RegExp("^(" + d + ")*?$")).test(s)) {
            var u = kx(s, d);
            return void 0 !== u && i.push({
                code: Dx.INVALID_SCRIPT,
                element: "businessName",
                invalidCodePoint: u
            }),
            i
        }
        for (var p = {}, h = function(e, t, n) {
            for (var r = Fx(n, t.supportedScripts), o = new Set, i = function(n) {
                var i = GO(t, ["businessScriptValidations", r[n], "characterRange"]);
                i && (i = new RegExp("^(" + i + ")*?$"),
                e.trim().split("").map((function(e) {
                    i.test(e) && o.add(r[n])
                }
                )))
            }, a = 0; a < r.length; a += 1)
                i(a);
            return o
        }(s, n, r), f = Array.from(h), m = 0; m < f.length; m += 1) {
            var g = a[f[m]];
            p = Gx(GO(g, ["punctuation", "pattern", l]), s, "businessName", p),
            p = Ux(GO(g, ["offensive", "pattern", l]), s, "businessName", p);
            var y = GO(g, ["numberRange", "pattern", l]);
            y && (y = new RegExp("^(" + y + ")*?$","i")).test(s) && (p.INVALID_ALL_PUNCTUATION = {
                code: Dx.INVALID_ALL_PUNCTUATION,
                element: "businessName"
            });
            var v = GO(g, ["restrictedBusinessNameRange", "pattern", l]);
            v && (v = new RegExp("^(" + v + ")$","i")).test(s) && (p.INVALID_ALL_RESTRICTED = {
                code: Dx.INVALID_ALL_RESTRICTED,
                element: "businessName"
            });
            var b = GO(g, ["registeredBusinessNameRange", "pattern", c]);
            b && (b = new RegExp(b,"i")).test(s) && (p.INVALID_ALL_REGISTERED_ACCOUNT = {
                code: Dx.INVALID_ALL_REGISTERED_ACCOUNT,
                element: "businessName"
            })
        }
        return Object.keys(p).forEach((function(e) {
            i.push(p[e])
        }
        )),
        i
    }
    function Ux(e, t, n, r) {
        return e && (e = new RegExp(".*?" + e + ".*?","i")).test(t) && (r.INVALID_ALL_OFFENSIVE = {
            code: Dx.INVALID_ALL_OFFENSIVE,
            element: n
        }),
        r
    }
    function Gx(e, t, n, r) {
        return e && (e = new RegExp("^(" + e + ")*?$","i")).test(t) && (r.INVALID_ALL_PUNCTUATION = {
            code: Dx.INVALID_ALL_PUNCTUATION,
            element: n
        }),
        r
    }
    function $x(e, t, n) {
        if (void 0 === n && (n = {
            skip: []
        }),
        !n.skip.some((function(t) {
            return t.test(e)
        }
        )) && void 0 === t)
            throw function(e) {
                var t = "Missing WorldReady metadata, please refer to https://github.paypal.com/pages/Globalization-R/worldready-js/docs/about-load-worldready-data.html";
                return e && (t += "\nPath: " + e),
                new Error(t)
            }(e)
    }
    var Vx = {
        C2: "CN",
        UK: "GB"
    };
    var Hx = function() {
        function e(e, t) {
            t = t || {};
            var n, r = e.globalize.cldr, o = r.attributes.script, i = (n = t.nameRegion,
            Vx[n] || n), a = t, s = a.style, l = void 0 === s ? Rx : s, c = a.type, d = void 0 === c ? Ix : c, u = a.nationality, p = a.businessType, h = a.registeredBusinessType, f = a.formatAs, m = void 0 === f ? Px : f;
            this.type = d,
            this.nationality = u;
            var g = function(e, t, n, r, o) {
                return {
                    regionDefaultScript: e.get(["supplemental/personNameData", n, "primaryScript"]) || e.get(["supplemental/personNameData", "DEFAULT", "primaryScript"]),
                    validationMatadata: e.get(["supplemental/personNameData", n, "validations"]) || e.get(["supplemental/personNameData", "DEFAULT", "validations"]),
                    formatData: o.titleCase ? e.get(["supplemental/commonNameData/region/default/script/default/formatAs"]) : {},
                    requiredProperties: t === Ix ? e.get(["supplemental/personNameData", n, "requiredProperties"]) || e.get(["supplemental/personNameData", "DEFAULT", "requiredProperties"]) : e.get(["supplemental/businessNameData/default/requiredProperties"]),
                    layouts: t === Ix ? e.get(["supplemental/personNameData", n, "layouts", r]) || e.get(["supplemental/personNameData", "DEFAULT", "layouts", r]) : e.get(["supplemental/businessNameData/default/layouts"]),
                    regionalData: e.get(["supplemental/personNameData", n]),
                    defaultData: e.get(["supplemental/personNameData", "DEFAULT"])
                }
            }(r, d, i, l, m);
            (function(e) {
                return !!(e && e.regionalData && e.defaultData && e.regionDefaultScript && e.layouts && e.requiredProperties && e.formatData && e.validationMatadata)
            }
            )(g) || $x();
            var y = g.regionDefaultScript
              , v = g.layouts
              , b = g.requiredProperties
              , E = g.formatData
              , _ = g.validationMatadata;
            this._validate = function(e) {
                return d === Ix ? Bx(e, {
                    requiredPropsArray: b,
                    validationsMeta: _,
                    nationality: u
                }) : jx(e, {
                    validationsMeta: _,
                    businessType: p,
                    registeredBusinessType: h
                })
            }
            ;
            var A = Object.keys(v);
            this._formatToParts = function(e) {
                return function(e, t) {
                    return Tx(e, t)
                }(e, {
                    layouts: v,
                    regionDefaultScript: y,
                    localeScript: o,
                    supportedScripts: A,
                    requiredPropsArray: b,
                    formatAs: m,
                    nameFormatData: E
                })
            }
        }
        var t = e.prototype;
        return t.format = function(e) {
            return this.formatToParts(e).reduce((function(e, t) {
                return e + t.value
            }
            ), "")
        }
        ,
        t.formatToParts = function(e) {
            return this._formatToParts(e)
        }
        ,
        t.validate = function(e) {
            return this._validate(e)
        }
        ,
        e
    }()
      , Kx = function(e) {
        var t, n;
        function r() {
            return e.apply(this, arguments) || this
        }
        return n = e,
        (t = r).prototype = Object.create(n.prototype),
        t.prototype.constructor = t,
        _x(t, n),
        r
    }(Hx);
    function zx(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++)
            r[n] = e[n];
        return r
    }
    function Wx(e, t) {
        var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (n)
            return (n = n.call(e)).next.bind(n);
        if (Array.isArray(e) || (n = function(e, t) {
            if (e) {
                if ("string" == typeof e)
                    return zx(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? zx(e, t) : void 0
            }
        }(e)) || t && e && "number" == typeof e.length) {
            n && (e = n);
            var r = 0;
            return function() {
                return r >= e.length ? {
                    done: !0
                } : {
                    done: !1,
                    value: e[r++]
                }
            }
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }
    var Yx, Xx = ["type", "parts", "value"];
    function Zx(e) {
        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
            n[r - 1] = arguments[r];
        return n.forEach((function(t) {
            var n, r;
            for (n in t)
                Array.isArray(t[n]) ? e[n] = t[n].slice(0) : t[n]instanceof Date ? e[n] = (r = t[n],
                new Date(r.getTime())) : "object" == typeof t[n] ? e[n] = Zx({}, e[n], t[n]) : e[n] = t[n]
        }
        )),
        e
    }
    function qx(e) {
        return Object.assign.apply(Object, [{}].concat(e))
    }
    Yx = function(e, t) {
        if ("string" == typeof t && (t = t.split(".")),
        !t.length)
            return e;
        var n = t.slice(-1);
        return t.slice(0, -1).reduce((function(e, t) {
            return e[t] || {}
        }
        ), e)[n]
    }
    ;
    var Jx = {
        COARSE: "coarse",
        PORTABLE: "portable"
    }
      , Qx = "multiline"
      , eT = {
        MISSING_ONE_OF: "MISSING_ONE_OF",
        MISSING_REQUIRED: "MISSING_REQUIRED",
        INVALID_PATTERN: "INVALID_PATTERN",
        INVALID_ALL_OFFENSIVE: "INVALID_ALL_OFFENSIVE",
        ADDRESS_CONTAINS_PO_BOX: "ADDRESS_CONTAINS_PO_BOX",
        ADDRESS_CONTAINS_RURAL_ROUTE: "ADDRESS_CONTAINS_RURAL_ROUTE"
    }
      , tT = ["line1", "line2", "state", "city", "postalCode", "countryCode"]
      , nT = ["addressLine1", "addressLine2", "addressLine3", "adminArea4", "adminArea3", "adminArea2", "adminArea1", "postalCode", "countryCode"]
      , rT = nT.concat(["addressDetails.buildingName", "addressDetails.deliveryService", "addressDetails.streetName", "addressDetails.streetNumber", "addressDetails.streetType", "addressDetails.subBuilding"])
      , oT = "shipping"
      , iT = ["US"];
    function aT(e) {
        var t = {};
        return void 0 !== e.postcode && void 0 === e.postalCode && (t.postalCode = e.postcode),
        void 0 !== e.country && void 0 === e.countryCode && (t.countryCode = e.country),
        Object.keys(t).length && (e = Zx(e, t)),
        e
    }
    var sT = {
        portable: ["addressLine1", "addressLine2", "addressLine3"].concat(["adminArea4", "adminArea3", "adminArea2", "adminArea1", "postalCode", "countryCode", "addressDetails.buildingName", "addressDetails.deliveryService", "addressDetails.streetName", "addressDetails.streetNumber", "addressDetails.streetType", "addressDetails.subBuilding"]),
        coarse: ["line1", "line2", "state", "city", "postalCode", "postcode", "countryCode", "country"]
    };
    function lT(e) {
        return e.map((function(e) {
            return e.value
        }
        )).join("")
    }
    function cT(e, t, n) {
        void 0 === t && (t = {}),
        void 0 === n && (n = !0);
        var r = []
          , o = 0;
        return e.replace(/{[^}]+}/g, (function(i, a) {
            r.push({
                type: "literal",
                value: e.slice(o, a)
            });
            var s = i.slice(1, -1)
              , l = {
                type: s
            };
            n && t[s] && (l.parts = cT(t[s], t, !1)),
            r.push(l),
            o = a + i.length
        }
        )),
        r.push({
            type: "literal",
            value: e.slice(o)
        }),
        r.filter((function(e) {
            var t = e.type
              , n = e.value;
            return "literal" !== t || n
        }
        ))
    }
    function dT(e, t, n, r) {
        var o, i = this, a = t.recipient, s = t.businessName, l = r.allowedValues, c = void 0 === l ? {} : l, d = r.internationalRegionName, u = r.regionDefaultScript, p = r.localeScript, h = r.stringLayouts, f = r.supportedScripts, m = r.transforms, g = r.type, y = r.requiredValues, v = void 0 === y ? {} : y, b = r.hiddenValues, E = void 0 === b ? {} : b, _ = r.disabledValues, A = void 0 === _ ? {} : _, w = Object.assign({}, e);
        "coarse" === g && (w = function(e) {
            var t = e.postcode
              , n = e.country;
            return Object.assign(e, t && {
                postalCode: t
            }, n && {
                countryCode: n
            })
        }(w)),
        o = "Latn" === u ? "Latn" : function(e, t) {
            if (e.length) {
                for (var n, r = Wx(e); !(n = r()).done; )
                    if (n.value.charCodeAt(0) > 591)
                        return t;
                return "Latn"
            }
        }(Object.entries(w).filter((function(e) {
            var t = e[0];
            return fT[g][t]
        }
        )).map((function(e) {
            return e[1]
        }
        )).join(""), u);
        var S = o || (f.includes(p) ? p : u || "Latn");
        s && (w.businessName = s),
        m && Object.entries(m).filter((function(e) {
            var t = e[0];
            return w[t]
        }
        )).forEach((function(e) {
            var t = e[0];
            return e[1].forEach((function(e) {
                w[t] = mT[e](w[t])
            }
            ))
        }
        ));
        var C = function(e, t) {
            if (void 0 === e && (e = {}),
            void 0 === t && (t = {}),
            !Object.keys(e).length || !t.primaryScript)
                return null;
            var n = t
              , r = n.finalScript
              , o = n.primaryScript;
            return e[r] || e[o] || e.Latn
        }(h, {
            primaryScript: u,
            finalScript: S
        });
        c = c[S] || {},
        Object.keys(c).forEach((function(e) {
            "string" == typeof c[e] && (w[e] = c[e])
        }
        )),
        d && (w.countryCode = d);
        var O = C.split("\n").map((function(e) {
            var t = cT(e, h);
            return d || (t = t.filter((function(e) {
                return "countryCode" !== e.type
            }
            ))),
            pT(t, c, v, E, A),
            {
                type: "line",
                parts: t = uT(t)
            }
        }
        )).filter((function(e) {
            return e.parts.length
        }
        ));
        return a && O.forEach((function(e) {
            var t = e.parts;
            (void 0 === t ? [] : t).forEach((function(e) {
                if ("recipient" === e.type) {
                    var t = i.personNameFormatterSingleton().formatToParts(a);
                    e.parts = t,
                    e.value = lT(t)
                }
                return e
            }
            ))
        }
        )),
        hT(O, w)
    }
    function uT(e) {
        return e && (e = e.filter((function(e) {
            return !e.disabled
        }
        ))).forEach((function(e) {
            e && e.parts && (e.parts = uT(e.parts))
        }
        )),
        e
    }
    function pT(e, t, n, r, o) {
        return void 0 === t && (t = {}),
        void 0 === n && (n = {}),
        void 0 === r && (r = {}),
        void 0 === o && (o = {}),
        e && (e.filter((function(e) {
            return e.type in t
        }
        )).forEach((function(e) {
            return e.allowedValues = t[e.type]
        }
        )),
        e.filter((function(e) {
            var t = e.type;
            return t in n && n[t]
        }
        )).forEach((function(e) {
            return e.required = !0
        }
        )),
        e.filter((function(e) {
            var t = e.type;
            return t in r && r[t]
        }
        )).forEach((function(e) {
            return e.hidden = !0
        }
        )),
        e.filter((function(e) {
            return e.parts
        }
        )).forEach((function(e) {
            return pT(e.parts, t, n, r, o)
        }
        )),
        e.filter((function(e) {
            var t = e.type;
            return t in o && o[t]
        }
        )).forEach((function(e) {
            return e.disabled = !0
        }
        )),
        e.filter((function(e) {
            return e.parts
        }
        )).forEach((function(e) {
            return pT(e.parts, t, n, r, o)
        }
        ))),
        e
    }
    function hT(e, t) {
        var n = e.map((function(e) {
            var n = e.type
              , r = e.parts
              , o = e.value
              , i = function(e, t) {
                if (null == e)
                    return {};
                var n, r, o = {}, i = Object.keys(e);
                for (r = 0; r < i.length; r++)
                    n = i[r],
                    t.indexOf(n) >= 0 || (o[n] = e[n]);
                return o
            }(e, Xx);
            return "literal" !== n && (r && (o = lT(r = hT(r, t))),
            o || (o = Yx(t, n) || "")),
            Object.assign(Object.assign({
                type: n,
                value: o
            }, i), r && {
                parts: r
            })
        }
        ));
        return n = function(e) {
            if (void 0 === e && (e = []),
            e && e.length) {
                var t = !1
                  , n = null
                  , r = [];
                return e.forEach((function(e) {
                    "literal" !== e.type ? (n && t && e.value.length && r.push(n),
                    n = null,
                    r.push(e),
                    e.value.length && (t = !0)) : n = Object.assign({}, e)
                }
                )),
                r
            }
        }(n)
    }
    var fT = qx(Object.entries(sT).map((function(e) {
        var t, n = e[0], r = e[1];
        return (t = {})[n] = qx(r.map((function(e) {
            var t;
            return (t = {})[e] = !0,
            t
        }
        ))),
        t
    }
    )))
      , mT = {
        uppercase: function(e) {
            return e.toUpperCase()
        }
    };
    function gT(e, t, n, r) {
        var o;
        !function(e) {
            var t = Object.keys(e);
            e.addressDetails && (t = t.concat(Object.keys(e.addressDetails).map((function(e) {
                return "addressDetails." + e
            }
            )))),
            t.forEach((function(e) {}
            ))
        }(e);
        var i = [];
        Object.defineProperty(i, "errors", {
            get: function() {
                return this
            }
        });
        var a = t === Jx.PORTABLE ? rT : tT;
        if (t === Jx.COARSE && (e = aT(e)),
        e = function(e, t) {
            var n = t === Jx.PORTABLE ? nT.concat("addressDetails") : tT;
            return function(e, t) {
                var n = {};
                return t.forEach((function(t) {
                    var r = e[t];
                    void 0 !== r && ("string" == typeof r && (r = r.trim()),
                    n[t] = r)
                }
                )),
                n
            }(e, n)
        }(e, t),
        (o = i).push.apply(o, function(e, t, n, r) {
            void 0 === r && (r = {});
            var o = function(e, t) {
                if (!t)
                    return !1;
                return t.split("||").some((function(t) {
                    return t.split("&&").every((function(t) {
                        return Yx(e, t.trim())
                    }
                    ))
                }
                ))
            }(e, yT(n));
            return t.reduce((function(t, i) {
                return t.concat(function(e, t, n, r) {
                    void 0 === r && (r = {});
                    var o = r
                      , i = o.type
                      , a = o.isRequiredAlgebraValidResult
                      , s = yT(n)
                      , l = n.required ? n.required[t] : null
                      , c = n.validationRegex ? n.validationRegex[t] : null
                      , d = function(e, t) {
                        void 0 === t && (t = {});
                        if (!e || !t.field)
                            return null;
                        var n = t
                          , r = n.field
                          , o = n.type
                          , i = e.addressValidations[o] || e.addressValidations.default;
                        return i = i.offensive.pattern[r] || i.offensive.pattern.default || null,
                        i
                    }(n, {
                        field: t,
                        type: i
                    })
                      , u = function(e, t) {
                        void 0 === t && (t = {});
                        if (!e || !t.field)
                            return null;
                        var n = t
                          , r = n.field
                          , o = n.type
                          , i = e.addressValidations[o] || e.addressValidations.default;
                        return i = i.validList[r] || i.validList.default || null,
                        i
                    }(n, {
                        field: t,
                        type: i
                    })
                      , p = !(!s || !s.includes(t))
                      , h = []
                      , f = Yx(e, t.split("."));
                    if (t && f && !function(e, t) {
                        void 0 === e && (e = "");
                        void 0 === t && (t = "");
                        if ("" === e || "" === t)
                            return !1;
                        if (t = new RegExp("^(" + t + ")$","i"),
                        t.test(e.toLowerCase()))
                            return !0;
                        return !1
                    }(f, u)) {
                        var m = function(e, t, n) {
                            void 0 === e && (e = "");
                            void 0 === t && (t = "");
                            if ("" === e || "" === t || !n || "" === n)
                                return null;
                            var r = new RegExp(".*?" + n + ".*?","i");
                            if (t && r.test(t))
                                return [{
                                    code: eT.INVALID_ALL_OFFENSIVE,
                                    element: e
                                }];
                            return null
                        }(t, f, d);
                        if (m && m.length && h.push.apply(h, m),
                        !iT.includes(e.countryCode)) {
                            var g = function(e, t, n) {
                                var r = n.type
                                  , o = n.addressType
                                  , i = n.addressValidations
                                  , a = n.addressRegion
                                  , s = i.default.poBox.territory[a];
                                if (!s)
                                    return [];
                                var l = s.address_type
                                  , c = function(e, t, n) {
                                    if (!e || !n || !t)
                                        return null;
                                    var r = e.layout_type[n] || e.layout_type.default;
                                    return r = r.properties[t] || r.properties.default,
                                    r
                                }(s, e, r);
                                if (c && c.pattern && c.flags) {
                                    var d = new RegExp(c.pattern,c.flags);
                                    if (l.includes(o) && d.test(t))
                                        return [{
                                            code: eT.ADDRESS_CONTAINS_PO_BOX,
                                            element: e
                                        }]
                                }
                                return []
                            }(t, f, Object.assign({}, r, {
                                type: i,
                                addressValidations: n.addressValidations
                            }));
                            g && g.length && h.push.apply(h, g)
                        }
                        var y = function(e, t, n) {
                            var r = n.addressType
                              , o = n.addressValidations
                              , i = n.addressRegion
                              , a = n.addressData
                              , s = o[a].ruralRoute[i];
                            if (!s || !Object.keys(s).length)
                                return [];
                            var l = s.address_type
                              , c = function(e, t) {
                                if (!e || !t)
                                    return;
                                return e.properties[t] || e.properties.default
                            }(s, e);
                            if (c && c.pattern && c.flags) {
                                var d = new RegExp(c.pattern,c.flags);
                                if (l.includes(r) && d.test(t))
                                    return [{
                                        code: eT.ADDRESS_CONTAINS_RURAL_ROUTE,
                                        element: e
                                    }]
                            }
                            return []
                        }(t, f, Object.assign({}, r, {
                            addressValidations: n.addressValidations
                        }));
                        y && y.length && h.push.apply(h, y)
                    }
                    if (!l && !c && !p)
                        return h;
                    p && !a && h.push({
                        code: eT.MISSING_ONE_OF,
                        element: t,
                        requiredAlgebra: s
                    });
                    p || !l || f || h.push({
                        code: eT.MISSING_REQUIRED,
                        element: t
                    });
                    if ("postalCode" === t && c) {
                        var v = new RegExp("^" + c + "$");
                        f && !v.test(f) && h.push({
                            code: eT.INVALID_PATTERN,
                            element: t
                        })
                    }
                    return h
                }(e, i, n, Object.assign({}, r, {
                    isRequiredAlgebraValidResult: o
                })))
            }
            ), [])
        }(e, a, n, Object.assign({}, r, {
            type: t
        }))),
        t === Jx.PORTABLE) {
            if (i.filter((function(e) {
                return !e.element.includes("addressLine") && !e.element.includes("Details")
            }
            )).length)
                return i;
            var s = i.filter((function(e) {
                return e.element.includes("addressLine")
            }
            ))
              , l = i.filter((function(e) {
                return e.code !== eT.MISSING_ONE_OF && e.code !== eT.MISSING_REQUIRED
            }
            ));
            if (l && l.length)
                return i;
            if (0 === Object.keys(n.required).filter((function(e) {
                return e.includes("addressDetails")
            }
            )).length && 0 !== s.length)
                return i;
            0 !== i.filter((function(e) {
                return e.element.includes("Details")
            }
            )).length && 0 !== s.length || (i = [])
        }
        return i
    }
    function yT(e) {
        return "string" == typeof e.requiredAlgebra ? e.requiredAlgebra : null
    }
    var vT = function(e) {
        var t = "Missing WorldReady metadata, please refer to https://github.paypal.com/pages/Globalization-R/worldready-js/docs/about-load-worldready-data.html";
        return e && (t += "\nPath: " + e),
        new Error(t)
    };
    var bT = {
        C2: "CN",
        UK: "GB"
    };
    function ET(e, t) {
        !function(e, t, n) {
            if (void 0 === n && (n = {
                skip: []
            }),
            !n.skip.some((function(t) {
                return t.test(e)
            }
            )) && void 0 === t)
                throw vT(e)
        }(e, t, {
            skip: [/supplemental\/[A-Za-z]*\/[A-Z]{2}\/maxLength/, /supplemental\/[A-Za-z]*\/[A-Z]{2}\/validationRegex/, /supplemental\/[A-Za-z]*\/[A-Z]{2}\/requiredAlgebra/]
        })
    }
    var _T = function() {
        function e(e, t) {
            var n = this;
            t = t || {};
            var r, o = e.globalize.cldr, i = o.attributes.script, a = (r = t.addressRegion,
            bT[r] || r), s = t, l = s.type, c = void 0 === l ? Jx.PORTABLE : l, d = s.style, u = void 0 === d ? Qx : d;
            this.type = c,
            this.addressRegion = a;
            var p, h, f, m = c + "AddressData";
            o.on("get", ET);
            try {
                h = o.get(["supplemental", "commonAddressData", a, "primaryScript"]),
                p = {
                    maxLength: o.get(["supplemental", m, a, "maxLength"]),
                    required: o.get(["supplemental", m, a, "required"]),
                    validationRegex: o.get(["supplemental", m, a, "validationRegex"]),
                    requiredAlgebra: o.get(["supplemental", m, a, "requiredAlgebra"]),
                    addressValidations: o.get(["supplemental", "addressValidations"])
                }
            } finally {
                o.off("get", ET)
            }
            "international-" === u.slice(0, 14) && (u = u.split("-")[1],
            f = o.get(["supplemental/" + m, a, "allowedValues/Latn/countryCode"]));
            var g = o.get(["supplemental", m, a, "allowedValues"])
              , y = o.get(["supplemental", m, a, "hidden"])
              , v = o.get(["supplemental", m, a, "disabled"]);
            u = u.slice(0, -4);
            var b, E = qx([o.get(["supplemental", m, a, "layouts/default"]), o.get(["supplemental", m, a, "layouts", u])]), _ = o.get(["supplemental", m, a, "transforms"]), A = Object.keys(E);
            this._validate = function(e, t) {
                return t.addressRegion = a,
                t.addressData = m,
                gT(e, c, p, t)
            }
            ,
            this.personNameFormatterSingleton = function() {
                return b || (b = new Kx(e,{
                    nameRegion: a
                }))
            }
            ,
            this._formatToParts = function(e, t) {
                return dT.call(n, e, t, {}, {
                    allowedValues: g,
                    internationalRegionName: f,
                    regionDefaultScript: h,
                    localeScript: i,
                    stringLayouts: E,
                    supportedScripts: A,
                    transforms: _,
                    type: c,
                    requiredValues: p.required,
                    hiddenValues: y,
                    disabledValues: v
                })
            }
            ,
            t.addressData = m
        }
        var t = e.prototype;
        return t.format = function(e, t) {
            return this.formatToParts(e, t).filter((function(e) {
                return e.value
            }
            )).map((function(e) {
                return e.value
            }
            )).join("\n")
        }
        ,
        t.formatToParts = function(e, t) {
            return this._formatToParts(e, t || {})
        }
        ,
        t.validate = function(e, t) {
            return void 0 === t && (t = {}),
            t.addressType = t.addressType || oT,
            this._validate(e, Object.assign({}, t))
        }
        ,
        e
    }()
      , AT = xo
      , wT = lo(1..valueOf)
      , ST = Dc
      , CT = Ni
      , OT = xo
      , xT = AT
      , TT = lo
      , NT = xc
      , kT = zo
      , IT = Kw
      , RT = Hi
      , PT = Xi
      , LT = ga
      , DT = no
      , MT = nc.f
      , FT = ll.f
      , BT = Ii.f
      , jT = wT
      , UT = RC.trim
      , GT = "Number"
      , $T = OT[GT];
    xT[GT];
    var VT = $T.prototype
      , HT = OT.TypeError
      , KT = TT("".slice)
      , zT = TT("".charCodeAt)
      , WT = function(e) {
        var t, n, r, o, i, a, s, l, c = LT(e, "number");
        if (PT(c))
            throw new HT("Cannot convert a Symbol value to a number");
        if ("string" == typeof c && c.length > 2)
            if (c = UT(c),
            43 === (t = zT(c, 0)) || 45 === t) {
                if (88 === (n = zT(c, 2)) || 120 === n)
                    return NaN
            } else if (48 === t) {
                switch (zT(c, 1)) {
                case 66:
                case 98:
                    r = 2,
                    o = 49;
                    break;
                case 79:
                case 111:
                    r = 8,
                    o = 55;
                    break;
                default:
                    return +c
                }
                for (a = (i = KT(c, 2)).length,
                s = 0; s < a; s++)
                    if ((l = zT(i, s)) < 48 || l > o)
                        return NaN;
                return parseInt(i, r)
            }
        return +c
    }
      , YT = NT(GT, !$T(" 0o1") || !$T("0b1") || $T("+0x1"))
      , XT = function(e) {
        var t, n = arguments.length < 1 ? 0 : $T(function(e) {
            var t = LT(e, "number");
            return "bigint" == typeof t ? t : WT(t)
        }(e));
        return RT(VT, t = this) && DT((function() {
            jT(t)
        }
        )) ? IT(Object(n), this, XT) : n
    };
    XT.prototype = VT,
    YT && (VT.constructor = XT),
    ST({
        global: !0,
        constructor: !0,
        wrap: !0,
        forced: YT
    }, {
        Number: XT
    });
    function ZT() {
        ZT = function() {
            return t
        }
        ;
        var e, t = {}, n = Object.prototype, r = n.hasOwnProperty, o = Object.defineProperty || function(e, t, n) {
            e[t] = n.value
        }
        , i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", s = i.asyncIterator || "@@asyncIterator", l = i.toStringTag || "@@toStringTag";
        function c(e, t, n) {
            return Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }),
            e[t]
        }
        try {
            c({}, "")
        } catch (e) {
            c = function(e, t, n) {
                return e[t] = n
            }
        }
        function d(e, t, n, r) {
            var i = t && t.prototype instanceof y ? t : y
              , a = Object.create(i.prototype)
              , s = new k(r || []);
            return o(a, "_invoke", {
                value: O(e, n, s)
            }),
            a
        }
        function u(e, t, n) {
            try {
                return {
                    type: "normal",
                    arg: e.call(t, n)
                }
            } catch (e) {
                return {
                    type: "throw",
                    arg: e
                }
            }
        }
        t.wrap = d;
        var p = "suspendedStart"
          , h = "suspendedYield"
          , f = "executing"
          , m = "completed"
          , g = {};
        function y() {}
        function v() {}
        function b() {}
        var E = {};
        c(E, a, (function() {
            return this
        }
        ));
        var _ = Object.getPrototypeOf
          , A = _ && _(_(I([])));
        A && A !== n && r.call(A, a) && (E = A);
        var w = b.prototype = y.prototype = Object.create(E);
        function S(e) {
            ["next", "throw", "return"].forEach((function(t) {
                c(e, t, (function(e) {
                    return this._invoke(t, e)
                }
                ))
            }
            ))
        }
        function C(e, t) {
            function n(o, i, a, s) {
                var l = u(e[o], e, i);
                if ("throw" !== l.type) {
                    var c = l.arg
                      , d = c.value;
                    return d && "object" == typeof d && r.call(d, "__await") ? t.resolve(d.__await).then((function(e) {
                        n("next", e, a, s)
                    }
                    ), (function(e) {
                        n("throw", e, a, s)
                    }
                    )) : t.resolve(d).then((function(e) {
                        c.value = e,
                        a(c)
                    }
                    ), (function(e) {
                        return n("throw", e, a, s)
                    }
                    ))
                }
                s(l.arg)
            }
            var i;
            o(this, "_invoke", {
                value: function(e, r) {
                    function o() {
                        return new t((function(t, o) {
                            n(e, r, t, o)
                        }
                        ))
                    }
                    return i = i ? i.then(o, o) : o()
                }
            })
        }
        function O(t, n, r) {
            var o = p;
            return function(i, a) {
                if (o === f)
                    throw new Error("Generator is already running");
                if (o === m) {
                    if ("throw" === i)
                        throw a;
                    return {
                        value: e,
                        done: !0
                    }
                }
                for (r.method = i,
                r.arg = a; ; ) {
                    var s = r.delegate;
                    if (s) {
                        var l = x(s, r);
                        if (l) {
                            if (l === g)
                                continue;
                            return l
                        }
                    }
                    if ("next" === r.method)
                        r.sent = r._sent = r.arg;
                    else if ("throw" === r.method) {
                        if (o === p)
                            throw o = m,
                            r.arg;
                        r.dispatchException(r.arg)
                    } else
                        "return" === r.method && r.abrupt("return", r.arg);
                    o = f;
                    var c = u(t, n, r);
                    if ("normal" === c.type) {
                        if (o = r.done ? m : h,
                        c.arg === g)
                            continue;
                        return {
                            value: c.arg,
                            done: r.done
                        }
                    }
                    "throw" === c.type && (o = m,
                    r.method = "throw",
                    r.arg = c.arg)
                }
            }
        }
        function x(t, n) {
            var r = n.method
              , o = t.iterator[r];
            if (o === e)
                return n.delegate = null,
                "throw" === r && t.iterator.return && (n.method = "return",
                n.arg = e,
                x(t, n),
                "throw" === n.method) || "return" !== r && (n.method = "throw",
                n.arg = new TypeError("The iterator does not provide a '" + r + "' method")),
                g;
            var i = u(o, t.iterator, n.arg);
            if ("throw" === i.type)
                return n.method = "throw",
                n.arg = i.arg,
                n.delegate = null,
                g;
            var a = i.arg;
            return a ? a.done ? (n[t.resultName] = a.value,
            n.next = t.nextLoc,
            "return" !== n.method && (n.method = "next",
            n.arg = e),
            n.delegate = null,
            g) : a : (n.method = "throw",
            n.arg = new TypeError("iterator result is not an object"),
            n.delegate = null,
            g)
        }
        function T(e) {
            var t = {
                tryLoc: e[0]
            };
            1 in e && (t.catchLoc = e[1]),
            2 in e && (t.finallyLoc = e[2],
            t.afterLoc = e[3]),
            this.tryEntries.push(t)
        }
        function N(e) {
            var t = e.completion || {};
            t.type = "normal",
            delete t.arg,
            e.completion = t
        }
        function k(e) {
            this.tryEntries = [{
                tryLoc: "root"
            }],
            e.forEach(T, this),
            this.reset(!0)
        }
        function I(t) {
            if (t || "" === t) {
                var n = t[a];
                if (n)
                    return n.call(t);
                if ("function" == typeof t.next)
                    return t;
                if (!isNaN(t.length)) {
                    var o = -1
                      , i = function n() {
                        for (; ++o < t.length; )
                            if (r.call(t, o))
                                return n.value = t[o],
                                n.done = !1,
                                n;
                        return n.value = e,
                        n.done = !0,
                        n
                    };
                    return i.next = i
                }
            }
            throw new TypeError(typeof t + " is not iterable")
        }
        return v.prototype = b,
        o(w, "constructor", {
            value: b,
            configurable: !0
        }),
        o(b, "constructor", {
            value: v,
            configurable: !0
        }),
        v.displayName = c(b, l, "GeneratorFunction"),
        t.isGeneratorFunction = function(e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
        }
        ,
        t.mark = function(e) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e, b) : (e.__proto__ = b,
            c(e, l, "GeneratorFunction")),
            e.prototype = Object.create(w),
            e
        }
        ,
        t.awrap = function(e) {
            return {
                __await: e
            }
        }
        ,
        S(C.prototype),
        c(C.prototype, s, (function() {
            return this
        }
        )),
        t.AsyncIterator = C,
        t.async = function(e, n, r, o, i) {
            void 0 === i && (i = Promise);
            var a = new C(d(e, n, r, o),i);
            return t.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                return e.done ? e.value : a.next()
            }
            ))
        }
        ,
        S(w),
        c(w, l, "Generator"),
        c(w, a, (function() {
            return this
        }
        )),
        c(w, "toString", (function() {
            return "[object Generator]"
        }
        )),
        t.keys = function(e) {
            var t = Object(e)
              , n = [];
            for (var r in t)
                n.push(r);
            return n.reverse(),
            function e() {
                for (; n.length; ) {
                    var r = n.pop();
                    if (r in t)
                        return e.value = r,
                        e.done = !1,
                        e
                }
                return e.done = !0,
                e
            }
        }
        ,
        t.values = I,
        k.prototype = {
            constructor: k,
            reset: function(t) {
                if (this.prev = 0,
                this.next = 0,
                this.sent = this._sent = e,
                this.done = !1,
                this.delegate = null,
                this.method = "next",
                this.arg = e,
                this.tryEntries.forEach(N),
                !t)
                    for (var n in this)
                        "t" === n.charAt(0) && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e)
            },
            stop: function() {
                this.done = !0;
                var e = this.tryEntries[0].completion;
                if ("throw" === e.type)
                    throw e.arg;
                return this.rval
            },
            dispatchException: function(t) {
                if (this.done)
                    throw t;
                var n = this;
                function o(r, o) {
                    return s.type = "throw",
                    s.arg = t,
                    n.next = r,
                    o && (n.method = "next",
                    n.arg = e),
                    !!o
                }
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var a = this.tryEntries[i]
                      , s = a.completion;
                    if ("root" === a.tryLoc)
                        return o("end");
                    if (a.tryLoc <= this.prev) {
                        var l = r.call(a, "catchLoc")
                          , c = r.call(a, "finallyLoc");
                        if (l && c) {
                            if (this.prev < a.catchLoc)
                                return o(a.catchLoc, !0);
                            if (this.prev < a.finallyLoc)
                                return o(a.finallyLoc)
                        } else if (l) {
                            if (this.prev < a.catchLoc)
                                return o(a.catchLoc, !0)
                        } else {
                            if (!c)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < a.finallyLoc)
                                return o(a.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function(e, t) {
                for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                    var o = this.tryEntries[n];
                    if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                        var i = o;
                        break
                    }
                }
                i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                var a = i ? i.completion : {};
                return a.type = e,
                a.arg = t,
                i ? (this.method = "next",
                this.next = i.finallyLoc,
                g) : this.complete(a)
            },
            complete: function(e, t) {
                if ("throw" === e.type)
                    throw e.arg;
                return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                this.method = "return",
                this.next = "end") : "normal" === e.type && t && (this.next = t),
                g
            },
            finish: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.finallyLoc === e)
                        return this.complete(n.completion, n.afterLoc),
                        N(n),
                        g
                }
            },
            catch: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.tryLoc === e) {
                        var r = n.completion;
                        if ("throw" === r.type) {
                            var o = r.arg;
                            N(n)
                        }
                        return o
                    }
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function(t, n, r) {
                return this.delegate = {
                    iterator: I(t),
                    resultName: n,
                    nextLoc: r
                },
                "next" === this.method && (this.arg = e),
                g
            }
        },
        t
    }
    function qT(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++)
            r[n] = e[n];
        return r
    }
    function JT(e, t) {
        var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (n)
            return (n = n.call(e)).next.bind(n);
        if (Array.isArray(e) || (n = function(e, t) {
            if (e) {
                if ("string" == typeof e)
                    return qT(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? qT(e, t) : void 0
            }
        }(e)) || t && e && "number" == typeof e.length) {
            n && (e = n);
            var r = 0;
            return function() {
                return r >= e.length ? {
                    done: !0
                } : {
                    done: !1,
                    value: e[r++]
                }
            }
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }
    YT && function(e, t) {
        for (var n, r = CT ? MT(t) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","), o = 0; r.length > o; o++)
            kT(t, n = r[o]) && !kT(e, n) && BT(e, n, FT(t, n))
    }(xT[GT], $T);
    function QT(e, t, n) {
        if (void 0 === n && (n = {
            skip: []
        }),
        !n.skip.some((function(t) {
            return t.test(e)
        }
        )) && void 0 === t)
            throw function(e) {
                var t = "Missing WorldReady metadata, please refer to https://github.paypal.com/pages/Globalization-R/worldready-js/docs/about-load-worldready-data.html";
                return e && (t += "\nPath: " + e),
                new Error(t)
            }(e)
    }
    var eN = Object.assign({}, {
        COARSE_ADDRESS: "coarseAddress",
        PORTABLE_ADDRESS: "portableAddress",
        PORTABLE_ADDRESS_VALUES: "portableAddressValues",
        COARSE_ADDRESS_VALUES: "coarseAddressValues"
    }, {
        PERSON_NAME: "personName",
        REGION: "region",
        LANGUAGE: "language",
        DATE_TIME_FIELD: "dateTimeField",
        CURRENCY: "currency",
        MONTH: "month",
        DAY: "day",
        TERRITORY_NAME_SORT_KEY: "territoryNameSortKey",
        CURRENCY_NAME_SORT_KEY: "currencyNameSortKey"
    })
      , tN = {
        C2: "CN",
        UK: "GB"
    };
    var nN = function(e, t) {
        if ("root" !== t) {
            var n = e.get(["supplemental/parentLocales/parentLocale", t]);
            return n || ((n = t.substr(0, t.lastIndexOf("-"))) || "root")
        }
    }
      , rN = ZT().mark((function e(t, n) {
        return ZT().wrap((function(e) {
            for (; ; )
                switch (e.prev = e.next) {
                case 0:
                    return e.next = 2,
                    n;
                case 2:
                    if (n = nN(t, n)) {
                        e.next = 0;
                        break
                    }
                case 3:
                case "end":
                    return e.stop()
                }
        }
        ), e)
    }
    ));
    var oN = function() {
        function e(e, t) {
            var n = this;
            void 0 === t && (t = {});
            var r = t.nameRegion || t.addressRegion;
            r && (r = kA.getRegionString(r));
            var o, i, a = t, s = a.element, l = a.style, c = e.globalize.cldr;
            switch (this.fallback = t.fallback || "code",
            this.type = t.type,
            this.type === eN.COARSE_ADDRESS_VALUES && (s = "state" === s ? "adminArea1" : "adminArea2"),
            t.type) {
            case eN.PERSON_NAME:
                this.cldrData = Object.assign({}, c.main("peopleNames/00"), {}, c.main(["peopleNames", r]));
                break;
            case eN.REGION:
                this.cldrData = Object.assign({}, c.main("localeDisplayNames/territories")),
                o = Object.assign({}, c.main(["marketOverrides", e.region, "localeDisplayNames/territories"])),
                Object.assign(this.cldrData, o);
                break;
            case eN.LANGUAGE:
                this.cldrData = Object.assign({}, c.main("localeDisplayNames/languages"));
                break;
            case eN.MONTH:
                this.cldrData = Object.assign({}, c.main(["dates/calendars/gregorian/months", "stand-alone", l]));
                break;
            case eN.DAY:
                this.cldrData = Object.assign({}, c.main(["dates/calendars/gregorian/days", "stand-alone", l]));
                break;
            case eN.CURRENCY:
                this.cldrData = {},
                Object.entries(c.main("numbers/currencies")).forEach((function(e) {
                    var t = e[0]
                      , r = e[1];
                    n.cldrData[t] = r.displayName
                }
                ));
                break;
            case eN.DATE_TIME_FIELD:
                i = "long" === l ? "" : "-" + l,
                this.cldrData = {},
                Object.entries(c.main("dates/fields")).filter((function(e) {
                    var t = e[0];
                    return t === "" + t.split("-")[0] + i
                }
                )).forEach((function(e) {
                    var t = e[0]
                      , r = e[1];
                    n.cldrData[t.split("-")[0]] = r.displayName
                }
                ));
                break;
            case eN.COARSE_ADDRESS:
                this.cldrData = Object.assign({}, c.main("addresses/coarse/00"), {}, c.main(["addresses/coarse", r]));
                break;
            case eN.PORTABLE_ADDRESS:
                this.cldrData = Object.assign({}, c.main("addresses/portable/00"), {}, c.main(["addresses/portable", r]));
                break;
            case eN.COARSE_ADDRESS_VALUES:
            case eN.PORTABLE_ADDRESS_VALUES:
                s.replace(/[/]/g, "_"),
                this.cldrData = Object.assign({}, c.main("addresses/" + s + "/00"), {}, c.main(["addresses/" + s, r]));
                break;
            case eN.TERRITORY_NAME_SORT_KEY:
                this.cldrData = Object.assign({}, c.main("localeDisplayNames/territoryNameSortKey")),
                o = Object.assign({}, c.main(["marketOverrides", r, "localeDisplayNames/territoryNameSortKey"])),
                Object.assign(this.cldrData, o);
                break;
            case eN.CURRENCY_NAME_SORT_KEY:
                this.cldrData = Object.assign({}, c.main("numbers/currencyNameSortKey"))
            }
            Object.keys(this.cldrData).length || QT()
        }
        return e.prototype.select = function(e) {
            var t = this;
            if (Array.isArray(e))
                return e.map((function(e) {
                    return t.select(e)
                }
                ));
            var n, r = tN[n = e] || n, o = null === this.cldrData[r] || "" === this.cldrData[r] ? null : this.cldrData[r];
            if (this.type === eN.LANGUAGE && !o)
                for (var i, a = JT([].concat(function(e, t) {
                    return rN(e, t)
                }(new fb(r), r)).reverse()); !(i = a()).done; ) {
                    var s = i.value;
                    if (o = null === this.cldrData[s] || "" === this.cldrData[s] ? null : this.cldrData[s])
                        break
                }
            return 0 === o ? 0 : o || ("code" === this.fallback ? r : void 0)
        }
        ,
        e
    }()
      , iN = {
        exports: {}
    };
    !function(e) {
        (function() {
            var e = this || self;
            function t(e, t) {
                function n() {}
                n.prototype = t.prototype,
                e.qa = t.prototype,
                e.prototype = new n,
                e.prototype.constructor = e,
                e.wa = function(e, n, r) {
                    for (var o = Array(arguments.length - 2), i = 2; i < arguments.length; i++)
                        o[i - 2] = arguments[i];
                    return t.prototype[n].apply(e, o)
                }
            }
            function n(e, t) {
                null != e && this.g.apply(this, arguments)
            }
            function r(e) {
                e.h = ""
            }
            n.prototype.h = "",
            n.prototype.set = function(e) {
                this.h = "" + e
            }
            ,
            n.prototype.g = function(e, t, n) {
                if (this.h += String(e),
                null != t)
                    for (let e = 1; e < arguments.length; e++)
                        this.h += arguments[e];
                return this
            }
            ,
            n.prototype.toString = function() {
                return this.h
            }
            ;
            var o = class {
                constructor(e) {
                    if (i != i)
                        throw Error("SafeUrl is not meant to be built directly");
                    this.g = e
                }
                toString() {
                    return this.g.toString()
                }
            }
              , i = {};
            new o("about:invalid#zClosurez"),
            new o("about:blank");
            new class {
                constructor() {
                    false
                }
                toString() {
                    return "".toString()
                }
            }
            ;
            new class {
                constructor() {
                    false
                }
                toString() {
                    return "".toString()
                }
            }
            ;
            function a(e, t) {
                for (this.h = e,
                this.g = {},
                e = 0; e < t.length; e++) {
                    var n = t[e];
                    this.g[n.g] = n
                }
            }
            function s(e, t) {
                switch (this.g = e,
                this.l = !!t.ga,
                this.h = t.i,
                this.s = t.type,
                this.o = !1,
                this.h) {
                case d:
                case u:
                case p:
                case h:
                case f:
                case c:
                case l:
                    this.o = !0
                }
                this.j = t.defaultValue
            }
            new class {
                constructor() {
                    var t = e.trustedTypes && e.trustedTypes.emptyHTML || "";
                    this.g = t
                }
                toString() {
                    return this.g.toString()
                }
            }
            ;
            var l = 1
              , c = 2
              , d = 3
              , u = 4
              , p = 6
              , h = 16
              , f = 18;
            function m() {
                this.u = {},
                this.h = this.m().g,
                this.g = this.j = null
            }
            function g(e, t) {
                for (var n = function(e) {
                    return (e = function(e) {
                        const t = [];
                        let n = 0;
                        for (const r in e)
                            t[n++] = e[r];
                        return t
                    }(e.g)).sort((function(e, t) {
                        return e.g - t.g
                    }
                    )),
                    e
                }(e.m()), r = 0; r < n.length; r++) {
                    var o = n[r]
                      , i = o.g;
                    if (y(t, i)) {
                        e.g && delete e.g[o.g];
                        var a = 11 == o.h || 10 == o.h;
                        if (o.l) {
                            o = _(t, i);
                            for (var s = 0; s < o.length; s++)
                                S(e, i, a ? o[s].clone() : o[s])
                        } else
                            o = v(t, i),
                            a ? (a = v(e, i)) ? g(a, o) : w(e, i, o.clone()) : w(e, i, o)
                    }
                }
            }
            function y(e, t) {
                return null != e.u[t]
            }
            function v(e, t) {
                var n = e.u[t];
                if (null == n)
                    return null;
                if (e.j) {
                    if (!(t in e.g)) {
                        var r = e.j
                          , o = e.h[t];
                        if (null != n)
                            if (o.l) {
                                for (var i = [], a = 0; a < n.length; a++)
                                    i[a] = r.h(o, n[a]);
                                n = i
                            } else
                                n = r.h(o, n);
                        return e.g[t] = n
                    }
                    return e.g[t]
                }
                return n
            }
            function b(e, t, n) {
                var r = v(e, t);
                return e.h[t].l ? r[n || 0] : r
            }
            function E(e, t) {
                if (y(e, t))
                    e = b(e, t);
                else
                    e: {
                        if (void 0 === (e = e.h[t]).j)
                            if ((t = e.s) === Boolean)
                                e.j = !1;
                            else if (t === Number)
                                e.j = 0;
                            else {
                                if (t !== String) {
                                    e = new t;
                                    break e
                                }
                                e.j = e.o ? "0" : ""
                            }
                        e = e.j
                    }
                return e
            }
            function _(e, t) {
                return v(e, t) || []
            }
            function A(e, t) {
                return e.h[t].l ? y(e, t) ? e.u[t].length : 0 : y(e, t) ? 1 : 0
            }
            function w(e, t, n) {
                e.u[t] = n,
                e.g && (e.g[t] = n)
            }
            function S(e, t, n) {
                e.u[t] || (e.u[t] = []),
                e.u[t].push(n),
                e.g && delete e.g[t]
            }
            function C(e, t) {
                var n, r = [];
                for (n in t)
                    0 != n && r.push(new s(n,t[n]));
                return new a(e,r)
            }
            function O() {
                m.call(this)
            }
            m.prototype.has = function(e) {
                return y(this, e.g)
            }
            ,
            m.prototype.get = function(e, t) {
                return b(this, e.g, t)
            }
            ,
            m.prototype.set = function(e, t) {
                w(this, e.g, t)
            }
            ,
            m.prototype.add = function(e, t) {
                S(this, e.g, t)
            }
            ,
            m.prototype.clone = function() {
                var e = new this.constructor;
                return e != this && (e.u = {},
                e.g && (e.g = {}),
                g(e, this)),
                e
            }
            ,
            t(O, m);
            var x = null;
            function T() {
                m.call(this)
            }
            t(T, m);
            var N = null;
            function k() {
                m.call(this)
            }
            t(k, m);
            var I = null;
            function R() {}
            O.prototype.m = function() {
                var e = x;
                return e || (x = e = C(O, {
                    0: {
                        name: "NumberFormat",
                        ka: "i18n.phonenumbers.NumberFormat"
                    },
                    1: {
                        name: "pattern",
                        required: !0,
                        i: 9,
                        type: String
                    },
                    2: {
                        name: "format",
                        required: !0,
                        i: 9,
                        type: String
                    },
                    3: {
                        name: "leading_digits_pattern",
                        ga: !0,
                        i: 9,
                        type: String
                    },
                    4: {
                        name: "national_prefix_formatting_rule",
                        i: 9,
                        type: String
                    },
                    6: {
                        name: "national_prefix_optional_when_formatting",
                        i: 8,
                        defaultValue: !1,
                        type: Boolean
                    },
                    5: {
                        name: "domestic_carrier_code_formatting_rule",
                        i: 9,
                        type: String
                    }
                })),
                e
            }
            ,
            O.m = O.prototype.m,
            T.prototype.m = function() {
                var e = N;
                return e || (N = e = C(T, {
                    0: {
                        name: "PhoneNumberDesc",
                        ka: "i18n.phonenumbers.PhoneNumberDesc"
                    },
                    2: {
                        name: "national_number_pattern",
                        i: 9,
                        type: String
                    },
                    9: {
                        name: "possible_length",
                        ga: !0,
                        i: 5,
                        type: Number
                    },
                    10: {
                        name: "possible_length_local_only",
                        ga: !0,
                        i: 5,
                        type: Number
                    },
                    6: {
                        name: "example_number",
                        i: 9,
                        type: String
                    }
                })),
                e
            }
            ,
            T.m = T.prototype.m,
            k.prototype.m = function() {
                var e = I;
                return e || (I = e = C(k, {
                    0: {
                        name: "PhoneMetadata",
                        ka: "i18n.phonenumbers.PhoneMetadata"
                    },
                    1: {
                        name: "general_desc",
                        i: 11,
                        type: T
                    },
                    2: {
                        name: "fixed_line",
                        i: 11,
                        type: T
                    },
                    3: {
                        name: "mobile",
                        i: 11,
                        type: T
                    },
                    4: {
                        name: "toll_free",
                        i: 11,
                        type: T
                    },
                    5: {
                        name: "premium_rate",
                        i: 11,
                        type: T
                    },
                    6: {
                        name: "shared_cost",
                        i: 11,
                        type: T
                    },
                    7: {
                        name: "personal_number",
                        i: 11,
                        type: T
                    },
                    8: {
                        name: "voip",
                        i: 11,
                        type: T
                    },
                    21: {
                        name: "pager",
                        i: 11,
                        type: T
                    },
                    25: {
                        name: "uan",
                        i: 11,
                        type: T
                    },
                    27: {
                        name: "emergency",
                        i: 11,
                        type: T
                    },
                    28: {
                        name: "voicemail",
                        i: 11,
                        type: T
                    },
                    29: {
                        name: "short_code",
                        i: 11,
                        type: T
                    },
                    30: {
                        name: "standard_rate",
                        i: 11,
                        type: T
                    },
                    31: {
                        name: "carrier_specific",
                        i: 11,
                        type: T
                    },
                    33: {
                        name: "sms_services",
                        i: 11,
                        type: T
                    },
                    24: {
                        name: "no_international_dialling",
                        i: 11,
                        type: T
                    },
                    9: {
                        name: "id",
                        required: !0,
                        i: 9,
                        type: String
                    },
                    10: {
                        name: "country_code",
                        i: 5,
                        type: Number
                    },
                    11: {
                        name: "international_prefix",
                        i: 9,
                        type: String
                    },
                    17: {
                        name: "preferred_international_prefix",
                        i: 9,
                        type: String
                    },
                    12: {
                        name: "national_prefix",
                        i: 9,
                        type: String
                    },
                    13: {
                        name: "preferred_extn_prefix",
                        i: 9,
                        type: String
                    },
                    15: {
                        name: "national_prefix_for_parsing",
                        i: 9,
                        type: String
                    },
                    16: {
                        name: "national_prefix_transform_rule",
                        i: 9,
                        type: String
                    },
                    18: {
                        name: "same_mobile_and_fixed_line_pattern",
                        i: 8,
                        defaultValue: !1,
                        type: Boolean
                    },
                    19: {
                        name: "number_format",
                        ga: !0,
                        i: 11,
                        type: O
                    },
                    20: {
                        name: "intl_number_format",
                        ga: !0,
                        i: 11,
                        type: O
                    },
                    22: {
                        name: "main_country_for_code",
                        i: 8,
                        defaultValue: !1,
                        type: Boolean
                    },
                    23: {
                        name: "leading_digits",
                        i: 9,
                        type: String
                    }
                })),
                e
            }
            ,
            k.m = k.prototype.m,
            R.prototype.g = function(e) {
                throw new e.h,
                Error("Unimplemented")
            }
            ,
            R.prototype.h = function(e, t) {
                if (11 == e.h || 10 == e.h)
                    return t instanceof m ? t : this.g(e.s.prototype.m(), t);
                if (14 == e.h)
                    return "string" == typeof t && P.test(t) && 0 < (e = Number(t)) ? e : t;
                if (!e.o)
                    return t;
                if ((e = e.s) === String) {
                    if ("number" == typeof t)
                        return String(t)
                } else if (e === Number && "string" == typeof t && ("Infinity" === t || "-Infinity" === t || "NaN" === t || P.test(t)))
                    return Number(t);
                return t
            }
            ;
            var P = /^-?[0-9]+$/;
            function L() {}
            function D() {}
            function M() {
                m.call(this)
            }
            t(L, R),
            L.prototype.g = function(e, t) {
                return (e = new e.h).j = this,
                e.u = t,
                e.g = {},
                e
            }
            ,
            t(D, L),
            D.prototype.h = function(e, t) {
                return 8 == e.h ? !!t : R.prototype.h.apply(this, arguments)
            }
            ,
            D.prototype.g = function(e, t) {
                return D.qa.g.call(this, e, t)
            }
            ,
            t(M, m);
            var F, B, j = null, U = {
                va: 0,
                ua: 1,
                ta: 5,
                sa: 10,
                ra: 20
            };
            function G(e) {
                F = e.countryCodeToRegionCodeMap,
                B = e.countryToMetadata
            }
            function $() {
                this.g = {}
            }
            M.prototype.m = function() {
                var e = j;
                return e || (j = e = C(M, {
                    0: {
                        name: "PhoneNumber",
                        ka: "i18n.phonenumbers.PhoneNumber"
                    },
                    1: {
                        name: "country_code",
                        required: !0,
                        i: 5,
                        type: Number
                    },
                    2: {
                        name: "national_number",
                        required: !0,
                        i: 4,
                        type: Number
                    },
                    3: {
                        name: "extension",
                        i: 9,
                        type: String
                    },
                    4: {
                        name: "italian_leading_zero",
                        i: 8,
                        type: Boolean
                    },
                    8: {
                        name: "number_of_leading_zeros",
                        i: 5,
                        defaultValue: 1,
                        type: Number
                    },
                    5: {
                        name: "raw_input",
                        i: 9,
                        type: String
                    },
                    6: {
                        name: "country_code_source",
                        i: 14,
                        defaultValue: 0,
                        type: U
                    },
                    7: {
                        name: "preferred_domestic_carrier_code",
                        i: 9,
                        type: String
                    }
                })),
                e
            }
            ,
            M.ctor = M,
            M.ctor.m = M.prototype.m,
            $.g = void 0,
            $.h = function() {
                return $.g ? $.g : $.g = new $
            }
            ;
            var V = {
                0: "0",
                1: "1",
                2: "2",
                3: "3",
                4: "4",
                5: "5",
                6: "6",
                7: "7",
                8: "8",
                9: "9",
                "０": "0",
                "１": "1",
                "２": "2",
                "３": "3",
                "４": "4",
                "５": "5",
                "６": "6",
                "７": "7",
                "８": "8",
                "９": "9",
                "٠": "0",
                "١": "1",
                "٢": "2",
                "٣": "3",
                "٤": "4",
                "٥": "5",
                "٦": "6",
                "٧": "7",
                "٨": "8",
                "٩": "9",
                "۰": "0",
                "۱": "1",
                "۲": "2",
                "۳": "3",
                "۴": "4",
                "۵": "5",
                "۶": "6",
                "۷": "7",
                "۸": "8",
                "۹": "9"
            }
              , H = {
                0: "0",
                1: "1",
                2: "2",
                3: "3",
                4: "4",
                5: "5",
                6: "6",
                7: "7",
                8: "8",
                9: "9",
                "+": "+",
                "*": "*",
                "#": "#"
            }
              , K = {
                0: "0",
                1: "1",
                2: "2",
                3: "3",
                4: "4",
                5: "5",
                6: "6",
                7: "7",
                8: "8",
                9: "9",
                "０": "0",
                "１": "1",
                "２": "2",
                "３": "3",
                "４": "4",
                "５": "5",
                "６": "6",
                "７": "7",
                "８": "8",
                "９": "9",
                "٠": "0",
                "١": "1",
                "٢": "2",
                "٣": "3",
                "٤": "4",
                "٥": "5",
                "٦": "6",
                "٧": "7",
                "٨": "8",
                "٩": "9",
                "۰": "0",
                "۱": "1",
                "۲": "2",
                "۳": "3",
                "۴": "4",
                "۵": "5",
                "۶": "6",
                "۷": "7",
                "۸": "8",
                "۹": "9",
                A: "2",
                B: "2",
                C: "2",
                D: "3",
                E: "3",
                F: "3",
                G: "4",
                H: "4",
                I: "4",
                J: "5",
                K: "5",
                L: "5",
                M: "6",
                N: "6",
                O: "6",
                P: "7",
                Q: "7",
                R: "7",
                S: "7",
                T: "8",
                U: "8",
                V: "8",
                W: "9",
                X: "9",
                Y: "9",
                Z: "9"
            }
              , z = RegExp("[+＋]+")
              , W = RegExp("^[+＋]+")
              , Y = RegExp("([0-9０-９٠-٩۰-۹])")
              , X = RegExp("[+＋0-9０-９٠-٩۰-۹]")
              , Z = /[\\\/] *x/
              , q = RegExp("[^0-9０-９٠-٩۰-۹A-Za-z#]+$")
              , J = /(?:.*?[A-Za-z]){3}.*/
              , Q = RegExp("^\\+([0-9０-９٠-٩۰-۹]|[\\-\\.\\(\\)]?)*[0-9０-９٠-٩۰-۹]([0-9０-９٠-٩۰-۹]|[\\-\\.\\(\\)]?)*$")
              , ee = RegExp("^([A-Za-z0-9０-９٠-٩۰-۹]+((\\-)*[A-Za-z0-9０-９٠-٩۰-۹])*\\.)*[A-Za-z]+((\\-)*[A-Za-z0-9０-９٠-٩۰-۹])*\\.?$");
            function te(e) {
                return "([0-9０-９٠-٩۰-۹]{1," + e + "})"
            }
            function ne() {
                return ";ext=" + te("20") + "|[  \\t,]*(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)[:\\.．]?[  \\t,-]*" + te("20") + "#?|[  \\t,]*(?:[xｘ#＃~～]|int|ｉｎｔ)[:\\.．]?[  \\t,-]*" + te("9") + "#?|[- ]+" + te("6") + "#|[  \\t]*(?:,{2}|;)[:\\.．]?[  \\t,-]*" + te("15") + "#?|[  \\t]*(?:,)+[:\\.．]?[  \\t,-]*" + te("9") + "#?"
            }
            var re = new RegExp("(?:" + ne() + ")$","i")
              , oe = new RegExp("^[0-9０-９٠-٩۰-۹]{2}$|^[+＋]*(?:[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～*]*[0-9０-９٠-٩۰-۹]){3,}[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～*A-Za-z0-9０-９٠-٩۰-۹]*(?:" + ne() + ")?$","i")
              , ie = /(\$\d)/
              , ae = /^\(?\$1\)?$/;
            function se(e) {
                return !(2 > e.length) && Ie(oe, e)
            }
            function le(e) {
                return Ie(J, e) ? ue(e, K) : ue(e, V)
            }
            function ce(e) {
                var t = le(e.toString());
                r(e),
                e.g(t)
            }
            function de(e) {
                return null != e && (1 != A(e, 9) || -1 != _(e, 9)[0])
            }
            function ue(e, t) {
                for (var r, o = new n, i = e.length, a = 0; a < i; ++a)
                    null != (r = t[(r = e.charAt(a)).toUpperCase()]) && o.g(r);
                return o.toString()
            }
            function pe(e) {
                return 0 == e.length || ae.test(e)
            }
            function he(e) {
                return null != e && isNaN(e) && e.toUpperCase()in B
            }
            function fe(e, t, n) {
                return be(e, "001" == n ? "" + t : n)
            }
            function me(e) {
                if (!y(e, 2))
                    return "";
                var t = "" + b(e, 2);
                return y(e, 4) && b(e, 4) && 0 < E(e, 8) ? Array(E(e, 8) + 1).join("0") + t : t
            }
            function ge(e, t, n, r) {
                switch (t) {
                case 0:
                    return "+" + e + n + r;
                case 1:
                    return "+" + e + " " + n + r;
                case 3:
                    return "tel:+" + e + "-" + n + r;
                default:
                    return n + r
                }
            }
            function ye(e, t) {
                switch (t) {
                case 4:
                    return b(e, 5);
                case 3:
                    return b(e, 4);
                case 1:
                    return b(e, 3);
                case 0:
                case 2:
                    return b(e, 2);
                case 5:
                    return b(e, 6);
                case 6:
                    return b(e, 8);
                case 7:
                    return b(e, 7);
                case 8:
                    return b(e, 21);
                case 9:
                    return b(e, 25);
                case 10:
                    return b(e, 28);
                default:
                    return b(e, 1)
                }
            }
            function ve(e, t) {
                return Ee(e, b(t, 1)) ? Ee(e, b(t, 5)) ? 4 : Ee(e, b(t, 4)) ? 3 : Ee(e, b(t, 6)) ? 5 : Ee(e, b(t, 8)) ? 6 : Ee(e, b(t, 7)) ? 7 : Ee(e, b(t, 21)) ? 8 : Ee(e, b(t, 25)) ? 9 : Ee(e, b(t, 28)) ? 10 : Ee(e, b(t, 2)) ? b(t, 18) || Ee(e, b(t, 3)) ? 2 : 0 : !b(t, 18) && Ee(e, b(t, 3)) ? 1 : -1 : -1
            }
            function be(e, t) {
                if (null == t)
                    return null;
                t = t.toUpperCase();
                var n = e.g[t];
                if (null == n) {
                    if (null == (n = B[t]))
                        return null;
                    n = (new D).g(k.m(), n),
                    e.g[t] = n
                }
                return n
            }
            function Ee(e, t) {
                var n = e.length;
                return !(0 < A(t, 9) && -1 == _(t, 9).indexOf(n)) && Ie(E(t, 2), e)
            }
            function _e(e, t, n) {
                var r = E(t, 1)
                  , o = fe(e, r, n);
                return null != o && ("001" == n || r == Se(e, n)) && -1 != ve(e = me(t), o)
            }
            function Ae(e, t) {
                if (null == t)
                    return null;
                var n = E(t, 1);
                if (null == (n = F[n]))
                    e = null;
                else if (1 == n.length)
                    e = n[0];
                else
                    e: {
                        t = me(t);
                        for (var r, o = n.length, i = 0; i < o; i++) {
                            var a = be(e, r = n[i]);
                            if (y(a, 23)) {
                                if (0 == t.search(b(a, 23))) {
                                    e = r;
                                    break e
                                }
                            } else if (-1 != ve(t, a)) {
                                e = r;
                                break e
                            }
                        }
                        e = null
                    }
                return e
            }
            function we(e) {
                return null == (e = F[e]) ? "ZZ" : e[0]
            }
            function Se(e, t) {
                if (null == (e = be(e, t)))
                    throw Error("Invalid region code: " + t);
                return E(e, 10)
            }
            function Ce(e, t, n, r) {
                var o = ye(n, r)
                  , i = 0 == A(o, 9) ? _(b(n, 1), 9) : _(o, 9);
                if (o = _(o, 10),
                2 == r) {
                    if (!de(ye(n, 0)))
                        return Ce(e, t, n, 1);
                    de(e = ye(n, 1)) && ((i = i.concat(0 == A(e, 9) ? _(b(n, 1), 9) : _(e, 9))).sort(),
                    0 == o.length ? o = _(e, 10) : (o = o.concat(_(e, 10))).sort())
                }
                return -1 == i[0] ? 5 : (t = t.length,
                -1 < o.indexOf(t) ? 4 : (n = i[0]) == t ? 0 : n > t ? 2 : i[i.length - 1] < t ? 3 : -1 < i.indexOf(t, 1) ? 0 : 5)
            }
            function Oe(e) {
                var t = me(e);
                return (e = E(e, 1))in F ? (e = fe(Xe, e, we(e)),
                t = Ce(Xe, t, e, -1)) : t = 1,
                t
            }
            function xe(e, t) {
                if (0 == (e = e.toString()).length || "0" == e.charAt(0))
                    return 0;
                for (var n, r = e.length, o = 1; 3 >= o && o <= r; ++o)
                    if ((n = parseInt(e.substring(0, o), 10))in F)
                        return t.g(e.substring(o)),
                        n;
                return 0
            }
            function Te(e, t, o, i, a) {
                if (0 == t.length)
                    return 0;
                var s;
                t = new n(t),
                null != o && (s = b(o, 11)),
                null == s && (s = "NonMatch");
                var l = t.toString();
                if (0 == l.length)
                    s = 20;
                else if (W.test(l))
                    l = l.replace(W, ""),
                    r(t),
                    t.g(le(l)),
                    s = 1;
                else {
                    if (l = new RegExp(s),
                    ce(t),
                    0 == (s = t.toString()).search(l)) {
                        l = s.match(l)[0].length;
                        var c = s.substring(l).match(Y);
                        c && null != c[1] && 0 < c[1].length && "0" == ue(c[1], V) ? s = !1 : (r(t),
                        t.g(s.substring(l)),
                        s = !0)
                    } else
                        s = !1;
                    s = s ? 5 : 20
                }
                if (20 != s) {
                    if (2 >= t.h.length)
                        throw Error("Phone number too short after IDD");
                    if (0 != (e = xe(t, i)))
                        return w(a, 1, e),
                        e;
                    throw Error("Invalid country calling code")
                }
                return null != o && (l = "" + (s = E(o, 10)),
                0 == (c = t.toString()).lastIndexOf(l, 0) && (l = new n(c.substring(l.length)),
                c = b(o, 1),
                c = new RegExp(E(c, 2)),
                Ne(l, o, null),
                l = l.toString(),
                !Ie(c, t.toString()) && Ie(c, l) || 3 == Ce(e, t.toString(), o, -1))) ? (i.g(l),
                w(a, 1, s),
                s) : (w(a, 1, 0),
                0)
            }
            function Ne(e, t, n) {
                var r = e.toString()
                  , o = r.length
                  , i = b(t, 15);
                if (0 != o && null != i && 0 != i.length) {
                    var a = new RegExp("^(?:" + i + ")");
                    if (o = a.exec(r)) {
                        var s = Ie(i = new RegExp(E(b(t, 1), 2)), r)
                          , l = o.length - 1;
                        null == (t = b(t, 16)) || 0 == t.length || null == o[l] || 0 == o[l].length ? s && !Ie(i, r.substring(o[0].length)) || (null != n && 0 < l && null != o[l] && n.g(o[1]),
                        e.set(r.substring(o[0].length))) : (r = r.replace(a, t),
                        (!s || Ie(i, r)) && (null != n && 0 < l && n.g(o[1]),
                        e.set(r)))
                    }
                }
            }
            function ke(e, t, o) {
                if (null == t)
                    throw Error("The string supplied did not seem to be a phone number");
                if (250 < t.length)
                    throw Error("The string supplied is too long to be a phone number");
                var i = new n
                  , a = t.indexOf(";phone-context=");
                if (-1 === a)
                    a = null;
                else if ((a += 15) >= t.length)
                    a = "";
                else {
                    var s = t.indexOf(";", a);
                    a = -1 !== s ? t.substring(a, s) : t.substring(a)
                }
                var l, c, d = a;
                if (null == d ? s = !0 : 0 === d.length ? s = !1 : (s = Q.exec(d),
                d = ee.exec(d),
                s = null !== s || null !== d),
                !s)
                    throw Error("The string supplied did not seem to be a phone number");
                if (null != a ? ("+" === a.charAt(0) && i.g(a),
                a = t.indexOf("tel:"),
                i.g(t.substring(0 <= a ? a + 4 : 0, t.indexOf(";phone-context=")))) : (a = i.g,
                c = () => "",
                0 <= (s = (t = null != (l = t) ? l : c()).search(X)) ? 0 <= (s = (t = (t = t.substring(s)).replace(q, "")).search(Z)) && (t = t.substring(0, s)) : t = "",
                a.call(i, t)),
                0 < (a = (t = i.toString()).indexOf(";isub=")) && (r(i),
                i.g(t.substring(0, a))),
                !se(i.toString()))
                    throw Error("The string supplied did not seem to be a phone number");
                if (t = i.toString(),
                !(he(o) || null != t && 0 < t.length && W.test(t)))
                    throw Error("Invalid country calling code");
                t = new M;
                e: {
                    if (0 <= (s = (a = i.toString()).search(re)) && se(a.substring(0, s)))
                        for (var u = (d = a.match(re)).length, p = 1; p < u; ++p)
                            if (null != d[p] && 0 < d[p].length) {
                                r(i),
                                i.g(a.substring(0, s)),
                                a = d[p];
                                break e
                            }
                    a = ""
                }
                0 < a.length && w(t, 3, a),
                s = be(e, o),
                a = new n,
                d = 0,
                u = i.toString();
                try {
                    d = Te(e, u, s, a, t)
                } catch (n) {
                    if ("Invalid country calling code" != n.message || !W.test(u))
                        throw n;
                    if (0 == (d = Te(e, u = u.replace(W, ""), s, a, t)))
                        throw n
                }
                if (0 != d ? (i = we(d)) != o && (s = fe(e, d, i)) : (ce(i),
                a.g(i.toString()),
                null != o && w(t, 1, d = E(s, 10))),
                2 > a.h.length)
                    throw Error("The string supplied is too short to be a phone number");
                if (null != s && (Ne(o = new n(a.toString()), s, new n),
                2 != (e = Ce(e, o.toString(), s, -1)) && 4 != e && 5 != e && (a = o)),
                2 > (o = (e = a.toString()).length))
                    throw Error("The string supplied is too short to be a phone number");
                if (17 < o)
                    throw Error("The string supplied is too long to be a phone number");
                if (1 < e.length && "0" == e.charAt(0)) {
                    for (w(t, 4, !0),
                    o = 1; o < e.length - 1 && "0" == e.charAt(o); )
                        o++;
                    1 != o && w(t, 8, o)
                }
                return w(t, 2, parseInt(e, 10)),
                t
            }
            function Ie(e, t) {
                return !(!(e = "string" == typeof e ? t.match("^(?:" + e + ")$") : t.match(e)) || e[0].length != t.length)
            }
            function Re(e) {
                this.ia = RegExp(" "),
                this.da = "",
                this.aa = new n,
                this.ea = "",
                this.o = new n,
                this.$ = new n,
                this.v = !0,
                this.fa = this.ba = this.la = !1,
                this.na = $.h(),
                this.oa = this.ma = this.ca = 0,
                this.h = new n,
                this.ha = !1,
                this.s = "",
                this.g = new n,
                this.j = [],
                this.ja = e,
                this.pa = this.l = Me(this, this.ja)
            }
            var Pe = new k;
            w(Pe, 11, "NA");
            var Le = RegExp("^[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～]*\\$1[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～]*(\\$\\d[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～]*)*$")
              , De = /[- ]/;
            function Me(e, t) {
                return t = he(t) ? Se(e.na, t) : 0,
                null != (e = be(e.na, we(t))) ? e : Pe
            }
            function Fe(e) {
                for (var t = e.j.length, n = 0; n < t; ++n) {
                    var o = e.j[n]
                      , i = E(o, 1);
                    if (e.ea == i)
                        return !1;
                    var a = e
                      , s = o
                      , l = E(s, 1);
                    r(a.aa);
                    var c = a;
                    s = E(s, 2);
                    var d = "999999999999999".match(l)[0];
                    if (d.length < c.g.h.length ? c = "" : c = (c = d.replace(new RegExp(l,"g"), s)).replace(RegExp("9", "g"), " "),
                    0 < c.length ? (a.aa.g(c),
                    a = !0) : a = !1,
                    a)
                        return e.ea = i,
                        e.ha = De.test(b(o, 4)),
                        e.ca = 0,
                        !0
                }
                return e.v = !1
            }
            function Be(e, t) {
                for (var n = [], r = t.length - 3, o = e.j.length, i = 0; i < o; ++i) {
                    var a = e.j[i];
                    0 == A(a, 3) ? n.push(e.j[i]) : (a = b(a, 3, Math.min(r, A(a, 3) - 1)),
                    0 == t.search(a) && n.push(e.j[i]))
                }
                e.j = n
            }
            function je(e, t, n) {
                e.o.g(t),
                n && (e.ma = e.o.h.length);
                var o = t;
                if (Y.test(o) || 1 == e.o.h.length && z.test(o) ? ("+" == t ? (o = t,
                e.$.g(t)) : (o = V[t],
                e.$.g(o),
                e.g.g(o)),
                n && (e.oa = e.$.h.length),
                t = o) : (e.v = !1,
                e.la = !0),
                !e.v) {
                    if (!e.la)
                        if (ze(e)) {
                            if (We(e))
                                return Ue(e)
                        } else if (0 < e.s.length && (n = e.g.toString(),
                        r(e.g),
                        e.g.g(e.s),
                        e.g.g(n),
                        t = (n = e.h.toString()).lastIndexOf(e.s),
                        r(e.h),
                        e.h.g(n.substring(0, t))),
                        e.s != Ke(e))
                            return e.h.g(" "),
                            Ue(e);
                    return e.o.toString()
                }
                switch (e.$.h.length) {
                case 0:
                case 1:
                case 2:
                    return e.o.toString();
                case 3:
                    if (!ze(e))
                        return e.s = Ke(e),
                        Ve(e);
                    e.fa = !0;
                default:
                    return e.fa ? (We(e) && (e.fa = !1),
                    e.h.toString() + e.g.toString()) : 0 < e.j.length ? (n = Ye(e, t),
                    0 < (t = Ge(e)).length ? t : (Be(e, e.g.toString()),
                    Fe(e) ? He(e) : e.v ? $e(e, n) : e.o.toString())) : Ve(e)
                }
            }
            function Ue(e) {
                return e.v = !0,
                e.fa = !1,
                e.j = [],
                e.ca = 0,
                r(e.aa),
                e.ea = "",
                Ve(e)
            }
            function Ge(e) {
                for (var t = e.g.toString(), n = e.j.length, r = 0; r < n; ++r) {
                    var o = e.j[r]
                      , i = E(o, 1);
                    if (new RegExp("^(?:" + i + ")$").test(t) && (e.ha = De.test(b(o, 4)),
                    ue(o = $e(e, o = t.replace(new RegExp(i,"g"), b(o, 2))), H) == e.$))
                        return o
                }
                return ""
            }
            function $e(e, t) {
                var n = e.h.h.length;
                return e.ha && 0 < n && " " != e.h.toString().charAt(n - 1) ? e.h + " " + t : e.h + t
            }
            function Ve(e) {
                var t = e.g.toString();
                if (3 <= t.length) {
                    for (var n = e.ba && 0 == e.s.length && 0 < A(e.l, 20) ? _(e.l, 20) : _(e.l, 19), r = n.length, o = 0; o < r; ++o) {
                        var i = n[o];
                        0 < e.s.length && pe(E(i, 4)) && !b(i, 6) && !y(i, 5) || (0 != e.s.length || e.ba || pe(E(i, 4)) || b(i, 6)) && Le.test(E(i, 2)) && e.j.push(i)
                    }
                    return Be(e, t),
                    0 < (t = Ge(e)).length ? t : Fe(e) ? He(e) : e.o.toString()
                }
                return $e(e, t)
            }
            function He(e) {
                var t = e.g.toString()
                  , n = t.length;
                if (0 < n) {
                    for (var r = "", o = 0; o < n; o++)
                        r = Ye(e, t.charAt(o));
                    return e.v ? $e(e, r) : e.o.toString()
                }
                return e.h.toString()
            }
            function Ke(e) {
                var t = e.g.toString()
                  , n = 0;
                if (1 != b(e.l, 10))
                    var o = !1;
                else
                    o = "1" == (o = e.g.toString()).charAt(0) && "0" != o.charAt(1) && "1" != o.charAt(1);
                return o ? (n = 1,
                e.h.g("1").g(" "),
                e.ba = !0) : y(e.l, 15) && (o = new RegExp("^(?:" + b(e.l, 15) + ")"),
                null != (o = t.match(o)) && null != o[0] && 0 < o[0].length && (e.ba = !0,
                n = o[0].length,
                e.h.g(t.substring(0, n)))),
                r(e.g),
                e.g.g(t.substring(n)),
                t.substring(0, n)
            }
            function ze(e) {
                var t = e.$.toString()
                  , n = new RegExp("^(?:\\+|" + b(e.l, 11) + ")");
                return null != (n = t.match(n)) && null != n[0] && 0 < n[0].length && (e.ba = !0,
                n = n[0].length,
                r(e.g),
                e.g.g(t.substring(n)),
                r(e.h),
                e.h.g(t.substring(0, n)),
                "+" != t.charAt(0) && e.h.g(" "),
                !0)
            }
            function We(e) {
                if (0 == e.g.h.length)
                    return !1;
                var t = new n
                  , o = xe(e.g, t);
                return 0 != o && (r(e.g),
                e.g.g(t.toString()),
                "001" == (t = we(o)) ? e.l = be(e.na, "" + o) : t != e.ja && (e.l = Me(e, t)),
                e.h.g("" + o).g(" "),
                e.s = "",
                !0)
            }
            function Ye(e, t) {
                var n = e.aa.toString();
                if (0 <= n.substring(e.ca).search(e.ia)) {
                    var o = n.search(e.ia);
                    return t = n.replace(e.ia, t),
                    r(e.aa),
                    e.aa.g(t),
                    e.ca = o,
                    t.substring(0, e.ca + 1)
                }
                return 1 == e.j.length && (e.v = !1),
                e.ea = "",
                e.o.toString()
            }
            const Xe = $.h()
              , Ze = {
                e164: 0,
                international: 1,
                national: 2,
                rfc3966: 3
            }
              , qe = {
                "Invalid country calling code": "PHONE_INVALID_COUNTRY_CODE",
                "The string supplied is too short to be a phone number": "PHONE_NUMBER_TOO_SHORT",
                "The string supplied is too long to be a phone number": "PHONE_NUMBER_TOO_LONG",
                "The string supplied did not seem to be a phone number": "PHONE_NOT_A_NUMBER",
                "Phone number too short after IDD": "PHONE_TOO_SHORT_AFTER_IDD"
            }
              , Je = {
                FIXED_LINE: 0,
                MOBILE: 1,
                FIXED_LINE_OR_MOBILE: 2,
                TOLL_FREE: 3,
                PREMIUM_RATE: 4,
                SHARED_COST: 5,
                VOIP: 6,
                PERSONAL_NUMBER: 7,
                PAGER: 8,
                UAN: 9,
                VOICEMAIL: 10,
                UNKNOWN: -1
            }
              , Qe = Object.keys(Je).reduce((function(e, t) {
                return e[Je[t]] = t,
                e
            }
            ), {});
            function et(e) {
                if (!nt(e) || void 0 === e.countryCode || void 0 === e.nationalNumber || "string" != typeof e.countryCode && "number" != typeof e.countryCode || "string" != typeof e.nationalNumber && "number" != typeof e.nationalNumber || null != e.extension && "string" != typeof e.extension && "number" != typeof e.extension)
                    throw Error("Phone object conversion failed")
            }
            function tt(e) {
                if (!nt(e))
                    throw Error("Invalid metadata");
                const t = e.regionCodes;
                if (!t || !Array.isArray(t) || !t.length)
                    throw Error("Invalid metadata");
                if (!nt(e.countryCodeToRegionCodeMap) || !nt(e.countryToMetadata))
                    throw Error("Invalid metadata")
            }
            function nt(e) {
                return null !== e && "[object Object]" == "" + e && e.constructor === Object
            }
            function rt(e, t) {
                if (-1 === t.regionCodes.indexOf(e))
                    throw Error("Metadata not loaded for region: " + e)
            }
            function ot(e) {
                if (null === e)
                    return null;
                const t = {
                    countryCode: e.u[1].toString(),
                    nationalNumber: e.u[2].toString()
                };
                if (y(e, 4)) {
                    const n = E(e, 8);
                    for (let e = 0; e < n; e++)
                        t.nationalNumber = "0" + t.nationalNumber
                }
                return void 0 !== e.u[3] && (t.extension = e.u[3]),
                t
            }
            function it(e) {
                try {
                    const t = new M;
                    let n, r, o = !1;
                    if (w(t, 1, Number(e.countryCode)),
                    n = e.nationalNumber,
                    "string" == typeof n) {
                        let e = 0;
                        for (; "0" === n.charAt(e); )
                            o = !0,
                            e++;
                        o && (w(t, 4, !0),
                        w(t, 8, e)),
                        n = Number(n)
                    }
                    return w(t, 2, n),
                    void 0 !== e.extension && null !== e.extension && (r = e.extension.toString(),
                    w(t, 3, r)),
                    t
                } catch (e) {
                    throw Error("Phone object conversion failed: " + e.message)
                }
            }
            function at(e) {
                return tt(e),
                {
                    getSupportedRegions: function() {
                        return G(e),
                        Object.keys(B).filter((function(e) {
                            return isNaN(e)
                        }
                        ))
                    },
                    getCountryCodeForRegion: function(t) {
                        return G(e),
                        rt(t, e),
                        he(t) ? Se(Xe, t) : 0
                    },
                    countryCodeToRegionCodeMap: function() {
                        return G(e),
                        F
                    },
                    inferPhoneNumberType: function(t) {
                        G(e),
                        et(t),
                        t = it(t);
                        var n = Xe
                          , r = Ae(n, t);
                        return null == (n = fe(n, E(t, 1), r)) ? t = -1 : t = ve(t = me(t), n),
                        Qe[t]
                    },
                    inferPhoneNumberRegion: function(t) {
                        return G(e),
                        et(t),
                        t = it(t),
                        Ae(Xe, t)
                    },
                    formatPhoneNumber: function(t, n) {
                        G(e),
                        et(t),
                        t = it(t);
                        const r = Ze[(n = n || {}).style];
                        if (void 0 === r)
                            throw Error("Invalid style property: " + n.style);
                        return function(e, t) {
                            var n = Xe;
                            if (0 == b(e, 2) && y(e, 5)) {
                                var r = E(e, 5);
                                if (0 < r.length)
                                    return r
                            }
                            r = E(e, 1);
                            var o = me(e);
                            if (0 == t)
                                return ge(r, 0, o, "");
                            if (!(r in F))
                                return o;
                            n = fe(n, r, we(r)),
                            e = y(e, 3) && 0 != b(e, 3).length ? 3 == t ? ";ext=" + b(e, 3) : y(n, 13) ? b(n, 13) + E(e, 3) : " ext. " + E(e, 3) : "";
                            e: {
                                for (var i, a = (n = 0 == _(n, 20).length || 2 == t ? _(n, 19) : _(n, 20)).length, s = 0; s < a; ++s) {
                                    var l = A(i = n[s], 3);
                                    if ((0 == l || 0 == o.search(b(i, 3, l - 1))) && Ie(l = new RegExp(b(i, 1)), o)) {
                                        n = i;
                                        break e
                                    }
                                }
                                n = null
                            }
                            return null != n && (n = E(a = n, 2),
                            i = new RegExp(b(a, 1)),
                            E(a, 5),
                            a = E(a, 4),
                            o = 2 == t && null != a && 0 < a.length ? o.replace(i, n.replace(ie, a)) : o.replace(i, n),
                            3 == t && (o = (o = o.replace(RegExp("^[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～]+"), "")).replace(RegExp("[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～]+", "g"), "-"))),
                            ge(r, t, o, e)
                        }(t, r).toString()
                    },
                    validatePhoneNumber: function(t, n) {
                        if (G(e),
                        et(t),
                        void 0 !== n) {
                            rt(n, e);
                            var r = he(n) ? Se(Xe, n) : 0;
                            if (`${t.countryCode}` != `${r}`)
                                return Error("PHONE_INVALID_COUNTRY_CODE")
                        }
                        return t = it(t),
                        void 0 === n ? n = _e(n = Xe, t, r = Ae(n, t)) : n = _e(Xe, t, n),
                        !!n || (t = Oe(t),
                        Error(1 === t ? "PHONE_INVALID_COUNTRY_CODE" : 2 === t ? "PHONE_NUMBER_TOO_SHORT" : 3 === t ? "PHONE_NUMBER_TOO_LONG" : 5 === t ? "PHONE_NUMBER_INVALID_LENGTH" : "PHONE_INVALID_FOR_REGION"))
                    },
                    validateLength: function(t, n) {
                        if (G(e),
                        et(t),
                        void 0 !== n) {
                            rt(n, e);
                            const r = he(n) ? Se(Xe, n) : 0;
                            if (`${t.countryCode}` != `${r}`)
                                return Error("PHONE_INVALID_COUNTRY_CODE");
                            tt(n = {
                                regionCodes: [n],
                                countryCodeToRegionCodeMap: {
                                    [r]: [n]
                                },
                                countryToMetadata: {
                                    [n]: e.countryToMetadata[n]
                                }
                            }),
                            G(n)
                        }
                        return 0 === (t = Oe(t = it(t))) || Error(1 === t ? "PHONE_INVALID_COUNTRY_CODE" : 2 === t ? "PHONE_NUMBER_TOO_SHORT" : 3 === t ? "PHONE_NUMBER_TOO_LONG" : 5 === t ? "PHONE_NUMBER_INVALID_LENGTH" : 4 === t ? "PHONE_NUMBER_POSSIBLE_LOCAL_ONLY" : "PHONE_INVALID_FOR_REGION")
                    },
                    parsePhoneNumber: function(t, n) {
                        let r;
                        G(e),
                        void 0 !== n && rt(n, e);
                        try {
                            r = ke(Xe, t, n)
                        } catch (e) {
                            return Error(qe[e.message])
                        }
                        return ot(r)
                    },
                    getExampleNumberForType: function(t, n) {
                        G(e),
                        rt(n, e),
                        void 0 === (t = Je[t]) && (t = -1);
                        e: {
                            var r = t;
                            if (t = Xe,
                            he(n)) {
                                r = ye(be(t, n), r);
                                try {
                                    if (y(r, 6)) {
                                        var o = ke(t, b(r, 6), n);
                                        break e
                                    }
                                } catch (e) {}
                            }
                            o = null
                        }
                        return ot(o)
                    },
                    getAsYouTypeFormatter: function(t) {
                        G(e),
                        rt(t, e);
                        const n = new Re(t);
                        return {
                            inputDigit: function(e) {
                                return n.da = je(n, e, !1),
                                n.da
                            },
                            clear: function() {
                                n.da = "",
                                r(n.o),
                                r(n.$),
                                r(n.aa),
                                n.ca = 0,
                                n.ea = "",
                                r(n.h),
                                n.s = "",
                                r(n.g),
                                n.v = !0,
                                n.la = !1,
                                n.oa = 0,
                                n.ma = 0,
                                n.ba = !1,
                                n.fa = !1,
                                n.j = [],
                                n.ha = !1,
                                n.l != n.pa && (n.l = Me(n, n.ja))
                            },
                            inputDigitAndRememberPosition: function(e) {
                                return n.da = je(n, e, !0),
                                n.da
                            },
                            getRememberedPosition: function() {
                                var e;
                                if (n.v) {
                                    for (var t = e = 0, r = n.$.toString(), o = n.da.toString(); e < n.oa && t < o.length; )
                                        r.charAt(e) == o.charAt(t) && e++,
                                        t++;
                                    e = t
                                } else
                                    e = n.ma;
                                return e
                            }
                        }
                    }
                }
            }
            var st, lt = ["createPhoneHandler"], ct = e;
            lt[0]in ct || void 0 === ct.execScript || ct.execScript("var " + lt[0]);
            for (; lt.length && (st = lt.shift()); )
                lt.length || void 0 === at ? ct = ct[st] && ct[st] !== Object.prototype[st] ? ct[st] : ct[st] = {} : ct[st] = at
        }
        ).call(e.exports)
    }(iN);
    var aN = iN.exports
      , sN = function(e) {
        var t = "Missing WorldReady metadata, please refer to https://github.paypal.com/pages/Globalization-R/worldready-js/docs/about-load-worldready-data.html";
        return e && (t += "\nPath: " + e),
        new Error(t)
    };
    function lN(e) {
        return "E_MISSING_CLDR" === e.code ? sN(e.stack) : new Error(["Oops, internal error", e.message, e.stack].join("\n"))
    }
    function cN(e, t, n) {
        if (void 0 === n && (n = {
            skip: []
        }),
        !n.skip.some((function(t) {
            return t.test(e)
        }
        )) && void 0 === t)
            throw sN(e)
    }
    function dN(e, t, n) {
        if (r = t.replace(/^\s*tel:/i, ""),
        Boolean(r.match(/[a-zA-Z]/))) {
            return {
                errors: [{
                    code: "PHONE_ALPHA_CHARACTERS"
                }]
            }
        }
        var r, o = e.parsePhoneNumber(t, n);
        if (o instanceof Error)
            return {
                errors: [{
                    code: o.message
                }]
            };
        var i = e.validatePhoneNumber(o, n);
        return i instanceof Error ? {
            errors: [{
                code: i.message
            }]
        } : o
    }
    function uN(e) {
        var t = new fb("und");
        return e.reduce((function(e, n) {
            var r = t.get(["supplemental/phoneData/callingCode", n]);
            return e[r] || (e[r] = []),
            e[r].push(n),
            e
        }
        ), {})
    }
    function pN(e) {
        var t, n, r, o = new fb("und"), i = o.get(["supplemental/phoneData/regionGroups", e]), a = o.get(["supplemental/phoneData/callingCode", e]), s = o.get(["supplemental/phoneData/parentRegion", a]);
        i ? (t = [e].concat(i)).forEach((function(e) {
            var r, i = o.get(["supplemental/phoneData/callingCode", e]), a = o.get(["supplemental/phoneData/parentRegion", i]);
            t = a ? [a].concat(t) : t,
            t = (r = t).filter((function(e, t) {
                return r.indexOf(e) === t
            }
            )),
            n = uN(t)
        }
        )) : n = uN(t = s ? [s, e] : [e]),
        o.on("get", cN);
        try {
            r = Object.assign.apply(Object, [{}].concat(t.map((function(e) {
                var t;
                return (t = {})[e] = o.get(["supplemental/phoneData/libphonenumber", e]),
                t
            }
            ))))
        } finally {
            o.off("get", cN)
        }
        return {
            metadata: {
                regionCodes: t,
                countryCodeToRegionCodeMap: n,
                countryToMetadata: r
            },
            regionGroups: i
        }
    }
    function hN() {
        var e = new fb("und")
          , t = e.get(["supplemental/phoneData/countryCodeToRegionCodeMapping"])
          , n = e.get(["supplemental/phoneData/libphonenumber"]);
        return {
            regionCodes: Object.keys(n),
            countryCodeToRegionCodeMap: t,
            countryToMetadata: n
        }
    }
    function fN(e) {
        if (!e)
            throw new Error("`phoneRegion` is missing in `new PhoneNumberFormat()` constructor")
    }
    var mN = {
        C2: "CN",
        UK: "GB"
    };
    function gN(e) {
        return mN[e] || e
    }
    var yN = function() {
        function e(e) {
            var t, n, r = e || {}, o = r.style, i = void 0 === o ? "national" : o, a = r.obscure, s = void 0 !== a && a, l = gN(e.phoneRegion);
            if (l) {
                var c = pN(l);
                t = c.metadata,
                n = c.regionGroups
            } else
                t = hN();
            var d = aN.createPhoneHandler(t);
            this.phoneFormatter = function(e) {
                return function(e, t, n, r) {
                    if (!0 === r && ["national", "international"].includes(n)) {
                        var o = t.formatPhoneNumber(e, {
                            style: n
                        })
                          , i = o.match(/\d/g) || []
                          , a = "national" === n ? i.length / 2 : (i.length - e.countryCode.length) / 2
                          , s = 1 + i.length - e.nationalNumber.length;
                        return function(e, t, n) {
                            for (var r, o, i, a = /\d/g, s = 0; i = a.exec(n); )
                                ++s === t + 1 && (r = i.index),
                                s === t + e + 1 && (o = i.index);
                            return "‪" + (n = n.substring(0, r) + n.replace(a, "*").substring(r, o) + n.substring(o)) + "‬"
                        }(Math.floor(a), s, o)
                    }
                    return t.formatPhoneNumber(e, {
                        style: n
                    })
                }(e, d, i, s)
            }
            ,
            this.phoneParser = function(e) {
                return function(e) {
                    return "+" === e.trim()[0]
                }(e) || fN(l),
                function(e, t, n, r) {
                    var o = function(e, t) {
                        if (null == e || "DE" !== t)
                            return e;
                        var n = e.trim();
                        return n && n.length > 11 && "49" === n.substring(0, 2) && (e = n.substring(2)),
                        e
                    }(e, t)
                      , i = dN(n, o, t);
                    if (!i.errors)
                        return i;
                    if (r)
                        for (var a = 0; a < r.length; a++) {
                            var s = dN(n, o, r[a]);
                            if (!s.errors)
                                return s
                        }
                    return i
                }(e, l, d, n)
            }
            ,
            this.phoneFormatterAsTyped = function(e) {
                fN(l);
                var t = d.getAsYouTypeFormatter(l)
                  , n = "";
                return e.split("").forEach((function(e) {
                    n = t.inputDigit(e)
                }
                )),
                n
            }
        }
        var t = e.prototype;
        return t.format = function(e) {
            return this.phoneFormatter(e)
        }
        ,
        t.parse = function(e) {
            return this.phoneParser(e)
        }
        ,
        t.formatAsTyped = function(e) {
            return this.phoneFormatterAsTyped(e)
        }
        ,
        e.inferPhoneNumberRegion = function(e) {
            var t = aN.createPhoneHandler(hN());
            try {
                return t.inferPhoneNumberRegion(e)
            } catch (e) {
                throw lN(e)
            }
        }
        ,
        e.inferPhoneNumberType = function(e) {
            var t = aN.createPhoneHandler(hN());
            try {
                return t.inferPhoneNumberType(e)
            } catch (e) {
                throw lN(e)
            }
        }
        ,
        e.getCallingCodeForRegions = function(e) {
            void 0 === e && (e = []);
            try {
                var t = {};
                return e.map((function(e) {
                    var n = pN(gN(e)).metadata
                      , r = Object.keys(n.countryCodeToRegionCodeMap);
                    t[e] = r
                }
                )),
                t
            } catch (e) {
                throw lN(e)
            }
        }
        ,
        e
    }();
    function vN() {
        vN = function() {
            return t
        }
        ;
        var e, t = {}, n = Object.prototype, r = n.hasOwnProperty, o = Object.defineProperty || function(e, t, n) {
            e[t] = n.value
        }
        , i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", s = i.asyncIterator || "@@asyncIterator", l = i.toStringTag || "@@toStringTag";
        function c(e, t, n) {
            return Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }),
            e[t]
        }
        try {
            c({}, "")
        } catch (e) {
            c = function(e, t, n) {
                return e[t] = n
            }
        }
        function d(e, t, n, r) {
            var i = t && t.prototype instanceof y ? t : y
              , a = Object.create(i.prototype)
              , s = new k(r || []);
            return o(a, "_invoke", {
                value: O(e, n, s)
            }),
            a
        }
        function u(e, t, n) {
            try {
                return {
                    type: "normal",
                    arg: e.call(t, n)
                }
            } catch (e) {
                return {
                    type: "throw",
                    arg: e
                }
            }
        }
        t.wrap = d;
        var p = "suspendedStart"
          , h = "suspendedYield"
          , f = "executing"
          , m = "completed"
          , g = {};
        function y() {}
        function v() {}
        function b() {}
        var E = {};
        c(E, a, (function() {
            return this
        }
        ));
        var _ = Object.getPrototypeOf
          , A = _ && _(_(I([])));
        A && A !== n && r.call(A, a) && (E = A);
        var w = b.prototype = y.prototype = Object.create(E);
        function S(e) {
            ["next", "throw", "return"].forEach((function(t) {
                c(e, t, (function(e) {
                    return this._invoke(t, e)
                }
                ))
            }
            ))
        }
        function C(e, t) {
            function n(o, i, a, s) {
                var l = u(e[o], e, i);
                if ("throw" !== l.type) {
                    var c = l.arg
                      , d = c.value;
                    return d && "object" == typeof d && r.call(d, "__await") ? t.resolve(d.__await).then((function(e) {
                        n("next", e, a, s)
                    }
                    ), (function(e) {
                        n("throw", e, a, s)
                    }
                    )) : t.resolve(d).then((function(e) {
                        c.value = e,
                        a(c)
                    }
                    ), (function(e) {
                        return n("throw", e, a, s)
                    }
                    ))
                }
                s(l.arg)
            }
            var i;
            o(this, "_invoke", {
                value: function(e, r) {
                    function o() {
                        return new t((function(t, o) {
                            n(e, r, t, o)
                        }
                        ))
                    }
                    return i = i ? i.then(o, o) : o()
                }
            })
        }
        function O(t, n, r) {
            var o = p;
            return function(i, a) {
                if (o === f)
                    throw new Error("Generator is already running");
                if (o === m) {
                    if ("throw" === i)
                        throw a;
                    return {
                        value: e,
                        done: !0
                    }
                }
                for (r.method = i,
                r.arg = a; ; ) {
                    var s = r.delegate;
                    if (s) {
                        var l = x(s, r);
                        if (l) {
                            if (l === g)
                                continue;
                            return l
                        }
                    }
                    if ("next" === r.method)
                        r.sent = r._sent = r.arg;
                    else if ("throw" === r.method) {
                        if (o === p)
                            throw o = m,
                            r.arg;
                        r.dispatchException(r.arg)
                    } else
                        "return" === r.method && r.abrupt("return", r.arg);
                    o = f;
                    var c = u(t, n, r);
                    if ("normal" === c.type) {
                        if (o = r.done ? m : h,
                        c.arg === g)
                            continue;
                        return {
                            value: c.arg,
                            done: r.done
                        }
                    }
                    "throw" === c.type && (o = m,
                    r.method = "throw",
                    r.arg = c.arg)
                }
            }
        }
        function x(t, n) {
            var r = n.method
              , o = t.iterator[r];
            if (o === e)
                return n.delegate = null,
                "throw" === r && t.iterator.return && (n.method = "return",
                n.arg = e,
                x(t, n),
                "throw" === n.method) || "return" !== r && (n.method = "throw",
                n.arg = new TypeError("The iterator does not provide a '" + r + "' method")),
                g;
            var i = u(o, t.iterator, n.arg);
            if ("throw" === i.type)
                return n.method = "throw",
                n.arg = i.arg,
                n.delegate = null,
                g;
            var a = i.arg;
            return a ? a.done ? (n[t.resultName] = a.value,
            n.next = t.nextLoc,
            "return" !== n.method && (n.method = "next",
            n.arg = e),
            n.delegate = null,
            g) : a : (n.method = "throw",
            n.arg = new TypeError("iterator result is not an object"),
            n.delegate = null,
            g)
        }
        function T(e) {
            var t = {
                tryLoc: e[0]
            };
            1 in e && (t.catchLoc = e[1]),
            2 in e && (t.finallyLoc = e[2],
            t.afterLoc = e[3]),
            this.tryEntries.push(t)
        }
        function N(e) {
            var t = e.completion || {};
            t.type = "normal",
            delete t.arg,
            e.completion = t
        }
        function k(e) {
            this.tryEntries = [{
                tryLoc: "root"
            }],
            e.forEach(T, this),
            this.reset(!0)
        }
        function I(t) {
            if (t || "" === t) {
                var n = t[a];
                if (n)
                    return n.call(t);
                if ("function" == typeof t.next)
                    return t;
                if (!isNaN(t.length)) {
                    var o = -1
                      , i = function n() {
                        for (; ++o < t.length; )
                            if (r.call(t, o))
                                return n.value = t[o],
                                n.done = !1,
                                n;
                        return n.value = e,
                        n.done = !0,
                        n
                    };
                    return i.next = i
                }
            }
            throw new TypeError(typeof t + " is not iterable")
        }
        return v.prototype = b,
        o(w, "constructor", {
            value: b,
            configurable: !0
        }),
        o(b, "constructor", {
            value: v,
            configurable: !0
        }),
        v.displayName = c(b, l, "GeneratorFunction"),
        t.isGeneratorFunction = function(e) {
            var t = "function" == typeof e && e.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
        }
        ,
        t.mark = function(e) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e, b) : (e.__proto__ = b,
            c(e, l, "GeneratorFunction")),
            e.prototype = Object.create(w),
            e
        }
        ,
        t.awrap = function(e) {
            return {
                __await: e
            }
        }
        ,
        S(C.prototype),
        c(C.prototype, s, (function() {
            return this
        }
        )),
        t.AsyncIterator = C,
        t.async = function(e, n, r, o, i) {
            void 0 === i && (i = Promise);
            var a = new C(d(e, n, r, o),i);
            return t.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                return e.done ? e.value : a.next()
            }
            ))
        }
        ,
        S(w),
        c(w, l, "Generator"),
        c(w, a, (function() {
            return this
        }
        )),
        c(w, "toString", (function() {
            return "[object Generator]"
        }
        )),
        t.keys = function(e) {
            var t = Object(e)
              , n = [];
            for (var r in t)
                n.push(r);
            return n.reverse(),
            function e() {
                for (; n.length; ) {
                    var r = n.pop();
                    if (r in t)
                        return e.value = r,
                        e.done = !1,
                        e
                }
                return e.done = !0,
                e
            }
        }
        ,
        t.values = I,
        k.prototype = {
            constructor: k,
            reset: function(t) {
                if (this.prev = 0,
                this.next = 0,
                this.sent = this._sent = e,
                this.done = !1,
                this.delegate = null,
                this.method = "next",
                this.arg = e,
                this.tryEntries.forEach(N),
                !t)
                    for (var n in this)
                        "t" === n.charAt(0) && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e)
            },
            stop: function() {
                this.done = !0;
                var e = this.tryEntries[0].completion;
                if ("throw" === e.type)
                    throw e.arg;
                return this.rval
            },
            dispatchException: function(t) {
                if (this.done)
                    throw t;
                var n = this;
                function o(r, o) {
                    return s.type = "throw",
                    s.arg = t,
                    n.next = r,
                    o && (n.method = "next",
                    n.arg = e),
                    !!o
                }
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var a = this.tryEntries[i]
                      , s = a.completion;
                    if ("root" === a.tryLoc)
                        return o("end");
                    if (a.tryLoc <= this.prev) {
                        var l = r.call(a, "catchLoc")
                          , c = r.call(a, "finallyLoc");
                        if (l && c) {
                            if (this.prev < a.catchLoc)
                                return o(a.catchLoc, !0);
                            if (this.prev < a.finallyLoc)
                                return o(a.finallyLoc)
                        } else if (l) {
                            if (this.prev < a.catchLoc)
                                return o(a.catchLoc, !0)
                        } else {
                            if (!c)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < a.finallyLoc)
                                return o(a.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function(e, t) {
                for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                    var o = this.tryEntries[n];
                    if (o.tryLoc <= this.prev && r.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                        var i = o;
                        break
                    }
                }
                i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                var a = i ? i.completion : {};
                return a.type = e,
                a.arg = t,
                i ? (this.method = "next",
                this.next = i.finallyLoc,
                g) : this.complete(a)
            },
            complete: function(e, t) {
                if ("throw" === e.type)
                    throw e.arg;
                return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                this.method = "return",
                this.next = "end") : "normal" === e.type && t && (this.next = t),
                g
            },
            finish: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.finallyLoc === e)
                        return this.complete(n.completion, n.afterLoc),
                        N(n),
                        g
                }
            },
            catch: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.tryLoc === e) {
                        var r = n.completion;
                        if ("throw" === r.type) {
                            var o = r.arg;
                            N(n)
                        }
                        return o
                    }
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function(t, n, r) {
                return this.delegate = {
                    iterator: I(t),
                    resultName: n,
                    nextLoc: r
                },
                "next" === this.method && (this.arg = e),
                g
            }
        },
        t
    }
    function bN(e, t, n, r, o, i, a) {
        try {
            var s = e[i](a)
              , l = s.value
        } catch (e) {
            return void n(e)
        }
        s.done ? t(l) : Promise.resolve(l).then(r, o)
    }
    function EN(e, t) {
        return EN = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t,
            e
        }
        ,
        EN(e, t)
    }
    var _N = {
        primaryTimeZone: {
            desc: "Primary timezone of a country",
            type: "STRING",
            default: "America/Los_Angeles",
            countryOverrides: {
                AE: "Asia/Dubai",
                AR: "America/Argentina/Buenos_Aires",
                AT: "Europe/Berlin",
                AU: "Australia/Sydney",
                BE: "Europe/Berlin",
                BR: "America/Sao_Paulo",
                C2: "Asia/Shanghai",
                CA: "America/Toronto",
                CH: "Europe/Berlin",
                CN: "Asia/Shanghai",
                CZ: "Europe/Prague",
                DE: "Europe/Berlin",
                DK: "Europe/Copenhagen",
                ES: "Europe/Berlin",
                FR: "Europe/Berlin",
                GB: "Europe/London",
                GF: "America/Cayenne",
                GP: "America/Puerto_Rico",
                GR: "Europe/Athens",
                HK: "Asia/Hong_Kong",
                ID: "Asia/Jakarta",
                IE: "Europe/Dublin",
                IL: "Asia/Jerusalem",
                IN: "Asia/Calcutta",
                IT: "Europe/Berlin",
                JP: "Asia/Tokyo",
                KR: "Asia/Seoul",
                KZ: "Asia/Almaty",
                LU: "Europe/Luxembourg",
                MQ: "America/Martinique",
                MT: "Europe/Malta",
                MX: "America/Mexico_City",
                MY: "Asia/Kuala_Lumpur",
                NL: "Europe/Berlin",
                NO: "Europe/Oslo",
                NZ: "Pacific/Auckland",
                PH: "Asia/Manila",
                PL: "Europe/Berlin",
                PT: "Europe/Lisbon",
                RE: "Asia/Dubai",
                RU: "Europe/Moscow",
                SE: "Europe/Stockholm",
                SG: "Asia/Singapore",
                SK: "Europe/Bratislava",
                TH: "Asia/Bangkok",
                TR: "Europe/Bucharest",
                TW: "Asia/Taipei",
                UA: "Europe/Kiev",
                VN: "Asia/Saigon",
                YT: "Africa/Nairobi",
                ZA: "Africa/Johannesburg"
            }
        },
        validTimeZones: {
            desc: "All valid timezones of a country",
            type: "ARRAY",
            default: ["America/Los_Angeles"],
            countryOverrides: {
                AE: ["Asia/Dubai", "America/Los_Angeles"],
                AR: ["America/Argentina/Buenos_Aires", "America/Los_Angeles"],
                AT: ["Europe/Berlin", "America/Los_Angeles"],
                AU: ["Australia/Sydney", "Australia/Lord_Howe", "Australia/Brisbane", "Australia/Hobart", "Australia/Darwin", "Australia/Adelaide", "Australia/Perth", "America/Los_Angeles"],
                BE: ["Europe/Berlin", "America/Los_Angeles"],
                BR: ["America/Sao_Paulo", "America/Manaus", "America/Rio_Branco", "America/Los_Angeles"],
                C2: ["Asia/Shanghai", "America/Los_Angeles"],
                CA: ["America/Vancouver", "America/Edmonton", "America/Dawson_Creek", "America/Winnipeg", "America/Regina", "America/Toronto", "America/Atikokan", "America/Halifax", "America/Goose_Bay", "America/Blanc-Sablon", "America/St_Johns", "America/Los_Angeles"],
                CH: ["Europe/Berlin", "America/Los_Angeles"],
                CN: ["Asia/Shanghai"],
                CZ: ["Europe/Prague", "America/Los_Angeles"],
                DE: ["Europe/Berlin", "America/Los_Angeles"],
                DK: ["Europe/Copenhagen", "Pacific/Honolulu", "America/Anchorage", "America/Los_Angeles", "America/Phoenix", "America/Denver", "America/Chicago", "America/Indianapolis", "America/New_York", "America/Puerto_Rico"],
                ES: ["Europe/Berlin", "America/Los_Angeles"],
                FR: ["Europe/Berlin", "Africa/Nairobi", "America/Cayenne", "America/Puerto_Rico", "America/Martinique", "Asia/Dubai", "America/Los_Angeles"],
                GB: ["Europe/London", "America/Los_Angeles"],
                GF: ["America/Cayenne", "America/Los_Angeles"],
                GP: ["America/Puerto_Rico", "America/Los_Angeles"],
                GR: ["Europe/Athens", "America/Los_Angeles"],
                HK: ["Asia/Hong_Kong", "America/Los_Angeles"],
                ID: ["Asia/Jakarta", "Asia/Makassar", "Asia/Jayapura", "America/Los_Angeles"],
                IE: ["Europe/Dublin", "America/Los_Angeles"],
                IL: ["Asia/Jerusalem", "America/Los_Angeles"],
                IN: ["Asia/Calcutta", "America/Los_Angeles"],
                IT: ["Europe/Berlin", "America/Los_Angeles"],
                JP: ["Asia/Tokyo", "America/Los_Angeles"],
                KR: ["Asia/Seoul", "America/Los_Angeles"],
                KZ: ["Asia/Almaty", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Atyrau", "Asia/Oral", "Asia/Qostanay", "Asia/Qyzylorda", "America/Los_Angeles"],
                LU: ["Europe/Luxembourg", "America/Los_Angeles"],
                MQ: ["America/Martinique", "America/Los_Angeles"],
                MT: ["Europe/Malta"],
                MX: ["America/Mexico_City", "America/Chihuahua", "America/Hermosillo", "America/Tijuana", "America/Los_Angeles"],
                MY: ["Asia/Kuala_Lumpur", "America/Los_Angeles"],
                NL: ["Europe/Berlin", "America/Los_Angeles"],
                NO: ["Europe/Oslo", "Pacific/Honolulu", "America/Anchorage", "America/Los_Angeles", "America/Phoenix", "America/Denver", "America/Chicago", "America/Indianapolis", "America/New_York", "America/Puerto_Rico"],
                NZ: ["Pacific/Auckland", "Pacific/Chatham", "Pacific/Niue", "Pacific/Rarotonga", "Pacific/Fakaofo", "America/Los_Angeles"],
                PH: ["Asia/Manila", "America/Los_Angeles"],
                PL: ["Europe/Berlin", "America/Los_Angeles"],
                PT: ["Europe/Lisbon", "Atlantic/Azores", "America/Los_Angeles"],
                RE: ["Asia/Dubai", "America/Los_Angeles"],
                RU: ["Europe/Kaliningrad", "Europe/Moscow", "Europe/Samara", "Asia/Yekaterinburg", "Asia/Omsk", "Asia/Krasnoyarsk", "Asia/Irkutsk", "Asia/Yakutsk", "Asia/Vladivostok", "Asia/Magadan"],
                SE: ["Europe/Stockholm", "Pacific/Honolulu", "America/Anchorage", "America/Los_Angeles", "America/Phoenix", "America/Denver", "America/Chicago", "America/Indianapolis", "America/New_York", "America/Puerto_Rico"],
                SG: ["Asia/Singapore", "America/Los_Angeles"],
                SK: ["Europe/Bratislava", "America/Los_Angeles"],
                TH: ["Asia/Bangkok", "America/Los_Angeles"],
                TR: ["Europe/Bucharest", "Europe/Berlin", "Europe/Lisbon", "America/Los_Angeles"],
                TW: ["Asia/Taipei", "America/Los_Angeles"],
                UA: ["Europe/Kiev", "America/Los_Angeles"],
                US: ["Pacific/Honolulu", "America/Anchorage", "America/Los_Angeles", "America/Phoenix", "America/Denver", "America/Chicago", "America/Indianapolis", "America/New_York", "America/Puerto_Rico"],
                VN: ["Asia/Saigon", "America/Los_Angeles"],
                YT: ["Africa/Nairobi", "America/Los_Angeles"],
                ZA: ["Africa/Johannesburg", "America/Los_Angeles"]
            }
        },
        supportedCountries: {
            desc: "An array of all countries (by country code) that is supported by PayPal - where a PayPal account can be created in now (or has been allowed in the past, e.g., TR,RU).",
            type: "ARRAY",
            default: ["AD", "AE", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AT", "AU", "AW", "AZ", "BA", "BB", "BE", "BF", "BG", "BH", "BI", "BJ", "BM", "BN", "BO", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CD", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CV", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GI", "GL", "GM", "GN", "GP", "GR", "GT", "GW", "GY", "HK", "HN", "HR", "HU", "ID", "IE", "IL", "IN", "IS", "IT", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KR", "KW", "KY", "KZ", "LA", "LC", "LI", "LK", "LS", "LT", "LU", "LV", "MA", "MC", "MD", "ME", "MG", "MH", "MK", "ML", "MN", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PL", "PM", "PN", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "ST", "SV", "SZ", "TC", "TD", "TG", "TH", "TJ", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "VA", "VC", "VE", "VG", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"],
            countryOverrides: {}
        },
        supportedLanguages: {
            desc: "All supported languages of a country",
            type: "ARRAY",
            default: ["en_US", "fr_XC", "es_XC", "zh_XC"],
            countryOverrides: {
                AE: ["en_US", "fr_XC", "es_XC", "zh_XC", "ar_EG"],
                AL: ["sq_AL", "en_US"],
                AR: ["es_XC", "en_US"],
                AT: ["de_DE", "en_US"],
                AU: ["en_AU"],
                BA: ["en_US"],
                BE: ["en_US", "nl_NL", "fr_FR"],
                BF: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                BG: ["bg_BG", "en_US"],
                BH: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                BI: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                BJ: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                BN: ["ms_BN", "en_US"],
                BO: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                BR: ["pt_BR", "en_US"],
                BT: ["en_US"],
                BY: ["en_US"],
                BZ: ["en_US", "es_XC", "fr_XC", "zh_XC"],
                C2: ["zh_XC", "en_US"],
                CA: ["en_US", "fr_CA"],
                CD: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                CH: ["de_DE", "fr_FR", "en_US"],
                CI: ["fr_XC", "en_US"],
                CL: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                CM: ["fr_XC", "en_US"],
                CN: ["zh_CN", "en_US"],
                CO: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                CR: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                CY: ["en_US"],
                CZ: ["cs_CZ", "en_US"],
                DE: ["de_DE", "en_US"],
                DJ: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                DK: ["da_DK", "en_US"],
                DO: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                DZ: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                EC: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                EE: ["et_EE", "en_US", "ru_RU"],
                EG: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                ES: ["es_ES", "en_US"],
                FI: ["fi_FI", "en_US"],
                FM: ["en_US"],
                FO: ["da_DK", "en_US", "fr_XC", "es_XC", "zh_XC"],
                FR: ["fr_FR", "en_US"],
                GA: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                GB: ["en_GB"],
                GE: ["en_US", "fr_XC", "es_XC", "zh_XC"],
                GF: ["fr_FR", "en_US"],
                GH: ["en_US"],
                GL: ["da_DK", "en_US", "fr_XC", "es_XC", "zh_XC"],
                GN: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                GP: ["fr_FR", "en_US"],
                GR: ["el_GR", "en_US"],
                GT: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                HK: ["en_GB", "zh_HK"],
                HN: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                HR: ["en_US"],
                HU: ["hu_HU", "en_US"],
                ID: ["id_ID", "en_US"],
                IL: ["he_IL", "en_US"],
                IN: ["en_GB"],
                IS: ["en_US"],
                IT: ["it_IT", "en_US"],
                JM: ["en_US", "es_XC", "fr_XC", "zh_XC"],
                JO: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                JP: ["ja_JP", "en_US"],
                KE: ["en_US", "fr_XC", "es_XC", "zh_XC"],
                KH: ["en_US"],
                KM: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                KR: ["ko_KR", "en_US"],
                KW: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                KZ: ["en_US", "fr_XC", "es_XC", "zh_XC"],
                LA: ["en_US"],
                LI: ["en_US", "fr_XC", "es_XC", "zh_XC"],
                LK: ["si_LK", "en_US"],
                LT: ["lt_LT", "en_US", "ru_RU", "zh_XC"],
                LU: ["en_US", "de_DE", "fr_XC", "es_XC", "zh_XC"],
                LV: ["lv_LV", "en_US", "ru_RU"],
                MA: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                MC: ["fr_XC", "en_US"],
                MD: ["en_US"],
                ME: ["en_US"],
                MK: ["en_US"],
                ML: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                MN: ["en_US"],
                MQ: ["fr_FR", "en_US"],
                MT: ["en_US"],
                MV: ["en_US"],
                MX: ["es_XC", "en_US"],
                MY: ["ms_MY", "en_US"],
                NE: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                NG: ["en_US"],
                NI: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                NL: ["nl_NL", "en_US"],
                NO: ["no_NO", "en_US"],
                NP: ["en_US"],
                OM: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                PA: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                PE: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                PH: ["en_US", "tl_PH"],
                PL: ["pl_PL", "en_US"],
                PT: ["pt_PT", "en_US"],
                PY: ["es_XC", "en_US"],
                QA: ["en_US", "fr_XC", "es_XC", "zh_XC", "ar_EG"],
                RE: ["fr_FR", "en_US"],
                RO: ["ro_RO", "en_US"],
                RU: ["ru_RU", "en_US"],
                RW: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                SA: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                SC: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                SE: ["sv_SE", "en_US"],
                SG: ["en_GB"],
                SI: ["sl_SI", "en_US"],
                SK: ["sk_SK", "en_US"],
                SN: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                SV: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                TD: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                TG: ["fr_XC", "en_US", "es_XC", "zh_XC"],
                TH: ["th_TH", "en_GB"],
                TN: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                TO: ["en_US"],
                TR: ["tr_TR", "en_US"],
                TW: ["zh_TW", "en_US"],
                TZ: ["en_US", "fr_XC", "es_XC", "zh_XC"],
                UA: ["en_US", "ru_RU", "fr_XC", "es_XC", "zh_XC"],
                UG: ["en_US", "fr_XC", "es_XC", "zh_XC"],
                UY: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                VE: ["es_XC", "en_US", "fr_XC", "zh_XC"],
                VN: ["vi_VN", "en_US"],
                WS: ["en_US"],
                YE: ["ar_EG", "en_US", "fr_XC", "es_XC", "zh_XC"],
                YT: ["fr_FR", "en_US"],
                ZW: ["en_US"]
            }
        },
        assignedCountries: {
            desc: "An array of all countries (by country code) that can be used as a Shipping Address.",
            type: "ARRAY",
            default: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XK", "YE", "YT", "ZA", "ZM", "ZW"],
            countryOverrides: {
                AR: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"],
                BR: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"],
                C2: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"],
                CN: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"],
                ID: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"],
                IN: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"],
                JP: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XK", "YE", "YT", "ZA", "ZM", "ZW"],
                KR: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XK", "YE", "YT", "ZA", "ZM", "ZW"],
                RU: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW"],
                TR: ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BW", "BY", "BZ", "C2", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GT", "GU", "GW", "GY", "HK", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "TC", "TD", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XK", "YE", "YT", "ZA", "ZM", "ZW"]
            }
        },
        primaryCurrencyCode: {
            desc: "Primary currency code of a country",
            type: "STRING",
            default: null,
            countryOverrides: {
                AD: "EUR",
                AE: "AED",
                AF: "AFN",
                AG: "XCD",
                AI: "XCD",
                AL: "ALL",
                AM: "AMD",
                AN: "ANG",
                AO: "AOA",
                AR: "ARS",
                AS: "USD",
                AT: "EUR",
                AU: "AUD",
                AW: "AWG",
                AZ: "AZN",
                BA: "BAM",
                BB: "BBD",
                BD: "BDT",
                BE: "EUR",
                BF: "XOF",
                BG: "BGN",
                BH: "BHD",
                BI: "BIF",
                BJ: "XOF",
                BM: "BMD",
                BN: "BND",
                BO: "BOB",
                BR: "BRL",
                BS: "BSD",
                BT: "BTN",
                BW: "BWP",
                BY: "EUR",
                BZ: "BZD",
                C2: "CNY",
                CA: "CAD",
                CD: "CDF",
                CF: "XAF",
                CG: "XAF",
                CH: "CHF",
                CI: "EUR",
                CK: "NZD",
                CL: "CLP",
                CM: "XAF",
                CN: "CNY",
                CO: "COP",
                CR: "CRC",
                CS: "RSD",
                CU: "CUP",
                CV: "CVE",
                CY: "EUR",
                CZ: "CZK",
                DE: "EUR",
                DJ: "DJF",
                DK: "DKK",
                DM: "XCD",
                DO: "DOP",
                DZ: "DZD",
                EC: "USD",
                EE: "EUR",
                EG: "EGP",
                EH: "MAD",
                ER: "ERN",
                ES: "EUR",
                ET: "ETB",
                FI: "EUR",
                FJ: "FJD",
                FK: "FKP",
                FM: "USD",
                FO: "DKK",
                FR: "EUR",
                GA: "XAF",
                GB: "GBP",
                GD: "XCD",
                GE: "GEL",
                GF: "EUR",
                GH: "USD",
                GI: "GIP",
                GL: "DKK",
                GM: "GMD",
                GN: "GNF",
                GP: "EUR",
                GQ: "XAF",
                GR: "EUR",
                GT: "GTQ",
                GU: "USD",
                GW: "XOF",
                GY: "GYD",
                HK: "HKD",
                HN: "HNL",
                HR: "EUR",
                HT: "HTG",
                HU: "HUF",
                ID: "IDR",
                IE: "EUR",
                IL: "ILS",
                IN: "INR",
                IQ: "IQD",
                IS: "ISK",
                IT: "EUR",
                JM: "JMD",
                JO: "JOD",
                JP: "JPY",
                KE: "KES",
                KG: "KGS",
                KH: "KHR",
                KI: "AUD",
                KM: "KMF",
                KN: "XCD",
                KR: "KRW",
                KW: "KWD",
                KY: "KYD",
                KZ: "KZT",
                LA: "LAK",
                LB: "LBP",
                LC: "XCD",
                LI: "CHF",
                LK: "LKR",
                LR: "LRD",
                LS: "LSL",
                LT: "EUR",
                LU: "EUR",
                LV: "EUR",
                LY: "LYD",
                MA: "MAD",
                MC: "EUR",
                MD: "MDL",
                ME: "EUR",
                MG: "MGA",
                MH: "USD",
                MK: "MKD",
                ML: "XOF",
                MN: "MNT",
                MO: "MOP",
                MP: "USD",
                MQ: "EUR",
                MR: "MRU",
                MS: "XCD",
                MT: "EUR",
                MU: "MUR",
                MV: "MVR",
                MW: "MWK",
                MX: "MXN",
                MY: "MYR",
                MZ: "MZN",
                NA: "NAD",
                NC: "XPF",
                NE: "XOF",
                NF: "AUD",
                NG: "USD",
                NI: "NIO",
                NL: "EUR",
                NO: "NOK",
                NP: "NPR",
                NR: "AUD",
                NU: "NZD",
                NZ: "NZD",
                OM: "OMR",
                PA: "PAB",
                PE: "PEN",
                PF: "XPF",
                PG: "PGK",
                PH: "PHP",
                PK: "PKR",
                PL: "PLN",
                PM: "EUR",
                PN: "NZD",
                PR: "USD",
                PT: "EUR",
                PW: "USD",
                PY: "PYG",
                QA: "QAR",
                RE: "EUR",
                RO: "RON",
                RS: "RSD",
                RU: "RUB",
                RW: "RWF",
                SA: "SAR",
                SB: "SBD",
                SC: "SCR",
                SD: "SDG",
                SE: "SEK",
                SG: "SGD",
                SH: "SHP",
                SI: "EUR",
                SJ: "NOK",
                SK: "EUR",
                SL: "SLL",
                SM: "EUR",
                SN: "XOF",
                SO: "SOS",
                SR: "SRD",
                ST: "STN",
                SV: "USD",
                SY: "SYP",
                SZ: "SZL",
                TC: "USD",
                TD: "XAF",
                TG: "XOF",
                TH: "THB",
                TJ: "TJS",
                TM: "TMT",
                TN: "TND",
                TO: "TOP",
                TR: "TRY",
                TT: "TTD",
                TV: "AUD",
                TW: "TWD",
                TZ: "TZS",
                UA: "UAH",
                UG: "UGX",
                US: "USD",
                UY: "UYU",
                UZ: "UZS",
                VA: "EUR",
                VC: "XCD",
                VE: "VES",
                VG: "USD",
                VI: "USD",
                VN: "VND",
                VU: "VUV",
                WF: "XPF",
                WS: "WST",
                YE: "YER",
                YT: "EUR",
                ZA: "ZAR",
                ZM: "ZMW",
                ZR: "CDF",
                ZW: "USD"
            }
        },
        considerBrowserLanguage: {
            desc: "Browser language should be considered in this country",
            type: "BOOL",
            default: !0,
            countryOverrides: {
                AR: !1,
                AT: !1,
                AU: !1,
                BO: !1,
                BR: !1,
                CL: !1,
                CO: !1,
                CR: !1,
                DE: !1,
                DK: !1,
                DO: !1,
                EC: !1,
                ES: !1,
                FR: !1,
                GB: !1,
                GF: !1,
                GI: !1,
                GP: !1,
                GT: !1,
                HN: !1,
                IE: !1,
                IT: !1,
                KR: !1,
                MQ: !1,
                MX: !1,
                NI: !1,
                NL: !1,
                NO: !1,
                PA: !1,
                PE: !1,
                PL: !1,
                PY: !1,
                RE: !1,
                RU: !1,
                SE: !1,
                SG: !1,
                SV: !1,
                TR: !1,
                TW: !1,
                UY: !1,
                VE: !1
            }
        },
        considerCookieLanguage: {
            desc: "Cookie language should be considered in this country",
            type: "BOOL",
            default: !0,
            countryOverrides: {
                AT: !1,
                AU: !1,
                BR: !1,
                DE: !1,
                DK: !1,
                ES: !1,
                FR: !1,
                GB: !1,
                GF: !1,
                GI: !1,
                GP: !1,
                IE: !1,
                IT: !1,
                JP: !1,
                MQ: !1,
                MX: !1,
                NL: !1,
                NO: !1,
                PL: !1,
                RE: !1,
                RU: !1,
                SE: !1,
                SG: !1,
                TR: !1
            }
        },
        isClock12HrFormat: {
            desc: "12 hour format to display time",
            type: "BOOL",
            default: !1,
            countryOverrides: {
                GB: !0,
                IE: !0,
                MX: !0,
                US: !0
            }
        }
    }
      , AN = ["primaryTimeZone", "validTimeZones", "supportedLanguages", "supportedCountries", "assignedCountries", "considerBrowserLanguage", "considerCookieLanguage", "isClock12HrFormat", "primaryCurrencyCode"]
      , wN = AN.filter((function(e) {
        return "supportedCountries" !== e
    }
    ))
      , SN = function(e) {
        var t, n;
        function r(t) {
            return e.call(this, t) || this
        }
        n = e,
        (t = r).prototype = Object.create(n.prototype),
        t.prototype.constructor = t,
        EN(t, n);
        var o, i, a = r.prototype;
        return a.load = (o = vN().mark((function e() {
            return vN().wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        )),
        i = function() {
            var e = this
              , t = arguments;
            return new Promise((function(n, r) {
                var i = o.apply(e, t);
                function a(e) {
                    bN(i, n, r, a, s, "next", e)
                }
                function s(e) {
                    bN(i, n, r, a, s, "throw", e)
                }
                a(void 0)
            }
            ))
        }
        ,
        function() {
            return i.apply(this, arguments)
        }
        ),
        a.export = function() {
            return e.prototype.export.call(this)
        }
        ,
        r
    }(function() {
        function e(e) {
            Nb(e, "options", ["plain object"]),
            Nb(e.marketData, "marketData", ["string"]),
            kb(e.marketData, AN, "Invalid value for options.marketData: {marketData}", {
                marketData: e.marketData
            }),
            wN.includes(e.marketData) && (Tb(e.region, "Parameter `region` is mandatory"),
            Nb(e.region, "region", ["string"]),
            Tb(2 == e.region.length, "Invalid region: {region}", {
                region: e.region
            })),
            this.configKey = e.marketData,
            this.countryCode = e.region || "ALL"
        }
        var t = e.prototype;
        return t.load = function() {}
        ,
        t.export = function() {
            var e = _N[this.configKey];
            return e ? e.countryOverrides[this.countryCode] || e.default : null
        }
        ,
        e
    }());
    const CN = {}
      , ON = async e => {
        if (!CN[e]) {
            const t = $t();
            er.setCheckpoint(er.CHECKPOINTS.WORLD_READY_LOAD_METADATA_TRIGGERED),
            await IA.loadI18nMetadata({
                locale: e
            }),
            t.track({
                event_name: "axo_world_ready_metadata_load_end",
                duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.WORLD_READY_LOAD_METADATA_TRIGGERED)
            });
            const n = new IA(e);
            CN[e] = n
        }
        return CN[e]
    }
    ;
    function xN(e) {
        const t = (n = e,
        Qr({
            firstName: n.firstName || "",
            lastName: n.lastName || ""
        })).toPpSdkType();
        var n;
        const r = function(e) {
            return to(e, {
                streetAddress: "addressLine1",
                extendedAddress: "addressLine2",
                locality: "adminArea2",
                region: "adminArea1",
                postalCode: "postalCode",
                countryCodeAlpha2: "countryCode"
            })
        }(e)
          , o = e.phone
          , i = e.company;
        return Object.assign(Object.assign({
            name: t,
            address: r
        }, o ? {
            phoneNumber: o
        } : {}), i ? {
            companyName: i
        } : {})
    }
    const TN = {
        addressLine1: "streetAddress",
        addressLine2: "extendedAddress",
        adminArea1: "region",
        adminArea2: "locality",
        postalCode: "postalCode",
        countryCode: "countryCodeAlpha2"
    };
    function NN(e) {
        return to(e, TN)
    }
    function kN(e) {
        return Object.assign(Object.assign({}, e), {
            toBtSdkType: () => e,
            toPpSdkType: () => xN(e).address,
            validate: async () => IN(e)
        })
    }
    async function IN(e) {
        if (!e.countryCodeAlpha2)
            return [{
                code: "MISSING_REQUIRED",
                element: "countryCode"
            }];
        try {
            const t = it.get("locale")
              , n = await ON(t)
              , r = new _T(n,{
                addressRegion: e.countryCodeAlpha2
            })
              , o = {
                addressLine1: e.streetAddress,
                addressLine2: e.extendedAddress,
                adminArea1: e.region,
                adminArea2: e.locality,
                postalCode: e.postalCode
            };
            return r.validate(o)
        } catch (e) {
            return $t().error("axo_sdk_axoAddressModel_validate", e),
            [{
                code: "ERROR_CREATING_VALIDATIONS",
                element: "all"
            }]
        }
    }
    function RN(e) {
        return Object.assign(Object.assign({}, e), {
            toBtSdkType: () => function(e) {
                var t, n, r, o;
                let i;
                (null === (t = null == e ? void 0 : e.phone) || void 0 === t ? void 0 : t.countryCode) && (null === (n = null == e ? void 0 : e.phone) || void 0 === n ? void 0 : n.nationalNumber) && (i = `${null === (r = null == e ? void 0 : e.phone) || void 0 === r ? void 0 : r.countryCode}${null === (o = null == e ? void 0 : e.phone) || void 0 === o ? void 0 : o.nationalNumber}`);
                const a = Object.assign({}, e);
                return delete a.phone,
                Object.assign(Object.assign({}, a), {
                    phoneNumber: i
                })
            }(e),
            toPpSdkType: () => xN(e),
            validate: async () => IN(e)
        })
    }
    function PN(e) {
        const {address: t} = e
          , n = function(e, t) {
            var n = {};
            for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
            if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                var o = 0;
                for (r = Object.getOwnPropertySymbols(e); o < r.length; o++)
                    t.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[o]) && (n[r[o]] = e[r[o]])
            }
            return n
        }(e, ["address"])
          , r = RN(t);
        return Object.assign(Object.assign({
            address: t
        }, n), {
            toBtSdkType: () => r.toBtSdkType(),
            toPpSdkType: () => r.toPpSdkType()
        })
    }
    const LN = (e, t) => {
        e.innerHTML = "",
        e.appendChild(t)
    }
      , DN = {
        light: {
            default: {
                root: {
                    primaryColor: "#0057ff",
                    backgroundColor: "#ffffff",
                    errorColor: "#d9360b",
                    textColorBase: "#010b0d",
                    fontFamily: "Paypal-Open, sans-serif",
                    fontSizeBase: "16px",
                    padding: "4px"
                },
                input: {
                    backgroundColor: "#ffffff",
                    borderRadius: "4px",
                    borderColor: "#dadddd",
                    borderWidth: "1px",
                    textColorBase: "#010b0d",
                    focusBorderColor: "#0057ff"
                },
                fixed: {
                    logoColor: "#576062",
                    privacyLinkColor: "#0057ff"
                }
            }
        },
        dark: {
            default: {
                root: {
                    primaryColor: "#00d7fb",
                    backgroundColor: "#222222",
                    errorColor: "#f30a0a",
                    textColorBase: "#ffffff",
                    fontFamily: "Paypal-Open, sans-serif",
                    fontSizeBase: "16px",
                    padding: "4px"
                },
                input: {
                    backgroundColor: "#010b0d",
                    borderColor: "#dadddd",
                    borderWidth: "1px",
                    borderRadius: "4px",
                    textColorBase: "#ffffff",
                    focusBorderColor: "#00d7fb"
                },
                fixed: {
                    logoColor: "#ffffff",
                    privacyLinkColor: "#00d7fb"
                }
            }
        }
    }
      , MN = ["AMEX", "DINERS", "DISCOVER", "JCB", "MAESTRO", "MASTERCARD", "CHINAUNIONPAY", "VISA"]
      , FN = ["cardholderName"]
      , BN = ["number", "expirationDate", "cvv", "phoneNumber"];
    var jN = {
        version: 3,
        authorizationFingerprint: "{{ uat }}",
        configUrl: "https://api{{ dotEnvironment }}.braintreegateway.com:443/merchants/{{ merchantId }}/client_api/v1/configuration",
        environment: "{{ environment }}"
    };
    const UN = Error("Error initializing BtClient for PayPal Merchant")
      , GN = Error("Invalid authorization token")
      , $N = Error("Invalid intended experience")
      , VN = Error("Unsupported SDK platform")
      , HN = Error("Missing authorization token")
      , KN = Error("Could not locate Braintree external id in PayPal UAT")
      , zN = Error("Missing client")
      , WN = Error("Could not locate PayPal external id in PayPal UAT")
      , YN = Error("Could not find container to render component");
    function XN(e, t="production") {
        var n, r;
        let o;
        try {
            o = function(e) {
                const t = e.split(".");
                if (3 != t.length)
                    throw new Error("Malformed JWT");
                const n = t[1].replace(/-/g, "+").replace(/_/g, "/")
                  , r = decodeURIComponent(atob(n).split("").map((e => "%" + ("00" + e.charCodeAt(0).toString(16)).slice(-2))).join(""));
                return JSON.parse(r)
            }(e)
        } catch (e) {
            throw GN
        }
        const i = null === (n = o.external_id) || void 0 === n ? void 0 : n.find((e => e.startsWith("PayPal")))
          , a = null === (r = o.external_id) || void 0 === r ? void 0 : r.find((e => e.startsWith("Braintree")));
        if (!i)
            throw WN;
        if (!a)
            throw KN;
        const s = i.split(":").pop()
          , l = a.split(":").pop()
          , c = $t();
        function d(e) {
            return new RegExp(`{{\\s*${e}\\s*}}`,"g")
        }
        c.addTrackingBuilder(( () => ({
            seller_id: s
        }))),
        c.setMetricMerchantId(s);
        const u = "stage" === t ? "sandbox" : t;
        return JSON.parse(JSON.stringify(jN).replace(d("merchantId"), l).replace(d("uat"), e).replace(d("environment"), u).replace(d("dotEnvironment"), "production" === u ? "" : `.${u}`))
    }
    const ZN = "ppPortal";
    function qN(e) {
        if ("fetch" !== e.data.name)
            return;
        const t = document.getElementById(ZN);
        if (t && t.promises && t.promises.length > 0)
            if ("err"in e.data)
                t.promises[e.data.idx].reject(e.data.err);
            else {
                const r = (n = [JSON.stringify(e.data.response)],
                new Blob(n,{
                    type: "application/json"
                }))
                  , o = e.data.options || {};
                t.promises[e.data.idx].resolve(new Response(r,o))
            }
        var n
    }
    var JN = function(e, t, n, r) {
        return new (n || (n = Promise))((function(o, i) {
            function a(e) {
                try {
                    l(r.next(e))
                } catch (e) {
                    i(e)
                }
            }
            function s(e) {
                try {
                    l(r.throw(e))
                } catch (e) {
                    i(e)
                }
            }
            function l(e) {
                var t;
                e.done ? o(e.value) : (t = e.value,
                t instanceof n ? t : new n((function(e) {
                    e(t)
                }
                ))).then(a, s)
            }
            l((r = r.apply(e, t || [])).next())
        }
        ))
    };
    function QN(e) {
        return JN(this, void 0, void 0, (function*() {
            const {context: t, cmid: n} = e;
            window.addEventListener("message", qN, !1);
            const r = document.getElementById(ZN);
            return r || (yield(o = `${e.baseUri || "https://www.paypal.com/"}idapps/xauth/portal?uat=${t}&cmid=${n}`,
            new Promise((e => {
                const t = document.createElement("iframe");
                t.promises = [],
                t.src = o,
                t.setAttribute("id", ZN),
                t.setAttribute("width", "0"),
                t.setAttribute("height", "0"),
                t.setAttribute("tabindex", "-1"),
                t.setAttribute("style", "display:none"),
                document.body.appendChild(t),
                t.addEventListener("load", ( () => {
                    e(t)
                }
                ))
            }
            ))));
            var o
        }
        ))
    }
    function ek(e) {
        tk(e, "axo_sdk_internal_error")
    }
    function tk(e, t="axo_sdk_error") {
        const n = $t();
        Array.isArray(e) || (e = [e]);
        for (const r of e) {
            const e = r instanceof Error ? r.message : r.toString();
            n.track({
                event_name: t,
                int_error_desc: e
            })
        }
        n.flush()
    }
    var nk = {
        AD: [],
        AE: ["Abu Dhabi", "Ajman", "Dubai", "Fujairah", "Ras al-Khaimah", "Sharjah", "Umm al-Quwain"],
        AF: [],
        AG: [],
        AI: [],
        AL: [],
        AM: [],
        AN: [],
        AO: [],
        AR: ["CIUDAD AUTÓNOMA DE BUENOS AIRES", "BUENOS AIRES", "CATAMARCA", "CHACO", "CHUBUT", "CÓRDOBA", "CORRIENTES", "ENTRE RÍOS", "FORMOSA", "JUJUY", "LA PAMPA", "LA RIOJA", "MENDOZA", "MISIONES", "NEUQUÉN", "RÍO NEGRO", "SALTA", "SAN JUAN", "SAN LUIS", "SANTA CRUZ", "SANTA FE", "SANTIAGO DEL ESTERO", "TIERRA DEL FUEGO", "TUCUMÁN"],
        AS: ["AS"],
        AT: [],
        AU: ["ACT", "NSW", "NT", "QLD", "SA", "TAS", "VIC", "WA"],
        AW: [],
        AX: ["ÅLAND ISLANDS"],
        AZ: [],
        BA: [],
        BB: [],
        BD: [],
        BE: [],
        BF: [],
        BG: [],
        BH: [],
        BI: [],
        BJ: [],
        BL: [],
        BM: [],
        BN: ["Bandar Seri Begawan", "Belait", "Brunei-Muara", "Temburong", "Tutong"],
        BO: [],
        BQ: [],
        BR: ["AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO"],
        BS: [],
        BT: [],
        BW: [],
        BY: ["Brestskaya Region", "Gomel'skaya Region", "Grodnenskaya Region", "Minsk", "Minskaya Region", "Mogilevskaya Region", "Vitebskaya Region"],
        BZ: [],
        C2: ["ANHUI", "BEIJING", "CHONGQING", "FUJIAN", "GANSU", "GUANGDONG", "GUANGXI", "GUIZHOU", "HAINAN", "HEBEI", "HEILONGJIANG", "HENAN", "XIANGGANG", "HUBEI", "HUNAN", "NEIMENGGU", "JIANGSU", "JIANGXI", "JILIN", "LIAONING", "AOMEN", "NINGXIA", "QINGHAI", "SHAANXI", "SHANDONG", "SHANGHAI", "SHANXI", "SICHUAN", "TAIWAN", "TIANJIN", "XIZANG", "XINJIANG", "YUNNAN", "ZHEJIANG"],
        CA: ["AB", "BC", "MB", "NB", "NL", "NT", "NS", "NU", "ON", "PE", "QC", "SK", "YT"],
        CC: [],
        CD: [],
        CF: [],
        CG: [],
        CH: ["AG", "AR", "AI", "BL", "BS", "BE", "FR", "GE", "GL", "GR", "JU", "LU", "NE", "NW", "OW", "SH", "SZ", "SO", "SG", "TG", "TI", "UR", "VS", "VD", "ZG", "ZH"],
        CI: [],
        CK: [],
        CL: ["REGIÓN METROPOLITANA", "I REGIÓN DE TARAPACÁ", "II REGIÓN DE ANTOFAGASTA", "III REGIÓN DE ATACAMA", "IV REGIÓN DE COQUIMBO", "V REGIÓN DE VALPARAÍSO", "VI REGIÓN DE O'HIGGINS", "VII REGIÓN DEL MAULE", "VIII REGIÓN DEL BIOBÍO", "IX REGIÓN DE LA ARAUCANÍA", "X REGIÓN DE LOS LAGOS", "XI REGIÓN DE AYSÉN", "XII REGIÓN DE MAGALLANES", "XIV REGIÓN DE LOS RÍOS", "XV REGIÓN DE ARICA Y PARINACOTA"],
        CM: [],
        CN: ["ANHUI", "BEIJING", "CHONGQING", "FUJIAN", "GANSU", "GUANGDONG", "GUANGXI", "GUIZHOU", "HAINAN", "HEBEI", "HEILONGJIANG", "HENAN", "XIANGGANG", "HUBEI", "HUNAN", "NEIMENGGU", "JIANGSU", "JIANGXI", "JILIN", "LIAONING", "AOMEN", "NINGXIA", "QINGHAI", "SHAANXI", "SHANDONG", "SHANGHAI", "SHANXI", "SICHUAN", "TAIWAN", "TIANJIN", "XIZANG", "XINJIANG", "YUNNAN", "ZHEJIANG"],
        CO: ["AMAZONAS", "ANTIOQUIA", "ARAUCA", "ARCHIPIÉLAGO DE SAN ANDRÉS", "ATLÁNTICO", "BOLÍVAR", "BOYACÁ", "CALDAS", "CAQUETÁ", "CASANARE", "CAUCA", "CESAR", "CHOCÓ", "CÓRDOBA", "CUNDINAMARCA", "DISTRITO CAPITAL DE BOGOTÁ", "GUAINÍA", "GUAVIARE", "HUILA", "LA GUAJIRA", "MAGDALENA", "META", "NARIÑO", "NORTE DE SANTANDER", "PUTUMAYO", "QUINDÍO", "RISARALDA", "SANTANDER", "SUCRE", "TOLIMA", "VALLE DEL CAUCA", "VAUPÉS", "VICHADA"],
        CR: ["Alajuela", "Cartago", "Guanacaste", "Heredia", "Limón", "Puntarenas", "San José"],
        CU: [],
        CV: [],
        CW: [],
        CY: [],
        CZ: [],
        DE: [],
        DJ: [],
        DK: [],
        DM: [],
        DO: [],
        DZ: [],
        EC: [],
        EE: [],
        EG: [],
        EH: [],
        ER: [],
        ES: ["A CORUÑA", "ALBACETE", "ALICANTE", "ALMERÍA", "ARABA/ÁLAVA", "ASTURIAS", "ÁVILA", "BADAJOZ", "BARCELONA", "BIZKAIA", "BURGOS", "CÁCERES", "CÁDIZ", "CANTABRIA", "CASTELLÓN", "CEUTA", "CIUDAD REAL", "CÓRDOBA", "CUENCA", "GIPUZKOA", "GIRONA", "GRANADA", "GUADALAJARA", "HUELVA", "HUESCA", "ILLES BALEARS", "JAÉN", "LA RIOJA", "LAS PALMAS", "LEÓN", "LLEIDA", "LUGO", "MADRID", "MÁLAGA", "MELILLA", "MURCIA", "NAVARRA", "OURENSE", "PALENCIA", "PONTEVEDRA", "SALAMANCA", "SANTA CRUZ DE TENERIFE", "SEGOVIA", "SEVILLA", "SORIA", "TARRAGONA", "TERUEL", "TOLEDO", "VALENCIA", "VALLADOLID", "ZAMORA", "ZARAGOZA"],
        ET: [],
        FI: [],
        FJ: [],
        FK: [],
        FM: ["FM"],
        FO: [],
        FR: [],
        GA: [],
        GB: ["ABERDEEN CITY", "ABERDEENSHIRE", "ANGUS", "ARGYLL", "ARGYLL AND BUTE", "AVON", "AYRSHIRE", "BANFFSHIRE", "BEDFORDSHIRE", "BELFAST CITY", "BERKSHIRE", "BERWICKSHIRE", "BLAENAU GWENT", "BORDERS", "BRIDGEND", "BUCKINGHAMSHIRE", "BUTE", "CAERPHILLY", "CAITHNESS", "CAMBRIDGESHIRE", "CARDIFF", "CARMARTHENSHIRE", "CENTRAL", "CEREDIGION", "CHESHIRE", "CLACKMANNANSHIRE", "CLEVELAND", "CLWYD", "CONWY", "CORNWALL", "COUNTY ANTRIM", "COUNTY ARMAGH", "COUNTY DOWN", "COUNTY DURHAM", "COUNTY FERMANAGH", "COUNTY LONDONDERRY", "COUNTY TYRONE", "CUMBRIA", "DENBIGHSHIRE", "DERBYSHIRE", "DEVON", "DORSET", "DUMFRIES AND GALLOWAY", "DUMFRIESSHIRE", "DUNBARTONSHIRE", "DUNDEE CITY", "DYFED", "EAST AYRSHIRE", "EAST DUNBARTONSHIRE", "EAST LOTHIAN", "EAST RENFREWSHIRE", "EAST RIDING OF YORKSHIRE", "EAST SUSSEX", "EDINBURGH CITY", "ESSEX", "FALKIRK", "FIFE", "FLINTSHIRE", "GLASGOW CITY", "GLOUCESTERSHIRE", "GRAMPIAN", "GREATER MANCHESTER", "GUERNSEY", "GWENT", "GWYNEDD", "HAMPSHIRE", "HEREFORDSHIRE", "HERTFORDSHIRE", "HIGHLAND", "INVERCLYDE", "INVERNESS-SHIRE", "ISLE OF ANGLESEY", "ISLE OF LEWIS", "ISLE OF MAN", "ISLE OF SKYE", "ISLE OF WIGHT", "ISLES OF SCILLY", "JERSEY", "KENT", "KINCARDINESHIRE", "KINROSS-SHIRE", "KIRKCUDBRIGHTSHIRE", "LANARKSHIRE", "LANCASHIRE", "LEICESTERSHIRE", "LINCOLNSHIRE", "LONDON", "LOTHIAN", "MERSEYSIDE", "MERTHYR TYDFIL", "MID GLAMORGAN", "MIDDLESEX", "MIDLOTHIAN", "MONMOUTHSHIRE", "MORAY", "NAIRN", "NEATH PORT TALBOT", "NEWPORT", "NORFOLK", "NORTH AYRSHIRE", "NORTH EAST LINCOLNSHIRE", "NORTH HUMBERSIDE", "NORTH LANARKSHIRE", "NORTH YORKSHIRE", "NORTHAMPTONSHIRE", "NORTHUMBERLAND", "NOTTINGHAMSHIRE", "ORKNEY ISLANDS", "OXFORDSHIRE", "PEEBLESSHIRE", "PEMBROKESHIRE", "PERTH AND KINROSS", "PERTHSHIRE", "POWYS", "RENFREWSHIRE", "RHONDDA CYNON TAF", "ROSS-SHIRE", "ROXBURGHSHIRE", "RUTLAND", "SELKIRKSHIRE", "SHETLAND ISLANDS", "SHROPSHIRE", "SOMERSET", "SOUTH AYRSHIRE", "SOUTH GLAMORGAN", "SOUTH HUMBERSIDE", "SOUTH LANARKSHIRE", "SOUTH YORKSHIRE", "STAFFORDSHIRE", "STIRLING", "STRATHCLYDE", "SUFFOLK", "SURREY", "SUSSEX", "SUTHERLAND", "SWANSEA", "TAYSIDE", "TORFAEN", "TYNE AND WEAR", "VALE OF GLAMORGAN", "WARWICKSHIRE", "WEST DUNBARTONSHIRE", "WEST GLAMORGAN", "WEST LOTHIAN", "WEST MIDLANDS", "WEST SUSSEX", "WEST YORKSHIRE", "WESTERN ISLES", "WIGTOWNSHIRE", "WILTSHIRE", "WORCESTERSHIRE", "WREXHAM"],
        GD: [],
        GE: [],
        GF: [],
        GG: [],
        GH: [],
        GI: [],
        GL: [],
        GM: [],
        GN: [],
        GP: [],
        GQ: [],
        GR: [],
        GT: [],
        GU: ["GU"],
        GW: [],
        GY: [],
        HK: ["HONG KONG ISLAND", "KOWLOON", "NEW TERRITORIES"],
        HN: [],
        HR: [],
        HT: [],
        HU: [],
        ID: ["ACEH", "BALI", "BANGKA BELITUNG ISLANDS", "BANTEN", "BENGKULU", "CENTRAL JAVA", "CENTRAL KALIMANTAN", "CENTRAL SULAWESI", "EAST JAVA", "EAST KALIMANTAN", "EAST NUSA TENGGARA", "GORONTALO", "DKI JAKARTA", "JAMBI", "LAMPUNG", "MALUKU", "NORTH KALIMANTAN", "NORTH MALUKU", "NORTH SULAWESI", "NORTH SUMATRA", "PAPUA", "RIAU", "RIAU ISLANDS", "SOUTH KALIMANTAN", "SOUTH SULAWESI", "SOUTH SUMATRA", "SOUTHEAST SULAWESI", "WEST JAVA", "WEST KALIMANTAN", "WEST NUSA TENGGARA", "WEST PAPUA", "WEST SULAWESI", "WEST SUMATRA", "YOGYAKARTA"],
        IE: ["CO CARLOW", "CO CAVAN", "CO CLARE", "CO CORK", "CO DONEGAL", "CO DUBLIN", "CO GALWAY", "CO KERRY", "CO KILDARE", "CO KILKENNY", "CO LAOIS", "CO LEITRIM", "CO LIMERICK", "CO LONGFORD", "CO LOUTH", "CO MAYO", "CO MEATH", "CO MONAGHAN", "CO OFFALY", "CO ROSCOMMON", "CO SLIGO", "CO TIPPERARY", "CO WATERFORD", "CO WESTMEATH", "CO WEXFORD", "CO WICKLOW", "DUBLIN 1", "DUBLIN 2", "DUBLIN 3", "DUBLIN 4", "DUBLIN 5", "DUBLIN 6", "DUBLIN 6W", "DUBLIN 7", "DUBLIN 8", "DUBLIN 9", "DUBLIN 10", "DUBLIN 11", "DUBLIN 12", "DUBLIN 13", "DUBLIN 14", "DUBLIN 15", "DUBLIN 16", "DUBLIN 17", "DUBLIN 18", "DUBLIN 20", "DUBLIN 22", "DUBLIN 24"],
        IL: [],
        IM: [],
        IN: ["Andaman and Nicobar Islands", "Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", "Chandigarh", "Chhattisgarh", "Dadra and Nagar Haveli", "Daman and Diu", "Delhi (NCT)", "Goa", "Gujarat", "Haryana", "Himachal Pradesh", "Jammu and Kashmir", "Jharkhand", "Karnataka", "Kerala", "Lakshadweep", "Madhya Pradesh", "Maharashtra", "Manipur", "Meghalaya", "Mizoram", "Nagaland", "Odisha", "Puducherry", "Punjab", "Rajasthan", "Sikkim", "Tamil Nadu", "Telangana", "Tripura", "Uttar Pradesh", "Uttarakhand", "West Bengal", "APO"],
        IO: [],
        IQ: [],
        IR: [],
        IS: [],
        IT: ["AG", "AL", "AN", "AO", "AR", "AP", "AT", "AV", "BA", "BT", "BL", "BN", "BG", "BI", "BO", "BZ", "BS", "BR", "CA", "CL", "CB", "CE", "CT", "CZ", "CH", "CO", "CS", "CR", "KR", "CN", "EN", "FM", "FE", "FI", "FG", "FC", "FR", "GE", "GO", "GR", "IM", "IS", "AQ", "SP", "LT", "LE", "LC", "LI", "LO", "LU", "MC", "MN", "MS", "MT", "ME", "MI", "MO", "MB", "NA", "NO", "NU", "OR", "PD", "PA", "PR", "PV", "PG", "PU", "PE", "PC", "PI", "PT", "PN", "PZ", "PO", "RG", "RA", "RC", "RE", "RI", "RN", "RM", "RO", "SA", "SS", "SV", "SI", "SR", "SO", "SU", "TA", "TE", "TR", "TO", "TP", "TN", "TV", "TS", "UD", "VA", "VE", "VB", "VC", "VR", "VV", "VI", "VT"],
        JE: [],
        JM: [],
        JO: [],
        JP: ["HOKKAIDO", "AOMORI-KEN", "IWATE-KEN", "MIYAGI-KEN", "AKITA-KEN", "YAMAGATA-KEN", "FUKUSHIMA-KEN", "IBARAKI-KEN", "TOCHIGI-KEN", "GUNMA-KEN", "SAITAMA-KEN", "CHIBA-KEN", "TOKYO-TO", "KANAGAWA-KEN", "NIIGATA-KEN", "TOYAMA-KEN", "ISHIKAWA-KEN", "FUKUI-KEN", "YAMANASHI-KEN", "NAGANO-KEN", "GIFU-KEN", "SHIZUOKA-KEN", "AICHI-KEN", "MIE-KEN", "SHIGA-KEN", "KYOTO-FU", "OSAKA-FU", "HYOGO-KEN", "NARA-KEN", "WAKAYAMA-KEN", "TOTTORI-KEN", "SHIMANE-KEN", "OKAYAMA-KEN", "HIROSHIMA-KEN", "YAMAGUCHI-KEN", "TOKUSHIMA-KEN", "KAGAWA-KEN", "EHIME-KEN", "KOCHI-KEN", "FUKUOKA-KEN", "SAGA-KEN", "NAGASAKI-KEN", "KUMAMOTO-KEN", "OITA-KEN", "MIYAZAKI-KEN", "KAGOSHIMA-KEN", "OKINAWA-KEN"],
        KE: [],
        KG: [],
        KH: [],
        KI: [],
        KM: [],
        KN: [],
        KP: [],
        KR: ["Busan", "Chungcheongbuk-do", "Chungcheongnam-do", "Daegu", "Daejeon", "Gangwon-do", "Gwangju", "Gyeonggi-do", "Gyeongsangbuk-do", "Gyeongsangnam-do", "Incheon", "Jeju-do", "Jeollabuk-do", "Jeollanam-do", "Sejong", "Seoul", "Ulsan"],
        KW: [],
        KY: [],
        KZ: ["Almaty", "Almaty Region", "Aqmola Region", "Aqtöbe Region", "Astana", "Atyraū Region", "Batys Qazaqstan Region", "Mangghystaū Region", "Ongtüstik Qazaqstan Region", "Pavlodar Region", "Qaraghandy Region", "Qostanay Region", "Qyzylorda Region", "Shyghys Qazaqstan Region", "Soltüstik Qazaqstan Region", "Zhambyl Region"],
        LA: [],
        LB: [],
        LC: [],
        LI: [],
        LK: [],
        LR: [],
        LS: [],
        LT: [],
        LU: [],
        LV: [],
        LY: [],
        MA: [],
        MC: [],
        MD: [],
        ME: [],
        MF: [],
        MG: [],
        MH: [],
        MK: [],
        ML: [],
        MM: [],
        MN: ["ARKHANGAI", "BAYAN-ÖLGII", "BAYANKHONGOR", "BULGAN", "DARKHAN-UUL", "DORNOD", "DORNOGOVI", "DUNDGOVI", "GOVI-ALTAI", "GOVISÜMBER", "KHENTII", "KHOVD", "KHÖVSGÖL", "ÖMNÖGOVI", "ORKHON", "ÖVÖRKHANGAI", "SELENGE", "SÜKHBAATAR", "TÖV", "ULAANBAATAR", "UVS", "ZAVKHAN"],
        MO: [],
        MP: ["MP"],
        MQ: [],
        MR: [],
        MS: [],
        MT: [],
        MU: ["Agalega Islands", "Black River", "Cargados Carajos Shoals", "Flacq", "Grand Port", "Moka", "Pamplemousses", "Plaines Wilhems", "Port Louis", "Rivière du Rempart", "Rodrigues Island", "Savanne"],
        MV: [],
        MW: [],
        MX: ["AGS", "BC", "BCS", "CAMP", "CHIS", "CHIH", "CDMX", "COAH", "COL", "DGO", "MEX", "GTO", "GRO", "HGO", "JAL", "MICH", "MOR", "NAY", "NL", "OAX", "PUE", "QRO", "Q ROO", "SLP", "SIN", "SON", "TAB", "TAMPS", "TLAX", "VER", "YUC", "ZAC"],
        MY: ["Johor", "Kedah", "Kelantan", "Kuala Lumpur", "Labuan", "Melaka", "Negeri Sembilan", "Pahang", "Perak", "Perlis", "Pulau Pinang", "Putrajaya", "Sabah", "Sarawak", "Selangor", "Terengganu"],
        MZ: [],
        NA: [],
        NC: [],
        NE: [],
        NF: [],
        NG: ["ABIA STATE", "FCT", "ADAMAWA STATE", "AKWA IBOM STATE", "ANAMBRA STATE", "BAUCHI STATE", "BAYELSA STATE", "BENUE STATE", "BORNO STATE", "CROSS RIVER STATE", "DELTA STATE", "EBONYI STATE", "EDO STATE", "EKITI STATE", "ENUGU STATE", "GOMBE STATE", "IMO STATE", "JIGAWA STATE", "KADUNA STATE", "KANO STATE", "KATSINA STATE", "KEBBI STATE", "KOGI STATE", "KWARA STATE", "LAGOS STATE", "NASARAWA STATE", "NIGER STATE", "OGUN STATE", "ONDO STATE", "OSUN STATE", "OYO STATE", "PLATEAU STATE", "RIVERS STATE", "SOKOTO STATE", "TARABA STATE", "YOBE STATE", "ZAMFARA STATE"],
        NI: [],
        NL: [],
        NO: [],
        NP: ["BAGMATI", "BHERI", "DHAWALAGIRI", "GANDAKI", "JANAKPUR", "KARNALI", "KATHMANDU", "KOSI", "LUMBINI", "MAHAKALI", "MECHI", "NARAYANI", "RAPTI", "SAGARMATHA", "SETI"],
        NR: [],
        NU: [],
        NZ: [],
        OM: [],
        PA: ["Provincia de Bocas del Toro", "Provincia de Chiriquí", "Provincia de Coclé", "Provincia de Colón", "Provincia del Darién", "Emberá-Wounaan", "Guna de Madugandí", "Guna de Wargandí", "Guna Yala", "Provincia de Herrera", "Provincia de Los Santos", "Ngöbe-Buglé", "Provincia de Panamá", "Provincia de Panamá Oeste", "Provincia de Veraguas"],
        PE: [],
        PF: [],
        PG: [],
        PH: ["ABRA", "AGUSAN DEL NORTE", "AGUSAN DEL SUR", "AKLAN", "ALBAY", "ANTIQUE", "APAYAO", "AURORA", "BASILAN", "BATAAN", "BATANES", "BATANGAS", "BENGUET", "BILIRAN", "BOHOL", "BUKIDNON", "BULACAN", "CAGAYAN", "CAMARINES NORTE", "CAMARINES SUR", "CAMIGUIN", "CAPIZ", "CATANDUANES", "CAVITE", "CEBU", "COMPOSTELA VALLEY", "COTABATO", "DAVAO DEL NORTE", "DAVAO DEL SUR", "DAVAO ORIENTAL", "DINAGAT ISLANDS", "EASTERN SAMAR", "GUIMARAS", "IFUGAO", "ILOCOS NORTE", "ILOCOS SUR", "ILOILO", "ISABELA", "KALINGA", "LA UNION", "LAGUNA", "LANAO DEL NORTE", "LANAO DEL SUR", "LEYTE", "MAGUINDANAO", "MANILA", "MARINDUQUE", "MASBATE", "METRO MANILA", "MINDORO OCCIDENTAL", "MINDORO ORIENTAL", "MISAMIS OCCIDENTAL", "MISAMIS ORIENTAL", "MOUNTAIN PROVINCE", "NEGROS OCCIDENTAL", "NEGROS ORIENTAL", "NORTHERN SAMAR", "NUEVA ECIJA", "NUEVA VIZCAYA", "PALAWAN", "PAMPANGA", "PANGASINAN", "QUEZON", "QUIRINO", "RIZAL", "ROMBLON", "SAMAR", "SARANGANI", "SIQUIJOR", "SORSOGON", "SOUTH COTABATO", "SOUTHERN LEYTE", "SULTAN KUDARAT", "SULU", "SURIGAO DEL NORTE", "SURIGAO DEL SUR", "TARLAC", "TAWI-TAWI", "ZAMBALES", "ZAMBOANGA DEL NORTE", "ZAMBOANGA DEL SUR", "ZAMBOANGA SIBUGAY"],
        PK: [],
        PL: ["DOLNOŚLĄSKIE", "KUJAWSKO-POMORSKIE", "LUBELSKIE", "LUBUSKIE", "ŁÓDZKIE", "MAŁOPOLSKIE", "MAZOWIECKIE", "OPOLSKIE", "PODKARPACKIE", "PODLASKIE", "POMORSKIE", "ŚLĄSKIE", "ŚWIĘTOKRZYSKIE", "WARMIŃSKO-MAZURSKIE", "WIELKOPOLSKIE", "ZACHODNIOPOMORSKIE"],
        PM: [],
        PN: [],
        PR: ["PR"],
        PS: [],
        PT: [],
        PW: [],
        PY: [],
        QA: [],
        RE: [],
        RO: [],
        RS: [],
        RU: [],
        RW: [],
        SA: [],
        SB: [],
        SC: [],
        SD: [],
        SE: [],
        SG: [],
        SH: [],
        SI: [],
        SJ: [],
        SK: [],
        SL: [],
        SM: [],
        SN: [],
        SO: [],
        SR: [],
        SS: [],
        ST: [],
        SV: ["AHUACHAPÁN", "CABAÑAS", "CHALATENANGO", "CUSCATLÁN", "LA LIBERTAD", "LA PAZ", "LA UNIÓN", "MORAZÁN", "SAN MIGUEL", "SAN SALVADOR", "SAN VICENTE", "SANTA ANA", "SONSONATE", "USULUTÁN"],
        SX: [],
        SY: [],
        SZ: [],
        TC: [],
        TD: [],
        TG: [],
        TH: ["Amnat Charoen", "Ang Thong", "Bangkok", "Bueng Kan", "Buri Ram", "Chachoengsao", "Chai Nat", "Chaiyaphum", "Chanthaburi", "Chiang Mai", "Chiang Rai", "Chon Buri", "Chumphon", "Kalasin", "Kamphaeng Phet", "Kanchanaburi", "Khon Kaen", "Krabi", "Lampang", "Lamphun", "Loei", "Lop Buri", "Mae Hong Son", "Maha Sarakham", "Mukdahan", "Nakhon Nayok", "Nakhon Pathom", "Nakhon Phanom", "Nakhon Ratchasima", "Nakhon Sawan", "Nakhon Si Thammarat", "Nan", "Narathiwat", "Nong Bua Lamphu", "Nong Khai", "Nonthaburi", "Pathum Thani", "Pattani", "Phang Nga", "Phatthalung", "Phatthaya", "Phayao", "Phetchabun", "Phetchaburi", "Phichit", "Phitsanulok", "Phra Nakhon Si Ayutthaya", "Phrae", "Phuket", "Prachin Buri", "Prachuap Khiri Khan", "Ranong", "Ratchaburi", "Rayong", "Roi Et", "Sa Kaeo", "Sakon Nakhon", "Samut Prakan", "Samut Sakhon", "Samut Songkhram", "Saraburi", "Satun", "Si Sa Ket", "Sing Buri", "Songkhla", "Sukhothai", "Suphan Buri", "Surat Thani", "Surin", "Tak", "Trang", "Trat", "Ubon Ratchathani", "Udon Thani", "Uthai Thani", "Uttaradit", "Yala", "Yasothon"],
        TJ: [],
        TK: [],
        TL: [],
        TM: [],
        TN: [],
        TO: [],
        TR: [],
        TT: [],
        TV: [],
        TW: [],
        TZ: [],
        UA: ["CHERKASKA OBL", "CHERNIHIVSKA OBL", "CHERNIVETSKA OBL", "DNIPROPETROVSKA OBL", "DONETSKA OBL", "IVANO-FRANKIVSKA OBL", "KHARKIVSKA OBL", "KHERSONSKA OBL", "KHMELNYTSKA OBL", "KIROVOHRADSKA OBL", "KYIV", "KYIVSKA OBL", "LUHANSKA OBL", "LVIVSKA OBL", "MYKOLAIVSKA OBL", "ODESKA OBL", "POLTAVSKA OBL", "RIVNENSKA OBL", "SUMSKA OBL", "TERNOPILSKA OBL", "VINNYTSKA OBL", "VOLYNSKA OBL", "ZAKARPATSKA OBL", "ZAPORIZKA OBL", "ZHYTOMYRSKA OBL"],
        UG: [],
        US: ["AL", "AK", "AS", "AZ", "AR", "AA", "AE", "AP", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "GU", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "MP", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VI", "VA", "WA", "WV", "WI", "WY"],
        UY: ["Artigas", "Canelones", "Cerro Largo", "Colonia", "Durazno", "Flores", "Florida", "Lavalleja", "Maldonado", "Montevideo", "Paysandú", "Río Negro", "Rivera", "Rocha", "Salto", "San José", "Soriano", "Tacuarembó", "Treinta y Tres"],
        UZ: [],
        VA: [],
        VC: [],
        VE: ["ESTADO AMAZONAS", "ESTADO ANZOÁTEGUI", "ESTADO APURE", "ESTADO ARAGUA", "ESTADO BARINAS", "ESTADO BOLÍVAR", "ESTADO CARABOBO", "ESTADO COJEDES", "ESTADO DELTA AMACURO", "DEPENDENCIAS FEDERALES", "DISTRITO CAPITAL", "ESTADO FALCÓN", "ESTADO GUÁRICO", "ESTADO LARA", "ESTADO MÉRIDA", "ESTADO MIRANDA", "ESTADO MONAGAS", "ESTADO NUEVA ESPARTA", "ESTADO PORTUGUESA", "ESTADO SUCRE", "ESTADO TÁCHIRA", "ESTADO TRUJILLO", "ESTADO VARGAS", "ESTADO YARACUY", "ESTADO ZULIA"],
        VG: [],
        VI: ["VI"],
        VN: ["An Giang", "Bà Rịa–Vũng Tàu", "Bắc Giang", "Bắc Kạn", "Bạc Liêu", "Bắc Ninh", "Bến Tre", "Bình Định", "Bình Dương", "Bình Phước", "Bình Thuận", "Cà Mau", "Cần Thơ", "Cao Bằng", "Đà Nẵng", "Đắk Lắk", "Đắk Nông", "Điện Biên", "Đồng Nai", "Đồng Tháp", "Gia Lai", "Hà Giang", "Hà Nam", "Hà Nội", "Hà Tĩnh", "Hải Dương", "Hải Phòng", "Hậu Giang", "Hồ Chí Minh", "Hòa Bình", "Hưng Yên", "Khánh Hòa", "Kiên Giang", "Kon Tum", "Lai Châu", "Lâm Đồng", "Lạng Sơn", "Lào Cai", "Long An", "Nam Định", "Nghệ An", "Ninh Bình", "Ninh Thuận", "Phú Thọ", "Phú Yên", "Quảng Bình", "Quảng Nam", "Quảng Ngãi", "Quảng Ninh", "Quảng Trị", "Sóc Trăng", "Sơn La", "Tây Ninh", "Thái Bình", "Thái Nguyên", "Thanh Hóa", "Thừa Thiên–Huế", "Tiền Giang", "Trà Vinh", "Tuyên Quang", "Vĩnh Long", "Vĩnh Phúc", "Yên Bái"],
        VU: [],
        WF: [],
        WS: [],
        XK: [],
        YE: [],
        YT: [],
        ZA: [],
        ZM: [],
        ZW: []
    };
    const rk = e => e.normalize("NFD").replace(/[^a-zA-Z]/g, "").toUpperCase()
      , ok = (e=[]) => {
        if (!e.length)
            return [];
        const t = e.map((e => ({
            brand: e,
            normalizedBrand: rk(e)
        })))
          , n = t.filter(( ({normalizedBrand: e}) => {
            return t = e,
            !MN.includes(t);
            var t
        }
        )).map(( ({brand: e}) => e));
        if (n.length) {
            const e = new Error(`invalid cardOptions.allowedBrands: ${JSON.stringify(n)}`);
            throw $t().error("axo_sdk_allowedBrands_error", {
                error: e
            }),
            e
        }
        return t.map(( ({normalizedBrand: e}) => e))
    }
      , ik = (e=[]) => {
        if (!e.length)
            return {};
        const t = (n = nk,
        r = e => e.map((e => ({
            region: e,
            normalizedRegion: rk(e)
        }))),
        Object.entries(n).reduce(( (e, [t,o]) => (e[t] = r(o, t, n),
        e)), {}));
        var n, r;
        const o = []
          , i = {};
        if (e.forEach((e => {
            var n;
            const [r,a] = e.split(":").map(rk);
            if (void 0 === a)
                t[r] ? i[r] || (i[r] = new Set) : o.push(e);
            else {
                const s = null === (n = t[r]) || void 0 === n ? void 0 : n.find(( ({normalizedRegion: e}) => e === a));
                s ? (i[r] || (i[r] = new Set),
                i[r].add(s.region)) : o.push(e)
            }
        }
        )),
        o.length) {
            const e = new Error(`invalid shippingAddressOptions.allowedLocations: ${JSON.stringify(o)}`);
            throw $t().error("axo_sdk_allowedLocations_error", {
                error: e
            }),
            e
        }
        return i
    }
      , ak = {
        INITIALIZATION: {
            name: "Initialization",
            code: "INIT"
        },
        IDENTITY: {
            name: "Identity",
            code: "ID"
        },
        PROFILE: {
            name: "Profile",
            code: "PRFL"
        },
        FASTLANE_CARD: {
            name: "FastlaneCard",
            code: "CARD"
        },
        FASTLANE_PAYMENT: {
            name: "FastlanePayment",
            code: "PYMT"
        },
        FASTLANE_WATERMARK: {
            name: "FastlaneWatermark",
            code: "WTMK"
        },
        CONNECT_CARD: {
            name: "ConnectCard",
            code: "CCARD"
        },
        CONNECT_WATERMARK: {
            name: "ConnectWatermark",
            code: "CWTMK"
        },
        FASTLANE_CONSENT: {
            name: "Consent",
            code: "CNST"
        },
        EVENTS: {
            name: "Events",
            code: "EVNT"
        }
    }
      , sk = {
        GENERIC: {
            name: "Generic",
            code: "G"
        },
        INTEGRATION: {
            name: "Integration",
            code: "I"
        },
        VALIDATION: {
            name: "Validation",
            code: "V"
        },
        NETWORK: {
            name: "Network",
            code: "N"
        },
        USER: {
            name: "User",
            code: "U"
        }
    };
    class lk extends Error {
        constructor(e) {
            super(e.message),
            this.name = "FastlaneError",
            this.message = e.message,
            this.source = e.source.code,
            this.type = e.type.name,
            this.code = e.code,
            this.details = e.details,
            Error.captureStackTrace && Error.captureStackTrace(this, lk)
        }
    }
    const ck = {
        SDK_INIT_FAILED: {
            message: "SDK initialization error",
            source: ak.INITIALIZATION,
            type: sk.GENERIC,
            code: "FL-INIT-G00"
        },
        INIT_MISSING_AUTH_TOKEN: {
            message: "initialization failed due to missing authorization token",
            source: ak.INITIALIZATION,
            type: sk.INTEGRATION,
            code: "FL-INIT-I00"
        },
        INIT_INVALID_AUTH_TOKEN: {
            message: "initialization failed due to invalid authorization token",
            source: ak.INITIALIZATION,
            type: sk.INTEGRATION,
            code: "FL-INIT-I01"
        },
        INIT_MISSING_CLIENT: {
            message: "initialization failed due to missing Braintree client",
            source: ak.INITIALIZATION,
            type: sk.INTEGRATION,
            code: "FL-INIT-I02"
        },
        INIT_INVALID_INTENDED_EXPERIENCE: {
            message: `initialization failed due to invalid intendedExperience value. intendedExperience must be one of the following: ${Object.keys(Qe).join(", ")}`,
            source: ak.INITIALIZATION,
            type: sk.INTEGRATION,
            code: "FL-INIT-I03"
        }
    }
      , dk = {
        METHOD_REQUIRES_FASTLANE_ENABLED: {
            message: "Fastlane must be enabled to use this method",
            source: ak.INITIALIZATION,
            type: sk.INTEGRATION
        }
    }
      , uk = {
        IDENTITY_LOOKUP_FAILED: {
            message: "lookupCustomerByEmail failed",
            source: ak.IDENTITY,
            type: sk.GENERIC,
            code: "FL-ID-G00"
        },
        IDENTITY_TRIGGER_AUTHENTICATION_FAILED: {
            message: "triggerAuthenticationFlow failed",
            source: ak.IDENTITY,
            type: sk.GENERIC,
            code: "FL-ID-G01"
        }
    }
      , pk = {
        TRIGGER_AUTHENTICATION_FLOW_REQUIRES_FASTLANE_ENABLED: Object.assign(Object.assign({}, dk.METHOD_REQUIRES_FASTLANE_ENABLED), {
            source: ak.IDENTITY,
            details: {
                method: "triggerAuthenticationFlow"
            }
        })
    }
      , hk = {
        SHOW_CARD_SELECTOR_GENERIC_ERROR: {
            message: "showCardSelector failed",
            source: ak.PROFILE,
            type: sk.GENERIC,
            code: "FL-PRFL-G00"
        },
        SHOW_SHIPPING_ADDRESS_SELECTOR_GENERIC_ERROR: {
            message: "showShippingAddressSelector failed",
            source: ak.PROFILE,
            type: sk.GENERIC,
            code: "FL-PRFL-G01"
        }
    }
      , fk = {
        SHOW_CARD_SELECTOR_REQUIRES_FASTLANE_ENABLED: Object.assign(Object.assign({}, dk.METHOD_REQUIRES_FASTLANE_ENABLED), {
            source: ak.PROFILE,
            details: {
                method: "showCardSelector"
            }
        }),
        SHOW_SHIPPING_ADDRESS_SELECTOR_REQUIRES_FASTLANE_ENABLED: Object.assign(Object.assign({}, dk.METHOD_REQUIRES_FASTLANE_ENABLED), {
            source: ak.PROFILE,
            details: {
                method: "showShippingAddressSelector"
            }
        })
    }
      , mk = {
        WATERMARK_INIT_FAILED: {
            message: "FastlaneWatermarkComponent initialization error",
            source: ak.FASTLANE_WATERMARK,
            type: sk.GENERIC,
            code: "FL-WTMK-G00"
        },
        WATERMARK_RENDER_FAILED: {
            message: "FastlaneWatermarkComponent render failed",
            source: ak.FASTLANE_WATERMARK,
            type: sk.GENERIC,
            code: "FL-WTMK-G01"
        },
        WATERMARK_RENDER_MISSING_CONTAINER: {
            message: "could not find container to render FastlaneWatermarkComponent",
            source: ak.FASTLANE_WATERMARK,
            type: sk.INTEGRATION,
            code: "FL-WTMK-I00"
        }
    }
      , gk = {
        WATERMARK_RENDER_REQUIRES_FASTLANE_ENABLED: Object.assign(Object.assign({}, dk.METHOD_REQUIRES_FASTLANE_ENABLED), {
            source: ak.FASTLANE_WATERMARK,
            details: {
                method: "render"
            }
        })
    }
      , yk = {
        CARD_GET_PAYMENT_TOKEN_ADDRESS_VALIDATION_FAILED: {
            source: ak.FASTLANE_CARD,
            type: sk.VALIDATION,
            message: "FastlaneCardComponent getPaymentToken received invalid billing address",
            code: "FL-CARD-V00"
        },
        CARD_GET_PAYMENT_TOKEN_NAME_VALIDATION_FAILED: {
            source: ak.FASTLANE_CARD,
            type: sk.VALIDATION,
            message: "FastlaneCardComponent getPaymentToken missing cardholder name",
            code: "FL-CARD-V01"
        },
        CARD_INIT_FAILED: {
            message: "FastlaneCardComponent initialization error",
            source: ak.FASTLANE_CARD,
            type: sk.GENERIC,
            code: "FL-CARD-G00"
        },
        CARD_GET_PAYMENT_TOKEN_BAD_DATA: {
            message: "user entered bad data please allow them to update then try again",
            source: ak.FASTLANE_CARD,
            type: sk.USER,
            code: "FL-CARD-U00"
        },
        CARD_GET_PAYMENT_TOKEN_FAILED: {
            message: "FastlaneCardComponent get payment token failed",
            source: ak.FASTLANE_CARD,
            type: sk.GENERIC,
            code: "FL-CARD-G01"
        },
        CARD_RENDER_FAILED: {
            message: "FastlaneCardComponent render failed",
            source: ak.FASTLANE_CARD,
            type: sk.GENERIC,
            code: "FL-CARD-G02"
        },
        CARD_UPDATE_PREFILLS_FAILED: {
            message: "FastlaneCardComponent updatePrefills failed",
            source: ak.FASTLANE_CARD,
            type: sk.GENERIC,
            code: "FL-CARD-G03"
        },
        CARD_RENDER_MISSING_CONTAINER: {
            message: "could not find container to render FastlaneCardComponent",
            source: ak.FASTLANE_CARD,
            type: sk.INTEGRATION,
            code: "FL-CARD-I00"
        }
    }
      , vk = {
        CONNECT_WATERMARK_RENDER_REQUIRES_FASTLANE_ENABLED: Object.assign(Object.assign({}, dk.METHOD_REQUIRES_FASTLANE_ENABLED), {
            source: ak.CONNECT_WATERMARK,
            details: {
                method: "render"
            }
        })
    }
      , bk = {
        PAYMENT_INIT_FAILED: {
            message: "FastlanePaymentComponent initialization error",
            source: ak.FASTLANE_PAYMENT,
            type: sk.GENERIC,
            code: "FL-PYMT-G00"
        },
        PAYMENT_RENDER_FAILED: {
            message: "FastlanePaymentComponent render failed",
            source: ak.FASTLANE_PAYMENT,
            type: sk.GENERIC,
            code: "FL-PYMT-G01"
        },
        PAYMENT_RENDER_MISSING_CONTAINER: {
            message: "could not find container to render FastlanePaymentComponent",
            source: ak.FASTLANE_PAYMENT,
            type: sk.INTEGRATION,
            code: "FL-PYMT-I00"
        },
        PAYMENT_GET_PAYMENT_TOKEN_CALLED_BEFORE_RENDER: {
            message: "cannot call getPaymentToken before FastlanePaymentComponent is rendered",
            source: ak.FASTLANE_PAYMENT,
            type: sk.INTEGRATION,
            code: "FL-PYMT-I01"
        },
        PAYMENT_GET_PAYMENT_TOKEN_BAD_DATA: {
            message: "user entered bad data please allow them to update then try again",
            source: ak.FASTLANE_PAYMENT,
            type: sk.USER,
            code: "FL-PYMT-U00"
        },
        PAYMENT_GET_PAYMENT_TOKEN_FAILED: {
            message: "FastlanePaymentComponent getPaymentToken failed",
            source: ak.FASTLANE_PAYMENT,
            type: sk.GENERIC,
            code: "FL-PYMT-G02"
        },
        PAYMENT_SET_SHIPPING_ADDRESS_FAILED: {
            message: "FastlanePaymentComponent setShippingAddress failed",
            source: ak.FASTLANE_PAYMENT,
            type: sk.GENERIC,
            code: "FL-PYMT-G03"
        },
        PAYMENT_UPDATE_PREFILLS_FAILED: {
            message: "FastlanePaymentComponent updatePrefills failed",
            source: ak.FASTLANE_PAYMENT,
            type: sk.GENERIC,
            code: "FL-PYMT-G04"
        }
    }
      , Ek = {
        CONSENT_INIT_FAILED: {
            message: "FastlaneConsent initialization error",
            source: ak.FASTLANE_CONSENT,
            type: sk.GENERIC,
            code: "FL-CNST-G00"
        },
        CONSENT_RENDER_FAILED: {
            message: "FastlaneConsent render failed",
            source: ak.FASTLANE_CONSENT,
            type: sk.GENERIC,
            code: "FL-CNST-G01"
        },
        CONSENT_GET_CONSENT_DETAILS_MISSING_COMPONENT: {
            message: "cannot call getConsentDetails before FastlaneConsentComponent is rendered",
            source: ak.FASTLANE_CONSENT,
            type: sk.INTEGRATION,
            code: "FL-CNST-I01"
        },
        CONSENT_GET_CONSENT_DETAILS_FAILED: {
            message: "FastlaneConsent getConsentDetails failed",
            source: ak.FASTLANE_CONSENT,
            type: sk.GENERIC,
            code: "FL-CNST-G03"
        },
        CONSENT_GET_RENDER_STATE_FAILED: {
            message: "FastlaneConsent method getRenderState failed",
            source: ak.FASTLANE_CONSENT,
            type: sk.GENERIC,
            code: "FL-CNST-G04"
        },
        CONSENT_RENDER_MISSING_CONTAINER: {
            message: "could not find container to render FastlaneConsent",
            source: ak.FASTLANE_CONSENT,
            type: sk.INTEGRATION,
            code: "FL-CNST-I00"
        }
    }
      , _k = {
        CONSENT_IS_DISABLED: Object.assign(Object.assign({}, dk.METHOD_REQUIRES_FASTLANE_ENABLED), {
            source: ak.FASTLANE_CONSENT,
            details: {
                method: "render"
            }
        }),
        CONSENT_RENDER_IS_DISABLED: {
            message: "method render is disabled",
            source: ak.FASTLANE_CONSENT,
            type: sk.INTEGRATION,
            details: {
                method: "render"
            }
        },
        CONSENT_GET_RENDER_STATE_IS_DISABLED: {
            message: "method getRenderState is disabled",
            source: ak.FASTLANE_CONSENT,
            type: sk.INTEGRATION,
            details: {
                method: "getRenderState"
            }
        },
        CONSENT_GET_CONSENT_DETAILS_IS_DISABLED: {
            message: "method getConsentDetails is disabled",
            source: ak.FASTLANE_CONSENT,
            type: sk.INTEGRATION,
            details: {
                method: "getConsentDetails"
            }
        },
        CONSENT_UPDATE_PREFILLS_IS_DISABLED: {
            message: "method updatePrefills is disabled",
            source: ak.FASTLANE_CONSENT,
            type: sk.INTEGRATION,
            details: {
                method: "updatePrefills"
            }
        }
    }
      , Ak = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ck), hk), mk), uk), bk), yk), Ek)
      , wk = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, dk), pk), fk), gk), vk), _k);
    const Sk = {
        createExternalError: function(e, t="axo_sdk_error") {
            const {message: n, source: r, type: o, code: i, details: a} = e;
            return $t().track(Object.assign(Object.assign({
                event_name: t,
                error_category: r.name
            }, a && {
                error_details: encodeURIComponent(JSON.stringify(a))
            }), {
                error_type: o.name,
                int_error_code: i,
                int_error_desc: n
            })).flush(),
            new lk(e)
        },
        triggerExternalWarning: function(e, t="axo_sdk_warning") {
            const {message: n, source: r, type: o, details: i} = e;
            $t().track({
                event_name: t,
                error_category: r.name,
                error_details: encodeURIComponent(JSON.stringify(i)),
                error_type: o.name,
                int_error_desc: n
            }),
            console.warn(n)
        }
    };
    function Ck(e, t) {
        var n = {};
        for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
        if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
            var o = 0;
            for (r = Object.getOwnPropertySymbols(e); o < r.length; o++)
                t.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[o]) && (n[r[o]] = e[r[o]])
        }
        return n
    }
    "function" == typeof SuppressedError && SuppressedError;
    !function() {
        if ("undefined" != typeof document && !("adoptedStyleSheets"in document)) {
            var e = "ShadyCSS"in window && !ShadyCSS.nativeShadow
              , t = document.implementation.createHTMLDocument("")
              , n = new WeakMap
              , r = "object" == typeof DOMException ? Error : DOMException
              , o = Object.defineProperty
              , i = Array.prototype.forEach
              , a = /@import.+?;?$/gm
              , s = CSSStyleSheet.prototype;
            s.replace = function() {
                return Promise.reject(new r("Can't call replace on non-constructed CSSStyleSheets."))
            }
            ,
            s.replaceSync = function() {
                throw new r("Failed to execute 'replaceSync' on 'CSSStyleSheet': Can't call replaceSync on non-constructed CSSStyleSheets.")
            }
            ;
            var l = new WeakMap
              , c = new WeakMap
              , d = new WeakMap
              , u = new WeakMap
              , p = x.prototype;
            p.replace = function(e) {
                try {
                    return this.replaceSync(e),
                    Promise.resolve(this)
                } catch (e) {
                    return Promise.reject(e)
                }
            }
            ,
            p.replaceSync = function(e) {
                if (O(this),
                "string" == typeof e) {
                    var t = this;
                    l.get(t).textContent = function(e) {
                        var t = e.replace(a, "");
                        return t !== e && console.warn("@import rules are not allowed here. See https://github.com/WICG/construct-stylesheets/issues/119#issuecomment-588352418"),
                        t.trim()
                    }(e),
                    u.set(t, []),
                    c.get(t).forEach((function(e) {
                        e.isConnected() && C(t, S(t, e))
                    }
                    ))
                }
            }
            ,
            o(p, "cssRules", {
                configurable: !0,
                enumerable: !0,
                get: function() {
                    return O(this),
                    l.get(this).sheet.cssRules
                }
            }),
            o(p, "media", {
                configurable: !0,
                enumerable: !0,
                get: function() {
                    return O(this),
                    l.get(this).sheet.media
                }
            }),
            ["addRule", "deleteRule", "insertRule", "removeRule"].forEach((function(e) {
                p[e] = function() {
                    var t = this;
                    O(t);
                    var n = arguments;
                    u.get(t).push({
                        method: e,
                        args: n
                    }),
                    c.get(t).forEach((function(r) {
                        if (r.isConnected()) {
                            var o = S(t, r).sheet;
                            o[e].apply(o, n)
                        }
                    }
                    ));
                    var r = l.get(t).sheet;
                    return r[e].apply(r, n)
                }
            }
            )),
            o(x, Symbol.hasInstance, {
                configurable: !0,
                value: A
            });
            var h = {
                childList: !0,
                subtree: !0
            }
              , f = new WeakMap
              , m = new WeakMap
              , g = new WeakMap
              , y = new WeakMap;
            if (P.prototype = {
                isConnected: function() {
                    var e = m.get(this);
                    return e instanceof Document ? "loading" !== e.readyState : function(e) {
                        return "isConnected"in e ? e.isConnected : document.contains(e)
                    }(e.host)
                },
                connect: function() {
                    var e = I(this);
                    y.get(this).observe(e, h),
                    g.get(this).length > 0 && R(this),
                    k(e, (function(e) {
                        T(e).connect()
                    }
                    ))
                },
                disconnect: function() {
                    y.get(this).disconnect()
                },
                update: function(e) {
                    var t = this
                      , n = m.get(t) === document ? "Document" : "ShadowRoot";
                    if (!Array.isArray(e))
                        throw new TypeError("Failed to set the 'adoptedStyleSheets' property on " + n + ": Iterator getter is not callable.");
                    if (!e.every(A))
                        throw new TypeError("Failed to set the 'adoptedStyleSheets' property on " + n + ": Failed to convert value to 'CSSStyleSheet'");
                    if (e.some(w))
                        throw new TypeError("Failed to set the 'adoptedStyleSheets' property on " + n + ": Can't adopt non-constructed stylesheets");
                    t.sheets = e;
                    var r, o, i = g.get(t), a = (r = e).filter((function(e, t) {
                        return r.indexOf(e) === t
                    }
                    ));
                    (o = a,
                    i.filter((function(e) {
                        return -1 === o.indexOf(e)
                    }
                    ))).forEach((function(e) {
                        !function(e) {
                            e.parentNode.removeChild(e)
                        }(S(e, t)),
                        function(e, t) {
                            d.get(e).delete(t),
                            c.set(e, c.get(e).filter((function(e) {
                                return e !== t
                            }
                            )))
                        }(e, t)
                    }
                    )),
                    g.set(t, a),
                    t.isConnected() && a.length > 0 && R(t)
                }
            },
            window.CSSStyleSheet = x,
            N(Document),
            "ShadowRoot"in window) {
                N(ShadowRoot);
                var v = Element.prototype
                  , b = v.attachShadow;
                v.attachShadow = function(e) {
                    var t = b.call(this, e);
                    return "closed" === e.mode && n.set(this, t),
                    t
                }
            }
            var E = T(document);
            E.isConnected() ? E.connect() : document.addEventListener("DOMContentLoaded", E.connect.bind(E))
        }
        function _(e) {
            return e.shadowRoot || n.get(e)
        }
        function A(e) {
            return "object" == typeof e && (p.isPrototypeOf(e) || s.isPrototypeOf(e))
        }
        function w(e) {
            return "object" == typeof e && s.isPrototypeOf(e)
        }
        function S(e, t) {
            return d.get(e).get(t)
        }
        function C(e, t) {
            requestAnimationFrame((function() {
                t.textContent = l.get(e).textContent,
                u.get(e).forEach((function(e) {
                    return t.sheet[e.method].apply(t.sheet, e.args)
                }
                ))
            }
            ))
        }
        function O(e) {
            if (!l.has(e))
                throw new TypeError("Illegal invocation")
        }
        function x() {
            var e = this
              , n = document.createElement("style");
            t.body.appendChild(n),
            l.set(e, n),
            c.set(e, []),
            d.set(e, new WeakMap),
            u.set(e, [])
        }
        function T(e) {
            var t = f.get(e);
            return t || (t = new P(e),
            f.set(e, t)),
            t
        }
        function N(e) {
            o(e.prototype, "adoptedStyleSheets", {
                configurable: !0,
                enumerable: !0,
                get: function() {
                    return T(this).sheets
                },
                set: function(e) {
                    T(this).update(e)
                }
            })
        }
        function k(e, t) {
            for (var n = document.createNodeIterator(e, NodeFilter.SHOW_ELEMENT, (function(e) {
                return _(e) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT
            }
            ), null, !1), r = void 0; r = n.nextNode(); )
                t(_(r))
        }
        function I(e) {
            var t = m.get(e);
            return t instanceof Document ? t.body : t
        }
        function R(e) {
            var t = document.createDocumentFragment()
              , n = g.get(e)
              , r = y.get(e)
              , o = I(e);
            r.disconnect(),
            n.forEach((function(n) {
                t.appendChild(S(n, e) || function(e, t) {
                    var n = document.createElement("style");
                    return d.get(e).set(t, n),
                    c.get(e).push(t),
                    n
                }(n, e))
            }
            )),
            o.insertBefore(t, null),
            r.observe(o, h),
            n.forEach((function(t) {
                C(t, S(t, e))
            }
            ))
        }
        function P(t) {
            var n = this;
            n.sheets = [],
            m.set(n, t),
            g.set(n, []),
            y.set(n, new MutationObserver((function(t, r) {
                document ? t.forEach((function(t) {
                    e || i.call(t.addedNodes, (function(e) {
                        e instanceof Element && k(e, (function(e) {
                            T(e).connect()
                        }
                        ))
                    }
                    )),
                    i.call(t.removedNodes, (function(t) {
                        t instanceof Element && (function(e, t) {
                            return t instanceof HTMLStyleElement && g.get(e).some((function(t) {
                                return S(t, e)
                            }
                            ))
                        }(n, t) && R(n),
                        e || k(t, (function(e) {
                            T(e).disconnect()
                        }
                        )))
                    }
                    ))
                }
                )) : r.disconnect()
            }
            )))
        }
    }();
    const Ok = e => e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;")
      , xk = (e, t="") => {
        const n = {};
        return Object.entries(e).map(( ([e,r]) => {
            const o = ( (e, t="") => {
                let n = [...e.replace(/[^a-zA-Z0-9 ]/g, "")];
                return n.map(( (e, t) => {
                    e === e.toUpperCase() && (n[t] = "-" + e.toLowerCase())
                }
                )),
                `${t ? `${t}-` : ""}${n.join("")}`
            }
            )(e, t);
            if ("object" == typeof r) {
                const e = xk(r, o);
                Object.entries(e).map(( ([e,t]) => {
                    n[`${e}`] = t
                }
                ))
            } else
                n[`--${o}`] = r
        }
        )),
        n
    }
      , Tk = (e, t="") => {
        let n = "";
        const r = xk(e, t)
          , o = Nk(r);
        for (let[e,t] of Object.entries(o))
            t && (n += `${e}: ${t};`);
        return n.trim()
    }
      , Nk = e => {
        const t = Object.assign({}, e)
          , n = {
            "--root-background-color-primary": "--root-background-color",
            "--text-body-color": "--root-text-color-base",
            "--text-body-fontSize": "--root-font-size-base",
            "--toggle-color-primary": "--root-primary-color"
        };
        return Object.keys(t).forEach((e => {
            if (n[e]) {
                const r = n[e];
                t[r] || (t[r] = t[e]),
                delete t[e]
            }
        }
        )),
        t
    }
      , kk = (e, t) => e ? getComputedStyle(e).getPropertyValue(t) : ""
      , Ik = (e, t) => {
        const n = document.createElement("style");
        n.setAttribute("data-styles", "connect"),
        n.innerHTML = t ? `${Ok(t)} { ${Ok(e)} }` : Ok(e),
        document.head.appendChild(n)
    }
    ;
    new CSSStyleSheet;
    const Rk = new CSSStyleSheet;
    var Pk;
    Rk.replaceSync(`/*\n! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com\n*/\n\n/*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box;\n  /* 1 */\n  border-width: 0;\n  /* 2 */\n  border-style: solid;\n  /* 2 */\n  border-color: #e5e7eb;\n  /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: '';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user's configured \`sans\` font-family by default.\n5. Use the user's configured \`sans\` font-feature-settings by default.\n6. Use the user's configured \`sans\` font-variation-settings by default.\n7. Disable tap highlights on iOS\n*/\n\nhtml,\n:host {\n  line-height: 1.5;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n  -moz-tab-size: 4;\n  /* 3 */\n  -o-tab-size: 4;\n     tab-size: 4;\n  /* 3 */\n  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n  /* 4 */\n  font-feature-settings: normal;\n  /* 5 */\n  font-variation-settings: normal;\n  /* 6 */\n  -webkit-tap-highlight-color: transparent;\n  /* 7 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from \`html\` so users can set them as a class directly on the \`html\` element.\n*/\n\nbody {\n  margin: 0;\n  /* 1 */\n  line-height: inherit;\n  /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  border-top-width: 1px;\n  /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user's configured \`mono\` font-family by default.\n2. Use the user's configured \`mono\` font-feature-settings by default.\n3. Use the user's configured \`mono\` font-variation-settings by default.\n4. Correct the odd \`em\` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;\n  /* 1 */\n  font-feature-settings: normal;\n  /* 2 */\n  font-variation-settings: normal;\n  /* 3 */\n  font-size: 1em;\n  /* 4 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent \`sub\` and \`sup\` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0;\n  /* 1 */\n  border-color: inherit;\n  /* 2 */\n  border-collapse: collapse;\n  /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-feature-settings: inherit;\n  /* 1 */\n  font-variation-settings: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  font-weight: inherit;\n  /* 1 */\n  line-height: inherit;\n  /* 1 */\n  color: inherit;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n  padding: 0;\n  /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button;\n  /* 1 */\n  background-color: transparent;\n  /* 2 */\n  background-image: none;\n  /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional \`:invalid\` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to \`inherit\` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nReset default styling for dialogs.\n*/\n\ndialog {\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user's configured gray 400 color.\n*/\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  /* 1 */\n  color: #9ca3af;\n  /* 2 */\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  /* 1 */\n  color: #9ca3af;\n  /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role="button"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don't get the pointer cursor.\n*/\n\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements \`display: block\` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add \`vertical-align: middle\` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  /* 1 */\n  vertical-align: middle;\n  /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Make elements with the HTML hidden attribute stay hidden by default */\n\n[hidden] {\n  display: none;\n}\n\n:host {\n  font-family: unset;\n  line-height: unset;\n}\n\n*, ::before, ::after {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}\n\n::backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}\n\n.container {\n  width: 100%;\n}\n\n@media (min-width: 375px) {\n  .container {\n    max-width: 375px;\n  }\n}\n\n@media (min-width: 640px) {\n  .container {\n    max-width: 640px;\n  }\n}\n\n@media (min-width: 768px) {\n  .container {\n    max-width: 768px;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container {\n    max-width: 1024px;\n  }\n}\n\n@media (min-width: 1280px) {\n  .container {\n    max-width: 1280px;\n  }\n}\n\n@media (min-width: 1536px) {\n  .container {\n    max-width: 1536px;\n  }\n}\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.pointer-events-none {\n  pointer-events: none;\n}\n\n.visible {\n  visibility: visible;\n}\n\n.invisible {\n  visibility: hidden;\n}\n\n.collapse {\n  visibility: collapse;\n}\n\n.static {\n  position: static;\n}\n\n.fixed {\n  position: fixed;\n}\n\n.absolute {\n  position: absolute;\n}\n\n.relative {\n  position: relative;\n}\n\n.sticky {\n  position: sticky;\n}\n\n.bottom-0 {\n  bottom: 0px;\n}\n\n.left-0 {\n  left: 0px;\n}\n\n.left-2 {\n  left: 0.5em;\n}\n\n.left-2\\.5 {\n  left: 0.625em;\n}\n\n.left-3 {\n  left: 0.75em;\n}\n\n.left-4 {\n  left: 1em;\n}\n\n.left-9 {\n  left: 2.25em;\n}\n\n.right-4 {\n  right: 1em;\n}\n\n.right-7 {\n  right: 1.75em;\n}\n\n.top-0 {\n  top: 0px;\n}\n\n.top-1\\/2 {\n  top: 50%;\n}\n\n.top-2 {\n  top: 0.5em;\n}\n\n.top-2\\.5 {\n  top: 0.625em;\n}\n\n.top-2\\/5 {\n  top: 40%;\n}\n\n.top-\\[50\\%\\] {\n  top: 50%;\n}\n\n.z-10 {\n  z-index: 10;\n}\n\n.z-1040 {\n  z-index: 1040;\n}\n\n.z-1050 {\n  z-index: 1050;\n}\n\n.z-50 {\n  z-index: 50;\n}\n\n.col-span-3 {\n  grid-column: span 3 / span 3;\n}\n\n.col-span-5 {\n  grid-column: span 5 / span 5;\n}\n\n.-m-\\[max\\(0px\\2c calc\\(calc\\(24px-1em\\)\\/2\\)\\)\\] {\n  margin: calc(max(0px,calc(calc(24px - 1em) / 2)) * -1);\n}\n\n.-m-\\[max\\(0px\\2c calc\\(calc\\(44px-1em\\)\\/2\\)\\)\\] {\n  margin: calc(max(0px,calc(calc(44px - 1em) / 2)) * -1);\n}\n\n.m-2 {\n  margin: 0.5em;\n}\n\n.-my-\\[max\\(0px\\2c calc\\(calc\\(44px-0\\.75em\\)\\/2\\)\\)\\] {\n  margin-top: calc(max(0px,calc(calc(44px - 0.75em) / 2)) * -1);\n  margin-bottom: calc(max(0px,calc(calc(44px - 0.75em) / 2)) * -1);\n}\n\n.mx-4 {\n  margin-left: 1em;\n  margin-right: 1em;\n}\n\n.mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.my-2 {\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.my-4 {\n  margin-top: 1em;\n  margin-bottom: 1em;\n}\n\n.my-6 {\n  margin-top: 1.5em;\n  margin-bottom: 1.5em;\n}\n\n.-mb-4 {\n  margin-bottom: -1em;\n}\n\n.-mr-\\[max\\(0px\\2c calc\\(calc\\(44px-0\\.75em\\)\\/2\\)\\)\\] {\n  margin-right: calc(max(0px,calc(calc(44px - 0.75em) / 2)) * -1);\n}\n\n.-mt-2 {\n  margin-top: -0.5em;\n}\n\n.mb-0 {\n  margin-bottom: 0px;\n}\n\n.mb-2 {\n  margin-bottom: 0.5em;\n}\n\n.mb-3 {\n  margin-bottom: 0.75em;\n}\n\n.mb-4 {\n  margin-bottom: 1em;\n}\n\n.mb-5 {\n  margin-bottom: 1.25em;\n}\n\n.mb-6 {\n  margin-bottom: 1.5em;\n}\n\n.ml-0 {\n  margin-left: 0px;\n}\n\n.ml-0\\.5 {\n  margin-left: 0.125em;\n}\n\n.ml-1 {\n  margin-left: 0.25em;\n}\n\n.ml-2 {\n  margin-left: 0.5em;\n}\n\n.ml-auto {\n  margin-left: auto;\n}\n\n.mr-1 {\n  margin-right: 0.25em;\n}\n\n.mr-2 {\n  margin-right: 0.5em;\n}\n\n.mr-3 {\n  margin-right: 0.75em;\n}\n\n.mr-4 {\n  margin-right: 1em;\n}\n\n.mt-0 {\n  margin-top: 0px;\n}\n\n.mt-10 {\n  margin-top: 2.5em;\n}\n\n.mt-2 {\n  margin-top: 0.5em;\n}\n\n.mt-3 {\n  margin-top: 0.75em;\n}\n\n.mt-4 {\n  margin-top: 1em;\n}\n\n.mt-6 {\n  margin-top: 1.5em;\n}\n\n.box-border {\n  box-sizing: border-box;\n}\n\n.box-content {\n  box-sizing: content-box;\n}\n\n.block {\n  display: block;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.inline {\n  display: inline;\n}\n\n.flex {\n  display: flex;\n}\n\n.inline-flex {\n  display: inline-flex;\n}\n\n.grid {\n  display: grid;\n}\n\n.hidden {\n  display: none;\n}\n\n.aspect-flSmall {\n  aspect-ratio: 115 / 12;\n}\n\n.aspect-flTooltip {\n  aspect-ratio: 126 / 24;\n}\n\n.h-0 {\n  height: 0px;\n}\n\n.h-11 {\n  height: 2.75em;\n}\n\n.h-12 {\n  height: 3em;\n}\n\n.h-14 {\n  height: 3.5em;\n}\n\n.h-16 {\n  height: 4em;\n}\n\n.h-2 {\n  height: 0.5em;\n}\n\n.h-2\\.5 {\n  height: 0.625em;\n}\n\n.h-3 {\n  height: 0.75em;\n}\n\n.h-4 {\n  height: 1em;\n}\n\n.h-4\\.5 {\n  height: 1.125em;\n}\n\n.h-5 {\n  height: 1.25em;\n}\n\n.h-6 {\n  height: 1.5em;\n}\n\n.h-6\\.5 {\n  height: 1.625em;\n}\n\n.h-8 {\n  height: 2em;\n}\n\n.h-9 {\n  height: 2.25em;\n}\n\n.h-\\[1\\.875em\\] {\n  height: 1.875em;\n}\n\n.h-\\[300px\\] {\n  height: 300px;\n}\n\n.h-auto {\n  height: auto;\n}\n\n.h-full {\n  height: 100%;\n}\n\n.h-min {\n  height: -moz-min-content;\n  height: min-content;\n}\n\n.h-screen {\n  height: 100vh;\n}\n\n.max-h-0 {\n  max-height: 0px;\n}\n\n.max-h-80 {\n  max-height: 20em;\n}\n\n.max-h-\\[calc\\(100\\%-40px\\)\\] {\n  max-height: calc(100% - 40px);\n}\n\n.min-h-0 {\n  min-height: 0px;\n}\n\n.min-h-2 {\n  min-height: 0.5em;\n}\n\n.min-h-\\[1em\\] {\n  min-height: 1em;\n}\n\n.min-h-\\[24px\\] {\n  min-height: 24px;\n}\n\n.w-10 {\n  width: 2.5em;\n}\n\n.w-12 {\n  width: 3em;\n}\n\n.w-14 {\n  width: 3.5em;\n}\n\n.w-24 {\n  width: 6em;\n}\n\n.w-3 {\n  width: 0.75em;\n}\n\n.w-3\\.5 {\n  width: 0.875em;\n}\n\n.w-3\\/4 {\n  width: 75%;\n}\n\n.w-32 {\n  width: 8em;\n}\n\n.w-4 {\n  width: 1em;\n}\n\n.w-4\\.5 {\n  width: 1.125em;\n}\n\n.w-5 {\n  width: 1.25em;\n}\n\n.w-50 {\n  width: 12.5em;\n}\n\n.w-6 {\n  width: 1.5em;\n}\n\n.w-6\\.5 {\n  width: 1.625em;\n}\n\n.w-60 {\n  width: 15em;\n}\n\n.w-8 {\n  width: 2em;\n}\n\n.w-9 {\n  width: 2.25em;\n}\n\n.w-96 {\n  width: 24em;\n}\n\n.w-\\[1\\.875em\\] {\n  width: 1.875em;\n}\n\n.w-\\[10\\.5em\\] {\n  width: 10.5em;\n}\n\n.w-\\[1em\\] {\n  width: 1em;\n}\n\n.w-\\[2\\.8125em\\] {\n  width: 2.8125em;\n}\n\n.w-\\[24px\\] {\n  width: 24px;\n}\n\n.w-\\[calc\\(100\\%-1\\.25em\\)\\] {\n  width: calc(100% - 1.25em);\n}\n\n.w-\\[calc\\(100\\%-3\\.625em\\)\\] {\n  width: calc(100% - 3.625em);\n}\n\n.w-auto {\n  width: auto;\n}\n\n.w-full {\n  width: 100%;\n}\n\n.w-screen {\n  width: 100vw;\n}\n\n.min-w-2 {\n  min-width: 0.5em;\n}\n\n.min-w-\\[100px\\] {\n  min-width: 100px;\n}\n\n.min-w-\\[7em\\] {\n  min-width: 7em;\n}\n\n.min-w-el {\n  min-width: 302px;\n}\n\n.max-w-80 {\n  max-width: 20em;\n}\n\n.flex-1 {\n  flex: 1 1 0%;\n}\n\n.flex-auto {\n  flex: 1 1 auto;\n}\n\n.flex-none {\n  flex: none;\n}\n\n.shrink-0 {\n  flex-shrink: 0;\n}\n\n.grow {\n  flex-grow: 1;\n}\n\n.basis-1\\/12 {\n  flex-basis: 8.333333%;\n}\n\n.basis-full {\n  flex-basis: 100%;\n}\n\n.origin-left {\n  transform-origin: left;\n}\n\n.-translate-x-1\\/2 {\n  --tw-translate-x: -50%;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.-translate-y-1\\/2 {\n  --tw-translate-y: -50%;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.-translate-y-full {\n  --tw-translate-y: -100%;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.translate-x-6 {\n  --tw-translate-x: 1.5em;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.translate-y-full {\n  --tw-translate-y: 100%;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.rotate-0 {\n  --tw-rotate: 0deg;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.rotate-180 {\n  --tw-rotate: 180deg;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.transform {\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n@keyframes shimmer {\n  from {\n    background-position: 100% 0;\n  }\n\n  to {\n    background-position: -100% 0;\n  }\n}\n\n.animate-shimmer {\n  animation: shimmer 2s ease-in-out infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.animate-spin {\n  animation: spin 1s linear infinite;\n}\n\n.cursor-not-allowed {\n  cursor: not-allowed;\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.list-none {\n  list-style-type: none;\n}\n\n.appearance-none {\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n}\n\n.grid-cols-8 {\n  grid-template-columns: repeat(8, minmax(0, 1fr));\n}\n\n.grid-rows-\\[0fr\\] {\n  grid-template-rows: 0fr;\n}\n\n.grid-rows-\\[1fr\\] {\n  grid-template-rows: 1fr;\n}\n\n.flex-row {\n  flex-direction: row;\n}\n\n.flex-col {\n  flex-direction: column;\n}\n\n.flex-wrap {\n  flex-wrap: wrap;\n}\n\n.place-content-around {\n  place-content: space-around;\n}\n\n.content-center {\n  align-content: center;\n}\n\n.items-start {\n  align-items: flex-start;\n}\n\n.items-center {\n  align-items: center;\n}\n\n.justify-start {\n  justify-content: flex-start;\n}\n\n.justify-center {\n  justify-content: center;\n}\n\n.justify-between {\n  justify-content: space-between;\n}\n\n.gap-1 {\n  gap: 0.25em;\n}\n\n.gap-12 {\n  gap: 3em;\n}\n\n.gap-2 {\n  gap: 0.5em;\n}\n\n.gap-3 {\n  gap: 0.75em;\n}\n\n.gap-4 {\n  gap: 1em;\n}\n\n.gap-\\[11px\\] {\n  gap: 11px;\n}\n\n.gap-y-2 {\n  row-gap: 0.5em;\n}\n\n.gap-y-2\\.5 {\n  row-gap: 0.625em;\n}\n\n.space-y-2 > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-y-reverse: 0;\n  margin-top: calc(0.5em * calc(1 - var(--tw-space-y-reverse)));\n  margin-bottom: calc(0.5em * var(--tw-space-y-reverse));\n}\n\n.space-y-4 > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-y-reverse: 0;\n  margin-top: calc(1em * calc(1 - var(--tw-space-y-reverse)));\n  margin-bottom: calc(1em * var(--tw-space-y-reverse));\n}\n\n.self-start {\n  align-self: flex-start;\n}\n\n.self-center {\n  align-self: center;\n}\n\n.self-stretch {\n  align-self: stretch;\n}\n\n.overflow-hidden {\n  overflow: hidden;\n}\n\n.overflow-clip {\n  overflow: clip;\n}\n\n.overflow-y-auto {\n  overflow-y: auto;\n}\n\n.truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.text-ellipsis {\n  text-overflow: ellipsis;\n}\n\n.whitespace-normal {\n  white-space: normal;\n}\n\n.whitespace-nowrap {\n  white-space: nowrap;\n}\n\n.whitespace-pre {\n  white-space: pre;\n}\n\n.text-balance {\n  text-wrap: balance;\n}\n\n.text-pretty {\n  text-wrap: pretty;\n}\n\n.\\!rounded {\n  border-radius: 0.25em !important;\n}\n\n.rounded {\n  border-radius: 0.25em;\n}\n\n.rounded-customInputBorderRadius {\n  border-radius: var(--input-border-radius, var(--default-input-border-radius));\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.rounded-md {\n  border-radius: 0.375em;\n}\n\n.rounded-sm {\n  border-radius: 0.125em;\n}\n\n.rounded-xl {\n  border-radius: 0.75em;\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-124150 {\n  border-width: var(--input-border-width, var(--default-input-border-width));\n}\n\n.border-2 {\n  border-width: 2px;\n}\n\n.border-b {\n  border-bottom-width: 1px;\n}\n\n.border-l-2 {\n  border-left-width: 2px;\n}\n\n.border-r-2 {\n  border-right-width: 2px;\n}\n\n.border-t-2 {\n  border-top-width: 2px;\n}\n\n.border-solid {\n  border-style: solid;\n}\n\n.border-axogray-200 {\n  --tw-border-opacity: 1;\n  border-color: rgb(225 225 225 / var(--tw-border-opacity));\n}\n\n.border-axogray-250 {\n  --tw-border-opacity: 1;\n  border-color: rgb(232 232 232 / var(--tw-border-opacity));\n}\n\n.border-axogray-300 {\n  --tw-border-opacity: 1;\n  border-color: rgb(218 221 221 / var(--tw-border-opacity));\n}\n\n.border-axogray-350 {\n  --tw-border-opacity: 1;\n  border-color: rgb(215 215 215 / var(--tw-border-opacity));\n}\n\n.border-axogray-400 {\n  --tw-border-opacity: 1;\n  border-color: rgb(126 126 126 / var(--tw-border-opacity));\n}\n\n.border-customInputBorderColor {\n  border-color: var(--input-border-color, var(--default-input-border-color)) ;\n}\n\n.border-customPrimaryColor {\n  border-color: var(--root-primary-color, var(--default-root-primary-color));\n}\n\n.border-l-blue-500 {\n  --tw-border-opacity: 1;\n  border-left-color: rgb(59 130 246 / var(--tw-border-opacity));\n}\n\n.border-l-neutral-100 {\n  --tw-border-opacity: 1;\n  border-left-color: rgb(245 245 245 / var(--tw-border-opacity));\n}\n\n.border-r-transparent {\n  border-right-color: transparent;\n}\n\n.border-t-blue-500 {\n  --tw-border-opacity: 1;\n  border-top-color: rgb(59 130 246 / var(--tw-border-opacity));\n}\n\n.border-t-white {\n  --tw-border-opacity: 1;\n  border-top-color: rgb(255 255 255 / var(--tw-border-opacity));\n}\n\n.bg-\\[\\#F1F1F1\\] {\n  --tw-bg-opacity: 1;\n  background-color: rgb(241 241 241 / var(--tw-bg-opacity));\n}\n\n.bg-\\[color\\] {\n  background-color: color;\n}\n\n.bg-axoblack {\n  --tw-bg-opacity: 1;\n  background-color: rgb(1 11 13 / var(--tw-bg-opacity));\n}\n\n.bg-axoblue-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(236 243 255 / var(--tw-bg-opacity));\n}\n\n.bg-axoblue-500 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(0 87 255 / var(--tw-bg-opacity));\n}\n\n.bg-axoblue-500\\/5 {\n  background-color: rgb(0 87 255 / 0.05);\n}\n\n.bg-axogray-100 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(247 247 247 / var(--tw-bg-opacity));\n}\n\n.bg-axogray-150 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(245 245 245 / var(--tw-bg-opacity));\n}\n\n.bg-axogray-200 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(225 225 225 / var(--tw-bg-opacity));\n}\n\n.bg-axogray-450 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(167 172 173 / var(--tw-bg-opacity));\n}\n\n.bg-axogray-700 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(242 242 242 / var(--tw-bg-opacity));\n}\n\n.bg-axogreen-100 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(203 243 236 / var(--tw-bg-opacity));\n}\n\n.bg-axopurple-100 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(229 229 245 / var(--tw-bg-opacity));\n}\n\n.bg-axored-200 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(217 54 11 / var(--tw-bg-opacity));\n}\n\n.bg-axowhite {\n  --tw-bg-opacity: 1;\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\n}\n\n.bg-black {\n  --tw-bg-opacity: 1;\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity));\n}\n\n.bg-customBackgroundColor {\n  background-color: var(--root-background-color, var(--default-root-background-color));\n}\n\n.bg-customInputBackgroundColor {\n  background-color: var(--input-background-color, var(--default-input-background-color));\n}\n\n.bg-customPrimaryColor {\n  background-color: var(--root-primary-color, var(--default-root-primary-color));\n}\n\n.bg-orange-100 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(255 237 213 / var(--tw-bg-opacity));\n}\n\n.bg-transparent {\n  background-color: transparent;\n}\n\n.bg-white {\n  --tw-bg-opacity: 1;\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\n}\n\n.bg-gradient-to-r {\n  background-image: linear-gradient(to right, var(--tw-gradient-stops));\n}\n\n.from-axogray-200 {\n  --tw-gradient-from: #E1E1E1 var(--tw-gradient-from-position);\n  --tw-gradient-to: rgb(225 225 225 / 0) var(--tw-gradient-to-position);\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n}\n\n.from-0\\% {\n  --tw-gradient-from-position: 0%;\n}\n\n.via-white {\n  --tw-gradient-to: rgb(255 255 255 / 0)  var(--tw-gradient-to-position);\n  --tw-gradient-stops: var(--tw-gradient-from), #fff var(--tw-gradient-via-position), var(--tw-gradient-to);\n}\n\n.via-50\\% {\n  --tw-gradient-via-position: 50%;\n}\n\n.to-axogray-200 {\n  --tw-gradient-to: #E1E1E1 var(--tw-gradient-to-position);\n}\n\n.to-100\\% {\n  --tw-gradient-to-position: 100%;\n}\n\n.bg-\\[length\\:200\\%\\] {\n  background-size: 200%;\n}\n\n.bg-origin-border {\n  background-origin: border-box;\n}\n\n.fill-axoblack {\n  fill: #010B0D;\n}\n\n.fill-axoblue-500 {\n  fill: #0057FF;\n}\n\n.fill-axogray-400 {\n  fill: #7E7E7E;\n}\n\n.fill-axogray-800 {\n  fill: #515354;\n}\n\n.fill-axogreen-200 {\n  fill: #184634;\n}\n\n.fill-axopurple-200 {\n  fill: #AE9FF3;\n}\n\n.fill-axored-200 {\n  fill: #D9360B;\n}\n\n.fill-axowarning {\n  fill: #e85e00;\n}\n\n.fill-axowhite {\n  fill: #ffffff;\n}\n\n.fill-blue-500 {\n  fill: #3b82f6;\n}\n\n.fill-current {\n  fill: currentColor;\n}\n\n.fill-customPrimaryColor {\n  fill: var(--root-primary-color, var(--default-root-primary-color));\n}\n\n.fill-customTextColorBase {\n  fill: var(--root-text-color-base, var(--default-root-text-color-base));\n}\n\n.fill-inherit {\n  fill: inherit;\n}\n\n.object-contain {\n  -o-object-fit: contain;\n     object-fit: contain;\n}\n\n.p-0 {\n  padding: 0px;\n}\n\n.p-1 {\n  padding: 0.25em;\n}\n\n.p-1\\.5 {\n  padding: 0.375em;\n}\n\n.p-2 {\n  padding: 0.5em;\n}\n\n.p-3 {\n  padding: 0.75em;\n}\n\n.p-4 {\n  padding: 1em;\n}\n\n.p-\\[max\\(0px\\2c calc\\(calc\\(24px-1em\\)\\/2\\)\\)\\] {\n  padding: max(0px,calc(calc(24px - 1em) / 2));\n}\n\n.p-\\[max\\(0px\\2c calc\\(calc\\(44px-0\\.75em\\)\\/2\\)\\)\\] {\n  padding: max(0px,calc(calc(44px - 0.75em) / 2));\n}\n\n.p-\\[max\\(0px\\2c calc\\(calc\\(44px-1em\\)\\/2\\)\\)\\] {\n  padding: max(0px,calc(calc(44px - 1em) / 2));\n}\n\n.p-customPadding {\n  padding: var(--root-padding, var(--default-root-padding));\n}\n\n.px-0 {\n  padding-left: 0px;\n  padding-right: 0px;\n}\n\n.px-1 {\n  padding-left: 0.25em;\n  padding-right: 0.25em;\n}\n\n.px-2 {\n  padding-left: 0.5em;\n  padding-right: 0.5em;\n}\n\n.px-2\\.5 {\n  padding-left: 0.625em;\n  padding-right: 0.625em;\n}\n\n.px-3 {\n  padding-left: 0.75em;\n  padding-right: 0.75em;\n}\n\n.px-4 {\n  padding-left: 1em;\n  padding-right: 1em;\n}\n\n.px-6 {\n  padding-left: 1.5em;\n  padding-right: 1.5em;\n}\n\n.py-0 {\n  padding-top: 0px;\n  padding-bottom: 0px;\n}\n\n.py-1 {\n  padding-top: 0.25em;\n  padding-bottom: 0.25em;\n}\n\n.py-2 {\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n}\n\n.py-4 {\n  padding-top: 1em;\n  padding-bottom: 1em;\n}\n\n.pb-1 {\n  padding-bottom: 0.25em;\n}\n\n.pb-1\\.5 {\n  padding-bottom: 0.375em;\n}\n\n.pb-2 {\n  padding-bottom: 0.5em;\n}\n\n.pb-4 {\n  padding-bottom: 1em;\n}\n\n.pl-1 {\n  padding-left: 0.25em;\n}\n\n.pl-10 {\n  padding-left: 2.5em;\n}\n\n.pl-2 {\n  padding-left: 0.5em;\n}\n\n.pl-6 {\n  padding-left: 1.5em;\n}\n\n.pr-1 {\n  padding-right: 0.25em;\n}\n\n.pr-12 {\n  padding-right: 3em;\n}\n\n.pr-2 {\n  padding-right: 0.5em;\n}\n\n.pr-9 {\n  padding-right: 2.25em;\n}\n\n.pr-\\[2px\\] {\n  padding-right: 2px;\n}\n\n.pr-\\[4\\.5em\\] {\n  padding-right: 4.5em;\n}\n\n.pt-0 {\n  padding-top: 0px;\n}\n\n.pt-1 {\n  padding-top: 0.25em;\n}\n\n.pt-2 {\n  padding-top: 0.5em;\n}\n\n.pt-3 {\n  padding-top: 0.75em;\n}\n\n.pt-4 {\n  padding-top: 1em;\n}\n\n.pt-4\\.5 {\n  padding-top: 1.125em;\n}\n\n.pt-5 {\n  padding-top: 1.25em;\n}\n\n.pt-px {\n  padding-top: 1px;\n}\n\n.text-left {\n  text-align: left;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-right {\n  text-align: right;\n}\n\n.align-top {\n  vertical-align: top;\n}\n\n.align-middle {\n  vertical-align: middle;\n}\n\n.font-customFontFamily {\n  font-family: var(--root-font-family, var(--default-root-font-family));\n}\n\n.text-2xl {\n  font-size: 1.5em;\n  line-height: 2em;\n}\n\n.text-base {\n  font-size: 1em;\n  line-height: 1.5em;\n}\n\n.text-customFontSize {\n  font-size: var(--root-font-size-base, var(--default-root-font-size-base));\n}\n\n.text-lg {\n  font-size: 1.125em;\n  line-height: 1.75em;\n}\n\n.text-oldCaptionFontSize {\n  font-size: var(--text-caption-font-size, 0.875em);\n}\n\n.text-sm {\n  font-size: 0.875em;\n  line-height: 1.25em;\n}\n\n.text-xl {\n  font-size: 1.25em;\n  line-height: 1.75em;\n}\n\n.text-xs {\n  font-size: 0.75em;\n  line-height: 1em;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.font-medium {\n  font-weight: 500;\n}\n\n.capitalize {\n  text-transform: capitalize;\n}\n\n.ordinal {\n  --tw-ordinal: ordinal;\n  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);\n}\n\n.leading-5 {\n  line-height: 1.25em;\n}\n\n.leading-7 {\n  line-height: 1.75em;\n}\n\n.leading-7\\.5 {\n  line-height: 1.875em;\n}\n\n.leading-\\[1\\.25rem\\] {\n  line-height: 1.25rem;\n}\n\n.leading-none {\n  line-height: 1;\n}\n\n.leading-normal {\n  line-height: 1.5;\n}\n\n.text-\\[color\\] {\n  color: color;\n}\n\n.text-axoblack {\n  --tw-text-opacity: 1;\n  color: rgb(1 11 13 / var(--tw-text-opacity));\n}\n\n.text-axoblue-500 {\n  --tw-text-opacity: 1;\n  color: rgb(0 87 255 / var(--tw-text-opacity));\n}\n\n.text-axogray-500 {\n  --tw-text-opacity: 1;\n  color: rgb(87 96 98 / var(--tw-text-opacity));\n}\n\n.text-axogreen-200 {\n  --tw-text-opacity: 1;\n  color: rgb(24 70 52 / var(--tw-text-opacity));\n}\n\n.text-axowhite {\n  --tw-text-opacity: 1;\n  color: rgb(255 255 255 / var(--tw-text-opacity));\n}\n\n.text-customInputTextColorBase {\n  color: var(--input-text-color-base, var(--default-input-text-color-base));\n}\n\n.text-customPrimaryColor {\n  color: var(--root-primary-color, var(--default-root-primary-color));\n}\n\n.text-customTextColorBase {\n  color: var(--root-text-color-base, var(--default-root-text-color-base));\n}\n\n.text-fixedPrivacyLinkColor {\n  color: var(--default-fixed-privacy-link-color);\n}\n\n.text-inherit {\n  color: inherit;\n}\n\n.text-oldCaptionColor {\n  color: var(--text-caption-color, #515151);\n}\n\n.underline {\n  text-decoration-line: underline;\n}\n\n.line-through {\n  text-decoration-line: line-through;\n}\n\n.opacity-0 {\n  opacity: 0;\n}\n\n.opacity-100 {\n  opacity: 1;\n}\n\n.opacity-40 {\n  opacity: 0.4;\n}\n\n.opacity-70 {\n  opacity: 0.7;\n}\n\n.opacity-80 {\n  opacity: 0.8;\n}\n\n.shadow {\n  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n.shadow-\\[0_0_0_1px\\] {\n  --tw-shadow: 0 0 0 1px;\n  --tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n.shadow-axo-sm {\n  --tw-shadow: 0 1px 12px 0 rgba(0, 0, 0, 0.08), 0 0 2px 0 rgba(0, 0, 0, 0.04);\n  --tw-shadow-colored: 0 1px 12px 0 var(--tw-shadow-color), 0 0 2px 0 var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n.shadow-axogray-400 {\n  --tw-shadow-color: #7E7E7E;\n  --tw-shadow: var(--tw-shadow-colored);\n}\n\n.shadow-customPrimaryColor {\n  --tw-shadow-color: var(--root-primary-color, var(--default-root-primary-color));\n  --tw-shadow: var(--tw-shadow-colored);\n}\n\n.outline-none {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n\n.outline {\n  outline-style: solid;\n}\n\n.blur {\n  --tw-blur: blur(8px);\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\n}\n\n.filter {\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\n}\n\n.transition {\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n\n.transition-\\[grid-template-rows\\] {\n  transition-property: grid-template-rows;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n\n.transition-\\[transform\\2c height\\] {\n  transition-property: transform,height;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n\n.transition-all {\n  transition-property: all;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n\n.transition-opacity {\n  transition-property: opacity;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n\n.transition-transform {\n  transition-property: transform;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n\n.duration-0 {\n  transition-duration: 0s;\n}\n\n.duration-100 {\n  transition-duration: 100ms;\n}\n\n.duration-150 {\n  transition-duration: 150ms;\n}\n\n.duration-300 {\n  transition-duration: 300ms;\n}\n\n.duration-500 {\n  transition-duration: 500ms;\n}\n\n.ease-in {\n  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);\n}\n\n.\\[transition\\:height_0ms_150ms\\2c opacity_150ms_cubic-bezier\\(0\\.4\\2c 0\\2c 0\\.2\\2c 1\\)\\] {\n  transition: height 0ms 150ms,opacity 150ms cubic-bezier(0.4,0,0.2,1);\n}\n\n.\\[transition\\:max-height_0ms_150ms\\2c transform_150ms_cubic-bezier\\(0\\.4\\2c 0\\2c 0\\.2\\2c 1\\)\\] {\n  transition: max-height 0ms 150ms,transform 150ms cubic-bezier(0.4,0,0.2,1);\n}\n\n/**\n * Tailwind sets these properties in base as part of their opinionated preflight styles.\n * Normally this would be fine, but because all of our components are using the shadow DOM,\n * we need to unset these properties on :host in order to allow them to be inherited properly.\n **/\n\ninput {\n  outline-color: var(--input-focus-border-color, var(--default-input-focus-border-color));\n}\n\n.story-container {\n  margin: auto;\n  display: flex;\n  max-width: 28rem;\n  flex-direction: column;\n}\n\n.no-scrollbar {\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none;\n  /* IE and Edge */\n  scrollbar-width: none;\n  /* Firefox */\n}\n\n.axo-default-styles {\n  --root-primary-color: var(--default-root-primary-color);\n  --root-background-color: var(--default-root-background-color);\n  --root-error-color: var(--default-root-error-color);\n  --root-error-outer-color: var(--default-root-error-outer-color);\n  --root-text-color-base: var(--default-root-text-color-base);\n  --root-font-family: var(--default-root-font-family);\n  --root-font-size-base: var(--default-root-font-size-base);\n  --root-padding: var(--default-root-padding);\n  --input-background-color: var(--default-input-background-color);\n  --input-border-color: var(--default-input-border-color);\n  --input-focus-border-color: var(--default-input-focus-border-color);\n  --input-text-color-base: var(--default-input-text-color-base);\n  --input-border-radius: var(--default-input-border-radius);\n  --input-border-width: var(--default-input-border-width);\n  /* Explicitly set inheritable styles */\n  color: var(--default-root-text-color-base);\n  font-family: var(--default-root-font-family);\n  font-size: var(--default-root-font-size-base);\n  line-height: 1.5;\n  /* Tailwind default */\n}\n\n@font-face {\n  font-family: PayPal-Open;\n\n  font-style: normal;\n\n  font-weight: 400;\n\n  src: url('https://www.paypalobjects.com/digitalassets/c/system-triggered-email/n/layout/fonts/PayPalOpen/PayPalOpen-Regular.otf') format('opentype');\n\n  /* IE9 Compat Modes */\n\n  src: url('https://www.paypalobjects.com/digitalassets/c/system-triggered-email/n/layout/fonts/PayPalOpen/PayPalOpen-Regular.woff2') format('woff2'),\n    /*Moderner Browsers*/ url('https://www.paypalobjects.com/digitalassets/c/system-triggered-email/n/layout/fonts/PayPalOpen/PayPalOpen-Regular.woff') format('woff');\n\n  /* Modern Browsers */\n\n  /* Fallback font for - MS Outlook older versions (2007,13, 16)*/\n\n  mso-font-alt: 'Calibri';\n}\n\n/* Headline/Subheadline/Button text font-weight:500 */\n\n@font-face {\n  font-family: PayPal-Open;\n\n  font-style: normal;\n\n  font-weight: 500;\n\n  src: url('https://www.paypalobjects.com/digitalassets/c/system-triggered-email/n/layout/fonts/PayPalOpen/PayPalOpen-Medium.otf') format('opentype');\n\n  /* IE9 Compat Modes */\n\n  src: url('https://www.paypalobjects.com/digitalassets/c/system-triggered-email/n/layout/fonts/PayPalOpen/PayPalOpen-Medium.woff2') format('woff2'),\n    /*Moderner Browsers*/ url('https://www.paypalobjects.com/digitalassets/c/system-triggered-email/n/layout/fonts/PayPalOpen/PayPalOpen-Medium.woff') format('woff');\n\n  /* Modern Browsers */\n\n  /* Fallback font for - MS Outlook older versions (2007,13, 16)*/\n\n  mso-font-alt: 'Calibri';\n}\n\n/* Bold text - <b>, <strong> Bold equals to font-weight:700 */\n\n@font-face {\n  font-family: PayPal-Open;\n\n  font-style: normal;\n\n  font-weight: 700;\n\n  src: url('https://www.paypalobjects.com/digitalassets/c/system-triggered-email/n/layout/fonts/PayPalOpen/PayPalOpen-Bold.otf') format('opentype');\n\n  /* IE9 Compat Modes */\n\n  src: url('https://www.paypalobjects.com/digitalassets/c/system-triggered-email/n/layout/fonts/PayPalOpen/PayPalOpen-Bold.woff2') format('woff2'),\n    /*Moderner Browsers*/ url('https://www.paypalobjects.com/digitalassets/c/system-triggered-email/n/layout/fonts/PayPalOpen/PayPalOpen-Bold.woff') format('woff');\n\n  /* Modern Browsers */\n\n  /* Fallback font for - MS Outlook older versions (2007,13, 16)*/\n\n  mso-font-alt: 'Calibri';\n}\n\n.before\\:pointer-events-none::before {\n  content: var(--tw-content);\n  pointer-events: none;\n}\n\n.before\\:absolute::before {\n  content: var(--tw-content);\n  position: absolute;\n}\n\n.before\\:-inset-0::before {\n  content: var(--tw-content);\n  inset: -0px;\n}\n\n.before\\:-inset-0\\.5::before {\n  content: var(--tw-content);\n  inset: -0.125em;\n}\n\n.before\\:inline-block::before {\n  content: var(--tw-content);\n  display: inline-block;\n}\n\n.before\\:w-4::before {\n  content: var(--tw-content);\n  width: 1em;\n}\n\n.before\\:rounded-customInputBorderRadius::before {\n  content: var(--tw-content);\n  border-radius: var(--input-border-radius, var(--default-input-border-radius));\n}\n\n.before\\:border-\\[calc\\(theme\\(borderWidth\\.124150\\)\\+1px\\)\\]::before {\n  content: var(--tw-content);\n  border-width: calc(var(--input-border-width, var(--default-input-border-width)) + 1px);\n}\n\n.before\\:border-customErrorColor::before {\n  content: var(--tw-content);\n  border-color: var(--root-error-color, var(--default-root-error-color));\n}\n\n.before\\:text-axopurple-200::before {\n  content: var(--tw-content);\n  --tw-text-opacity: 1;\n  color: rgb(174 159 243 / var(--tw-text-opacity));\n}\n\n.before\\:content-\\[\\'\\\\2022\\'\\]::before {\n  --tw-content: '\\2022';\n  content: var(--tw-content);\n}\n\n.focus-within\\:before\\:absolute:focus-within::before {\n  content: var(--tw-content);\n  position: absolute;\n}\n\n.focus-within\\:before\\:-inset-0:focus-within::before {\n  content: var(--tw-content);\n  inset: -0px;\n}\n\n.focus-within\\:before\\:-inset-0\\.5:focus-within::before {\n  content: var(--tw-content);\n  inset: -0.125em;\n}\n\n.focus-within\\:before\\:rounded-customInputBorderRadius:focus-within::before {\n  content: var(--tw-content);\n  border-radius: var(--input-border-radius, var(--default-input-border-radius));\n}\n\n.focus-within\\:before\\:border-\\[calc\\(theme\\(borderWidth\\.124150\\)\\+1px\\)\\]:focus-within::before {\n  content: var(--tw-content);\n  border-width: calc(var(--input-border-width, var(--default-input-border-width)) + 1px);\n}\n\n.focus-within\\:before\\:border-customErrorColor:focus-within::before {\n  content: var(--tw-content);\n  border-color: var(--root-error-color, var(--default-root-error-color));\n}\n\n.focus-within\\:before\\:border-customInputFocusBorderColor:focus-within::before {\n  content: var(--tw-content);\n  border-color: var(--input-focus-border-color, var(--default-input-focus-border-color));\n}\n\n.focus-within\\:before\\:shadow-error:focus-within::before {\n  content: var(--tw-content);\n  --tw-shadow: 0px 0px 0px calc(var(--input-border-width, var(--default-input-border-width)) + 1px) var(--input-error-outer-color, rgba(217, 54, 11, 0.15));\n  --tw-shadow-colored: 0px 0px 0px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n.focus-within\\:before\\:shadow-focus:focus-within::before {\n  content: var(--tw-content);\n  --tw-shadow: 0px 0px 0px calc(var(--input-border-width, var(--default-input-border-width)) + 1px) var(--input-focus-outer-color, rgba(0, 87, 255, 0.15));\n  --tw-shadow-colored: 0px 0px 0px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n.hover\\:bg-\\[\\#234BEB\\]:hover {\n  --tw-bg-opacity: 1;\n  background-color: rgb(35 75 235 / var(--tw-bg-opacity));\n}\n\n.hover\\:bg-\\[\\#DEE3F9\\]:hover {\n  --tw-bg-opacity: 1;\n  background-color: rgb(222 227 249 / var(--tw-bg-opacity));\n}\n\n.hover\\:underline:hover {\n  text-decoration-line: underline;\n}\n\n.focus\\:border-2:focus {\n  border-width: 2px;\n}\n\n.focus\\:border-axowhite:focus {\n  --tw-border-opacity: 1;\n  border-color: rgb(255 255 255 / var(--tw-border-opacity));\n}\n\n.focus\\:bg-slate-200:focus {\n  --tw-bg-opacity: 1;\n  background-color: rgb(226 232 240 / var(--tw-bg-opacity));\n}\n\n.focus\\:outline-none:focus {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n\n.focus\\:outline:focus {\n  outline-style: solid;\n}\n\n.focus\\:outline-2:focus {\n  outline-width: 2px;\n}\n\n.focus\\:outline-\\[\\#0A7FF5\\]:focus {\n  outline-color: #0A7FF5;\n}\n\n.focus\\:outline-\\[\\#5879FB\\]:focus {\n  outline-color: #5879FB;\n}\n\n.focus-visible\\:outline:focus-visible {\n  outline-style: solid;\n}\n\n.focus-visible\\:outline-2:focus-visible {\n  outline-width: 2px;\n}\n\n.focus-visible\\:outline-offset-2:focus-visible {\n  outline-offset: 2px;\n}\n\n.focus-visible\\:outline-customPrimaryColor:focus-visible {\n  outline-color: var(--root-primary-color, var(--default-root-primary-color));\n}\n\n.active\\:bg-\\[\\#04196E\\]:active {\n  --tw-bg-opacity: 1;\n  background-color: rgb(4 25 110 / var(--tw-bg-opacity));\n}\n\n.active\\:bg-\\[\\#C5CCEA\\]:active {\n  --tw-bg-opacity: 1;\n  background-color: rgb(197 204 234 / var(--tw-bg-opacity));\n}\n\n.group.transform-label .group-\\[\\.transform-label\\]\\:top-1\\/3 {\n  top: 33.333333%;\n}\n\n.group.transform-label .group-\\[\\.transform-label\\]\\:text-sm {\n  font-size: 0.875em;\n  line-height: 1.25em;\n}\n\n.peer:checked ~ .peer-checked\\:border-customPrimaryColor {\n  border-color: var(--root-primary-color, var(--default-root-primary-color));\n}\n\n.peer:checked ~ .peer-checked\\:bg-customPrimaryColor {\n  background-color: var(--root-primary-color, var(--default-root-primary-color));\n}\n\n.peer:focus ~ .peer-focus\\:top-2\\/5 {\n  top: 40%;\n}\n\n.peer:focus ~ .peer-focus\\:-translate-y-full {\n  --tw-translate-y: -100%;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n\n.peer:focus ~ .peer-focus\\:whitespace-nowrap {\n  white-space: nowrap;\n}\n\n.peer:focus ~ .peer-focus\\:text-sm {\n  font-size: 0.875em;\n  line-height: 1.25em;\n}\n\n.peer:disabled ~ .peer-disabled\\:text-axogray-400 {\n  --tw-text-opacity: 1;\n  color: rgb(126 126 126 / var(--tw-text-opacity));\n}\n\n@media not all and (min-width: 768px) {\n  .max-md\\:bottom-0 {\n    bottom: 0px;\n  }\n\n  .max-md\\:left-0 {\n    left: 0px;\n  }\n\n  .max-md\\:w-full {\n    width: 100%;\n  }\n\n  .max-md\\:w-screen {\n    width: 100vw;\n  }\n\n  .max-md\\:rounded-t-2xl {\n    border-top-left-radius: 1em;\n    border-top-right-radius: 1em;\n  }\n}\n\n@media not all and (min-width: 375px) {\n  .max-xs\\:w-10 {\n    width: 2.5em;\n  }\n}\n\n@media (min-width: 768px) {\n  .md\\:bottom-0 {\n    bottom: 0px;\n  }\n\n  .md\\:left-1\\/2 {\n    left: 50%;\n  }\n\n  .md\\:top-10 {\n    top: 2.5em;\n  }\n\n  .md\\:h-fit {\n    height: -moz-fit-content;\n    height: fit-content;\n  }\n\n  .md\\:w-\\[478px\\] {\n    width: 478px;\n  }\n\n  .md\\:max-w-\\[478px\\] {\n    max-width: 478px;\n  }\n\n  .md\\:-translate-x-1\\/2 {\n    --tw-translate-x: -50%;\n    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n  }\n\n  .md\\:rounded-2xl {\n    border-radius: 1em;\n  }\n\n  .md\\:px-6 {\n    padding-left: 1.5em;\n    padding-right: 1.5em;\n  }\n\n  .md\\:pb-4 {\n    padding-bottom: 1em;\n  }\n\n  .md\\:pb-6 {\n    padding-bottom: 1.5em;\n  }\n\n  .md\\:pt-5 {\n    padding-top: 1.25em;\n  }\n}\n\n.\\[\\&\\>\\*\\:first-child\\]\\:min-h-\\[30px\\]>*:first-child {\n  min-height: 30px;\n}\n\n.\\[\\&_input\\]\\:h-9 input {\n  height: 2.25em;\n}\n\n.\\[\\&_input\\]\\:px-0 input {\n  padding-left: 0px;\n  padding-right: 0px;\n}\n\n.\\[\\&_input\\]\\:py-3 input {\n  padding-top: 0.75em;\n  padding-bottom: 0.75em;\n}\n\n.\\[\\&_input\\]\\:text-center input {\n  text-align: center;\n}\n\n.\\[\\&_input\\]\\:text-\\[1\\.75em\\] input {\n  font-size: 1.75em;\n}\n\n.\\[\\&_svg_circle\\]\\:fill-axoblack svg circle {\n  fill: #010B0D;\n}\n\n.\\[\\&_svg_circle\\]\\:fill-axowhite svg circle {\n  fill: #ffffff;\n}\n\n.\\[\\&_svg_path\\]\\:fill-customInputTextColorBase svg path {\n  fill: var(--input-text-color-base, var(--default-input-text-color-base));\n}\n\n.\\[\\&_svg_rect\\]\\:fill-axoblack svg rect {\n  fill: #010B0D;\n}\n\n.\\[\\&_svg_rect\\]\\:fill-axowhite svg rect {\n  fill: #ffffff;\n}\n ${Pk = DN,
    Object.keys(Pk).map((e => `:host([data-theme='${e}']) { ${Tk(Object.assign({}, Pk[e]))} }`)).join(" ")}`);
    const Lk = new CSSStyleSheet;
    Lk.replaceSync(":host {font-size: 16px}");
    const Dk = (e, t, n) => {
        const r = getComputedStyle(t)["border-color"];
        if (r.indexOf("rgb") > -1) {
            const t = "0.15"
              , o = r.replace(/[^\d,.]/g, "").split(",").slice(0, 3);
            e.style.setProperty(`--input-${n}-outer-color`, `rgba(${o.join(",")},${t})`)
        }
    }
    ;
    function Mk(e) {
        var t, n, r = "";
        if ("string" == typeof e || "number" == typeof e)
            r += e;
        else if ("object" == typeof e)
            if (Array.isArray(e)) {
                var o = e.length;
                for (t = 0; t < o; t++)
                    e[t] && (n = Mk(e[t])) && (r && (r += " "),
                    r += n)
            } else
                for (n in e)
                    e[n] && (r && (r += " "),
                    r += n);
        return r
    }
    function Fk() {
        for (var e, t, n = 0, r = "", o = arguments.length; n < o; n++)
            (e = arguments[n]) && (t = Mk(e)) && (r && (r += " "),
            r += t);
        return r
    }
    var Bk = {};
    !function(e) {
        Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        });
        const t = "-";
        function n(e) {
            const n = function(e) {
                const {theme: t, prefix: n} = e
                  , r = {
                    nextPart: new Map,
                    validators: []
                }
                  , o = function(e, t) {
                    if (!t)
                        return e;
                    return e.map(( ([e,n]) => [e, n.map((e => "string" == typeof e ? t + e : "object" == typeof e ? Object.fromEntries(Object.entries(e).map(( ([e,n]) => [t + e, n]))) : e))]))
                }(Object.entries(e.classGroups), n);
                return o.forEach(( ([e,n]) => {
                    i(n, r, e, t)
                }
                )),
                r
            }(e)
              , {conflictingClassGroups: a, conflictingClassGroupModifiers: s} = e;
            return {
                getClassGroupId: function(e) {
                    const i = e.split(t);
                    return "" === i[0] && 1 !== i.length && i.shift(),
                    r(i, n) || function(e) {
                        if (o.test(e)) {
                            const t = o.exec(e)[1]
                              , n = t?.substring(0, t.indexOf(":"));
                            if (n)
                                return "arbitrary.." + n
                        }
                    }(e)
                },
                getConflictingClassGroupIds: function(e, t) {
                    const n = a[e] || [];
                    return t && s[e] ? [...n, ...s[e]] : n
                }
            }
        }
        function r(e, n) {
            if (0 === e.length)
                return n.classGroupId;
            const o = e[0]
              , i = n.nextPart.get(o)
              , a = i ? r(e.slice(1), i) : void 0;
            if (a)
                return a;
            if (0 === n.validators.length)
                return;
            const s = e.join(t);
            return n.validators.find(( ({validator: e}) => e(s)))?.classGroupId
        }
        const o = /^\[(.+)\]$/;
        function i(e, t, n, r) {
            e.forEach((e => {
                if ("string" != typeof e) {
                    if ("function" == typeof e)
                        return e.isThemeGetter ? void i(e(r), t, n, r) : void t.validators.push({
                            validator: e,
                            classGroupId: n
                        });
                    Object.entries(e).forEach(( ([e,o]) => {
                        i(o, a(t, e), n, r)
                    }
                    ))
                } else {
                    ("" === e ? t : a(t, e)).classGroupId = n
                }
            }
            ))
        }
        function a(e, n) {
            let r = e;
            return n.split(t).forEach((e => {
                r.nextPart.has(e) || r.nextPart.set(e, {
                    nextPart: new Map,
                    validators: []
                }),
                r = r.nextPart.get(e)
            }
            )),
            r
        }
        function s(e) {
            if (e < 1)
                return {
                    get: () => {}
                    ,
                    set: () => {}
                };
            let t = 0
              , n = new Map
              , r = new Map;
            function o(o, i) {
                n.set(o, i),
                t++,
                t > e && (t = 0,
                r = n,
                n = new Map)
            }
            return {
                get(e) {
                    let t = n.get(e);
                    return void 0 !== t ? t : void 0 !== (t = r.get(e)) ? (o(e, t),
                    t) : void 0
                },
                set(e, t) {
                    n.has(e) ? n.set(e, t) : o(e, t)
                }
            }
        }
        const l = "!";
        function c(e) {
            const t = e.separator
              , n = 1 === t.length
              , r = t[0]
              , o = t.length;
            return function(e) {
                const i = [];
                let a, s = 0, c = 0;
                for (let l = 0; l < e.length; l++) {
                    let d = e[l];
                    if (0 === s) {
                        if (d === r && (n || e.slice(l, l + o) === t)) {
                            i.push(e.slice(c, l)),
                            c = l + o;
                            continue
                        }
                        if ("/" === d) {
                            a = l;
                            continue
                        }
                    }
                    "[" === d ? s++ : "]" === d && s--
                }
                const d = 0 === i.length ? e : e.substring(c)
                  , u = d.startsWith(l);
                return {
                    modifiers: i,
                    hasImportantModifier: u,
                    baseClassName: u ? d.substring(1) : d,
                    maybePostfixModifierPosition: a && a > c ? a - c : void 0
                }
            }
        }
        const d = /\s+/;
        function u() {
            let e, t, n = 0, r = "";
            for (; n < arguments.length; )
                (e = arguments[n++]) && (t = p(e)) && (r && (r += " "),
                r += t);
            return r
        }
        function p(e) {
            if ("string" == typeof e)
                return e;
            let t, n = "";
            for (let r = 0; r < e.length; r++)
                e[r] && (t = p(e[r])) && (n && (n += " "),
                n += t);
            return n
        }
        function h(e, ...t) {
            let r, o, i, a = function(l) {
                const d = t.reduce(( (e, t) => t(e)), e());
                return r = function(e) {
                    return {
                        cache: s(e.cacheSize),
                        splitModifiers: c(e),
                        ...n(e)
                    }
                }(d),
                o = r.cache.get,
                i = r.cache.set,
                a = p,
                p(l)
            };
            function p(e) {
                const t = o(e);
                if (t)
                    return t;
                const n = function(e, t) {
                    const {splitModifiers: n, getClassGroupId: r, getConflictingClassGroupIds: o} = t
                      , i = new Set;
                    return e.trim().split(d).map((e => {
                        const {modifiers: t, hasImportantModifier: o, baseClassName: i, maybePostfixModifierPosition: a} = n(e);
                        let s = r(a ? i.substring(0, a) : i)
                          , c = Boolean(a);
                        if (!s) {
                            if (!a)
                                return {
                                    isTailwindClass: !1,
                                    originalClassName: e
                                };
                            if (s = r(i),
                            !s)
                                return {
                                    isTailwindClass: !1,
                                    originalClassName: e
                                };
                            c = !1
                        }
                        const d = function(e) {
                            if (e.length <= 1)
                                return e;
                            const t = [];
                            let n = [];
                            return e.forEach((e => {
                                "[" === e[0] ? (t.push(...n.sort(), e),
                                n = []) : n.push(e)
                            }
                            )),
                            t.push(...n.sort()),
                            t
                        }(t).join(":");
                        return {
                            isTailwindClass: !0,
                            modifierId: o ? d + l : d,
                            classGroupId: s,
                            originalClassName: e,
                            hasPostfixModifier: c
                        }
                    }
                    )).reverse().filter((e => {
                        if (!e.isTailwindClass)
                            return !0;
                        const {modifierId: t, classGroupId: n, hasPostfixModifier: r} = e
                          , a = t + n;
                        return !i.has(a) && (i.add(a),
                        o(n, r).forEach((e => i.add(t + e))),
                        !0)
                    }
                    )).reverse().map((e => e.originalClassName)).join(" ")
                }(e, r);
                return i(e, n),
                n
            }
            return function() {
                return a(u.apply(null, arguments))
            }
        }
        function f(e) {
            const t = t => t[e] || [];
            return t.isThemeGetter = !0,
            t
        }
        const m = /^\[(?:([a-z-]+):)?(.+)\]$/i
          , g = /^\d+\/\d+$/
          , y = new Set(["px", "full", "screen"])
          , v = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/
          , b = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/
          , E = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/
          , _ = /^-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/
          , A = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;
        function w(e) {
            return C(e) || y.has(e) || g.test(e)
        }
        function S(e) {
            return B(e, "length", j)
        }
        function C(e) {
            return Boolean(e) && !Number.isNaN(Number(e))
        }
        function O(e) {
            return B(e, "number", C)
        }
        function x(e) {
            return Boolean(e) && Number.isInteger(Number(e))
        }
        function T(e) {
            return e.endsWith("%") && C(e.slice(0, -1))
        }
        function N(e) {
            return m.test(e)
        }
        function k(e) {
            return v.test(e)
        }
        const I = new Set(["length", "size", "percentage"]);
        function R(e) {
            return B(e, I, U)
        }
        function P(e) {
            return B(e, "position", U)
        }
        const L = new Set(["image", "url"]);
        function D(e) {
            return B(e, L, $)
        }
        function M(e) {
            return B(e, "", G)
        }
        function F() {
            return !0
        }
        function B(e, t, n) {
            const r = m.exec(e);
            return !!r && (r[1] ? "string" == typeof t ? r[1] === t : t.has(r[1]) : n(r[2]))
        }
        function j(e) {
            return b.test(e) && !E.test(e)
        }
        function U() {
            return !1
        }
        function G(e) {
            return _.test(e)
        }
        function $(e) {
            return A.test(e)
        }
        const V = Object.defineProperty({
            __proto__: null,
            isAny: F,
            isArbitraryImage: D,
            isArbitraryLength: S,
            isArbitraryNumber: O,
            isArbitraryPosition: P,
            isArbitraryShadow: M,
            isArbitrarySize: R,
            isArbitraryValue: N,
            isInteger: x,
            isLength: w,
            isNumber: C,
            isPercent: T,
            isTshirtSize: k
        }, Symbol.toStringTag, {
            value: "Module"
        });
        function H() {
            const e = f("colors")
              , t = f("spacing")
              , n = f("blur")
              , r = f("brightness")
              , o = f("borderColor")
              , i = f("borderRadius")
              , a = f("borderSpacing")
              , s = f("borderWidth")
              , l = f("contrast")
              , c = f("grayscale")
              , d = f("hueRotate")
              , u = f("invert")
              , p = f("gap")
              , h = f("gradientColorStops")
              , m = f("gradientColorStopPositions")
              , g = f("inset")
              , y = f("margin")
              , v = f("opacity")
              , b = f("padding")
              , E = f("saturate")
              , _ = f("scale")
              , A = f("sepia")
              , I = f("skew")
              , L = f("space")
              , B = f("translate")
              , j = () => ["auto", N, t]
              , U = () => [N, t]
              , G = () => ["", w, S]
              , $ = () => ["auto", C, N]
              , V = () => ["", "0", N]
              , H = () => [C, O]
              , K = () => [C, N];
            return {
                cacheSize: 500,
                separator: ":",
                theme: {
                    colors: [F],
                    spacing: [w, S],
                    blur: ["none", "", k, N],
                    brightness: H(),
                    borderColor: [e],
                    borderRadius: ["none", "", "full", k, N],
                    borderSpacing: U(),
                    borderWidth: G(),
                    contrast: H(),
                    grayscale: V(),
                    hueRotate: K(),
                    invert: V(),
                    gap: U(),
                    gradientColorStops: [e],
                    gradientColorStopPositions: [T, S],
                    inset: j(),
                    margin: j(),
                    opacity: H(),
                    padding: U(),
                    saturate: H(),
                    scale: H(),
                    sepia: V(),
                    skew: K(),
                    space: U(),
                    translate: U()
                },
                classGroups: {
                    aspect: [{
                        aspect: ["auto", "square", "video", N]
                    }],
                    container: ["container"],
                    columns: [{
                        columns: [k]
                    }],
                    "break-after": [{
                        "break-after": ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]
                    }],
                    "break-before": [{
                        "break-before": ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]
                    }],
                    "break-inside": [{
                        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
                    }],
                    "box-decoration": [{
                        "box-decoration": ["slice", "clone"]
                    }],
                    box: [{
                        box: ["border", "content"]
                    }],
                    display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
                    float: [{
                        float: ["right", "left", "none", "start", "end"]
                    }],
                    clear: [{
                        clear: ["left", "right", "both", "none", "start", "end"]
                    }],
                    isolation: ["isolate", "isolation-auto"],
                    "object-fit": [{
                        object: ["contain", "cover", "fill", "none", "scale-down"]
                    }],
                    "object-position": [{
                        object: ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top", N]
                    }],
                    overflow: [{
                        overflow: ["auto", "hidden", "clip", "visible", "scroll"]
                    }],
                    "overflow-x": [{
                        "overflow-x": ["auto", "hidden", "clip", "visible", "scroll"]
                    }],
                    "overflow-y": [{
                        "overflow-y": ["auto", "hidden", "clip", "visible", "scroll"]
                    }],
                    overscroll: [{
                        overscroll: ["auto", "contain", "none"]
                    }],
                    "overscroll-x": [{
                        "overscroll-x": ["auto", "contain", "none"]
                    }],
                    "overscroll-y": [{
                        "overscroll-y": ["auto", "contain", "none"]
                    }],
                    position: ["static", "fixed", "absolute", "relative", "sticky"],
                    inset: [{
                        inset: [g]
                    }],
                    "inset-x": [{
                        "inset-x": [g]
                    }],
                    "inset-y": [{
                        "inset-y": [g]
                    }],
                    start: [{
                        start: [g]
                    }],
                    end: [{
                        end: [g]
                    }],
                    top: [{
                        top: [g]
                    }],
                    right: [{
                        right: [g]
                    }],
                    bottom: [{
                        bottom: [g]
                    }],
                    left: [{
                        left: [g]
                    }],
                    visibility: ["visible", "invisible", "collapse"],
                    z: [{
                        z: ["auto", x, N]
                    }],
                    basis: [{
                        basis: j()
                    }],
                    "flex-direction": [{
                        flex: ["row", "row-reverse", "col", "col-reverse"]
                    }],
                    "flex-wrap": [{
                        flex: ["wrap", "wrap-reverse", "nowrap"]
                    }],
                    flex: [{
                        flex: ["1", "auto", "initial", "none", N]
                    }],
                    grow: [{
                        grow: V()
                    }],
                    shrink: [{
                        shrink: V()
                    }],
                    order: [{
                        order: ["first", "last", "none", x, N]
                    }],
                    "grid-cols": [{
                        "grid-cols": [F]
                    }],
                    "col-start-end": [{
                        col: ["auto", {
                            span: ["full", x, N]
                        }, N]
                    }],
                    "col-start": [{
                        "col-start": $()
                    }],
                    "col-end": [{
                        "col-end": $()
                    }],
                    "grid-rows": [{
                        "grid-rows": [F]
                    }],
                    "row-start-end": [{
                        row: ["auto", {
                            span: [x, N]
                        }, N]
                    }],
                    "row-start": [{
                        "row-start": $()
                    }],
                    "row-end": [{
                        "row-end": $()
                    }],
                    "grid-flow": [{
                        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
                    }],
                    "auto-cols": [{
                        "auto-cols": ["auto", "min", "max", "fr", N]
                    }],
                    "auto-rows": [{
                        "auto-rows": ["auto", "min", "max", "fr", N]
                    }],
                    gap: [{
                        gap: [p]
                    }],
                    "gap-x": [{
                        "gap-x": [p]
                    }],
                    "gap-y": [{
                        "gap-y": [p]
                    }],
                    "justify-content": [{
                        justify: ["normal", "start", "end", "center", "between", "around", "evenly", "stretch"]
                    }],
                    "justify-items": [{
                        "justify-items": ["start", "end", "center", "stretch"]
                    }],
                    "justify-self": [{
                        "justify-self": ["auto", "start", "end", "center", "stretch"]
                    }],
                    "align-content": [{
                        content: ["normal", "start", "end", "center", "between", "around", "evenly", "stretch", "baseline"]
                    }],
                    "align-items": [{
                        items: ["start", "end", "center", "baseline", "stretch"]
                    }],
                    "align-self": [{
                        self: ["auto", "start", "end", "center", "stretch", "baseline"]
                    }],
                    "place-content": [{
                        "place-content": ["start", "end", "center", "between", "around", "evenly", "stretch", "baseline"]
                    }],
                    "place-items": [{
                        "place-items": ["start", "end", "center", "baseline", "stretch"]
                    }],
                    "place-self": [{
                        "place-self": ["auto", "start", "end", "center", "stretch"]
                    }],
                    p: [{
                        p: [b]
                    }],
                    px: [{
                        px: [b]
                    }],
                    py: [{
                        py: [b]
                    }],
                    ps: [{
                        ps: [b]
                    }],
                    pe: [{
                        pe: [b]
                    }],
                    pt: [{
                        pt: [b]
                    }],
                    pr: [{
                        pr: [b]
                    }],
                    pb: [{
                        pb: [b]
                    }],
                    pl: [{
                        pl: [b]
                    }],
                    m: [{
                        m: [y]
                    }],
                    mx: [{
                        mx: [y]
                    }],
                    my: [{
                        my: [y]
                    }],
                    ms: [{
                        ms: [y]
                    }],
                    me: [{
                        me: [y]
                    }],
                    mt: [{
                        mt: [y]
                    }],
                    mr: [{
                        mr: [y]
                    }],
                    mb: [{
                        mb: [y]
                    }],
                    ml: [{
                        ml: [y]
                    }],
                    "space-x": [{
                        "space-x": [L]
                    }],
                    "space-x-reverse": ["space-x-reverse"],
                    "space-y": [{
                        "space-y": [L]
                    }],
                    "space-y-reverse": ["space-y-reverse"],
                    w: [{
                        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", N, t]
                    }],
                    "min-w": [{
                        "min-w": [N, t, "min", "max", "fit"]
                    }],
                    "max-w": [{
                        "max-w": [N, t, "none", "full", "min", "max", "fit", "prose", {
                            screen: [k]
                        }, k]
                    }],
                    h: [{
                        h: [N, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
                    }],
                    "min-h": [{
                        "min-h": [N, t, "min", "max", "fit", "svh", "lvh", "dvh"]
                    }],
                    "max-h": [{
                        "max-h": [N, t, "min", "max", "fit", "svh", "lvh", "dvh"]
                    }],
                    size: [{
                        size: [N, t, "auto", "min", "max", "fit"]
                    }],
                    "font-size": [{
                        text: ["base", k, S]
                    }],
                    "font-smoothing": ["antialiased", "subpixel-antialiased"],
                    "font-style": ["italic", "not-italic"],
                    "font-weight": [{
                        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", O]
                    }],
                    "font-family": [{
                        font: [F]
                    }],
                    "fvn-normal": ["normal-nums"],
                    "fvn-ordinal": ["ordinal"],
                    "fvn-slashed-zero": ["slashed-zero"],
                    "fvn-figure": ["lining-nums", "oldstyle-nums"],
                    "fvn-spacing": ["proportional-nums", "tabular-nums"],
                    "fvn-fraction": ["diagonal-fractions", "stacked-fractons"],
                    tracking: [{
                        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", N]
                    }],
                    "line-clamp": [{
                        "line-clamp": ["none", C, O]
                    }],
                    leading: [{
                        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", w, N]
                    }],
                    "list-image": [{
                        "list-image": ["none", N]
                    }],
                    "list-style-type": [{
                        list: ["none", "disc", "decimal", N]
                    }],
                    "list-style-position": [{
                        list: ["inside", "outside"]
                    }],
                    "placeholder-color": [{
                        placeholder: [e]
                    }],
                    "placeholder-opacity": [{
                        "placeholder-opacity": [v]
                    }],
                    "text-alignment": [{
                        text: ["left", "center", "right", "justify", "start", "end"]
                    }],
                    "text-color": [{
                        text: [e]
                    }],
                    "text-opacity": [{
                        "text-opacity": [v]
                    }],
                    "text-decoration": ["underline", "overline", "line-through", "no-underline"],
                    "text-decoration-style": [{
                        decoration: ["solid", "dashed", "dotted", "double", "none", "wavy"]
                    }],
                    "text-decoration-thickness": [{
                        decoration: ["auto", "from-font", w, S]
                    }],
                    "underline-offset": [{
                        "underline-offset": ["auto", w, N]
                    }],
                    "text-decoration-color": [{
                        decoration: [e]
                    }],
                    "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
                    "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
                    "text-wrap": [{
                        text: ["wrap", "nowrap", "balance", "pretty"]
                    }],
                    indent: [{
                        indent: U()
                    }],
                    "vertical-align": [{
                        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", N]
                    }],
                    whitespace: [{
                        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
                    }],
                    break: [{
                        break: ["normal", "words", "all", "keep"]
                    }],
                    hyphens: [{
                        hyphens: ["none", "manual", "auto"]
                    }],
                    content: [{
                        content: ["none", N]
                    }],
                    "bg-attachment": [{
                        bg: ["fixed", "local", "scroll"]
                    }],
                    "bg-clip": [{
                        "bg-clip": ["border", "padding", "content", "text"]
                    }],
                    "bg-opacity": [{
                        "bg-opacity": [v]
                    }],
                    "bg-origin": [{
                        "bg-origin": ["border", "padding", "content"]
                    }],
                    "bg-position": [{
                        bg: ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top", P]
                    }],
                    "bg-repeat": [{
                        bg: ["no-repeat", {
                            repeat: ["", "x", "y", "round", "space"]
                        }]
                    }],
                    "bg-size": [{
                        bg: ["auto", "cover", "contain", R]
                    }],
                    "bg-image": [{
                        bg: ["none", {
                            "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
                        }, D]
                    }],
                    "bg-color": [{
                        bg: [e]
                    }],
                    "gradient-from-pos": [{
                        from: [m]
                    }],
                    "gradient-via-pos": [{
                        via: [m]
                    }],
                    "gradient-to-pos": [{
                        to: [m]
                    }],
                    "gradient-from": [{
                        from: [h]
                    }],
                    "gradient-via": [{
                        via: [h]
                    }],
                    "gradient-to": [{
                        to: [h]
                    }],
                    rounded: [{
                        rounded: [i]
                    }],
                    "rounded-s": [{
                        "rounded-s": [i]
                    }],
                    "rounded-e": [{
                        "rounded-e": [i]
                    }],
                    "rounded-t": [{
                        "rounded-t": [i]
                    }],
                    "rounded-r": [{
                        "rounded-r": [i]
                    }],
                    "rounded-b": [{
                        "rounded-b": [i]
                    }],
                    "rounded-l": [{
                        "rounded-l": [i]
                    }],
                    "rounded-ss": [{
                        "rounded-ss": [i]
                    }],
                    "rounded-se": [{
                        "rounded-se": [i]
                    }],
                    "rounded-ee": [{
                        "rounded-ee": [i]
                    }],
                    "rounded-es": [{
                        "rounded-es": [i]
                    }],
                    "rounded-tl": [{
                        "rounded-tl": [i]
                    }],
                    "rounded-tr": [{
                        "rounded-tr": [i]
                    }],
                    "rounded-br": [{
                        "rounded-br": [i]
                    }],
                    "rounded-bl": [{
                        "rounded-bl": [i]
                    }],
                    "border-w": [{
                        border: [s]
                    }],
                    "border-w-x": [{
                        "border-x": [s]
                    }],
                    "border-w-y": [{
                        "border-y": [s]
                    }],
                    "border-w-s": [{
                        "border-s": [s]
                    }],
                    "border-w-e": [{
                        "border-e": [s]
                    }],
                    "border-w-t": [{
                        "border-t": [s]
                    }],
                    "border-w-r": [{
                        "border-r": [s]
                    }],
                    "border-w-b": [{
                        "border-b": [s]
                    }],
                    "border-w-l": [{
                        "border-l": [s]
                    }],
                    "border-opacity": [{
                        "border-opacity": [v]
                    }],
                    "border-style": [{
                        border: ["solid", "dashed", "dotted", "double", "none", "hidden"]
                    }],
                    "divide-x": [{
                        "divide-x": [s]
                    }],
                    "divide-x-reverse": ["divide-x-reverse"],
                    "divide-y": [{
                        "divide-y": [s]
                    }],
                    "divide-y-reverse": ["divide-y-reverse"],
                    "divide-opacity": [{
                        "divide-opacity": [v]
                    }],
                    "divide-style": [{
                        divide: ["solid", "dashed", "dotted", "double", "none"]
                    }],
                    "border-color": [{
                        border: [o]
                    }],
                    "border-color-x": [{
                        "border-x": [o]
                    }],
                    "border-color-y": [{
                        "border-y": [o]
                    }],
                    "border-color-t": [{
                        "border-t": [o]
                    }],
                    "border-color-r": [{
                        "border-r": [o]
                    }],
                    "border-color-b": [{
                        "border-b": [o]
                    }],
                    "border-color-l": [{
                        "border-l": [o]
                    }],
                    "divide-color": [{
                        divide: [o]
                    }],
                    "outline-style": [{
                        outline: ["", "solid", "dashed", "dotted", "double", "none"]
                    }],
                    "outline-offset": [{
                        "outline-offset": [w, N]
                    }],
                    "outline-w": [{
                        outline: [w, S]
                    }],
                    "outline-color": [{
                        outline: [e]
                    }],
                    "ring-w": [{
                        ring: G()
                    }],
                    "ring-w-inset": ["ring-inset"],
                    "ring-color": [{
                        ring: [e]
                    }],
                    "ring-opacity": [{
                        "ring-opacity": [v]
                    }],
                    "ring-offset-w": [{
                        "ring-offset": [w, S]
                    }],
                    "ring-offset-color": [{
                        "ring-offset": [e]
                    }],
                    shadow: [{
                        shadow: ["", "inner", "none", k, M]
                    }],
                    "shadow-color": [{
                        shadow: [F]
                    }],
                    opacity: [{
                        opacity: [v]
                    }],
                    "mix-blend": [{
                        "mix-blend": ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity", "plus-lighter"]
                    }],
                    "bg-blend": [{
                        "bg-blend": ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity", "plus-lighter"]
                    }],
                    filter: [{
                        filter: ["", "none"]
                    }],
                    blur: [{
                        blur: [n]
                    }],
                    brightness: [{
                        brightness: [r]
                    }],
                    contrast: [{
                        contrast: [l]
                    }],
                    "drop-shadow": [{
                        "drop-shadow": ["", "none", k, N]
                    }],
                    grayscale: [{
                        grayscale: [c]
                    }],
                    "hue-rotate": [{
                        "hue-rotate": [d]
                    }],
                    invert: [{
                        invert: [u]
                    }],
                    saturate: [{
                        saturate: [E]
                    }],
                    sepia: [{
                        sepia: [A]
                    }],
                    "backdrop-filter": [{
                        "backdrop-filter": ["", "none"]
                    }],
                    "backdrop-blur": [{
                        "backdrop-blur": [n]
                    }],
                    "backdrop-brightness": [{
                        "backdrop-brightness": [r]
                    }],
                    "backdrop-contrast": [{
                        "backdrop-contrast": [l]
                    }],
                    "backdrop-grayscale": [{
                        "backdrop-grayscale": [c]
                    }],
                    "backdrop-hue-rotate": [{
                        "backdrop-hue-rotate": [d]
                    }],
                    "backdrop-invert": [{
                        "backdrop-invert": [u]
                    }],
                    "backdrop-opacity": [{
                        "backdrop-opacity": [v]
                    }],
                    "backdrop-saturate": [{
                        "backdrop-saturate": [E]
                    }],
                    "backdrop-sepia": [{
                        "backdrop-sepia": [A]
                    }],
                    "border-collapse": [{
                        border: ["collapse", "separate"]
                    }],
                    "border-spacing": [{
                        "border-spacing": [a]
                    }],
                    "border-spacing-x": [{
                        "border-spacing-x": [a]
                    }],
                    "border-spacing-y": [{
                        "border-spacing-y": [a]
                    }],
                    "table-layout": [{
                        table: ["auto", "fixed"]
                    }],
                    caption: [{
                        caption: ["top", "bottom"]
                    }],
                    transition: [{
                        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", N]
                    }],
                    duration: [{
                        duration: K()
                    }],
                    ease: [{
                        ease: ["linear", "in", "out", "in-out", N]
                    }],
                    delay: [{
                        delay: K()
                    }],
                    animate: [{
                        animate: ["none", "spin", "ping", "pulse", "bounce", N]
                    }],
                    transform: [{
                        transform: ["", "gpu", "none"]
                    }],
                    scale: [{
                        scale: [_]
                    }],
                    "scale-x": [{
                        "scale-x": [_]
                    }],
                    "scale-y": [{
                        "scale-y": [_]
                    }],
                    rotate: [{
                        rotate: [x, N]
                    }],
                    "translate-x": [{
                        "translate-x": [B]
                    }],
                    "translate-y": [{
                        "translate-y": [B]
                    }],
                    "skew-x": [{
                        "skew-x": [I]
                    }],
                    "skew-y": [{
                        "skew-y": [I]
                    }],
                    "transform-origin": [{
                        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", N]
                    }],
                    accent: [{
                        accent: ["auto", e]
                    }],
                    appearance: [{
                        appearance: ["none", "auto"]
                    }],
                    cursor: [{
                        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", N]
                    }],
                    "caret-color": [{
                        caret: [e]
                    }],
                    "pointer-events": [{
                        "pointer-events": ["none", "auto"]
                    }],
                    resize: [{
                        resize: ["none", "y", "x", ""]
                    }],
                    "scroll-behavior": [{
                        scroll: ["auto", "smooth"]
                    }],
                    "scroll-m": [{
                        "scroll-m": U()
                    }],
                    "scroll-mx": [{
                        "scroll-mx": U()
                    }],
                    "scroll-my": [{
                        "scroll-my": U()
                    }],
                    "scroll-ms": [{
                        "scroll-ms": U()
                    }],
                    "scroll-me": [{
                        "scroll-me": U()
                    }],
                    "scroll-mt": [{
                        "scroll-mt": U()
                    }],
                    "scroll-mr": [{
                        "scroll-mr": U()
                    }],
                    "scroll-mb": [{
                        "scroll-mb": U()
                    }],
                    "scroll-ml": [{
                        "scroll-ml": U()
                    }],
                    "scroll-p": [{
                        "scroll-p": U()
                    }],
                    "scroll-px": [{
                        "scroll-px": U()
                    }],
                    "scroll-py": [{
                        "scroll-py": U()
                    }],
                    "scroll-ps": [{
                        "scroll-ps": U()
                    }],
                    "scroll-pe": [{
                        "scroll-pe": U()
                    }],
                    "scroll-pt": [{
                        "scroll-pt": U()
                    }],
                    "scroll-pr": [{
                        "scroll-pr": U()
                    }],
                    "scroll-pb": [{
                        "scroll-pb": U()
                    }],
                    "scroll-pl": [{
                        "scroll-pl": U()
                    }],
                    "snap-align": [{
                        snap: ["start", "end", "center", "align-none"]
                    }],
                    "snap-stop": [{
                        snap: ["normal", "always"]
                    }],
                    "snap-type": [{
                        snap: ["none", "x", "y", "both"]
                    }],
                    "snap-strictness": [{
                        snap: ["mandatory", "proximity"]
                    }],
                    touch: [{
                        touch: ["auto", "none", "manipulation"]
                    }],
                    "touch-x": [{
                        "touch-pan": ["x", "left", "right"]
                    }],
                    "touch-y": [{
                        "touch-pan": ["y", "up", "down"]
                    }],
                    "touch-pz": ["touch-pinch-zoom"],
                    select: [{
                        select: ["none", "text", "all", "auto"]
                    }],
                    "will-change": [{
                        "will-change": ["auto", "scroll", "contents", "transform", N]
                    }],
                    fill: [{
                        fill: [e, "none"]
                    }],
                    "stroke-w": [{
                        stroke: [w, S, O]
                    }],
                    stroke: [{
                        stroke: [e, "none"]
                    }],
                    sr: ["sr-only", "not-sr-only"],
                    "forced-color-adjust": [{
                        "forced-color-adjust": ["auto", "none"]
                    }]
                },
                conflictingClassGroups: {
                    overflow: ["overflow-x", "overflow-y"],
                    overscroll: ["overscroll-x", "overscroll-y"],
                    inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
                    "inset-x": ["right", "left"],
                    "inset-y": ["top", "bottom"],
                    flex: ["basis", "grow", "shrink"],
                    gap: ["gap-x", "gap-y"],
                    p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
                    px: ["pr", "pl"],
                    py: ["pt", "pb"],
                    m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
                    mx: ["mr", "ml"],
                    my: ["mt", "mb"],
                    size: ["w", "h"],
                    "font-size": ["leading"],
                    "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
                    "fvn-ordinal": ["fvn-normal"],
                    "fvn-slashed-zero": ["fvn-normal"],
                    "fvn-figure": ["fvn-normal"],
                    "fvn-spacing": ["fvn-normal"],
                    "fvn-fraction": ["fvn-normal"],
                    "line-clamp": ["display", "overflow"],
                    rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
                    "rounded-s": ["rounded-ss", "rounded-es"],
                    "rounded-e": ["rounded-se", "rounded-ee"],
                    "rounded-t": ["rounded-tl", "rounded-tr"],
                    "rounded-r": ["rounded-tr", "rounded-br"],
                    "rounded-b": ["rounded-br", "rounded-bl"],
                    "rounded-l": ["rounded-tl", "rounded-bl"],
                    "border-spacing": ["border-spacing-x", "border-spacing-y"],
                    "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
                    "border-w-x": ["border-w-r", "border-w-l"],
                    "border-w-y": ["border-w-t", "border-w-b"],
                    "border-color": ["border-color-t", "border-color-r", "border-color-b", "border-color-l"],
                    "border-color-x": ["border-color-r", "border-color-l"],
                    "border-color-y": ["border-color-t", "border-color-b"],
                    "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
                    "scroll-mx": ["scroll-mr", "scroll-ml"],
                    "scroll-my": ["scroll-mt", "scroll-mb"],
                    "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
                    "scroll-px": ["scroll-pr", "scroll-pl"],
                    "scroll-py": ["scroll-pt", "scroll-pb"],
                    touch: ["touch-x", "touch-y", "touch-pz"],
                    "touch-x": ["touch"],
                    "touch-y": ["touch"],
                    "touch-pz": ["touch"]
                },
                conflictingClassGroupModifiers: {
                    "font-size": ["leading"]
                }
            }
        }
        function K(e, {cacheSize: t, prefix: n, separator: r, extend: o={}, override: i={}}) {
            z(e, "cacheSize", t),
            z(e, "prefix", n),
            z(e, "separator", r);
            for (const t in i)
                W(e[t], i[t]);
            for (const t in o)
                Y(e[t], o[t]);
            return e
        }
        function z(e, t, n) {
            void 0 !== n && (e[t] = n)
        }
        function W(e, t) {
            if (t)
                for (const n in t)
                    z(e, n, t[n])
        }
        function Y(e, t) {
            if (t)
                for (const n in t) {
                    const r = t[n];
                    void 0 !== r && (e[n] = (e[n] || []).concat(r))
                }
        }
        const X = h(H);
        e.createTailwindMerge = h,
        e.extendTailwindMerge = function(e, ...t) {
            return "function" == typeof e ? h(H, e, ...t) : h(( () => K(H(), e)), ...t)
        }
        ,
        e.fromTheme = f,
        e.getDefaultConfig = H,
        e.mergeConfigs = K,
        e.twJoin = u,
        e.twMerge = X,
        e.validators = V
    }(Bk);
    const jk = Bk.extendTailwindMerge({
        extend: {
            classGroups: {
                "font-size": [{
                    text: [Bk.validators.isLength, e => e.endsWith("FontSize") || !!e.match(/h\d$/)]
                }]
            }
        }
    })
      , Uk = {
        container: {
            base: "bg-customInputBackgroundColor h-16 border-124150 border-customInputBorderColor duration-500 relative flex flex-row items-center rounded-customInputBorderRadius px-2.5 py-1",
            small: "py-0",
            focus: "focus-within:before:border-customInputFocusBorderColor focus-within:before:rounded-customInputBorderRadius focus-within:before:absolute focus-within:before:border-[calc(theme(borderWidth.124150)+1px)] focus-within:before:-inset-0.5 focus-within:before:shadow-focus",
            disabled: "bg-axogray-100 border-axo-gray-200",
            error: "before:border-customErrorColor before:-inset-0.5 before:border-[calc(theme(borderWidth.124150)+1px)] focus-within:before:border-customErrorColor focus-within:before:shadow-error before:rounded-customInputBorderRadius before:absolute before:pointer-events-none"
        },
        label: {
            base: "text-customInputTextColorBase opacity-70 peer-focus:whitespace-nowrap absolute -translate-y-1/2 top-1/2 transition-all origin-left left-0 pointer-events-none",
            focus: jk("peer-focus:-translate-y-full peer-disabled:text-axogray-400", "peer-focus:text-sm peer-focus:top-2/5"),
            small: "peer-focus:text-sm peer-focus:top-2/5",
            hasValue: jk("-translate-y-full top-2/5", "text-sm")
        },
        input: {
            base: "text-customInputTextColorBase w-full pt-5 bg-transparent outline-none peer z-10",
            small: "text-sm pt-4.5 pb-1.5 leading-none"
        }
    }
      , Gk = (e, t, n, r) => Fk("text-customInputTextColorBase", jk(Uk.container.base, e ? Uk.container.small : "", Uk.container.focus, t ? Uk.container.disabled : n && Uk.container.error, r))
      , $k = (e, t="") => jk(Uk.input.base, e ? Uk.input.small : "", t)
      , Vk = (e, t="") => jk(Uk.label.base, Uk.label.focus, e && Uk.label.hasValue, t, "whitespace-normal")
      , Hk = (e, t) => {
        var n;
        return P("div", {
            class: Fk("w-12 grid", null !== (n = "left" === t) && void 0 !== n ? n : "mr-3")
        }, e)
    }
      , Kk = e => P("div", {
        class: "flex pt-2 whitespace-normal"
    }, P("axo-icons", {
        name: "Danger",
        iconClass: "mr-1 w-5 fill-axored-200"
    }), P("p", {
        class: "text-customTextColorBase text-sm w-full"
    }, e))
      , zk = "https://www.paypalobjects.com/fastlane-v1"
      , Wk = {
        Add: "add.svg",
        BackArrow: "arrow-back.svg",
        Check: "check.svg",
        CheckCircleFilled: "check-circle-filled.svg",
        ChevronDown: "chevron-down.svg",
        ChevronLeft: "chevron-left.svg",
        Close: "close.svg",
        CreditCard: "credit-card.svg",
        CriticalFilled: "critical-filled.svg",
        Danger: "danger.svg",
        Info: "info.svg",
        InfoFilled: "info-filled.svg",
        LockFilled: "lock-filled.svg",
        NotAllowed: "not-allowed.svg",
        PositiveAlertFilled: "positive-alert-filled.svg",
        ProfileFilled: "profile-filled.svg",
        QuestionFilled: "question-filled.svg",
        RocketFilled: "rocket-filled.svg",
        ShieldFilled: "shield-filled.svg",
        ShieldKeyholeFilled: "shield-keyhole-filled.svg",
        ShieldLockFilled: "shield-lock-filled.svg",
        ShoppingCartFilled: "shopping-cart-filled.svg",
        StoreFilled: "store-filled.svg",
        VerifiedFilled: "verify-filled.svg",
        WarningFilled: "warning-filled.svg"
    }
      , Yk = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.name = void 0,
            this.iconClass = void 0,
            this.path = zk,
            this.content = "<svg></svg>";
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        async componentWillLoad() {
            const e = await fetch(`${this.path}/assets/icons/${Wk[this.name]}`);
            200 === e.status && (this.content = await e.text())
        }
        render() {
            return P(D, {
                key: "c04b3ba8ea9c020e53eb1f2811c1bc6d0b08cc76"
            }, P("div", {
                key: "c816c64e06ff9e2d5886be53f7407ae23ea8dd14",
                class: Fk("min-w-2 min-h-2", this.iconClass),
                innerHTML: this.content,
                "aria-hidden": "true"
            }))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-icons", {
        name: [1],
        iconClass: [1, "icon-class"],
        path: [1],
        content: [32]
    }]);
    function Xk() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-icons"].forEach((e => {
            if ("axo-icons" === e)
                customElements.get(e) || customElements.define(e, Yk)
        }
        ))
    }
    const Zk = {
        cardholderName: "name_on_card",
        number: "card_number",
        expirationDate: "expiry",
        cvv: "cvv"
    }
      , qk = {
        "American Express": "AMEX",
        "Diners Club": "DINERS",
        Discover: "DISCOVER",
        JCB: "JCB",
        MasterCard: "MASTERCARD",
        UnionPay: "CHINAUNIONPAY",
        Visa: "VISA"
    }
      , Jk = "CUSTOMER"
      , Qk = "NETWORK"
      , eI = "cardholderName"
      , tI = ["number", "expirationDate", "cvv", eI]
      , nI = {
        cardholderName: {
            id: "cardholder-name",
            class: "hcf-cardholder-name",
            label: () => Pr("creditCardFields.nameLabel")
        },
        number: {
            id: "card-number",
            class: "hcf-card-number",
            label: () => Pr("creditCardFields.cardNumberLabel")
        },
        expirationDate: {
            id: "expiration-date",
            class: "hcf-expiration-date",
            label: () => Pr("creditCardFields.expirationLabel"),
            placeholder: () => Pr("creditCardFields.expirationPlaceholder")
        },
        cvv: {
            id: "cvv",
            class: "hcf-cvv",
            label: () => Pr("creditCardFields.cvvLabel")
        }
    }
      , rI = (e, t) => {
        const n = nI[e];
        return Object.assign(Object.assign({}, n), {
            id: [n.id, t].filter((e => e)).join("-")
        })
    }
      , oI = {
        AMEX: "american-express",
        DINERS: "diners-club",
        DISCOVER: "discover",
        JCB: "jcb",
        MAESTRO: "maestro",
        MASTERCARD: "master-card",
        CHINAUNIONPAY: "unionpay",
        VISA: "visa"
    }
      , iI = e => tI.map((t => {
        const {id: n} = rI(t, e);
        return P("slot", {
            name: n,
            slot: n
        })
    }
    ));
    const aI = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.ccFieldsValidated = j(this, "ccFieldsValidated", 7),
            this.logger = $t(),
            this.labelRefs = {},
            this.getFieldMap = e => rI(e, this.hostId),
            this.setHostedFieldsErrors = e => {
                Object.keys(e).forEach((t => {
                    const n = this.getFieldMap(t).id
                      , r = document.getElementById(n);
                    e[t] ? (null == r || r.classList.add("braintree-hosted-fields-invalid"),
                    this.host && !kk(this.host, "--input-error-outer-color") && r && Dk(this.host, r, "error")) : null == r || r.classList.remove("braintree-hosted-fields-invalid")
                }
                )),
                this.hostedFieldsErrors = Object.assign(Object.assign({}, this.hostedFieldsErrors), e)
            }
            ,
            this.btClient = void 0,
            this.host = void 0,
            this.fieldOptions = {},
            this.hostId = "",
            this.theme = tt,
            this.hostedFieldsErrors = {
                number: "",
                expirationDate: "",
                cvv: "",
                cardholderName: ""
            },
            this.isCvvLabelWiderThanInputField = !1,
            this.shouldSplitExpirationLabel = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        getSlotParent(e) {
            let t = e.parentElement;
            for (; t.assignedSlot; )
                t = t.assignedSlot;
            return t.parentElement
        }
        addFocusedOrPopulatedClasses(e) {
            e.classList.add("pp-axo-focused-or-populated");
            this.getSlotParent(e).classList.add("transform-label")
        }
        removeFocusedOrPopulatedClasses(e) {
            e.classList.remove("pp-axo-focused-or-populated");
            this.getSlotParent(e).classList.remove("transform-label")
        }
        hostedFieldsOnFocus(e) {
            const t = e.emittedBy
              , n = e.fields[t];
            if (this.logger.track({
                event_name: "axo_add_fi_add_card_form_field_interaction_focus",
                event_category: "add_fi",
                event_type: "cl",
                field_name: Zk[t],
                intent: "checkout"
            }),
            this.host && !kk(this.host, "--input-focus-outer-color") && n.container && Dk(this.host, null == n ? void 0 : n.container, "focus"),
            this.addFocusedOrPopulatedClasses(n.container),
            this.hostedFieldsErrors[t]) {
                const e = document.getElementById(`${this.getFieldMap(t).id}-aria-error`);
                e && (e.innerText = this.hostedFieldsErrors[t])
            }
        }
        hostedFieldsOnNotEmpty(e) {
            var t;
            let n, r;
            "string" == typeof e ? r = document.getElementById(e) : (n = e.emittedBy,
            r = null === (t = e.fields[n]) || void 0 === t ? void 0 : t.container),
            this.hostedFieldsErrors[n] && this.setHostedFieldsErrors({
                [n]: ""
            }),
            this.addFocusedOrPopulatedClasses(r)
        }
        hostedFieldsOnBlur(e) {
            var t, n, r;
            const o = e.emittedBy
              , i = e.fields[o]
              , a = Pr(`wallet.ccErr.labels.${o}`);
            if (this.logger.track({
                event_name: "axo_add_fi_add_card_form_field_interaction_exit",
                event_category: "add_fi",
                event_type: "cl",
                field_name: Zk[o],
                intent: "checkout"
            }),
            i.isEmpty) {
                (null === (t = this.fieldOptions[o]) || void 0 === t ? void 0 : t.placeholder) || this.shouldSplitExpirationLabel && (null === (r = (n = this.getFieldMap(o)).placeholder) || void 0 === r ? void 0 : r.call(n)) || this.removeFocusedOrPopulatedClasses(i.container);
                const e = Pr("wallet.ccErr.inputRequired", {
                    label: a
                });
                this.setHostedFieldsErrors({
                    [o]: e
                })
            }
            if (!this.hostedFieldsErrors[o] && !i.isValid) {
                const e = Pr("wallet.ccErr.inputInvalid", {
                    label: a.toLowerCase()
                });
                this.setHostedFieldsErrors({
                    [o]: e
                })
            }
            const s = document.getElementById(`${this.getFieldMap(o).id}-aria-error`);
            s && (s.innerText = "")
        }
        hostedFieldsOnEmpty(e) {
            var t, n, r;
            const o = e.emittedBy
              , i = e.fields[o];
            this.hostedFieldsErrors[o] && this.setHostedFieldsErrors({
                [o]: ""
            }),
            i.isFocused || (null === (t = this.fieldOptions[o]) || void 0 === t ? void 0 : t.placeholder) || this.shouldSplitExpirationLabel && (null === (r = (n = this.getFieldMap(o)).placeholder) || void 0 === r ? void 0 : r.call(n)) || this.removeFocusedOrPopulatedClasses(i.container)
        }
        hostedFieldsOnValidityChange(e) {
            const t = e.emittedBy;
            if (e.fields[t].isPotentiallyValid)
                this.setHostedFieldsErrors({
                    [t]: ""
                });
            else {
                const e = Pr(`wallet.ccErr.labels.${t}`)
                  , n = Pr("wallet.ccErr.inputInvalid", {
                    label: e.toLowerCase()
                });
                this.setHostedFieldsErrors({
                    [t]: n
                })
            }
            var n;
            this.ccFieldsValidated.emit((n = e.fields,
            Object.keys(n).every((e => {
                const t = n[e];
                return !t.isEmpty && t.isValid
            }
            ))))
        }
        hostedFieldsOnCardTypeChange(e) {
            if (1 === e.cards.length && !e.cards[0].supported) {
                const e = Pr("wallet.ccErr.disallowedFIGeneric");
                this.setHostedFieldsErrors({
                    number: e
                })
            }
        }
        calculateInputFieldWidth(e) {
            const t = parseFloat(e.paddingRight)
              , n = parseFloat(e.paddingLeft);
            return parseFloat(e.width) - t - n
        }
        isLabelWidthGreaterThanInputWidth(e, t) {
            const n = parseFloat(getComputedStyle(e).width)
              , r = getComputedStyle(document.querySelector(t));
            return n > this.calculateInputFieldWidth(r)
        }
        createHostedCardFields(e) {
            var t, n;
            const r = kk(this.el, "--text-caption-color") || kk(this.el, "--input-text-color-base") || kk(this.el, "--default-input-text-color-base")
              , o = kk(this.el, "--root-font-family") || kk(this.el, "--default-root-font-family")
              , i = kk(this.el, "--root-font-size-base") || it.get("hostBaseFontSize") || kk(this.el, "--default-root-font-size-base");
            try {
                null === (n = null === (t = window.braintree) || void 0 === t ? void 0 : t.hostedFields) || void 0 === n || n.create({
                    client: this.btClient,
                    fields: e,
                    styles: {
                        form: {
                            "font-size": i
                        },
                        input: {
                            color: r,
                            "font-family": o,
                            "font-size": "1em",
                            "padding-top": "2.25em",
                            "padding-bottom": "0.625em"
                        },
                        "input::placeholder": {
                            color: r,
                            "font-size": "1em",
                            opacity: "0.7"
                        }
                    }
                }, ( (e, t) => {
                    var n, r, o;
                    e ? console.error(e) : (this.logger.track({
                        event_name: "axo_add_fi_add_a_card_start",
                        event_category: "add_fi",
                        intent: "checkout",
                        transition_name: "fi_entry_form_shown"
                    }),
                    this.hostedFieldsInstance = t,
                    this.isCvvLabelWiderThanInputField = this.isLabelWidthGreaterThanInputWidth(this.labelRefs.cvv, `#${this.getFieldMap("cvv").id}`),
                    this.isCvvLabelWiderThanInputField || (this.shouldSplitExpirationLabel = this.isLabelWidthGreaterThanInputWidth(this.labelRefs.expirationDate, `#${this.getFieldMap("expirationDate").id}`)),
                    this.shouldSplitExpirationLabel && this.hostedFieldsInstance.setPlaceholder("expirationDate", null !== (o = null === (r = (n = this.getFieldMap("expirationDate")).placeholder) || void 0 === r ? void 0 : r.call(n)) && void 0 !== o ? o : ""),
                    t.on("focus", (e => this.hostedFieldsOnFocus(e))),
                    t.on("notEmpty", (e => this.hostedFieldsOnNotEmpty(e))),
                    t.on("blur", (e => this.hostedFieldsOnBlur(e))),
                    t.on("empty", (e => this.hostedFieldsOnEmpty(e))),
                    t.on("validityChange", (e => this.hostedFieldsOnValidityChange(e))),
                    t.on("cardTypeChange", (e => this.hostedFieldsOnCardTypeChange(e))))
                }
                )),
                this.logger.countMetric({
                    component: St,
                    action: Ct.CREATE,
                    status: vt.STATUS.OK
                })
            } catch (e) {
                throw this.logger.countMetric({
                    component: St,
                    action: Ct.CREATE,
                    status: vt.STATUS.ERROR
                }),
                e
            }
        }
        connectedCallback() {
            Ik(".hcf-card-number,.hcf-cardholder-name,.hcf-cvv,.hcf-expiration-date{background-color:var(--input-background-color, var(--default-input-background-color));border-color:transparent;border-radius:var(--input-border-radius, var(--default-input-border-radius));border-width:calc(var(--input-border-width, var(--default-input-border-width)) + 1px);border-style:solid;box-sizing:border-box;height:4em;padding-left:0.8em;padding-right:2.5em}.hcf-card-number iframe{background:transparent;padding:0}.hcf-card-number.braintree-hosted-fields-focused,.hcf-cardholder-name.braintree-hosted-fields-focused,.hcf-cvv.braintree-hosted-fields-focused,.hcf-expiration-date.braintree-hosted-fields-focused{border-color:var(--input-focus-border-color, var(--default-input-focus-border-color));box-shadow:0 0 0 calc(var(--input-border-width, var(--default-input-border-width)) + 1px) var(--input-focus-outer-color, rgba(0, 87, 255, 0.15))}.hcf-card-number.braintree-hosted-fields-invalid,.hcf-cardholder-name.braintree-hosted-fields-invalid,.hcf-cvv.braintree-hosted-fields-invalid,.hcf-expiration-date.braintree-hosted-fields-invalid{border-color:var(--root-error-color, var(--default-root-error-color))}.hcf-card-number.braintree-hosted-fields-invalid.braintree-hosted-fields-focused,.hcf-cardholder-name.braintree-hosted-fields-invalid.braintree-hosted-fields-focused,.hcf-cvv.braintree-hosted-fields-invalid.braintree-hosted-fields-focused,.hcf-expiration-date.braintree-hosted-fields-invalid.braintree-hosted-fields-focused{border-color:var(--root-error-color, var(--default-root-error-color));box-shadow:0 0 0 calc(var(--input-border-width, var(--default-input-border-width)) + 1px) var(--input-error-outer-color, rgba(217, 54, 11, 0.15))}.braintree-hosted-fields-unfocused-border{border-color:var(--input-border-color, var(--default-input-border-color));border-radius:var(--input-border-radius, var(--default-input-border-radius));border-style:solid;border-width:var(--input-border-width, var(--default-input-border-width));box-sizing:border-box;height:100%;pointer-events:none;position:absolute;top:0;width:100%}.braintree-hosted-fields-focused~.braintree-hosted-fields-unfocused-border{border:none}.braintree-hosted-fields-invalid~.braintree-hosted-fields-unfocused-border{border:none}.hcf-card-number-aria-error,.hcf-card-number-card-selector-aria-error,.hcf-cardholder-name-aria-error,.hcf-cardholder-card-selector-name-aria-error,.hcf-cvv-aria-error,.hcf-cvv-card-selector-aria-error,.hcf-expiration-date-aria-error,.hcf-expiration-date-card-selector-aria-error{border-width:0;clip:rect(0, 0, 0, 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}")
        }
        componentDidLoad() {
            const e = tI;
            if (!this.fieldOptions.cardholderName) {
                const t = e.indexOf(eI);
                t > -1 && e.splice(t, 1)
            }
            e.forEach((e => {
                var t;
                const n = this.getFieldMap(e);
                !function({element: e, slotNodeSelector: t, slotName: n, host: r}) {
                    var o;
                    const i = null === (o = e.shadowRoot) || void 0 === o ? void 0 : o.querySelector(t)
                      , a = null == i ? void 0 : i.cloneNode(!0);
                    a.setAttribute("slot", n);
                    const s = r.querySelector(`[slot="${n}"]`);
                    s ? s.replaceWith(a) : r.appendChild(a)
                }({
                    element: this.el,
                    slotNodeSelector: `#${n.id}-container`,
                    slotName: n.id,
                    host: null !== (t = this.host) && void 0 !== t ? t : this.el
                })
            }
            ));
            const t = e.reduce(( (e, t) => {
                var n, r;
                const o = this.getFieldMap(t)
                  , i = {
                    supportedCardBrands: {}
                };
                var a;
                return "cardholderName" === t && (null === (r = null === (n = this.fieldOptions) || void 0 === n ? void 0 : n[t]) || void 0 === r ? void 0 : r.prefill) && this.hostedFieldsOnNotEmpty(o.id),
                "number" === t && (i.supportedCardBrands = (a = it.get("allowedCardBrands")).length ? a.reduce(( (e, t) => {
                    const n = oI[t];
                    return n && (e[n] = !0),
                    e
                }
                ), Object.values(oI).reduce(( (e, t) => Object.assign(Object.assign({}, e), {
                    [t]: !1
                })), {})) : {}),
                Object.assign(Object.assign({}, e), {
                    [t]: Object.assign(Object.assign({
                        container: `#${o.id}`,
                        internalLabel: o.label()
                    }, this.fieldOptions[t]), i)
                })
            }
            ), {});
            this.createHostedCardFields(t),
            this.localeChangeUnsub = it.on("set", (t => {
                var n;
                "content" === t && (null === (n = this.hostedFieldsInstance) || void 0 === n || n.teardown((t => {
                    t && console.error(t);
                    const n = e.reduce(( (e, t) => {
                        const n = this.getFieldMap(t);
                        return Object.assign(Object.assign({}, e), {
                            [t]: Object.assign({
                                container: `#${n.id}`,
                                internalLabel: n.label()
                            }, this.fieldOptions[t])
                        })
                    }
                    ), {});
                    this.createHostedCardFields(n)
                }
                )))
            }
            ))
        }
        disconnectedCallback() {
            var e;
            null === (e = this.hostedFieldsInstance) || void 0 === e || e.teardown((e => {
                e && console.error(e),
                this.localeChangeUnsub()
            }
            ))
        }
        validateRequiredFields() {
            let e = !0;
            const t = {}
              , n = this.hostedFieldsInstance.getState().fields;
            for (const r in n)
                if (n[r].isEmpty) {
                    const n = Pr(`wallet.ccErr.labels.${r}`)
                      , o = Pr("wallet.ccErr.inputRequired", {
                        label: n
                    });
                    t[r] = o,
                    e = !1
                }
            return e || this.setHostedFieldsErrors(t),
            this.ccFieldsValidated.emit(e),
            e
        }
        focusFirstInvalidField() {
            const e = Object.keys(this.hostedFieldsErrors);
            for (const t of e)
                if (this.hostedFieldsErrors[t]) {
                    this.hostedFieldsInstance.focus(t);
                    break
                }
        }
        async getHostedFieldsErrorState() {
            return this.hostedFieldsErrors
        }
        async tokenize(e) {
            var t;
            const n = this.validateRequiredFields();
            if (this.focusFirstInvalidField(),
            n)
                return null === (t = this.hostedFieldsInstance) || void 0 === t ? void 0 : t.tokenize(e);
            {
                const e = new Error("Empty required fields in tokenize args");
                throw e.code = "MISSING_REQUIRED_FIELDS",
                e.type = Jk,
                e.message = Pr("wallet.ccErr.invalidEntry"),
                e
            }
        }
        FieldContainer(e) {
            var t, n;
            const r = this.getFieldMap(e)
              , o = (null === (t = this.fieldOptions[e]) || void 0 === t ? void 0 : t.placeholder) || (null === (n = r.placeholder) || void 0 === n ? void 0 : n.call(r));
            return P("div", {
                class: "flex flex-col basis-full"
            }, P("div", {
                class: Fk("w-full min-w-[7em] relative group", {
                    "transform-label": this.shouldSplitExpirationLabel && o
                })
            }, P("p", {
                ref: t => this.labelRefs[e] = t,
                class: Fk("text-bodyFontSize leading-normal absolute left-4 -translate-y-1/2 top-1/2 origin-left group-[.transform-label]:top-1/3 group-[.transform-label]:text-sm transition-all pointer-events-none", kk(this.el, "--text-caption-color") ? "text-oldCaptionColor" : "text-customInputTextColorBase opacity-70")
            }, r.label(), !this.shouldSplitExpirationLabel && o ? ` (${o})` : null), "cvv" === e && P("axo-icons", {
                name: "CreditCard",
                class: "w-3.5 absolute top-[50%] -translate-y-1/2 right-7 pointer-events-none",
                iconClass: "[&_svg_path]:fill-customInputTextColorBase opacity-70"
            }), P("slot", {
                name: r.id
            }, P("div", {
                id: `${r.id}-container`
            }, P("div", {
                id: r.id,
                "aria-hidden": "true",
                class: r.class
            }), P("div", {
                class: "braintree-hosted-fields-unfocused-border"
            }), P("div", {
                id: `${r.id}-aria-error`,
                class: `hcf-${r.id}-aria-error`,
                "aria-live": "polite"
            })))), this.hostedFieldsErrors[e] && Kk(this.hostedFieldsErrors[e]))
        }
        render() {
            return P(D, {
                key: "bcd7b9a07c340e52327087f2d5ce403256d2f55e",
                "data-theme": this.theme
            }, P("div", {
                key: "657713eb1065335a59d8af417278fcc5d009a0e2",
                class: "flex flex-col gap-4"
            }, this.FieldContainer("number"), P("div", {
                key: "90e107b16cd92403b6da654bd832454d9d4341b9",
                class: Fk("flex", this.isCvvLabelWiderThanInputField ? "flex-col gap-4" : "flex-row gap-3")
            }, this.FieldContainer("expirationDate"), this.FieldContainer("cvv")), this.fieldOptions.cardholderName && this.FieldContainer("cardholderName")))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-credit-card-fields", {
        btClient: [16],
        host: [16],
        fieldOptions: [16],
        hostId: [1, "host-id"],
        theme: [1],
        hostedFieldsErrors: [32],
        isCvvLabelWiderThanInputField: [32],
        shouldSplitExpirationLabel: [32],
        getHostedFieldsErrorState: [64],
        tokenize: [64]
    }]);
    function sI() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-credit-card-fields", "axo-icons"].forEach((e => {
            switch (e) {
            case "axo-credit-card-fields":
                customElements.get(e) || customElements.define(e, aI);
                break;
            case "axo-icons":
                customElements.get(e) || Xk()
            }
        }
        ))
    }
    const lI = {
        fastlane_en_md_light: "fastlane_en_md_light.d18b.svg",
        fastlane_en_sm_light: "fastlane_en_sm_light.0296.svg",
        "fastlane-with-tooltip_en_sm_light": "fastlane-with-tooltip_en_sm_light.0808.svg",
        fastlane_en_md_dark: "fastlane_en_md_dark.a770.svg",
        fastlane_en_sm_dark: "fastlane_en_sm_dark.8894.svg",
        "fastlane-with-tooltip_en_sm_dark": "fastlane-with-tooltip_en_sm_dark.7e41.svg"
    };
    var cI, dI, uI = function(e, t, n, r) {
        if ("a" === n && !r)
            throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !r : !t.has(e))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === n ? r : "a" === n ? r.call(e) : r ? r.value : t.get(e)
    };
    const pI = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            cI.set(this, ( () => jk("block", this.class))),
            dI.set(this, ( () => {
                this.loaded = !0
            }
            )),
            this.getVariant = (e, t) => ({
                "fl-sm": {
                    name: lI[`fastlane_en_sm_${t}`],
                    aspect: "aspect-flSmall"
                },
                "fl-md": {
                    name: lI[`fastlane_en_md_${t}`],
                    aspect: "aspect-flRegular"
                },
                "fl-tooltip": {
                    name: lI[`fastlane-with-tooltip_en_sm_${t}`],
                    aspect: "aspect-flTooltip"
                }
            }[e]),
            this.variant = void 0,
            this.class = void 0,
            this.path = zk,
            this.theme = tt,
            this.loaded = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            const {name: e, aspect: t} = this.getVariant(this.variant, this.theme);
            return P(D, {
                key: "8c903fa1c47b87dfcd6a8a21017c5badf4676cfd"
            }, this.loaded ? null : P("div", {
                class: t
            }), P("img", {
                key: "d5150384d8c37d31dfe2a3aff29d3c7bf05abd1d",
                src: `${this.path}/assets/${e}`,
                alt: Pr("global.aria.branding.altText"),
                class: Fk(this.loaded ? "" : "hidden", uI(this, cI, "f").call(this)),
                onLoad: uI(this, dI, "f")
            }))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-branding", {
        variant: [1],
        class: [1],
        path: [1],
        theme: [1],
        loaded: [32]
    }]);
    function hI() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-branding"].forEach((e => {
            if ("axo-branding" === e)
                customElements.get(e) || customElements.define(e, pI)
        }
        ))
    }
    cI = new WeakMap,
    dI = new WeakMap;
    const fI = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.class = "";
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "286fa92d1325e9ae9ee434a29c4e5002475605e5",
                class: jk("animate-spin block border-l-2 border-l-neutral-100 border-r-2 border-r-transparent border-t-2 border-t-white box-border h-full rounded-full w-full", this.class)
            })
        }
        get el() {
            return this
        }
    }
    , [1, "axo-spinner-loader", {
        class: [1]
    }]);
    function mI() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-spinner-loader"].forEach((e => {
            if ("axo-spinner-loader" === e)
                customElements.get(e) || customElements.define(e, fI)
        }
        ))
    }
    const gI = "flex h-auto w-full rounded-md text-center"
      , yI = "opacity-80 text-axoblack cursor-not-allowed"
      , vI = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this._getStyles = () => ({
                primary: jk("justify-center items-center p-3 bg-axoblue-500 text-axowhite fill-axowhite font-bold", !this.disabled && "hover:bg-[#234BEB] active:bg-[#04196E] focus:border-2 focus:border-axowhite focus:outline focus:outline-2 focus:outline-[#5879FB]"),
                secondary: jk("justify-center items-center rounded h-min px-4 py-2 bg-axoblue-400 text-axoblue-500 fill-axoblue-500", !this.disabled && "hover:bg-[#DEE3F9] active:bg-[#C5CCEA] focus:border-2 focus:border-axowhite focus:outline focus:outline-2 focus:outline-[#0A7FF5]"),
                tile: jk("justify-center bg-customBackgroundColor/25 rounded-md shadow-axo-sm min-h-[1em] p-4 gap-4", this.disabled && "justify-between items-center")
            }[this.variant]),
            this.variant = "primary",
            this.disabled = !1,
            this.selected = !1,
            this.type = "button",
            this.handleClick = void 0,
            this.buttonClass = "",
            this.isLoading = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "febee9610b01a68f5da8f50fa43231065f6e1674",
                disabled: this.disabled,
                selected: this.selected
            }, P("button", {
                key: "52ecf8a1ee098d14e3d9018ffa0473a7e8d85a3b",
                disabled: this.disabled || this.isLoading,
                class: jk(Fk({
                    [gI]: !0,
                    [this._getStyles()]: !0,
                    [yI]: this.disabled
                }, this.buttonClass)),
                onClick: this.handleClick,
                type: this.type
            }, this.isLoading ? P("axo-spinner-loader", {
                class: "w-6 h-6"
            }) : P(Fe, null, P("slot", null), this.disabled && "tile" === this.variant ? P("axo-icons", {
                class: "self-start",
                name: "NotAllowed",
                iconClass: "fill-axoblack w-5 rounded-full",
                "aria-label": Pr("global.aria.button.disabled")
            }) : this.selected && "tile" === this.variant ? P("axo-icons", {
                class: "self-start",
                name: "CheckCircleFilled",
                iconClass: "fill-axoblue-500 bg-axoblue-500/5 w-5 rounded-full",
                "aria-label": Pr("global.aria.button.selected")
            }) : null)))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-button", {
        variant: [1],
        disabled: [516],
        selected: [516],
        type: [1],
        handleClick: [16],
        buttonClass: [1, "button-class"],
        isLoading: [4, "is-loading"]
    }]);
    function bI() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-button", "axo-icons", "axo-spinner-loader"].forEach((e => {
            switch (e) {
            case "axo-button":
                customElements.get(e) || customElements.define(e, vI);
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI()
            }
        }
        ))
    }
    const EI = {
        countries: {
            ad: "0.431",
            ae: "0.862",
            ag: "1.293",
            ai: "1.724",
            al: "2.155",
            am: "2.586",
            an: "3.017",
            ao: "3.448",
            ar: "3.879",
            at: "4.310",
            au: "4.741",
            aw: "5.172",
            az: "5.603",
            ba: "6.034",
            bb: "6.466",
            be: "6.897",
            bf: "7.328",
            bg: "7.759",
            bh: "8.190",
            bi: "8.621",
            bj: "9.052",
            bm: "9.483",
            bn: "9.914",
            bo: "10.345",
            br: "10.776",
            bs: "11.207",
            bt: "11.638",
            bw: "12.069",
            by: "12.500",
            bz: "12.931",
            c2: "13.362",
            ca: "13.793",
            cd: "14.224",
            cg: "14.655",
            ch: "15.086",
            ci: "15.517",
            ck: "15.948",
            cl: "16.379",
            cm: "16.810",
            cn: "17.241",
            co: "17.672",
            cr: "18.103",
            cv: "18.534",
            cy: "18.966",
            cz: "19.397",
            de: "19.828",
            dj: "20.259",
            dk: "20.690",
            dm: "21.121",
            do: "21.552",
            dz: "21.983",
            ec: "22.414",
            ee: "22.845",
            eg: "23.276",
            er: "23.707",
            es: "24.138",
            et: "24.569",
            fi: "25.000",
            fj: "25.431",
            fk: "25.862",
            fm: "26.293",
            fo: "26.724",
            fr: "27.155",
            ga: "27.586",
            gb: "28.017",
            gd: "28.448",
            ge: "28.879",
            gf: "29.310",
            gi: "29.741",
            gl: "30.172",
            gm: "30.603",
            gn: "31.034",
            gp: "31.466",
            gr: "31.897",
            gt: "32.328",
            gw: "32.759",
            gy: "33.190",
            hk: "33.621",
            hn: "34.052",
            hr: "34.483",
            hu: "34.914",
            id: "35.345",
            ie: "35.776",
            il: "36.207",
            in: "36.638",
            is: "37.069",
            it: "37.500",
            jm: "37.931",
            jo: "38.362",
            jp: "38.793",
            ke: "39.224",
            kg: "39.655",
            kh: "40.086",
            ki: "40.517",
            km: "40.948",
            kn: "41.379",
            kr: "41.810",
            kw: "42.241",
            ky: "42.672",
            kz: "43.103",
            la: "43.534",
            lc: "43.966",
            li: "44.397",
            lk: "44.828",
            ls: "45.259",
            lt: "45.690",
            lu: "46.121",
            lv: "46.552",
            ma: "46.983",
            mc: "47.414",
            md: "47.845",
            me: "48.276",
            mg: "48.707",
            mh: "49.138",
            mk: "49.569",
            ml: "50.000",
            mn: "50.431",
            mq: "50.862",
            mr: "51.293",
            ms: "51.724",
            mt: "52.155",
            mu: "52.586",
            mv: "53.017",
            mw: "53.448",
            mx: "53.879",
            my: "54.310",
            mz: "54.741",
            na: "55.172",
            nc: "55.603",
            ne: "56.034",
            nf: "56.466",
            ng: "56.897",
            ni: "57.328",
            nl: "57.759",
            no: "58.190",
            np: "58.621",
            nr: "59.052",
            nu: "59.483",
            nz: "59.914",
            om: "60.345",
            pa: "60.776",
            pe: "61.207",
            pf: "61.638",
            pg: "62.069",
            ph: "62.500",
            pl: "62.931",
            pm: "63.362",
            pn: "63.793",
            pt: "64.224",
            pw: "64.655",
            py: "65.086",
            qa: "65.517",
            re: "65.948",
            ro: "66.379",
            rs: "66.810",
            ru: "67.241",
            rw: "67.672",
            sa: "68.103",
            sb: "68.534",
            sc: "68.966",
            se: "69.397",
            sg: "69.828",
            sh: "70.259",
            si: "70.690",
            sj: "71.121",
            sk: "71.552",
            sl: "71.983",
            sm: "72.414",
            sn: "72.845",
            so: "73.276",
            sr: "73.707",
            st: "74.138",
            sv: "74.569",
            sz: "75.000",
            tc: "75.431",
            td: "75.862",
            tg: "76.293",
            th: "76.724",
            tj: "77.155",
            tm: "77.586",
            tn: "78.017",
            to: "78.448",
            tr: "78.879",
            tt: "79.310",
            tv: "79.741",
            tw: "0.000",
            tz: "80.603",
            ua: "81.034",
            ug: "81.466",
            us: "81.897",
            uy: "82.328",
            va: "82.759",
            vc: "83.190",
            ve: "83.621",
            vg: "84.052",
            vn: "84.483",
            vu: "84.914",
            wf: "85.345",
            ws: "85.776",
            ye: "86.207",
            yt: "86.638",
            za: "87.069",
            zm: "87.500",
            zw: "87.931",
            eu: "88.362",
            af: "88.793",
            as: "89.224",
            bd: "89.655",
            io: "90.086",
            cf: "90.517",
            cx: "90.948",
            cc: "91.379",
            gq: "91.810",
            gh: "92.241",
            gu: "92.672",
            gg: "93.103",
            ht: "93.534",
            im: "93.966",
            lb: "94.397",
            je: "94.828",
            lr: "95.259",
            mo: "95.690",
            mm: "96.121",
            mp: "96.552",
            pk: "96.983",
            ps: "97.414",
            pr: "97.845",
            tl: "98.276",
            tk: "98.707",
            vi: "99.138",
            uz: "99.569",
            eh: "100.000"
        },
        sprites: {
            "1x": {
                url: "https://www.paypalobjects.com/paypal-ui/components/flags/1x.png",
                width: 32,
                height: 24
            },
            "2x": {
                url: "https://www.paypalobjects.com/paypal-ui/components/flags/2x.png",
                width: 64,
                height: 48
            },
            "3x": {
                url: "https://www.paypalobjects.com/paypal-ui/components/flags/3x.png",
                width: 96,
                height: 72
            }
        }
    }
      , _I = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.countryCode = "US";
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            var e;
            const {countries: t, sprites: n} = EI
              , r = {
                backgroundImage: `url(${n["1x"].url})`,
                backgroundPosition: `0% ${t[null === (e = this.countryCode) || void 0 === e ? void 0 : e.toLowerCase()]}%`
            };
            return P(D, {
                key: "00e700d1af3eaaa11b69dbacc3ec2f180f9afb9f"
            }, P("div", {
                key: "0e03929c2890a777d6601d4eef756e40df0c3de4",
                class: "inline-block box-border absolute left-2.5 w-8 h-6 -mb-4"
            }, P("span", {
                key: "d8d4974fed4acd72e04ea1d3a3f04998551fd5e9",
                style: r,
                class: "absolute w-8 h-6 bg-origin-border rounded bg-transparent border border-solid"
            })))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-country-flag", {
        countryCode: [1, "country-code"]
    }]);
    function AI() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-country-flag"].forEach((e => {
            if ("axo-country-flag" === e)
                customElements.get(e) || customElements.define(e, _I)
        }
        ))
    }
    const wI = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.componentDidLoad = () => {
                var e;
                this.focusOnLoad && (this.focusOnLoad = !1,
                null === (e = this.inputRef) || void 0 === e || e.focus())
            }
            ,
            this.triggerInputHandler = e => {
                var t, n;
                const r = null === (t = e.target) || void 0 === t ? void 0 : t.value;
                r != this.value && (this.value = r),
                null === (n = this.handleInput) || void 0 === n || n.call(this, e)
            }
            ,
            this.triggerChangeHandler = e => {
                var t;
                e.preventDefault(),
                null === (t = this.handleChange) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerBlurHandler = e => {
                var t;
                e.preventDefault(),
                null === (t = this.handleBlur) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerFocusHandler = e => {
                var t;
                null === (t = this.handleFocus) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerKeyDownHandler = e => {
                var t;
                null === (t = this.handleKeyDown) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerKeyUpHandler = e => {
                var t;
                e.preventDefault(),
                null === (t = this.handleKeyUp) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerPasteHandler = e => {
                this.handlePaste && (e.preventDefault(),
                this.handlePaste(e))
            }
            ,
            this.value = void 0,
            this.name = void 0,
            this.label = void 0,
            this.ariaLabel = void 0,
            this.selectedOptionText = void 0,
            this.rightIcon = P("axo-icons", {
                iconClass: "w-3.5 fill-axogray-800 absolute right-4 top-1/2 -translate-y-1/2",
                name: "ChevronDown"
            }),
            this.leftIcon = void 0,
            this.hasError = void 0,
            this.errorMessage = void 0,
            this.disabled = void 0,
            this.keepLabelUp = !1,
            this.small = !1,
            this.options = void 0,
            this.containerClass = void 0,
            this.labelClass = "left-3",
            this.selectOptions = [],
            this.handleInput = void 0,
            this.handleChange = void 0,
            this.handleBlur = void 0,
            this.handleFocus = void 0,
            this.handleKeyDown = void 0,
            this.handleKeyUp = void 0,
            this.handlePaste = void 0,
            this.focusOnLoad = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        async unfocus() {
            var e;
            null === (e = this.inputRef) || void 0 === e || e.blur()
        }
        async setFocus() {
            this.inputRef ? this.inputRef.focus() : this.focusOnLoad = !0
        }
        render() {
            var e, t;
            const n = `${this.name}-input`
              , r = this.hasError || !!(null === (e = this.errorMessage) || void 0 === e ? void 0 : e.length)
              , o = Boolean(this.value);
            return P(D, {
                key: "cc42e2726e68f77693616e193eaa2eb5f291ad90"
            }, P("div", {
                key: "c4b571d3479065ed277cb96f68718c39599fa2ee"
            }, P("div", {
                key: "3e1022dec10d0d083fc850e434b19ad10b957939",
                class: Gk(!!this.small, !!this.disabled, r, this.containerClass)
            }, this.leftIcon && Hk(this.leftIcon, "left"), P("div", {
                key: "9f5ba40604dd3895dda4ef2a88787cbeccadf3d5",
                class: "w-full"
            }, P("select", Object.assign({
                key: "3c0b029978c36cc3d623b8f788366dc469591985",
                ref: e => this.inputRef = e,
                id: n,
                name: this.name,
                "aria-label": [this.ariaLabel || this.label, this.errorMessage].filter((e => !!e)).join(", "),
                class: $k(!!this.small, Fk("absolute appearance-none pr-9 text-ellipsis top-2.5", this.leftIcon ? "left-9.5 w-[calc(100%-3.625em)] pl-1" : "left-2.5 w-[calc(100%-1.25em)]")),
                disabled: this.disabled,
                onInput: this.triggerInputHandler,
                onChange: this.triggerChangeHandler,
                onBlur: this.triggerBlurHandler,
                onFocus: this.triggerFocusHandler,
                onKeyDown: this.triggerKeyDownHandler,
                onKeyUp: this.triggerKeyUpHandler,
                onPaste: this.triggerPasteHandler
            }, this.options || {}), P("option", {
                key: "15cceae41d146ee82bee98a668dd9d10eaed6686",
                value: "",
                class: "hidden"
            }), this.selectOptions.map((e => P("option", {
                key: e.id,
                value: e.id,
                selected: this.value === e.id
            }, this.value === e.id && this.selectedOptionText ? this.selectedOptionText : e.value)))), P("label", {
                key: "c6f6b0a9bf4d5f3298a0193b689b3812bc7bf590",
                htmlFor: n,
                "aria-hidden": "true",
                class: Fk(Vk(o || !!this.keepLabelUp, this.labelClass), "z-10"),
                onClick: e => e.stopPropagation()
            }, this.label)), this.rightIcon), !!(null === (t = this.errorMessage) || void 0 === t ? void 0 : t.length) && Kk(this.errorMessage)))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-select-input", {
        value: [1025],
        name: [1],
        label: [1],
        ariaLabel: [1, "aria-label"],
        selectedOptionText: [1, "selected-option-text"],
        rightIcon: [16],
        leftIcon: [16],
        hasError: [4, "has-error"],
        errorMessage: [1, "error-message"],
        disabled: [4],
        keepLabelUp: [4, "keep-label-up"],
        small: [4],
        options: [16],
        containerClass: [1, "container-class"],
        labelClass: [1, "label-class"],
        selectOptions: [16],
        handleInput: [16],
        handleChange: [16],
        handleBlur: [16],
        handleFocus: [16],
        handleKeyDown: [16],
        handleKeyUp: [16],
        handlePaste: [16],
        focusOnLoad: [32],
        unfocus: [64],
        setFocus: [64]
    }]);
    function SI() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-select-input", "axo-icons"].forEach((e => {
            switch (e) {
            case "axo-select-input":
                customElements.get(e) || customElements.define(e, wI);
                break;
            case "axo-icons":
                customElements.get(e) || Xk()
            }
        }
        ))
    }
    function CI(e) {
        return "string" == typeof e || e instanceof String
    }
    function OI(e) {
        var t;
        return "object" == typeof e && null != e && "Object" === (null == e || null == (t = e.constructor) ? void 0 : t.name)
    }
    function xI(e, t) {
        return Array.isArray(t) ? xI(e, ( (e, n) => t.includes(n))) : Object.entries(e).reduce(( (e, n) => {
            let[r,o] = n;
            return t(o, r) && (e[r] = o),
            e
        }
        ), {})
    }
    const TI = "NONE"
      , NI = "LEFT"
      , kI = "FORCE_LEFT"
      , II = "RIGHT"
      , RI = "FORCE_RIGHT";
    function PI(e, t) {
        if (t === e)
            return !0;
        const n = Array.isArray(t)
          , r = Array.isArray(e);
        let o;
        if (n && r) {
            if (t.length != e.length)
                return !1;
            for (o = 0; o < t.length; o++)
                if (!PI(t[o], e[o]))
                    return !1;
            return !0
        }
        if (n != r)
            return !1;
        if (t && e && "object" == typeof t && "object" == typeof e) {
            const n = t instanceof Date
              , r = e instanceof Date;
            if (n && r)
                return t.getTime() == e.getTime();
            if (n != r)
                return !1;
            const i = t instanceof RegExp
              , a = e instanceof RegExp;
            if (i && a)
                return t.toString() == e.toString();
            if (i != a)
                return !1;
            const s = Object.keys(t);
            for (o = 0; o < s.length; o++)
                if (!Object.prototype.hasOwnProperty.call(e, s[o]))
                    return !1;
            for (o = 0; o < s.length; o++)
                if (!PI(e[s[o]], t[s[o]]))
                    return !1;
            return !0
        }
        return !(!t || !e || "function" != typeof t || "function" != typeof e) && t.toString() === e.toString()
    }
    class LI {
        constructor(e) {
            for (Object.assign(this, e); this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos); )
                --this.oldSelection.start;
            if (this.insertedCount)
                for (; this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end); )
                    this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end ? ++this.oldSelection.end : ++this.cursorPos
        }
        get startChangePos() {
            return Math.min(this.cursorPos, this.oldSelection.start)
        }
        get insertedCount() {
            return this.cursorPos - this.startChangePos
        }
        get inserted() {
            return this.value.substr(this.startChangePos, this.insertedCount)
        }
        get removedCount() {
            return Math.max(this.oldSelection.end - this.startChangePos || this.oldValue.length - this.value.length, 0)
        }
        get removed() {
            return this.oldValue.substr(this.startChangePos, this.removedCount)
        }
        get head() {
            return this.value.substring(0, this.startChangePos)
        }
        get tail() {
            return this.value.substring(this.startChangePos + this.insertedCount)
        }
        get removeDirection() {
            return !this.removedCount || this.insertedCount ? TI : this.oldSelection.end !== this.cursorPos && this.oldSelection.start !== this.cursorPos || this.oldSelection.end !== this.oldSelection.start ? NI : II
        }
    }
    function DI(e, t) {
        return new DI.InputMask(e,t)
    }
    function MI(e) {
        if (null == e)
            throw new Error("mask property should be defined");
        return e instanceof RegExp ? DI.MaskedRegExp : CI(e) ? DI.MaskedPattern : e === Date ? DI.MaskedDate : e === Number ? DI.MaskedNumber : Array.isArray(e) || e === Array ? DI.MaskedDynamic : DI.Masked && e.prototype instanceof DI.Masked ? e : DI.Masked && e instanceof DI.Masked ? e.constructor : e instanceof Function ? DI.MaskedFunction : (console.warn("Mask not found for mask", e),
        DI.Masked)
    }
    function FI(e) {
        if (!e)
            throw new Error("Options in not defined");
        if (DI.Masked) {
            if (e.prototype instanceof DI.Masked)
                return {
                    mask: e
                };
            const {mask: t, ...n} = e instanceof DI.Masked ? {
                mask: e
            } : OI(e) && e.mask instanceof DI.Masked ? e : {};
            if (t) {
                const e = t.mask;
                return {
                    ...xI(t, ( (e, t) => !t.startsWith("_"))),
                    mask: t.constructor,
                    _mask: e,
                    ...n
                }
            }
        }
        return OI(e) ? {
            ...e
        } : {
            mask: e
        }
    }
    function BI(e) {
        if (DI.Masked && e instanceof DI.Masked)
            return e;
        const t = FI(e)
          , n = MI(t.mask);
        if (!n)
            throw new Error("Masked class is not found for provided mask " + t.mask + ", appropriate module needs to be imported manually before creating mask.");
        return t.mask === n && delete t.mask,
        t._mask && (t.mask = t._mask,
        delete t._mask),
        new n(t)
    }
    DI.createMask = BI;
    class jI {
        get selectionStart() {
            let e;
            try {
                e = this._unsafeSelectionStart
            } catch {}
            return null != e ? e : this.value.length
        }
        get selectionEnd() {
            let e;
            try {
                e = this._unsafeSelectionEnd
            } catch {}
            return null != e ? e : this.value.length
        }
        select(e, t) {
            if (null != e && null != t && (e !== this.selectionStart || t !== this.selectionEnd))
                try {
                    this._unsafeSelect(e, t)
                } catch {}
        }
        get isActive() {
            return !1
        }
    }
    DI.MaskElement = jI;
    class UI extends jI {
        constructor(e) {
            super(),
            this.input = e,
            this._onKeydown = this._onKeydown.bind(this),
            this._onInput = this._onInput.bind(this),
            this._onBeforeinput = this._onBeforeinput.bind(this),
            this._onCompositionEnd = this._onCompositionEnd.bind(this)
        }
        get rootElement() {
            var e, t, n;
            return null != (e = null == (t = (n = this.input).getRootNode) ? void 0 : t.call(n)) ? e : document
        }
        get isActive() {
            return this.input === this.rootElement.activeElement
        }
        bindEvents(e) {
            this.input.addEventListener("keydown", this._onKeydown),
            this.input.addEventListener("input", this._onInput),
            this.input.addEventListener("beforeinput", this._onBeforeinput),
            this.input.addEventListener("compositionend", this._onCompositionEnd),
            this.input.addEventListener("drop", e.drop),
            this.input.addEventListener("click", e.click),
            this.input.addEventListener("focus", e.focus),
            this.input.addEventListener("blur", e.commit),
            this._handlers = e
        }
        _onKeydown(e) {
            return this._handlers.redo && (90 === e.keyCode && e.shiftKey && (e.metaKey || e.ctrlKey) || 89 === e.keyCode && e.ctrlKey) ? (e.preventDefault(),
            this._handlers.redo(e)) : this._handlers.undo && 90 === e.keyCode && (e.metaKey || e.ctrlKey) ? (e.preventDefault(),
            this._handlers.undo(e)) : void (e.isComposing || this._handlers.selectionChange(e))
        }
        _onBeforeinput(e) {
            return "historyUndo" === e.inputType && this._handlers.undo ? (e.preventDefault(),
            this._handlers.undo(e)) : "historyRedo" === e.inputType && this._handlers.redo ? (e.preventDefault(),
            this._handlers.redo(e)) : void 0
        }
        _onCompositionEnd(e) {
            this._handlers.input(e)
        }
        _onInput(e) {
            e.isComposing || this._handlers.input(e)
        }
        unbindEvents() {
            this.input.removeEventListener("keydown", this._onKeydown),
            this.input.removeEventListener("input", this._onInput),
            this.input.removeEventListener("beforeinput", this._onBeforeinput),
            this.input.removeEventListener("compositionend", this._onCompositionEnd),
            this.input.removeEventListener("drop", this._handlers.drop),
            this.input.removeEventListener("click", this._handlers.click),
            this.input.removeEventListener("focus", this._handlers.focus),
            this.input.removeEventListener("blur", this._handlers.commit),
            this._handlers = {}
        }
    }
    DI.HTMLMaskElement = UI;
    class GI extends UI {
        constructor(e) {
            super(e),
            this.input = e
        }
        get _unsafeSelectionStart() {
            return null != this.input.selectionStart ? this.input.selectionStart : this.value.length
        }
        get _unsafeSelectionEnd() {
            return this.input.selectionEnd
        }
        _unsafeSelect(e, t) {
            this.input.setSelectionRange(e, t)
        }
        get value() {
            return this.input.value
        }
        set value(e) {
            this.input.value = e
        }
    }
    DI.HTMLMaskElement = UI;
    class $I extends UI {
        get _unsafeSelectionStart() {
            const e = this.rootElement
              , t = e.getSelection && e.getSelection()
              , n = t && t.anchorOffset
              , r = t && t.focusOffset;
            return null == r || null == n || n < r ? n : r
        }
        get _unsafeSelectionEnd() {
            const e = this.rootElement
              , t = e.getSelection && e.getSelection()
              , n = t && t.anchorOffset
              , r = t && t.focusOffset;
            return null == r || null == n || n > r ? n : r
        }
        _unsafeSelect(e, t) {
            if (!this.rootElement.createRange)
                return;
            const n = this.rootElement.createRange();
            n.setStart(this.input.firstChild || this.input, e),
            n.setEnd(this.input.lastChild || this.input, t);
            const r = this.rootElement
              , o = r.getSelection && r.getSelection();
            o && (o.removeAllRanges(),
            o.addRange(n))
        }
        get value() {
            return this.input.textContent || ""
        }
        set value(e) {
            this.input.textContent = e
        }
    }
    DI.HTMLContenteditableMaskElement = $I;
    class VI {
        constructor() {
            this.states = [],
            this.currentIndex = 0
        }
        get currentState() {
            return this.states[this.currentIndex]
        }
        get isEmpty() {
            return 0 === this.states.length
        }
        push(e) {
            this.currentIndex < this.states.length - 1 && (this.states.length = this.currentIndex + 1),
            this.states.push(e),
            this.states.length > VI.MAX_LENGTH && this.states.shift(),
            this.currentIndex = this.states.length - 1
        }
        go(e) {
            return this.currentIndex = Math.min(Math.max(this.currentIndex + e, 0), this.states.length - 1),
            this.currentState
        }
        undo() {
            return this.go(-1)
        }
        redo() {
            return this.go(1)
        }
        clear() {
            this.states.length = 0,
            this.currentIndex = 0
        }
    }
    VI.MAX_LENGTH = 100;
    DI.InputMask = class {
        constructor(e, t) {
            this.el = e instanceof jI ? e : e.isContentEditable && "INPUT" !== e.tagName && "TEXTAREA" !== e.tagName ? new $I(e) : new GI(e),
            this.masked = BI(t),
            this._listeners = {},
            this._value = "",
            this._unmaskedValue = "",
            this._rawInputValue = "",
            this.history = new VI,
            this._saveSelection = this._saveSelection.bind(this),
            this._onInput = this._onInput.bind(this),
            this._onChange = this._onChange.bind(this),
            this._onDrop = this._onDrop.bind(this),
            this._onFocus = this._onFocus.bind(this),
            this._onClick = this._onClick.bind(this),
            this._onUndo = this._onUndo.bind(this),
            this._onRedo = this._onRedo.bind(this),
            this.alignCursor = this.alignCursor.bind(this),
            this.alignCursorFriendly = this.alignCursorFriendly.bind(this),
            this._bindEvents(),
            this.updateValue(),
            this._onChange()
        }
        maskEquals(e) {
            var t;
            return null == e || (null == (t = this.masked) ? void 0 : t.maskEquals(e))
        }
        get mask() {
            return this.masked.mask
        }
        set mask(e) {
            if (this.maskEquals(e))
                return;
            if (!(e instanceof DI.Masked) && this.masked.constructor === MI(e))
                return void this.masked.updateOptions({
                    mask: e
                });
            const t = e instanceof DI.Masked ? e : BI({
                mask: e
            });
            t.unmaskedValue = this.masked.unmaskedValue,
            this.masked = t
        }
        get value() {
            return this._value
        }
        set value(e) {
            this.value !== e && (this.masked.value = e,
            this.updateControl("auto"))
        }
        get unmaskedValue() {
            return this._unmaskedValue
        }
        set unmaskedValue(e) {
            this.unmaskedValue !== e && (this.masked.unmaskedValue = e,
            this.updateControl("auto"))
        }
        get rawInputValue() {
            return this._rawInputValue
        }
        set rawInputValue(e) {
            this.rawInputValue !== e && (this.masked.rawInputValue = e,
            this.updateControl(),
            this.alignCursor())
        }
        get typedValue() {
            return this.masked.typedValue
        }
        set typedValue(e) {
            this.masked.typedValueEquals(e) || (this.masked.typedValue = e,
            this.updateControl("auto"))
        }
        get displayValue() {
            return this.masked.displayValue
        }
        _bindEvents() {
            this.el.bindEvents({
                selectionChange: this._saveSelection,
                input: this._onInput,
                drop: this._onDrop,
                click: this._onClick,
                focus: this._onFocus,
                commit: this._onChange,
                undo: this._onUndo,
                redo: this._onRedo
            })
        }
        _unbindEvents() {
            this.el && this.el.unbindEvents()
        }
        _fireEvent(e, t) {
            const n = this._listeners[e];
            n && n.forEach((e => e(t)))
        }
        get selectionStart() {
            return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart
        }
        get cursorPos() {
            return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd
        }
        set cursorPos(e) {
            this.el && this.el.isActive && (this.el.select(e, e),
            this._saveSelection())
        }
        _saveSelection() {
            this.displayValue !== this.el.value && console.warn("Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly."),
            this._selection = {
                start: this.selectionStart,
                end: this.cursorPos
            }
        }
        updateValue() {
            this.masked.value = this.el.value,
            this._value = this.masked.value,
            this._unmaskedValue = this.masked.unmaskedValue,
            this._rawInputValue = this.masked.rawInputValue
        }
        updateControl(e) {
            const t = this.masked.unmaskedValue
              , n = this.masked.value
              , r = this.masked.rawInputValue
              , o = this.displayValue
              , i = this.unmaskedValue !== t || this.value !== n || this._rawInputValue !== r;
            this._unmaskedValue = t,
            this._value = n,
            this._rawInputValue = r,
            this.el.value !== o && (this.el.value = o),
            "auto" === e ? this.alignCursor() : null != e && (this.cursorPos = e),
            i && this._fireChangeEvents(),
            this._historyChanging || !i && !this.history.isEmpty || this.history.push({
                unmaskedValue: t,
                selection: {
                    start: this.selectionStart,
                    end: this.cursorPos
                }
            })
        }
        updateOptions(e) {
            const {mask: t, ...n} = e
              , r = !this.maskEquals(t)
              , o = this.masked.optionsIsChanged(n);
            r && (this.mask = t),
            o && this.masked.updateOptions(n),
            (r || o) && this.updateControl()
        }
        updateCursor(e) {
            null != e && (this.cursorPos = e,
            this._delayUpdateCursor(e))
        }
        _delayUpdateCursor(e) {
            this._abortUpdateCursor(),
            this._changingCursorPos = e,
            this._cursorChanging = setTimeout(( () => {
                this.el && (this.cursorPos = this._changingCursorPos,
                this._abortUpdateCursor())
            }
            ), 10)
        }
        _fireChangeEvents() {
            this._fireEvent("accept", this._inputEvent),
            this.masked.isComplete && this._fireEvent("complete", this._inputEvent)
        }
        _abortUpdateCursor() {
            this._cursorChanging && (clearTimeout(this._cursorChanging),
            delete this._cursorChanging)
        }
        alignCursor() {
            this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, NI))
        }
        alignCursorFriendly() {
            this.selectionStart === this.cursorPos && this.alignCursor()
        }
        on(e, t) {
            return this._listeners[e] || (this._listeners[e] = []),
            this._listeners[e].push(t),
            this
        }
        off(e, t) {
            if (!this._listeners[e])
                return this;
            if (!t)
                return delete this._listeners[e],
                this;
            const n = this._listeners[e].indexOf(t);
            return n >= 0 && this._listeners[e].splice(n, 1),
            this
        }
        _onInput(e) {
            this._inputEvent = e,
            this._abortUpdateCursor();
            const t = new LI({
                value: this.el.value,
                cursorPos: this.cursorPos,
                oldValue: this.displayValue,
                oldSelection: this._selection
            })
              , n = this.masked.rawInputValue
              , r = this.masked.splice(t.startChangePos, t.removed.length, t.inserted, t.removeDirection, {
                input: !0,
                raw: !0
            }).offset
              , o = n === this.masked.rawInputValue ? t.removeDirection : TI;
            let i = this.masked.nearestInputPos(t.startChangePos + r, o);
            o !== TI && (i = this.masked.nearestInputPos(i, TI)),
            this.updateControl(i),
            delete this._inputEvent
        }
        _onChange() {
            this.displayValue !== this.el.value && this.updateValue(),
            this.masked.doCommit(),
            this.updateControl(),
            this._saveSelection()
        }
        _onDrop(e) {
            e.preventDefault(),
            e.stopPropagation()
        }
        _onFocus(e) {
            this.alignCursorFriendly()
        }
        _onClick(e) {
            this.alignCursorFriendly()
        }
        _onUndo() {
            this._applyHistoryState(this.history.undo())
        }
        _onRedo() {
            this._applyHistoryState(this.history.redo())
        }
        _applyHistoryState(e) {
            e && (this._historyChanging = !0,
            this.unmaskedValue = e.unmaskedValue,
            this.el.select(e.selection.start, e.selection.end),
            this._saveSelection(),
            this._historyChanging = !1)
        }
        destroy() {
            this._unbindEvents(),
            this._listeners.length = 0,
            delete this.el
        }
    }
    ;
    class HI {
        static normalize(e) {
            return Array.isArray(e) ? e : [e, new HI]
        }
        constructor(e) {
            Object.assign(this, {
                inserted: "",
                rawInserted: "",
                tailShift: 0,
                skip: !1
            }, e)
        }
        aggregate(e) {
            return this.inserted += e.inserted,
            this.rawInserted += e.rawInserted,
            this.tailShift += e.tailShift,
            this.skip = this.skip || e.skip,
            this
        }
        get offset() {
            return this.tailShift + this.inserted.length
        }
        get consumed() {
            return Boolean(this.rawInserted) || this.skip
        }
        equals(e) {
            return this.inserted === e.inserted && this.tailShift === e.tailShift && this.rawInserted === e.rawInserted && this.skip === e.skip
        }
    }
    DI.ChangeDetails = HI;
    class KI {
        constructor(e, t, n) {
            void 0 === e && (e = ""),
            void 0 === t && (t = 0),
            this.value = e,
            this.from = t,
            this.stop = n
        }
        toString() {
            return this.value
        }
        extend(e) {
            this.value += String(e)
        }
        appendTo(e) {
            return e.append(this.toString(), {
                tail: !0
            }).aggregate(e._appendPlaceholder())
        }
        get state() {
            return {
                value: this.value,
                from: this.from,
                stop: this.stop
            }
        }
        set state(e) {
            Object.assign(this, e)
        }
        unshift(e) {
            if (!this.value.length || null != e && this.from >= e)
                return "";
            const t = this.value[0];
            return this.value = this.value.slice(1),
            t
        }
        shift() {
            if (!this.value.length)
                return "";
            const e = this.value[this.value.length - 1];
            return this.value = this.value.slice(0, -1),
            e
        }
    }
    class zI {
        constructor(e) {
            this._value = "",
            this._update({
                ...zI.DEFAULTS,
                ...e
            }),
            this._initialized = !0
        }
        updateOptions(e) {
            this.optionsIsChanged(e) && this.withValueRefresh(this._update.bind(this, e))
        }
        _update(e) {
            Object.assign(this, e)
        }
        get state() {
            return {
                _value: this.value,
                _rawInputValue: this.rawInputValue
            }
        }
        set state(e) {
            this._value = e._value
        }
        reset() {
            this._value = ""
        }
        get value() {
            return this._value
        }
        set value(e) {
            this.resolve(e, {
                input: !0
            })
        }
        resolve(e, t) {
            void 0 === t && (t = {
                input: !0
            }),
            this.reset(),
            this.append(e, t, ""),
            this.doCommit()
        }
        get unmaskedValue() {
            return this.value
        }
        set unmaskedValue(e) {
            this.resolve(e, {})
        }
        get typedValue() {
            return this.parse ? this.parse(this.value, this) : this.unmaskedValue
        }
        set typedValue(e) {
            this.format ? this.value = this.format(e, this) : this.unmaskedValue = String(e)
        }
        get rawInputValue() {
            return this.extractInput(0, this.displayValue.length, {
                raw: !0
            })
        }
        set rawInputValue(e) {
            this.resolve(e, {
                raw: !0
            })
        }
        get displayValue() {
            return this.value
        }
        get isComplete() {
            return !0
        }
        get isFilled() {
            return this.isComplete
        }
        nearestInputPos(e, t) {
            return e
        }
        totalInputPositions(e, t) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this.displayValue.length),
            Math.min(this.displayValue.length, t - e)
        }
        extractInput(e, t, n) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this.displayValue.length),
            this.displayValue.slice(e, t)
        }
        extractTail(e, t) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this.displayValue.length),
            new KI(this.extractInput(e, t),e)
        }
        appendTail(e) {
            return CI(e) && (e = new KI(String(e))),
            e.appendTo(this)
        }
        _appendCharRaw(e, t) {
            return e ? (this._value += e,
            new HI({
                inserted: e,
                rawInserted: e
            })) : new HI
        }
        _appendChar(e, t, n) {
            void 0 === t && (t = {});
            const r = this.state;
            let o;
            if ([e,o] = this.doPrepareChar(e, t),
            e && (o = o.aggregate(this._appendCharRaw(e, t)),
            !o.rawInserted && "pad" === this.autofix)) {
                const n = this.state;
                this.state = r;
                let i = this.pad(t);
                const a = this._appendCharRaw(e, t);
                i = i.aggregate(a),
                a.rawInserted || i.equals(o) ? o = i : this.state = n
            }
            if (o.inserted) {
                let e, i = !1 !== this.doValidate(t);
                if (i && null != n) {
                    const t = this.state;
                    if (!0 === this.overwrite) {
                        e = n.state;
                        for (let e = 0; e < o.rawInserted.length; ++e)
                            n.unshift(this.displayValue.length - o.tailShift)
                    }
                    let r = this.appendTail(n);
                    if (i = r.rawInserted.length === n.toString().length,
                    !(i && r.inserted || "shift" !== this.overwrite)) {
                        this.state = t,
                        e = n.state;
                        for (let e = 0; e < o.rawInserted.length; ++e)
                            n.shift();
                        r = this.appendTail(n),
                        i = r.rawInserted.length === n.toString().length
                    }
                    i && r.inserted && (this.state = t)
                }
                i || (o = new HI,
                this.state = r,
                n && e && (n.state = e))
            }
            return o
        }
        _appendPlaceholder() {
            return new HI
        }
        _appendEager() {
            return new HI
        }
        append(e, t, n) {
            if (!CI(e))
                throw new Error("value should be string");
            const r = CI(n) ? new KI(String(n)) : n;
            let o;
            null != t && t.tail && (t._beforeTailState = this.state),
            [e,o] = this.doPrepare(e, t);
            for (let n = 0; n < e.length; ++n) {
                const i = this._appendChar(e[n], t, r);
                if (!i.rawInserted && !this.doSkipInvalid(e[n], t, r))
                    break;
                o.aggregate(i)
            }
            return (!0 === this.eager || "append" === this.eager) && null != t && t.input && e && o.aggregate(this._appendEager()),
            null != r && (o.tailShift += this.appendTail(r).tailShift),
            o
        }
        remove(e, t) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this.displayValue.length),
            this._value = this.displayValue.slice(0, e) + this.displayValue.slice(t),
            new HI
        }
        withValueRefresh(e) {
            if (this._refreshing || !this._initialized)
                return e();
            this._refreshing = !0;
            const t = this.rawInputValue
              , n = this.value
              , r = e();
            return this.rawInputValue = t,
            this.value && this.value !== n && 0 === n.indexOf(this.value) && (this.append(n.slice(this.displayValue.length), {}, ""),
            this.doCommit()),
            delete this._refreshing,
            r
        }
        runIsolated(e) {
            if (this._isolated || !this._initialized)
                return e(this);
            this._isolated = !0;
            const t = this.state
              , n = e(this);
            return this.state = t,
            delete this._isolated,
            n
        }
        doSkipInvalid(e, t, n) {
            return Boolean(this.skipInvalid)
        }
        doPrepare(e, t) {
            return void 0 === t && (t = {}),
            HI.normalize(this.prepare ? this.prepare(e, this, t) : e)
        }
        doPrepareChar(e, t) {
            return void 0 === t && (t = {}),
            HI.normalize(this.prepareChar ? this.prepareChar(e, this, t) : e)
        }
        doValidate(e) {
            return (!this.validate || this.validate(this.value, this, e)) && (!this.parent || this.parent.doValidate(e))
        }
        doCommit() {
            this.commit && this.commit(this.value, this)
        }
        splice(e, t, n, r, o) {
            void 0 === n && (n = ""),
            void 0 === r && (r = TI),
            void 0 === o && (o = {
                input: !0
            });
            const i = e + t
              , a = this.extractTail(i)
              , s = !0 === this.eager || "remove" === this.eager;
            let l;
            s && (r = function(e) {
                switch (e) {
                case NI:
                    return kI;
                case II:
                    return RI;
                default:
                    return e
                }
            }(r),
            l = this.extractInput(0, i, {
                raw: !0
            }));
            let c = e;
            const d = new HI;
            if (r !== TI && (c = this.nearestInputPos(e, t > 1 && 0 !== e && !s ? TI : r),
            d.tailShift = c - e),
            d.aggregate(this.remove(c)),
            s && r !== TI && l === this.rawInputValue)
                if (r === kI) {
                    let e;
                    for (; l === this.rawInputValue && (e = this.displayValue.length); )
                        d.aggregate(new HI({
                            tailShift: -1
                        })).aggregate(this.remove(e - 1))
                } else
                    r === RI && a.unshift();
            return d.aggregate(this.append(n, o, a))
        }
        maskEquals(e) {
            return this.mask === e
        }
        optionsIsChanged(e) {
            return !PI(this, e)
        }
        typedValueEquals(e) {
            const t = this.typedValue;
            return e === t || zI.EMPTY_VALUES.includes(e) && zI.EMPTY_VALUES.includes(t) || !!this.format && this.format(e, this) === this.format(this.typedValue, this)
        }
        pad(e) {
            return new HI
        }
    }
    zI.DEFAULTS = {
        skipInvalid: !0
    },
    zI.EMPTY_VALUES = [void 0, null, ""],
    DI.Masked = zI;
    class WI {
        constructor(e, t) {
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            this.chunks = e,
            this.from = t
        }
        toString() {
            return this.chunks.map(String).join("")
        }
        extend(e) {
            if (!String(e))
                return;
            e = CI(e) ? new KI(String(e)) : e;
            const t = this.chunks[this.chunks.length - 1]
              , n = t && (t.stop === e.stop || null == e.stop) && e.from === t.from + t.toString().length;
            if (e instanceof KI)
                n ? t.extend(e.toString()) : this.chunks.push(e);
            else if (e instanceof WI) {
                if (null == e.stop) {
                    let t;
                    for (; e.chunks.length && null == e.chunks[0].stop; )
                        t = e.chunks.shift(),
                        t.from += e.from,
                        this.extend(t)
                }
                e.toString() && (e.stop = e.blockIndex,
                this.chunks.push(e))
            }
        }
        appendTo(e) {
            if (!(e instanceof DI.MaskedPattern)) {
                return new KI(this.toString()).appendTo(e)
            }
            const t = new HI;
            for (let n = 0; n < this.chunks.length; ++n) {
                const r = this.chunks[n]
                  , o = e._mapPosToBlock(e.displayValue.length)
                  , i = r.stop;
                let a;
                if (null != i && (!o || o.index <= i) && ((r instanceof WI || e._stops.indexOf(i) >= 0) && t.aggregate(e._appendPlaceholder(i)),
                a = r instanceof WI && e._blocks[i]),
                a) {
                    const n = a.appendTail(r);
                    t.aggregate(n);
                    const o = r.toString().slice(n.rawInserted.length);
                    o && t.aggregate(e.append(o, {
                        tail: !0
                    }))
                } else
                    t.aggregate(e.append(r.toString(), {
                        tail: !0
                    }))
            }
            return t
        }
        get state() {
            return {
                chunks: this.chunks.map((e => e.state)),
                from: this.from,
                stop: this.stop,
                blockIndex: this.blockIndex
            }
        }
        set state(e) {
            const {chunks: t, ...n} = e;
            Object.assign(this, n),
            this.chunks = t.map((e => {
                const t = "chunks"in e ? new WI : new KI;
                return t.state = e,
                t
            }
            ))
        }
        unshift(e) {
            if (!this.chunks.length || null != e && this.from >= e)
                return "";
            const t = null != e ? e - this.from : e;
            let n = 0;
            for (; n < this.chunks.length; ) {
                const e = this.chunks[n]
                  , r = e.unshift(t);
                if (e.toString()) {
                    if (!r)
                        break;
                    ++n
                } else
                    this.chunks.splice(n, 1);
                if (r)
                    return r
            }
            return ""
        }
        shift() {
            if (!this.chunks.length)
                return "";
            let e = this.chunks.length - 1;
            for (; 0 <= e; ) {
                const t = this.chunks[e]
                  , n = t.shift();
                if (t.toString()) {
                    if (!n)
                        break;
                    --e
                } else
                    this.chunks.splice(e, 1);
                if (n)
                    return n
            }
            return ""
        }
    }
    class YI {
        constructor(e, t) {
            this.masked = e,
            this._log = [];
            const {offset: n, index: r} = e._mapPosToBlock(t) || (t < 0 ? {
                index: 0,
                offset: 0
            } : {
                index: this.masked._blocks.length,
                offset: 0
            });
            this.offset = n,
            this.index = r,
            this.ok = !1
        }
        get block() {
            return this.masked._blocks[this.index]
        }
        get pos() {
            return this.masked._blockStartPos(this.index) + this.offset
        }
        get state() {
            return {
                index: this.index,
                offset: this.offset,
                ok: this.ok
            }
        }
        set state(e) {
            Object.assign(this, e)
        }
        pushState() {
            this._log.push(this.state)
        }
        popState() {
            const e = this._log.pop();
            return e && (this.state = e),
            e
        }
        bindBlock() {
            this.block || (this.index < 0 && (this.index = 0,
            this.offset = 0),
            this.index >= this.masked._blocks.length && (this.index = this.masked._blocks.length - 1,
            this.offset = this.block.displayValue.length))
        }
        _pushLeft(e) {
            for (this.pushState(),
            this.bindBlock(); 0 <= this.index; --this.index,
            this.offset = (null == (t = this.block) ? void 0 : t.displayValue.length) || 0) {
                var t;
                if (e())
                    return this.ok = !0
            }
            return this.ok = !1
        }
        _pushRight(e) {
            for (this.pushState(),
            this.bindBlock(); this.index < this.masked._blocks.length; ++this.index,
            this.offset = 0)
                if (e())
                    return this.ok = !0;
            return this.ok = !1
        }
        pushLeftBeforeFilled() {
            return this._pushLeft(( () => {
                if (!this.block.isFixed && this.block.value)
                    return this.offset = this.block.nearestInputPos(this.offset, kI),
                    0 !== this.offset || void 0
            }
            ))
        }
        pushLeftBeforeInput() {
            return this._pushLeft(( () => {
                if (!this.block.isFixed)
                    return this.offset = this.block.nearestInputPos(this.offset, NI),
                    !0
            }
            ))
        }
        pushLeftBeforeRequired() {
            return this._pushLeft(( () => {
                if (!(this.block.isFixed || this.block.isOptional && !this.block.value))
                    return this.offset = this.block.nearestInputPos(this.offset, NI),
                    !0
            }
            ))
        }
        pushRightBeforeFilled() {
            return this._pushRight(( () => {
                if (!this.block.isFixed && this.block.value)
                    return this.offset = this.block.nearestInputPos(this.offset, RI),
                    this.offset !== this.block.value.length || void 0
            }
            ))
        }
        pushRightBeforeInput() {
            return this._pushRight(( () => {
                if (!this.block.isFixed)
                    return this.offset = this.block.nearestInputPos(this.offset, TI),
                    !0
            }
            ))
        }
        pushRightBeforeRequired() {
            return this._pushRight(( () => {
                if (!(this.block.isFixed || this.block.isOptional && !this.block.value))
                    return this.offset = this.block.nearestInputPos(this.offset, TI),
                    !0
            }
            ))
        }
    }
    class XI {
        constructor(e) {
            Object.assign(this, e),
            this._value = "",
            this.isFixed = !0
        }
        get value() {
            return this._value
        }
        get unmaskedValue() {
            return this.isUnmasking ? this.value : ""
        }
        get rawInputValue() {
            return this._isRawInput ? this.value : ""
        }
        get displayValue() {
            return this.value
        }
        reset() {
            this._isRawInput = !1,
            this._value = ""
        }
        remove(e, t) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this._value.length),
            this._value = this._value.slice(0, e) + this._value.slice(t),
            this._value || (this._isRawInput = !1),
            new HI
        }
        nearestInputPos(e, t) {
            void 0 === t && (t = TI);
            const n = this._value.length;
            switch (t) {
            case NI:
            case kI:
                return 0;
            default:
                return n
            }
        }
        totalInputPositions(e, t) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this._value.length),
            this._isRawInput ? t - e : 0
        }
        extractInput(e, t, n) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this._value.length),
            void 0 === n && (n = {}),
            n.raw && this._isRawInput && this._value.slice(e, t) || ""
        }
        get isComplete() {
            return !0
        }
        get isFilled() {
            return Boolean(this._value)
        }
        _appendChar(e, t) {
            if (void 0 === t && (t = {}),
            this.isFilled)
                return new HI;
            const n = !0 === this.eager || "append" === this.eager
              , r = this.char === e && (this.isUnmasking || t.input || t.raw) && (!t.raw || !n) && !t.tail
              , o = new HI({
                inserted: this.char,
                rawInserted: r ? this.char : ""
            });
            return this._value = this.char,
            this._isRawInput = r && (t.raw || t.input),
            o
        }
        _appendEager() {
            return this._appendChar(this.char, {
                tail: !0
            })
        }
        _appendPlaceholder() {
            const e = new HI;
            return this.isFilled || (this._value = e.inserted = this.char),
            e
        }
        extractTail() {
            return new KI("")
        }
        appendTail(e) {
            return CI(e) && (e = new KI(String(e))),
            e.appendTo(this)
        }
        append(e, t, n) {
            const r = this._appendChar(e[0], t);
            return null != n && (r.tailShift += this.appendTail(n).tailShift),
            r
        }
        doCommit() {}
        get state() {
            return {
                _value: this._value,
                _rawInputValue: this.rawInputValue
            }
        }
        set state(e) {
            this._value = e._value,
            this._isRawInput = Boolean(e._rawInputValue)
        }
        pad(e) {
            return this._appendPlaceholder()
        }
    }
    class ZI {
        constructor(e) {
            const {parent: t, isOptional: n, placeholderChar: r, displayChar: o, lazy: i, eager: a, ...s} = e;
            this.masked = BI(s),
            Object.assign(this, {
                parent: t,
                isOptional: n,
                placeholderChar: r,
                displayChar: o,
                lazy: i,
                eager: a
            })
        }
        reset() {
            this.isFilled = !1,
            this.masked.reset()
        }
        remove(e, t) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this.value.length),
            0 === e && t >= 1 ? (this.isFilled = !1,
            this.masked.remove(e, t)) : new HI
        }
        get value() {
            return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : "")
        }
        get unmaskedValue() {
            return this.masked.unmaskedValue
        }
        get rawInputValue() {
            return this.masked.rawInputValue
        }
        get displayValue() {
            return this.masked.value && this.displayChar || this.value
        }
        get isComplete() {
            return Boolean(this.masked.value) || this.isOptional
        }
        _appendChar(e, t) {
            if (void 0 === t && (t = {}),
            this.isFilled)
                return new HI;
            const n = this.masked.state;
            let r = this.masked._appendChar(e, this.currentMaskFlags(t));
            return r.inserted && !1 === this.doValidate(t) && (r = new HI,
            this.masked.state = n),
            r.inserted || this.isOptional || this.lazy || t.input || (r.inserted = this.placeholderChar),
            r.skip = !r.inserted && !this.isOptional,
            this.isFilled = Boolean(r.inserted),
            r
        }
        append(e, t, n) {
            return this.masked.append(e, this.currentMaskFlags(t), n)
        }
        _appendPlaceholder() {
            return this.isFilled || this.isOptional ? new HI : (this.isFilled = !0,
            new HI({
                inserted: this.placeholderChar
            }))
        }
        _appendEager() {
            return new HI
        }
        extractTail(e, t) {
            return this.masked.extractTail(e, t)
        }
        appendTail(e) {
            return this.masked.appendTail(e)
        }
        extractInput(e, t, n) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this.value.length),
            this.masked.extractInput(e, t, n)
        }
        nearestInputPos(e, t) {
            void 0 === t && (t = TI);
            const n = this.value.length
              , r = Math.min(Math.max(e, 0), n);
            switch (t) {
            case NI:
            case kI:
                return this.isComplete ? r : 0;
            case II:
            case RI:
                return this.isComplete ? r : n;
            default:
                return r
            }
        }
        totalInputPositions(e, t) {
            return void 0 === e && (e = 0),
            void 0 === t && (t = this.value.length),
            this.value.slice(e, t).length
        }
        doValidate(e) {
            return this.masked.doValidate(this.currentMaskFlags(e)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(e)))
        }
        doCommit() {
            this.masked.doCommit()
        }
        get state() {
            return {
                _value: this.value,
                _rawInputValue: this.rawInputValue,
                masked: this.masked.state,
                isFilled: this.isFilled
            }
        }
        set state(e) {
            this.masked.state = e.masked,
            this.isFilled = e.isFilled
        }
        currentMaskFlags(e) {
            var t;
            return {
                ...e,
                _beforeTailState: (null == e || null == (t = e._beforeTailState) ? void 0 : t.masked) || (null == e ? void 0 : e._beforeTailState)
            }
        }
        pad(e) {
            return new HI
        }
    }
    ZI.DEFAULT_DEFINITIONS = {
        0: /\d/,
        a: /[\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
        "*": /./
    };
    DI.MaskedRegExp = class extends zI {
        updateOptions(e) {
            super.updateOptions(e)
        }
        _update(e) {
            const t = e.mask;
            t && (e.validate = e => e.search(t) >= 0),
            super._update(e)
        }
    }
    ;
    class qI extends zI {
        constructor(e) {
            super({
                ...qI.DEFAULTS,
                ...e,
                definitions: Object.assign({}, ZI.DEFAULT_DEFINITIONS, null == e ? void 0 : e.definitions)
            })
        }
        updateOptions(e) {
            super.updateOptions(e)
        }
        _update(e) {
            e.definitions = Object.assign({}, this.definitions, e.definitions),
            super._update(e),
            this._rebuildMask()
        }
        _rebuildMask() {
            const e = this.definitions;
            this._blocks = [],
            this.exposeBlock = void 0,
            this._stops = [],
            this._maskedBlocks = {};
            const t = this.mask;
            if (!t || !e)
                return;
            let n = !1
              , r = !1;
            for (let o = 0; o < t.length; ++o) {
                if (this.blocks) {
                    const e = t.slice(o)
                      , n = Object.keys(this.blocks).filter((t => 0 === e.indexOf(t)));
                    n.sort(( (e, t) => t.length - e.length));
                    const r = n[0];
                    if (r) {
                        const {expose: e, repeat: t, ...n} = FI(this.blocks[r])
                          , i = {
                            lazy: this.lazy,
                            eager: this.eager,
                            placeholderChar: this.placeholderChar,
                            displayChar: this.displayChar,
                            overwrite: this.overwrite,
                            autofix: this.autofix,
                            ...n,
                            repeat: t,
                            parent: this
                        }
                          , a = null != t ? new DI.RepeatBlock(i) : BI(i);
                        a && (this._blocks.push(a),
                        e && (this.exposeBlock = a),
                        this._maskedBlocks[r] || (this._maskedBlocks[r] = []),
                        this._maskedBlocks[r].push(this._blocks.length - 1)),
                        o += r.length - 1;
                        continue
                    }
                }
                let i = t[o]
                  , a = i in e;
                if (i === qI.STOP_CHAR) {
                    this._stops.push(this._blocks.length);
                    continue
                }
                if ("{" === i || "}" === i) {
                    n = !n;
                    continue
                }
                if ("[" === i || "]" === i) {
                    r = !r;
                    continue
                }
                if (i === qI.ESCAPE_CHAR) {
                    if (++o,
                    i = t[o],
                    !i)
                        break;
                    a = !1
                }
                const s = a ? new ZI({
                    isOptional: r,
                    lazy: this.lazy,
                    eager: this.eager,
                    placeholderChar: this.placeholderChar,
                    displayChar: this.displayChar,
                    ...FI(e[i]),
                    parent: this
                }) : new XI({
                    char: i,
                    eager: this.eager,
                    isUnmasking: n
                });
                this._blocks.push(s)
            }
        }
        get state() {
            return {
                ...super.state,
                _blocks: this._blocks.map((e => e.state))
            }
        }
        set state(e) {
            if (!e)
                return void this.reset();
            const {_blocks: t, ...n} = e;
            this._blocks.forEach(( (e, n) => e.state = t[n])),
            super.state = n
        }
        reset() {
            super.reset(),
            this._blocks.forEach((e => e.reset()))
        }
        get isComplete() {
            return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every((e => e.isComplete))
        }
        get isFilled() {
            return this._blocks.every((e => e.isFilled))
        }
        get isFixed() {
            return this._blocks.every((e => e.isFixed))
        }
        get isOptional() {
            return this._blocks.every((e => e.isOptional))
        }
        doCommit() {
            this._blocks.forEach((e => e.doCommit())),
            super.doCommit()
        }
        get unmaskedValue() {
            return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce(( (e, t) => e + t.unmaskedValue), "")
        }
        set unmaskedValue(e) {
            if (this.exposeBlock) {
                const t = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);
                this.exposeBlock.unmaskedValue = e,
                this.appendTail(t),
                this.doCommit()
            } else
                super.unmaskedValue = e
        }
        get value() {
            return this.exposeBlock ? this.exposeBlock.value : this._blocks.reduce(( (e, t) => e + t.value), "")
        }
        set value(e) {
            if (this.exposeBlock) {
                const t = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);
                this.exposeBlock.value = e,
                this.appendTail(t),
                this.doCommit()
            } else
                super.value = e
        }
        get typedValue() {
            return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue
        }
        set typedValue(e) {
            if (this.exposeBlock) {
                const t = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);
                this.exposeBlock.typedValue = e,
                this.appendTail(t),
                this.doCommit()
            } else
                super.typedValue = e
        }
        get displayValue() {
            return this._blocks.reduce(( (e, t) => e + t.displayValue), "")
        }
        appendTail(e) {
            return super.appendTail(e).aggregate(this._appendPlaceholder())
        }
        _appendEager() {
            var e;
            const t = new HI;
            let n = null == (e = this._mapPosToBlock(this.displayValue.length)) ? void 0 : e.index;
            if (null == n)
                return t;
            this._blocks[n].isFilled && ++n;
            for (let e = n; e < this._blocks.length; ++e) {
                const n = this._blocks[e]._appendEager();
                if (!n.inserted)
                    break;
                t.aggregate(n)
            }
            return t
        }
        _appendCharRaw(e, t) {
            void 0 === t && (t = {});
            const n = this._mapPosToBlock(this.displayValue.length)
              , r = new HI;
            if (!n)
                return r;
            for (let i, a = n.index; i = this._blocks[a]; ++a) {
                var o;
                const n = i._appendChar(e, {
                    ...t,
                    _beforeTailState: null == (o = t._beforeTailState) || null == (o = o._blocks) ? void 0 : o[a]
                });
                if (r.aggregate(n),
                n.consumed)
                    break
            }
            return r
        }
        extractTail(e, t) {
            void 0 === e && (e = 0),
            void 0 === t && (t = this.displayValue.length);
            const n = new WI;
            return e === t || this._forEachBlocksInRange(e, t, ( (e, t, r, o) => {
                const i = e.extractTail(r, o);
                i.stop = this._findStopBefore(t),
                i.from = this._blockStartPos(t),
                i instanceof WI && (i.blockIndex = t),
                n.extend(i)
            }
            )),
            n
        }
        extractInput(e, t, n) {
            if (void 0 === e && (e = 0),
            void 0 === t && (t = this.displayValue.length),
            void 0 === n && (n = {}),
            e === t)
                return "";
            let r = "";
            return this._forEachBlocksInRange(e, t, ( (e, t, o, i) => {
                r += e.extractInput(o, i, n)
            }
            )),
            r
        }
        _findStopBefore(e) {
            let t;
            for (let n = 0; n < this._stops.length; ++n) {
                const r = this._stops[n];
                if (!(r <= e))
                    break;
                t = r
            }
            return t
        }
        _appendPlaceholder(e) {
            const t = new HI;
            if (this.lazy && null == e)
                return t;
            const n = this._mapPosToBlock(this.displayValue.length);
            if (!n)
                return t;
            const r = n.index
              , o = null != e ? e : this._blocks.length;
            return this._blocks.slice(r, o).forEach((n => {
                var r;
                n.lazy && null == e || t.aggregate(n._appendPlaceholder(null == (r = n._blocks) ? void 0 : r.length))
            }
            )),
            t
        }
        _mapPosToBlock(e) {
            let t = "";
            for (let n = 0; n < this._blocks.length; ++n) {
                const r = this._blocks[n]
                  , o = t.length;
                if (t += r.displayValue,
                e <= t.length)
                    return {
                        index: n,
                        offset: e - o
                    }
            }
        }
        _blockStartPos(e) {
            return this._blocks.slice(0, e).reduce(( (e, t) => e + t.displayValue.length), 0)
        }
        _forEachBlocksInRange(e, t, n) {
            void 0 === t && (t = this.displayValue.length);
            const r = this._mapPosToBlock(e);
            if (r) {
                const e = this._mapPosToBlock(t)
                  , o = e && r.index === e.index
                  , i = r.offset
                  , a = e && o ? e.offset : this._blocks[r.index].displayValue.length;
                if (n(this._blocks[r.index], r.index, i, a),
                e && !o) {
                    for (let t = r.index + 1; t < e.index; ++t)
                        n(this._blocks[t], t, 0, this._blocks[t].displayValue.length);
                    n(this._blocks[e.index], e.index, 0, e.offset)
                }
            }
        }
        remove(e, t) {
            void 0 === e && (e = 0),
            void 0 === t && (t = this.displayValue.length);
            const n = super.remove(e, t);
            return this._forEachBlocksInRange(e, t, ( (e, t, r, o) => {
                n.aggregate(e.remove(r, o))
            }
            )),
            n
        }
        nearestInputPos(e, t) {
            if (void 0 === t && (t = TI),
            !this._blocks.length)
                return 0;
            const n = new YI(this,e);
            if (t === TI)
                return n.pushRightBeforeInput() ? n.pos : (n.popState(),
                n.pushLeftBeforeInput() ? n.pos : this.displayValue.length);
            if (t === NI || t === kI) {
                if (t === NI) {
                    if (n.pushRightBeforeFilled(),
                    n.ok && n.pos === e)
                        return e;
                    n.popState()
                }
                if (n.pushLeftBeforeInput(),
                n.pushLeftBeforeRequired(),
                n.pushLeftBeforeFilled(),
                t === NI) {
                    if (n.pushRightBeforeInput(),
                    n.pushRightBeforeRequired(),
                    n.ok && n.pos <= e)
                        return n.pos;
                    if (n.popState(),
                    n.ok && n.pos <= e)
                        return n.pos;
                    n.popState()
                }
                return n.ok ? n.pos : t === kI ? 0 : (n.popState(),
                n.ok ? n.pos : (n.popState(),
                n.ok ? n.pos : 0))
            }
            return t === II || t === RI ? (n.pushRightBeforeInput(),
            n.pushRightBeforeRequired(),
            n.pushRightBeforeFilled() ? n.pos : t === RI ? this.displayValue.length : (n.popState(),
            n.ok ? n.pos : (n.popState(),
            n.ok ? n.pos : this.nearestInputPos(e, NI)))) : e
        }
        totalInputPositions(e, t) {
            void 0 === e && (e = 0),
            void 0 === t && (t = this.displayValue.length);
            let n = 0;
            return this._forEachBlocksInRange(e, t, ( (e, t, r, o) => {
                n += e.totalInputPositions(r, o)
            }
            )),
            n
        }
        maskedBlock(e) {
            return this.maskedBlocks(e)[0]
        }
        maskedBlocks(e) {
            const t = this._maskedBlocks[e];
            return t ? t.map((e => this._blocks[e])) : []
        }
        pad(e) {
            const t = new HI;
            return this._forEachBlocksInRange(0, this.displayValue.length, (n => t.aggregate(n.pad(e)))),
            t
        }
    }
    qI.DEFAULTS = {
        ...zI.DEFAULTS,
        lazy: !0,
        placeholderChar: "_"
    },
    qI.STOP_CHAR = "`",
    qI.ESCAPE_CHAR = "\\",
    qI.InputDefinition = ZI,
    qI.FixedDefinition = XI,
    DI.MaskedPattern = qI;
    const JI = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.componentDidLoad = () => {
                var e, t, n;
                if (this.focusOnLoad && (this.focusOnLoad = !1,
                null === (e = this.inputRef) || void 0 === e || e.focus()),
                this.inputRef && this.maskOptions) {
                    const e = null !== (t = this.maskOptions) && void 0 !== t ? t : {}
                      , {prefilledValue: r} = e
                      , o = function(e, t) {
                        var n = {};
                        for (var r in e)
                            Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
                        if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                            var o = 0;
                            for (r = Object.getOwnPropertySymbols(e); o < r.length; o++)
                                t.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[o]) && (n[r[o]] = e[r[o]])
                        }
                        return n
                    }(e, ["prefilledValue"]);
                    this.inputMask = DI(this.inputRef, o),
                    r && (this.inputMask.unmaskedValue = r,
                    this.value = this.inputMask.value,
                    null === (n = this.handleMaskInput) || void 0 === n || n.call(this, {
                        masked: this.inputMask.value,
                        unmasked: this.inputMask.unmaskedValue
                    })),
                    this.inputMask.on("accept", ( () => {
                        var e;
                        this.inputMask && (this.value = this.inputMask.value,
                        null === (e = this.handleMaskInput) || void 0 === e || e.call(this, {
                            masked: this.inputMask.value,
                            unmasked: this.inputMask.unmaskedValue
                        }))
                    }
                    )),
                    Te(this)
                }
            }
            ,
            this.triggerInputHandler = e => {
                var t, n;
                const r = null === (t = e.target) || void 0 === t ? void 0 : t.value;
                r != this.value && (this.value = r),
                null === (n = this.handleInput) || void 0 === n || n.call(this, e)
            }
            ,
            this.triggerChangeHandler = e => {
                var t;
                e.preventDefault(),
                null === (t = this.handleChange) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerBlurHandler = e => {
                var t;
                e.preventDefault(),
                null === (t = this.handleBlur) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerFocusHandler = e => {
                var t;
                null === (t = this.handleFocus) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerKeyDownHandler = e => {
                var t;
                null === (t = this.handleKeyDown) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerKeyUpHandler = e => {
                var t;
                e.preventDefault(),
                null === (t = this.handleKeyUp) || void 0 === t || t.call(this, e)
            }
            ,
            this.triggerPasteHandler = e => {
                this.handlePaste && (e.preventDefault(),
                this.handlePaste(e))
            }
            ,
            this.value = void 0,
            this.name = void 0,
            this.label = void 0,
            this.ariaLabel = void 0,
            this.rightIcon = void 0,
            this.leftIcon = void 0,
            this.hasError = void 0,
            this.errorMessage = void 0,
            this.disabled = void 0,
            this.keepLabelUp = !1,
            this.small = !1,
            this.options = void 0,
            this.maskOptions = void 0,
            this.containerClass = void 0,
            this.labelClass = "",
            this.handleInput = void 0,
            this.handleMaskInput = void 0,
            this.handleChange = void 0,
            this.handleBlur = void 0,
            this.handleFocus = void 0,
            this.handleKeyDown = void 0,
            this.handleKeyUp = void 0,
            this.handlePaste = void 0,
            this.focusOnLoad = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        watchMaskOptions(e) {
            void 0 !== (null == e ? void 0 : e.prefilledValue) && this.inputMask && (this.inputMask.unmaskedValue = e.prefilledValue)
        }
        async unfocus() {
            var e;
            null === (e = this.inputRef) || void 0 === e || e.blur()
        }
        async setFocus() {
            this.inputRef ? this.inputRef.focus() : this.focusOnLoad = !0
        }
        render() {
            var e, t, n, r;
            const o = `${this.name}-input`
              , i = this.hasError || !!(null === (e = this.errorMessage) || void 0 === e ? void 0 : e.length)
              , a = this.inputMask ? Boolean(this.inputMask.value) : Boolean(this.value)
              , s = null !== (n = null === (t = this.inputMask) || void 0 === t ? void 0 : t.value) && void 0 !== n ? n : "";
            return P(D, {
                key: "ae445b880bf5aff2da1bd4bc5b95e3d190f451fe"
            }, P("div", {
                key: "de1abaf82bc193a712fead8c34e0a99f9b39ee1b"
            }, P("div", {
                key: "59a29aa0d82da5157c224f4a5667b649b09c1c72",
                class: Gk(!!this.small, !!this.disabled, i, this.containerClass)
            }, this.leftIcon && Hk(this.leftIcon, "left"), P("div", {
                key: "6bb497b410e65c84f8ac4578760bc37d90ccd9da",
                class: "w-full relative"
            }, P("input", Object.assign({
                key: "fb9d3937335976310d72a976895ef525bc626555",
                ref: e => this.inputRef = e,
                id: o,
                name: this.name,
                "aria-label": [this.ariaLabel || this.label, this.errorMessage].filter((e => !!e)).join(", "),
                disabled: this.disabled
            }, this.inputMask ? {} : {
                onInput: this.triggerInputHandler
            }, {
                onChange: this.triggerChangeHandler,
                onBlur: this.triggerBlurHandler,
                onFocus: this.triggerFocusHandler,
                onKeyDown: this.triggerKeyDownHandler,
                onKeyUp: this.triggerKeyUpHandler,
                onPaste: this.triggerPasteHandler
            }, this.options || {}, {
                value: this.inputMask ? s : this.value,
                class: $k(!!this.small)
            })), P("label", {
                key: "9ee6def710f3e3fee24d696495e2df0167bdd71f",
                htmlFor: o,
                "aria-hidden": "true",
                class: Vk(a || !!this.keepLabelUp, this.labelClass),
                onClick: e => e.stopPropagation()
            }, this.label)), this.rightIcon && Hk(this.rightIcon, "right")), !!(null === (r = this.errorMessage) || void 0 === r ? void 0 : r.length) && Kk(this.errorMessage)))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                maskOptions: ["watchMaskOptions"]
            }
        }
    }
    , [1, "axo-text-input", {
        value: [1025],
        name: [1],
        label: [1],
        ariaLabel: [1, "aria-label"],
        rightIcon: [16],
        leftIcon: [16],
        hasError: [4, "has-error"],
        errorMessage: [1, "error-message"],
        disabled: [4],
        keepLabelUp: [4, "keep-label-up"],
        small: [4],
        options: [16],
        maskOptions: [16],
        containerClass: [1, "container-class"],
        labelClass: [1, "label-class"],
        handleInput: [16],
        handleMaskInput: [16],
        handleChange: [16],
        handleBlur: [16],
        handleFocus: [16],
        handleKeyDown: [16],
        handleKeyUp: [16],
        handlePaste: [16],
        focusOnLoad: [32],
        unfocus: [64],
        setFocus: [64]
    }, void 0, {
        maskOptions: ["watchMaskOptions"]
    }]);
    function QI() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-text-input"].forEach((e => {
            if ("axo-text-input" === e)
                customElements.get(e) || customElements.define(e, JI)
        }
        ))
    }
    const eR = {
        US: !0,
        CA: !0,
        MX: !0,
        AF: !0,
        AX: !0,
        AL: !0,
        DZ: !0,
        AS: !0,
        AD: !0,
        AO: !0,
        AI: !0,
        AG: !0,
        AR: !0,
        AM: !0,
        AW: !0,
        AU: !0,
        AT: !0,
        AZ: !0,
        BS: !0,
        BH: !0,
        BD: !0,
        BB: !0,
        BY: !0,
        BE: !0,
        BZ: !0,
        BJ: !0,
        BM: !0,
        BT: !0,
        BO: !0,
        BQ: !0,
        BA: !0,
        BW: !0,
        BR: !0,
        IO: !0,
        BN: !0,
        BG: !0,
        BF: !0,
        BI: !0,
        KH: !0,
        CM: !0,
        CV: !0,
        KY: !0,
        CF: !0,
        TD: !0,
        CL: !0,
        CN: !0,
        CX: !0,
        CC: !0,
        CO: !0,
        KM: !0,
        CG: !0,
        CD: !0,
        CK: !0,
        CR: !0,
        CI: !0,
        HR: !0,
        CU: !0,
        CW: !0,
        CY: !0,
        CZ: !0,
        DK: !0,
        DJ: !0,
        DM: !0,
        DO: !0,
        EC: !0,
        EG: !0,
        SV: !0,
        GQ: !0,
        ER: !0,
        EE: !0,
        ET: !0,
        FK: !0,
        FO: !0,
        FJ: !0,
        FI: !0,
        FR: !0,
        GF: !0,
        PF: !0,
        TF: !0,
        GA: !0,
        GM: !0,
        GE: !0,
        DE: !0,
        GH: !0,
        GI: !0,
        GR: !0,
        GL: !0,
        GD: !0,
        GP: !0,
        GU: !0,
        GT: !0,
        GG: !0,
        GN: !0,
        GW: !0,
        GY: !0,
        HT: !0,
        HN: !0,
        HK: !0,
        HU: !0,
        IS: !0,
        IN: !0,
        ID: !0,
        IR: !0,
        IQ: !0,
        IE: !0,
        IM: !0,
        IL: !0,
        IT: !0,
        JM: !0,
        JP: !0,
        JE: !0,
        JO: !0,
        KZ: !0,
        KE: !0,
        KI: !0,
        KP: !0,
        KR: !0,
        KW: !0,
        KG: !0,
        LA: !0,
        LV: !0,
        LB: !0,
        LS: !0,
        LR: !0,
        LY: !0,
        LI: !0,
        LT: !0,
        LU: !0,
        MO: !0,
        MK: !0,
        MG: !0,
        MW: !0,
        MY: !0,
        MV: !0,
        ML: !0,
        MT: !0,
        MH: !0,
        MQ: !0,
        MR: !0,
        MU: !0,
        YT: !0,
        FM: !0,
        MD: !0,
        MC: !0,
        MN: !0,
        ME: !0,
        MS: !0,
        MA: !0,
        MZ: !0,
        MM: !0,
        NA: !0,
        NR: !0,
        NP: !0,
        NL: !0,
        NC: !0,
        NZ: !0,
        NI: !0,
        NE: !0,
        NG: !0,
        NU: !0,
        NF: !0,
        MP: !0,
        NO: !0,
        OM: !0,
        PK: !0,
        PW: !0,
        PS: !0,
        PA: !0,
        PG: !0,
        PY: !0,
        PE: !0,
        PH: !0,
        PN: !0,
        PL: !0,
        PT: !0,
        PR: !0,
        QA: !0,
        RE: !0,
        RO: !0,
        RU: !0,
        RW: !0,
        BL: !0,
        SH: !0,
        KN: !0,
        LC: !0,
        MF: !0,
        PM: !0,
        VC: !0,
        WS: !0,
        SM: !0,
        ST: !0,
        SA: !0,
        SN: !0,
        RS: !0,
        SC: !0,
        SL: !0,
        SG: !0,
        SX: !0,
        SK: !0,
        SI: !0,
        SB: !0,
        SO: !0,
        ZA: !0,
        SS: !0,
        ES: !0,
        LK: !0,
        SD: !0,
        SR: !0,
        SJ: !0,
        SZ: !0,
        SE: !0,
        CH: !0,
        SY: !0,
        TW: !0,
        TJ: !0,
        TZ: !0,
        TH: !0,
        TL: !0,
        TG: !0,
        TK: !0,
        TO: !0,
        TT: !0,
        TN: !0,
        TR: !0,
        TM: !0,
        TC: !0,
        TV: !0,
        UG: !0,
        UA: !0,
        AE: !0,
        GB: !0,
        UY: !0,
        UZ: !0,
        VU: !0,
        VA: !0,
        VE: !0,
        VN: !0,
        VG: !0,
        VI: !0,
        WF: !0,
        EH: !0,
        YE: !0,
        ZM: !0,
        ZW: !0
    }
      , tR = [{
        value: "United States",
        id: "US"
    }, {
        value: "Canada",
        id: "CA"
    }, {
        value: "Mexico",
        id: "MX"
    }, {
        value: "Afghanistan",
        id: "AF"
    }, {
        value: "Åland Islands",
        id: "AX"
    }, {
        value: "Albania",
        id: "AL"
    }, {
        value: "Algeria",
        id: "DZ"
    }, {
        value: "American Samoa",
        id: "AS"
    }, {
        value: "Andorra",
        id: "AD"
    }, {
        value: "Angola",
        id: "AO"
    }, {
        value: "Anguilla",
        id: "AI"
    }, {
        value: "Antigua & Barbuda",
        id: "AG"
    }, {
        value: "Argentina",
        id: "AR"
    }, {
        value: "Armenia",
        id: "AM"
    }, {
        value: "Aruba",
        id: "AW"
    }, {
        value: "Australia",
        id: "AU"
    }, {
        value: "Austria",
        id: "AT"
    }, {
        value: "Azerbaijan",
        id: "AZ"
    }, {
        value: "Bahamas",
        id: "BS"
    }, {
        value: "Bahrain",
        id: "BH"
    }, {
        value: "Bangladesh",
        id: "BD"
    }, {
        value: "Barbados",
        id: "BB"
    }, {
        value: "Belarus",
        id: "BY"
    }, {
        value: "Belgium",
        id: "BE"
    }, {
        value: "Belize",
        id: "BZ"
    }, {
        value: "Benin",
        id: "BJ"
    }, {
        value: "Bermuda",
        id: "BM"
    }, {
        value: "Bhutan",
        id: "BT"
    }, {
        value: "Bolivia",
        id: "BO"
    }, {
        value: "Caribbean Netherlands",
        id: "BQ"
    }, {
        value: "Bosnia & Herzegovina",
        id: "BA"
    }, {
        value: "Botswana",
        id: "BW"
    }, {
        value: "Brazil",
        id: "BR"
    }, {
        value: "British Indian Ocean Territory",
        id: "IO"
    }, {
        value: "Brunei",
        id: "BN"
    }, {
        value: "Bulgaria",
        id: "BG"
    }, {
        value: "Burkina Faso",
        id: "BF"
    }, {
        value: "Burundi",
        id: "BI"
    }, {
        value: "Cambodia",
        id: "KH"
    }, {
        value: "Cameroon",
        id: "CM"
    }, {
        value: "Cape Verde",
        id: "CV"
    }, {
        value: "Cayman Islands",
        id: "KY"
    }, {
        value: "Central African Republic",
        id: "CF"
    }, {
        value: "Chad",
        id: "TD"
    }, {
        value: "Chile",
        id: "CL"
    }, {
        value: "China",
        id: "CN"
    }, {
        value: "Christmas Island",
        id: "CX"
    }, {
        value: "Cocos (Keeling) Islands",
        id: "CC"
    }, {
        value: "Colombia",
        id: "CO"
    }, {
        value: "Comoros",
        id: "KM"
    }, {
        value: "Congo - Brazzaville",
        id: "CG"
    }, {
        value: "Congo - Kinshasa",
        id: "CD"
    }, {
        value: "Cook Islands",
        id: "CK"
    }, {
        value: "Costa Rica",
        id: "CR"
    }, {
        value: "Côte d’Ivoire",
        id: "CI"
    }, {
        value: "Croatia",
        id: "HR"
    }, {
        value: "Cuba",
        id: "CU"
    }, {
        value: "Curaçao",
        id: "CW"
    }, {
        value: "Cyprus",
        id: "CY"
    }, {
        value: "Czechia",
        id: "CZ"
    }, {
        value: "Denmark",
        id: "DK"
    }, {
        value: "Djibouti",
        id: "DJ"
    }, {
        value: "Dominica",
        id: "DM"
    }, {
        value: "Dominican Republic",
        id: "DO"
    }, {
        value: "Ecuador",
        id: "EC"
    }, {
        value: "Egypt",
        id: "EG"
    }, {
        value: "El Salvador",
        id: "SV"
    }, {
        value: "Equatorial Guinea",
        id: "GQ"
    }, {
        value: "Eritrea",
        id: "ER"
    }, {
        value: "Estonia",
        id: "EE"
    }, {
        value: "Ethiopia",
        id: "ET"
    }, {
        value: "Falkland Islands",
        id: "FK"
    }, {
        value: "Faroe Islands",
        id: "FO"
    }, {
        value: "Fiji",
        id: "FJ"
    }, {
        value: "Finland",
        id: "FI"
    }, {
        value: "France",
        id: "FR"
    }, {
        value: "French Guiana",
        id: "GF"
    }, {
        value: "French Polynesia",
        id: "PF"
    }, {
        value: "Gabon",
        id: "GA"
    }, {
        value: "Gambia",
        id: "GM"
    }, {
        value: "Georgia",
        id: "GE"
    }, {
        value: "Germany",
        id: "DE"
    }, {
        value: "Ghana",
        id: "GH"
    }, {
        value: "Gibraltar",
        id: "GI"
    }, {
        value: "Greece",
        id: "GR"
    }, {
        value: "Greenland",
        id: "GL"
    }, {
        value: "Grenada",
        id: "GD"
    }, {
        value: "Guadeloupe",
        id: "GP"
    }, {
        value: "Guam",
        id: "GU"
    }, {
        value: "Guatemala",
        id: "GT"
    }, {
        value: "Guernsey",
        id: "GG"
    }, {
        value: "Guinea",
        id: "GN"
    }, {
        value: "Guinea-Bissau",
        id: "GW"
    }, {
        value: "Guyana",
        id: "GY"
    }, {
        value: "Haiti",
        id: "HT"
    }, {
        value: "Honduras",
        id: "HN"
    }, {
        value: "Hong Kong SAR China",
        id: "HK"
    }, {
        value: "Hungary",
        id: "HU"
    }, {
        value: "Iceland",
        id: "IS"
    }, {
        value: "India",
        id: "IN"
    }, {
        value: "Indonesia",
        id: "ID"
    }, {
        value: "Iran",
        id: "IR"
    }, {
        value: "Iraq",
        id: "IQ"
    }, {
        value: "Ireland",
        id: "IE"
    }, {
        value: "Isle of Man",
        id: "IM"
    }, {
        value: "Israel",
        id: "IL"
    }, {
        value: "Italy",
        id: "IT"
    }, {
        value: "Jamaica",
        id: "JM"
    }, {
        value: "Japan",
        id: "JP"
    }, {
        value: "Jersey",
        id: "JE"
    }, {
        value: "Jordan",
        id: "JO"
    }, {
        value: "Kazakhstan",
        id: "KZ"
    }, {
        value: "Kenya",
        id: "KE"
    }, {
        value: "Kiribati",
        id: "KI"
    }, {
        value: "North Korea",
        id: "KP"
    }, {
        value: "South Korea",
        id: "KR"
    }, {
        value: "Kuwait",
        id: "KW"
    }, {
        value: "Kyrgyzstan",
        id: "KG"
    }, {
        value: "Laos",
        id: "LA"
    }, {
        value: "Latvia",
        id: "LV"
    }, {
        value: "Lebanon",
        id: "LB"
    }, {
        value: "Lesotho",
        id: "LS"
    }, {
        value: "Liberia",
        id: "LR"
    }, {
        value: "Libya",
        id: "LY"
    }, {
        value: "Liechtenstein",
        id: "LI"
    }, {
        value: "Lithuania",
        id: "LT"
    }, {
        value: "Luxembourg",
        id: "LU"
    }, {
        value: "Macao SAR China",
        id: "MO"
    }, {
        value: "North Macedonia",
        id: "MK"
    }, {
        value: "Madagascar",
        id: "MG"
    }, {
        value: "Malawi",
        id: "MW"
    }, {
        value: "Malaysia",
        id: "MY"
    }, {
        value: "Maldives",
        id: "MV"
    }, {
        value: "Mali",
        id: "ML"
    }, {
        value: "Malta",
        id: "MT"
    }, {
        value: "Marshall Islands",
        id: "MH"
    }, {
        value: "Martinique",
        id: "MQ"
    }, {
        value: "Mauritania",
        id: "MR"
    }, {
        value: "Mauritius",
        id: "MU"
    }, {
        value: "Mayotte",
        id: "YT"
    }, {
        value: "Micronesia",
        id: "FM"
    }, {
        value: "Moldova",
        id: "MD"
    }, {
        value: "Monaco",
        id: "MC"
    }, {
        value: "Mongolia",
        id: "MN"
    }, {
        value: "Montenegro",
        id: "ME"
    }, {
        value: "Montserrat",
        id: "MS"
    }, {
        value: "Morocco",
        id: "MA"
    }, {
        value: "Mozambique",
        id: "MZ"
    }, {
        value: "Myanmar (Burma)",
        id: "MM"
    }, {
        value: "Namibia",
        id: "NA"
    }, {
        value: "Nauru",
        id: "NR"
    }, {
        value: "Nepal",
        id: "NP"
    }, {
        value: "Netherlands",
        id: "NL"
    }, {
        value: "New Caledonia",
        id: "NC"
    }, {
        value: "New Zealand",
        id: "NZ"
    }, {
        value: "Nicaragua",
        id: "NI"
    }, {
        value: "Niger",
        id: "NE"
    }, {
        value: "Nigeria",
        id: "NG"
    }, {
        value: "Niue",
        id: "NU"
    }, {
        value: "Norfolk Island",
        id: "NF"
    }, {
        value: "Northern Mariana Islands",
        id: "MP"
    }, {
        value: "Norway",
        id: "NO"
    }, {
        value: "Oman",
        id: "OM"
    }, {
        value: "Pakistan",
        id: "PK"
    }, {
        value: "Palau",
        id: "PW"
    }, {
        value: "Palestinian Territories",
        id: "PS"
    }, {
        value: "Panama",
        id: "PA"
    }, {
        value: "Papua New Guinea",
        id: "PG"
    }, {
        value: "Paraguay",
        id: "PY"
    }, {
        value: "Peru",
        id: "PE"
    }, {
        value: "Philippines",
        id: "PH"
    }, {
        value: "Pitcairn Islands",
        id: "PN"
    }, {
        value: "Poland",
        id: "PL"
    }, {
        value: "Portugal",
        id: "PT"
    }, {
        value: "Puerto Rico",
        id: "PR"
    }, {
        value: "Qatar",
        id: "QA"
    }, {
        value: "Réunion",
        id: "RE"
    }, {
        value: "Romania",
        id: "RO"
    }, {
        value: "Russia",
        id: "RU"
    }, {
        value: "Rwanda",
        id: "RW"
    }, {
        value: "St. Barthélemy",
        id: "BL"
    }, {
        value: "St. Helena",
        id: "SH"
    }, {
        value: "St. Kitts & Nevis",
        id: "KN"
    }, {
        value: "St. Lucia",
        id: "LC"
    }, {
        value: "St. Martin",
        id: "MF"
    }, {
        value: "St. Pierre & Miquelon",
        id: "PM"
    }, {
        value: "St. Vincent & Grenadines",
        id: "VC"
    }, {
        value: "Samoa",
        id: "WS"
    }, {
        value: "San Marino",
        id: "SM"
    }, {
        value: "São Tomé & Príncipe",
        id: "ST"
    }, {
        value: "Saudi Arabia",
        id: "SA"
    }, {
        value: "Senegal",
        id: "SN"
    }, {
        value: "Serbia",
        id: "RS"
    }, {
        value: "Seychelles",
        id: "SC"
    }, {
        value: "Sierra Leone",
        id: "SL"
    }, {
        value: "Singapore",
        id: "SG"
    }, {
        value: "Sint Maarten",
        id: "SX"
    }, {
        value: "Slovakia",
        id: "SK"
    }, {
        value: "Slovenia",
        id: "SI"
    }, {
        value: "Solomon Islands",
        id: "SB"
    }, {
        value: "Somalia",
        id: "SO"
    }, {
        value: "South Africa",
        id: "ZA"
    }, {
        value: "South Sudan",
        id: "SS"
    }, {
        value: "Spain",
        id: "ES"
    }, {
        value: "Sri Lanka",
        id: "LK"
    }, {
        value: "Sudan",
        id: "SD"
    }, {
        value: "Suriname",
        id: "SR"
    }, {
        value: "Svalbard & Jan Mayen",
        id: "SJ"
    }, {
        value: "Eswatini",
        id: "SZ"
    }, {
        value: "Sweden",
        id: "SE"
    }, {
        value: "Switzerland",
        id: "CH"
    }, {
        value: "Syria",
        id: "SY"
    }, {
        value: "Taiwan",
        id: "TW"
    }, {
        value: "Tajikistan",
        id: "TJ"
    }, {
        value: "Tanzania",
        id: "TZ"
    }, {
        value: "Thailand",
        id: "TH"
    }, {
        value: "Timor-Leste",
        id: "TL"
    }, {
        value: "Togo",
        id: "TG"
    }, {
        value: "Tokelau",
        id: "TK"
    }, {
        value: "Tonga",
        id: "TO"
    }, {
        value: "Trinidad & Tobago",
        id: "TT"
    }, {
        value: "Tunisia",
        id: "TN"
    }, {
        value: "Türkiye",
        id: "TR"
    }, {
        value: "Turkmenistan",
        id: "TM"
    }, {
        value: "Turks & Caicos Islands",
        id: "TC"
    }, {
        value: "Tuvalu",
        id: "TV"
    }, {
        value: "Uganda",
        id: "UG"
    }, {
        value: "Ukraine",
        id: "UA"
    }, {
        value: "United Arab Emirates",
        id: "AE"
    }, {
        value: "United Kingdom",
        id: "GB"
    }, {
        value: "Uruguay",
        id: "UY"
    }, {
        value: "Uzbekistan",
        id: "UZ"
    }, {
        value: "Vanuatu",
        id: "VU"
    }, {
        value: "Vatican City",
        id: "VA"
    }, {
        value: "Venezuela",
        id: "VE"
    }, {
        value: "Vietnam",
        id: "VN"
    }, {
        value: "British Virgin Islands",
        id: "VG"
    }, {
        value: "U.S. Virgin Islands",
        id: "VI"
    }, {
        value: "Wallis & Futuna",
        id: "WF"
    }, {
        value: "Western Sahara",
        id: "EH"
    }, {
        value: "Yemen",
        id: "YE"
    }, {
        value: "Zambia",
        id: "ZM"
    }, {
        value: "Zimbabwe",
        id: "ZW"
    }]
      , nR = {
        addressLine2: Pr("global.aria.address.form.line2")
    }
      , rR = ["givenName", "surname"]
      , oR = (e, t, n) => {
        const r = new oN(e,{
            type: "portableAddress",
            addressRegion: t
        });
        return null == (n = n.map((n => {
            var r, o;
            if ("recipient" === (null === (o = null === (r = n.parts) || void 0 === r ? void 0 : r[0]) || void 0 === o ? void 0 : o.type)) {
                const r = new Kx(e,{
                    nameRegion: t
                })
                  , o = new oN(e,{
                    type: "personName",
                    nameRegion: t
                })
                  , i = r.formatToParts({}).filter((e => rR.includes(e.type))).map((e => Object.assign(Object.assign({}, e), {
                    label: o.select(e.type)
                })));
                return Object.assign(Object.assign({}, n), {
                    parts: i
                })
            }
            return n
        }
        ))) ? void 0 : n.map((n => {
            var o;
            return Object.assign(Object.assign({}, n), {
                parts: null === (o = n.parts) || void 0 === o ? void 0 : o.flatMap((n => {
                    var o;
                    const i = ( (e, t, n) => {
                        switch (e) {
                        case "businessName":
                            return Pr("address.add.form.company");
                        case "addressLine2":
                            if ("US" === t)
                                return Pr("address.add.form.line2");
                        default:
                            return n.select(e)
                        }
                    }
                    )(n.type, t, r);
                    let a = Object.assign(Object.assign({}, n), {
                        label: n.label || i,
                        required: !!n.required
                    });
                    if (null === (o = n.allowedValues) || void 0 === o ? void 0 : o.length) {
                        const r = new oN(e,{
                            type: "portableAddressValues",
                            element: n.type,
                            addressRegion: t
                        })
                          , o = n.allowedValues.map((e => ({
                            id: e,
                            label: e,
                            value: r.select(e)
                        })));
                        a = Object.assign(Object.assign({}, a), {
                            labeledAllowedValues: o
                        })
                    }
                    return nR[n.type] && (a = Object.assign(Object.assign({}, a), {
                        ariaLabel: nR[n.type]
                    })),
                    a
                }
                ))
            })
        }
        ))
    }
      , iR = new Set(["addressLine1", "addressLine2", "adminArea2", "adminArea1", "postalCode"])
      , aR = new Set([...iR, "recipient", "businessName"])
      , sR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.logger = $t(),
            this.fieldRefs = {
                addressLine1: void 0,
                addressLine2: void 0,
                adminArea1: void 0,
                adminArea2: void 0,
                givenName: void 0,
                phone: void 0,
                postalCode: void 0,
                surname: void 0
            },
            this.countryCallingCodes = [],
            this.updateAddress = e => {
                this.showOnlyStreetAddressState && e.addressLine1 && (this.showOnlyStreetAddressState = !1),
                this.address = Object.assign(Object.assign({}, this.address), e)
            }
            ,
            this.isAddressValid = () => !1,
            this.autocompleteMap = {
                givenName: "given-name",
                surname: "family-name",
                businessName: "organization",
                addressLine1: "address-line1",
                addressLine2: "address-line2",
                postalCode: "postal-code",
                adminArea1: "address-level1",
                adminArea2: "address-level2"
            },
            this.allowedLocations = {},
            this.getLocalizedAddressMetadata = async () => {
                const e = await (async (e, t, n) => {
                    if (!t || !eR[t])
                        throw new Error("Invalid or missing region");
                    const r = await ON(e);
                    let o = new _T(r,{
                        addressRegion: t
                    }).formatToParts({}).reduce(( (e, t) => {
                        if (t.parts.length > 1) {
                            const {type: n, value: r, parts: o} = t
                              , i = o.findIndex((e => "adminArea2" === e.type))
                              , a = o.findIndex((e => "recipient" === e.type));
                            if (i > -1)
                                return e.push({
                                    type: n,
                                    value: r,
                                    parts: [o[i]]
                                }),
                                e.push({
                                    type: n,
                                    value: r,
                                    parts: o.filter(( (e, t) => t !== i))
                                }),
                                e;
                            if (a > -1)
                                return e.push({
                                    type: n,
                                    value: r,
                                    parts: [o[a]]
                                }),
                                e.push({
                                    type: n,
                                    value: r,
                                    parts: o.filter(( (e, t) => t !== a))
                                }),
                                e
                        }
                        return e.push(t),
                        e
                    }
                    ), []);
                    const i = "shipping" === n ? aR : iR;
                    return o = o.map((e => Object.assign(Object.assign({}, e), {
                        parts: e.parts.filter((e => i.has(e.type)))
                    }))),
                    oR(r, t, o)
                }
                )(this.locale, this.selectedCountry.id, this.addressType);
                "shipping" === this.addressType && (this.address = Object.assign(Object.assign({}, this.address), {
                    givenName: this.address.givenName || "",
                    surname: this.address.surname || "",
                    phone: this.address.phone || "",
                    businessName: ""
                })),
                this.localizedAddressFormMetadata = e
            }
            ,
            this.handlePhoneFocus = () => {
                this.logger.track({
                    event_name: `axo_${this.addressType}_form_field_interaction_focus`,
                    event_category: `${this.addressType}_address`,
                    event_type: "cl",
                    field_name: "phone",
                    intent: "checkout"
                })
            }
            ,
            this.focusFirstInvalidField = () => {
                var e, t, n;
                const r = null === (e = this.localizedAddressFormMetadata) || void 0 === e ? void 0 : e.flatMap((e => {
                    var t;
                    return null === (t = e.parts) || void 0 === t ? void 0 : t.filter((e => !e.hidden)).map((e => e.type))
                }
                ));
                "shipping" === this.addressType && r.push("phone");
                for (const e of r)
                    if (this.addressErrors[e]) {
                        null === (n = null === (t = this.fieldRefs[e]) || void 0 === t ? void 0 : t.setFocus) || void 0 === n || n.call(t);
                        break
                    }
                if (this.alertRef) {
                    const e = Object.values(this.addressErrors).reduce(( (e, t) => t ? e + 1 : e), 0);
                    this.alertRef.innerText = e > 0 ? Pr(e > 1 ? "global.aria.errors.formSubmittedWithMultipleErrors" : "global.aria.errors.formSubmittedWithSingleError", {
                        number: e.toString()
                    }) : ""
                }
            }
            ,
            this.addressType = "billing",
            this.countryOptions = tR,
            this.formClass = void 0,
            this.handleAddressAdded = void 0,
            this.locale = it.get("locale"),
            this.setInitialShowOnlyStreetAddress = !1,
            this.showBranding = !0,
            this.showCountry = !1,
            this.showSubmitButton = !0,
            this.viewRenderedCheckpoint = void 0,
            this.theme = tt,
            this.address = {
                addressLine1: "",
                addressLine2: "",
                adminArea1: "",
                adminArea2: "",
                postalCode: "",
                country: "US"
            },
            this.addressErrors = {
                addressLine1: !1,
                addressLine2: !1,
                adminArea1: !1,
                adminArea2: !1,
                givenName: !1,
                postalCode: !1,
                surname: !1,
                phone: !1
            },
            this.localizedAddressFormMetadata = void 0,
            this.selectedCountry = this.countryOptions[0],
            this.selectedCallingCode = {
                id: "US",
                label: "1",
                value: "United States: +1"
            },
            this.showOnlyStreetAddressState = !1,
            this.worldReady = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        async onLocaleChange(e) {
            this.worldReady = await ON(e)
        }
        async onViewOpen() {
            const {viewNav: e} = it.state;
            e && (e.viewHeader = Pr(`address.add.title.${this.addressType}`))
        }
        async onViewClose() {
            this.logger.track({
                event_name: `axo_${this.addressType}_add_address_modal_close_pressed`,
                duration: this.viewRenderedCheckpoint && er.getTimeElapsedSinceCheckpoint(this.viewRenderedCheckpoint),
                event_type: "cl"
            })
        }
        async onViewBack() {
            this.logger.track({
                event_name: `axo_${this.addressType}_add_address_modal_back_pressed`,
                event_type: "cl"
            })
        }
        async submitAddress() {
            if (!this.isAddressValid()) {
                this.focusFirstInvalidField();
                throw Object.assign(Object.assign({}, new Error("Manual billing entry is missing fields")), {
                    code: "BILLING_ADDRESS_MISSING",
                    details: void 0,
                    type: "CUSTOMER"
                })
            }
            return this.address
        }
        async componentWillLoad() {
            var e, t;
            if (this.worldReady = await ON(this.locale),
            this.countryOptions = await (async e => {
                const t = await ON(e)
                  , n = []
                  , r = new SN({
                    marketData: "assignedCountries",
                    region: e.split("-")[1]
                });
                await r.load();
                const o = await r.export()
                  , i = new oN(t,{
                    type: "region"
                }).cldrData;
                for (const e of o) {
                    const t = {
                        id: e,
                        value: i[e]
                    };
                    t.value && n.push(t)
                }
                return n.sort(( (e, t) => e.value.localeCompare(t.value)))
            }
            )(this.locale),
            this.getLocalizedAddressMetadata(),
            "billing" === this.addressType && it.set("billingAddressCountry", this.address.country),
            "shipping" === this.addressType) {
                this.allowedLocations = it.get("allowedLocations");
                const n = this.countryOptions.filter((e => e.id in this.allowedLocations));
                n.length > 0 && (this.countryOptions = n);
                const r = yN.getCallingCodeForRegions(tR.map((e => e.id)))
                  , o = (e, t) => {
                    var n;
                    e !== this.selectedCallingCode.id && this.countryCallingCodes.push({
                        id: e,
                        value: (null === (n = tR.find((t => t.id === e))) || void 0 === n ? void 0 : n.value) + ": +" + t,
                        label: t
                    })
                }
                ;
                for (const [e,t] of Object.entries(r))
                    Array.isArray(t) && t.forEach((t => o(e, t)));
                const i = it.get("fullProfile")
                  , {firstName: a, lastName: s} = (null == i ? void 0 : i.name) || {}
                  , l = null === (t = null === (e = null == i ? void 0 : i.phones) || void 0 === e ? void 0 : e.find(( ({countryCode: e}) => e === this.selectedCallingCode.label))) || void 0 === t ? void 0 : t.nationalNumber;
                a && (this.address.givenName = a),
                s && (this.address.surname = s),
                l && (this.address.phone = l)
            }
            this.countryCallingCodes = this.countryCallingCodes.sort(( (e, t) => +e.label > +t.label ? 1 : -1)),
            this.countryCallingCodes.unshift(this.selectedCallingCode)
        }
        componentDidLoad() {
            this.viewRenderedCheckpoint && er.setCheckpoint(this.viewRenderedCheckpoint),
            this.showOnlyStreetAddressState = this.setInitialShowOnlyStreetAddress;
            const e = this.viewRenderedCheckpoint && "shipping" === this.addressType;
            this.logger.track({
                event_name: `axo_add_${this.addressType}_address_start`,
                duration: e && er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.SHIPPING_ADDRESS_FORM_INVOKED),
                event_category: `${this.addressType}_address`,
                event_type: "im",
                intent: "checkout",
                transition_name: "entry_form_shown"
            })
        }
        render() {
            const e = new _T(this.worldReady,{
                addressRegion: this.selectedCountry.id
            })
              , t = new Kx(this.worldReady,{
                nameRegion: this.selectedCountry.id
            })
              , n = new Kx(this.worldReady,{
                nameRegion: this.selectedCountry.id,
                type: "business"
            })
              , r = new yN({
                phoneRegion: this.selectedCallingCode.id,
                style: "national"
            })
              , o = e => {
                this.addressErrors = Object.assign(Object.assign({}, this.addressErrors), e)
            }
              , i = () => {
                let n, i = e.validate(this.address);
                return "shipping" === this.addressType && (i = [...i, ...t.validate({
                    givenName: this.address.givenName,
                    surname: this.address.surname,
                    businessName: this.address.businessName
                })],
                n = r.parse("+" + this.selectedCallingCode.label + (this.address.phone || ""))),
                i.forEach((e => {
                    this.addressErrors[e.element] = !0
                }
                )),
                (null == n ? void 0 : n.errors) && (this.addressErrors.phone = !0),
                o(this.addressErrors),
                !Boolean(i.length || (null == n ? void 0 : n.errors))
            }
              , a = e => e.target.value
              , s = ["givenName", "surname", "businessName"]
              , l = e => {
                this.logger.track({
                    event_name: `axo_${this.addressType}_form_field_interaction_focus`,
                    event_category: `${this.addressType}_address`,
                    event_type: "cl",
                    field_name: e,
                    intent: "checkout"
                })
            }
              , c = (r, i, l) => {
                const c = a(r);
                if (!c)
                    return o({
                        [i]: l
                    });
                if (s.includes(i)) {
                    return o({
                        [i]: !!("businessName" === i && c ? n : t).validate({
                            [i]: c
                        }).find((e => "INVALID_ALL_RESTRICTED" !== e.code && e.element === i))
                    })
                }
                return e.validate({
                    [i]: c
                }).find((e => e.element === i)) ? o({
                    [i]: !0
                }) : void 0
            }
              , d = (r, i, l) => {
                const c = a(r);
                if (!c && !l)
                    return this.updateAddress({
                        [i]: c
                    }),
                    o({
                        [i]: !1
                    });
                if (this.addressErrors[i])
                    if (s.includes(i)) {
                        const e = ("businessName" === i ? n : t).validate({
                            [i]: c
                        }).find((e => e.element === i));
                        o({
                            [i]: e || !c
                        })
                    } else
                        !e.validate({
                            [i]: c
                        }).find((e => e.element === i)) && c && o({
                            [i]: !1
                        });
                return this.updateAddress({
                    [i]: c
                })
            }
            ;
            this.isAddressValid = i;
            const u = (e, t) => {
                if ("required" === e)
                    return Pr("address.add.form.errors.inputRequired", {
                        label: t
                    });
                return Pr("address.add.form.errors.inputInvalid", {
                    label: t.toLowerCase()
                })
            }
              , p = Pr("address.add.form.phone")
              , h = this.address.phone ? r.format({
                countryCode: this.selectedCallingCode.label,
                nationalNumber: this.address.phone
            }) : ""
              , f = this.address.phone ? u("invalid", p) : u("required", p);
            return P(D, null, P("form", {
                autocomplete: "on",
                class: Bk.twMerge(Fk("flex flex-col gap-4 px-2 pt-2", this.formClass))
            }, this.showCountry && P("axo-select-input", {
                class: "w-full",
                name: "country",
                label: Pr("address.add.form.country"),
                value: this.address.country,
                selectOptions: this.countryOptions,
                options: {
                    type: "text",
                    inputmode: "text",
                    required: !0,
                    autocomplete: "country-name"
                },
                handleInput: e => {
                    const t = a(e);
                    "billing" === this.addressType && it.set("billingAddressCountry", t)
                }
                ,
                handleChange: e => {
                    d(e, "country", !0);
                    const t = a(e)
                      , n = this.countryOptions.find((e => e.id === t));
                    n && (this.selectedCountry = n),
                    this.selectedCallingCode.id !== t && "shipping" === this.addressType && (this.selectedCallingCode = this.countryCallingCodes.find((e => e.id === t))),
                    this.updateAddress(Object.assign({
                        country: t,
                        addressLine1: "",
                        addressLine2: "",
                        adminArea1: "",
                        adminArea2: "",
                        postalCode: ""
                    }, "shipping" === this.addressType ? {
                        givenName: "",
                        surname: "",
                        phone: "",
                        businessName: ""
                    } : {})),
                    o(Object.assign({
                        addressLine1: !1,
                        addressLine2: !1,
                        adminArea1: !1,
                        adminArea2: !1,
                        postalCode: !1
                    }, "shipping" === this.addressType ? {
                        givenName: !1,
                        surname: !1,
                        phone: !1,
                        businessName: !1
                    } : {})),
                    this.getLocalizedAddressMetadata()
                }
            }), ( () => {
                var e;
                return null === (e = this.localizedAddressFormMetadata) || void 0 === e ? void 0 : e.map(( (e, t) => {
                    var n;
                    const r = null === (n = e.parts) || void 0 === n ? void 0 : n.filter((e => !e.hidden));
                    if ((null == r ? void 0 : r.length) && (!this.showOnlyStreetAddressState || !(null == r ? void 0 : r.find((e => "addressLine1" !== e.type)))))
                        return P("div", {
                            key: "address-line-" + t,
                            class: "flex flex-col w-full"
                        }, P("div", {
                            class: "grid w-full gap-3",
                            style: {
                                "grid-template-columns": `repeat(${r.length}, minmax(0, 1fr))`
                            }
                        }, null == r ? void 0 : r.map((e => {
                            const {type: t, label: n, required: r, labeledAllowedValues: o, ariaLabel: i} = e
                              , a = this.addressErrors[t]
                              , s = !this.address[t] && r ? u("required", n) : u("invalid", n)
                              , p = this.autocompleteMap[t];
                            if ("adminArea1" === t && o) {
                                const e = "shipping" === this.addressType ? o.filter((e => {
                                    var t;
                                    return null === (t = this.allowedLocations[this.selectedCountry.id]) || void 0 === t ? void 0 : t.has(e.id)
                                }
                                )) : o;
                                return P("axo-select-input", {
                                    ref: e => this.fieldRefs[t] = e,
                                    class: "w-full",
                                    name: t,
                                    label: n,
                                    ariaLabel: i,
                                    handleBlur: e => c(e, t, r),
                                    errorMessage: a ? s : "",
                                    hasError: a,
                                    selectOptions: e.length > 0 ? e : o,
                                    options: {
                                        type: "text",
                                        inputmode: "text",
                                        autocomplete: p,
                                        required: r
                                    },
                                    handleChange: e => d(e, t, r)
                                })
                            }
                            return P("axo-text-input", {
                                ref: e => this.fieldRefs[t] = e,
                                class: "w-full",
                                name: t,
                                handleFocus: () => l(t),
                                handleBlur: e => c(e, t, r),
                                label: n,
                                ariaLabel: i,
                                value: this.address[t],
                                handleInput: e => d(e, t, r),
                                errorMessage: a ? s : "",
                                hasError: a,
                                options: {
                                    type: "text",
                                    inputmode: "text",
                                    autocomplete: p,
                                    required: r
                                }
                            })
                        }
                        ))))
                }
                ))
            }
            )(), "shipping" === this.addressType && P("div", {
                class: "grid grid-cols-8 gap-3"
            }, P("axo-select-input", {
                class: "col-span-3",
                leftIcon: P("axo-country-flag", {
                    countryCode: this.selectedCallingCode.id
                }),
                selectedOptionText: "+" + this.selectedCallingCode.label,
                name: "tel-country-code",
                label: Pr("address.add.form.countryCode"),
                ariaLabel: Pr("global.aria.address.form.countryCode"),
                value: this.selectedCallingCode.value,
                selectOptions: this.countryCallingCodes.map((e => ({
                    id: e.value,
                    value: e.value
                }))),
                options: {
                    type: "text",
                    inputmode: "text",
                    required: !0,
                    autocomplete: "tel-country-code"
                },
                handleChange: e => {
                    const t = a(e);
                    this.selectedCallingCode = this.countryCallingCodes.find((e => e.value === t)),
                    d(e, "tel-country-code", !0)
                }
            }), P("axo-text-input", {
                ref: e => this.fieldRefs.phone = e,
                name: "phone",
                class: "col-span-5",
                label: Pr("address.add.form.phone"),
                value: h,
                hasError: this.addressErrors.phone,
                errorMessage: this.addressErrors.phone ? f : "",
                options: {
                    type: "tel",
                    inputmode: "tel",
                    autocomplete: "tel-national",
                    required: !0
                },
                handleInput: e => {
                    const t = a(e);
                    this.updateAddress({
                        phone: t.replace(/\D+/g, "")
                    });
                    const {errors: n} = r.parse(this.selectedCallingCode.label + t);
                    n || o({
                        phone: n
                    })
                }
                ,
                handleFocus: this.handlePhoneFocus,
                handleBlur: e => {
                    const t = a(e);
                    if (!t)
                        return o({
                            phone: !0
                        });
                    const {errors: n} = r.parse(this.selectedCallingCode.label + t);
                    n ? o({
                        phone: !0
                    }) : this.addressErrors.phone && o({
                        phone: !1
                    })
                }
            })), this.showSubmitButton && P("axo-button", {
                class: "mt-2",
                handleClick: async () => {
                    var e;
                    if (this.logger.track({
                        event_name: `axo_${this.addressType}_add_new_address_save_pressed`,
                        event_category: "address_save_pressed",
                        event_type: "cl",
                        intent: "checkout"
                    }),
                    !i())
                        return void this.focusFirstInvalidField();
                    const t = Object.assign({}, this.address);
                    this.address.phone && (t.phone = {
                        countryCode: this.selectedCallingCode.label,
                        nationalNumber: this.address.phone
                    }),
                    this.handleAddressAdded(t),
                    null === (e = it.get("viewNav")) || void 0 === e || e.popView()
                }
            }, Pr("address.add.button")), P("div", {
                ref: e => this.alertRef = e,
                role: "alert",
                class: "sr-only"
            })), this.showBranding && P("div", {
                class: "bottom-0 bg-axowhite px-2 pb-2"
            }, P("axo-branding", {
                variant: "fl-md",
                class: "w-[10.5em] mt-6"
            })))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                locale: ["onLocaleChange"]
            }
        }
    }
    , [1, "axo-address-form", {
        addressType: [1, "address-type"],
        countryOptions: [16],
        formClass: [1, "form-class"],
        handleAddressAdded: [16],
        locale: [1],
        setInitialShowOnlyStreetAddress: [4, "set-initial-show-only-street-address"],
        showBranding: [4, "show-branding"],
        showCountry: [4, "show-country"],
        showSubmitButton: [4, "show-submit-button"],
        viewRenderedCheckpoint: [1, "view-rendered-checkpoint"],
        theme: [1],
        address: [32],
        addressErrors: [32],
        localizedAddressFormMetadata: [32],
        selectedCountry: [32],
        selectedCallingCode: [32],
        showOnlyStreetAddressState: [32],
        worldReady: [32],
        onViewOpen: [64],
        onViewClose: [64],
        onViewBack: [64],
        submitAddress: [64]
    }, void 0, {
        locale: ["onLocaleChange"]
    }]);
    function lR() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-address-form", "axo-branding", "axo-button", "axo-country-flag", "axo-icons", "axo-select-input", "axo-spinner-loader", "axo-text-input"].forEach((e => {
            switch (e) {
            case "axo-address-form":
                customElements.get(e) || customElements.define(e, sR);
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-button":
                customElements.get(e) || bI();
                break;
            case "axo-country-flag":
                customElements.get(e) || AI();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-select-input":
                customElements.get(e) || SI();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI();
                break;
            case "axo-text-input":
                customElements.get(e) || QI()
            }
        }
        ))
    }
    const cR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.defaultChecked = void 0,
            this.checked = void 0,
            this.handleClick = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "fe5de6ed8e13733b8f1e68b71d8ae0cf7ffe1b2b"
            }, P("label", {
                key: "bae77176d65ea29ab75eebc3b9209c88e6ad1052",
                class: "flex gap-2 cursor-pointer"
            }, P("input", {
                key: "0f363a08a12107d02ed3ee21d7e227f689f20a25",
                defaultChecked: this.defaultChecked,
                checked: this.checked,
                onClick: this.handleClick,
                type: "checkbox",
                class: "peer sr-only"
            }), P("div", {
                key: "7e9925321c0a0715c8f4da96fae5ed0c4e3c933c",
                class: "flex items-center justify-center w-6 h-6 bg-white rounded border-axogray-300 border peer-checked:bg-customPrimaryColor peer-checked:border-customPrimaryColor"
            }, P("axo-icons", {
                key: "b57b1b40761a0339defd6913906ce175da9bb719",
                name: "Check",
                iconClass: "fill-current"
            })), P("slot", {
                key: "6f950256438738d42dfc163ba1ba9f9b75d12bc9"
            })))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-checkbox", {
        defaultChecked: [4, "default-checked"],
        checked: [4],
        handleClick: [16]
    }]);
    function dR() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-checkbox", "axo-icons"].forEach((e => {
            switch (e) {
            case "axo-checkbox":
                customElements.get(e) || customElements.define(e, cR);
                break;
            case "axo-icons":
                customElements.get(e) || Xk()
            }
        }
        ))
    }
    const uR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.isExpanded = !1,
            this.customClass = "";
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "5ab1cefb67a0f081830d29cf5ad3edf13369d067",
                tabIndex: this.isExpanded ? void 0 : -1,
                "aria-hidden": (!this.isExpanded).toString()
            }, P("div", {
                key: "e93da93e76417b8fafd21fa50d97e02c7135f03f",
                class: jk("transition-[grid-template-rows] grid duration-300 ease-in", this.isExpanded ? "grid-rows-[1fr]" : "grid-rows-[0fr]", this.customClass),
                "data-testid": "expandable"
            }, P("div", {
                key: "f294db7002b8e7a227326c033e92b91c139ef384",
                class: "overflow-hidden"
            }, P("slot", {
                key: "4fc28b44cce9b5dbd1bdda301d59d0c7038c17e0"
            }))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-expandable", {
        isExpanded: [1540, "is-expanded"],
        customClass: [1, "custom-class"]
    }]);
    function pR() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-expandable"].forEach((e => {
            if ("axo-expandable" === e)
                customElements.get(e) || customElements.define(e, uR)
        }
        ))
    }
    const hR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.logger = $t(),
            this.handleMaskInput = e => {
                var t;
                e.unmasked !== (null === (t = this.prefilledValue) || void 0 === t ? void 0 : t.slice(0, e.unmasked.length)) && (this.userUpdatedPhone = !0),
                this.value = e.masked,
                this.rawValue = e.unmasked
            }
            ,
            this.handleFocus = e => {
                this.logger.track({
                    event_name: "axo_add_phone_field_interaction_focus",
                    event_category: "add_phone",
                    event_type: "cl",
                    field_name: "phone",
                    intent: "checkout"
                })
            }
            ,
            this.handleBlur = e => {
                this.logger.track({
                    event_name: "axo_add_phone_field_interaction_exit",
                    event_category: "add_phone",
                    event_type: "cl",
                    field_name: "phone",
                    intent: "checkout"
                })
            }
            ,
            this.prefilledValue = void 0,
            this.errorMessage = void 0,
            this.value = "",
            this.rawValue = "",
            this.maskOptions = {
                mask: "+1 (000) 000-0000",
                prefilledValue: ""
            },
            this.userUpdatedPhone = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        prefilledValueChanged(e) {
            this.userUpdatedPhone || (this.maskOptions = Object.assign(Object.assign({}, this.maskOptions), {
                prefilledValue: this.validPrefilledValueOrNothing(e || "")
            }))
        }
        async getPhoneNumber() {
            return {
                countryCode: "1",
                number: this.rawValue.replace(/^1/, "")
            }
        }
        componentWillLoad() {
            this.maskOptions = Object.assign(Object.assign({}, this.maskOptions), {
                prefilledValue: this.validPrefilledValueOrNothing((null == this ? void 0 : this.prefilledValue) || "")
            })
        }
        validPrefilledValueOrNothing(e) {
            return (null == e ? void 0 : e.length) >= 10 ? e : ""
        }
        render() {
            return P(D, {
                key: "02361222be41a6969abdc224baef92c6c5c77495"
            }, P("axo-text-input", {
                key: "3bb86475161807d5a585959e2a9092969e6e40cf",
                name: "phone",
                label: Pr("phoneField.label"),
                labelClass: "customInputTextColorBase",
                hasError: !!this.errorMessage,
                errorMessage: this.errorMessage,
                options: {
                    type: "tel",
                    inputmode: "tel",
                    autocomplete: "tel-national"
                },
                maskOptions: this.maskOptions,
                handleMaskInput: this.handleMaskInput,
                handleFocus: this.handleFocus,
                handleBlur: this.handleBlur
            }))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                prefilledValue: ["prefilledValueChanged"]
            }
        }
    }
    , [1, "axo-phone-field", {
        prefilledValue: [1, "prefilled-value"],
        errorMessage: [1, "error-message"],
        value: [32],
        rawValue: [32],
        maskOptions: [32],
        userUpdatedPhone: [32],
        getPhoneNumber: [64]
    }, void 0, {
        prefilledValue: ["prefilledValueChanged"]
    }]);
    function fR() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-phone-field", "axo-text-input"].forEach((e => {
            switch (e) {
            case "axo-phone-field":
                customElements.get(e) || customElements.define(e, hR);
                break;
            case "axo-text-input":
                customElements.get(e) || QI()
            }
        }
        ))
    }
    const mR = Me(class e extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this._getStyles = () => {
                var t;
                return Fk(null !== (t = e.textSizes[this.variant]) && void 0 !== t ? t : "text-base", "strong" === this.fontWeight && "font-medium", "caption" === this.variant ? "text-axogray-500" : "text-axoblack", this.clickable && "text-axoblue-500 cursor-pointer")
            }
            ,
            this.fontWeight = "default",
            this.variant = "body",
            this.clickable = !1,
            this.customClass = "";
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            var t;
            const n = null !== (t = e.textElements[this.variant]) && void 0 !== t ? t : "span";
            return P(D, {
                key: "0285c26ffc2900043a4a6e4948c331281ff7d674"
            }, P(n, {
                key: "a13bde27a23f0ad09a3514f730c28203651559d0",
                class: jk("text-axoblack inline", this._getStyles(), this.customClass)
            }, P("slot", {
                key: "5d5e7b4791f6b52a5417a9782769903baf404c5f"
            })))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-text", {
        fontWeight: [1, "font-weight"],
        variant: [1],
        clickable: [4],
        customClass: [1, "custom-class"]
    }]);
    function gR() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-text"].forEach((e => {
            if ("axo-text" === e)
                customElements.get(e) || customElements.define(e, mR)
        }
        ))
    }
    mR.textElements = {
        body: "p",
        caption: "p",
        h1: "h1"
    },
    mR.textSizes = {
        body: "text-base",
        caption: "text-sm",
        h1: "text-2xl"
    };
    const yR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.active = !1,
            this.label = "",
            this.handleChange = () => this.active = !this.active,
            this.icon = "ShieldLockFilled",
            this.theme = tt;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "84daf75e8b3db11ae6010e90f5fac507489b88c6"
            }, P("div", {
                key: "3be61ebd21b816daae17f3b57f4b738fcd221deb",
                class: "flex justify-between items-center w-full px-1 my-4"
            }, P("div", {
                key: "272f3128a0a2e122e65e6b091c76da75aff0ef1d"
            }, P("slot", {
                key: "4a84eb5c9edc4fc92a31b48878455365d9deee6a"
            })), P("button", {
                key: "358731753b5240b5af2a4ea38cf260d6c8d2224a",
                "aria-label": [this.label, Pr(this.active ? "global.aria.toggle.toggleOn" : "global.aria.toggle.toggleOff")].filter((e => !!e)).join(", "),
                class: Fk("dark" === this.theme ? "bg-axogray-450" : "bg-axogray-200", "block relative box-content h-8 w-14 flex-none border rounded-full ml-2 focus-visible:outline focus-visible:outline-2 focus-visible:outline-customPrimaryColor focus-visible:outline-offset-2", this.active ? "bg-customPrimaryColor border-customPrimaryColor" : "border-axogray-400"),
                onClick: e => this.handleChange(),
                "aria-pressed": "true",
                "data-testid": "toggle"
            }, P("div", {
                key: "36bff4e960ab9755697e10c2db122a4a382ca9ce",
                class: Fk("dark" === this.theme ? "bg-axoblack" : "bg-axowhite", "absolute h-8 w-8 rounded-full shadow-[0_0_0_1px] transition duration-100 ease-in", this.active ? "shadow-customPrimaryColor translate-x-6" : "shadow-axogray-400")
            }), P("div", {
                key: "eb9cd96883dad1b7d3800bc4ccdc3e4736c784dd",
                class: Fk("h-8 w-8 flex items-center justify-center transition duration-100 ease-in", this.active ? "opacity-100 translate-x-6" : "opacity-0")
            }, P("axo-icons", {
                key: "ad320a875dadf801177652575da8b84fd061e205",
                name: this.icon,
                iconClass: Fk("h-4.5 w-4.5 transition duration-100 ease-in", this.active ? "fill-customPrimaryColor" : "fill-axogray-400")
            })))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-toggle", {
        active: [1028],
        label: [1],
        handleChange: [16],
        icon: [1],
        theme: [1]
    }]);
    function vR() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-toggle", "axo-icons"].forEach((e => {
            switch (e) {
            case "axo-toggle":
                customElements.get(e) || customElements.define(e, yR);
                break;
            case "axo-icons":
                customElements.get(e) || Xk()
            }
        }
        ))
    }
    const bR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.consentConnected = j(this, "consentConnected", 7),
            this.logger = $t(),
            this.handleToggle = async () => {
                this.toggleState = !this.toggleState,
                this.logger.track({
                    event_name: `axo_save_info_connect_toggle_${this.toggleState ? "on" : "off"}_clicked`,
                    event_category: "connect_profile",
                    event_type: "cl",
                    intent: "checkout"
                })
            }
            ,
            this.onTooltipIconClick = () => {
                var e;
                this.logger.track({
                    event_name: "axo_save_info_tooltip_icon_clicked",
                    entry_point: "payments"
                }),
                null === (e = this.consentModalRef) || void 0 === e || e.setIsOpen(!0)
            }
            ,
            this.initialToggleState = void 0,
            this.prefilledPhone = void 0,
            this.termsAndConditionsVersion = "",
            this.theme = tt,
            this.errorMessage = void 0,
            this.mockMode = !1,
            this.consentModalRef = void 0,
            this.toggleState = !0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        async getConsentData() {
            var e, t;
            const n = await (null === (t = (e = this.phoneFieldRef).getPhoneNumber) || void 0 === t ? void 0 : t.call(e));
            return {
                optIn: this.toggleState,
                phone: n,
                termsAndConditionsVersion: this.termsAndConditionsVersion
            }
        }
        componentWillLoad() {
            var e;
            this.toggleState = null === (e = this.initialToggleState) || void 0 === e || e
        }
        componentDidLoad() {
            var e;
            this.logger.track({
                event_name: "axo_save_info_connect_toggle_loaded",
                duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.PAYMENT_COMPONENT_INVOKED),
                event_category: "connect_profile",
                event_type: "im",
                intent: "checkout",
                is_phone_prefilled: `${!!(null === (e = this.prefilledPhone) || void 0 === e ? void 0 : e.length)}`
            })
        }
        connectedCallback() {
            this.consentConnected.emit(this.el)
        }
        disconnectedCallback() {
            var e;
            null === (e = this.consentModalRef) || void 0 === e || e.remove()
        }
        async setTooltipFocus() {
            var e, t;
            null === (t = null === (e = this.tooltipButtonRef) || void 0 === e ? void 0 : e.focus) || void 0 === t || t.call(e)
        }
        render() {
            return P(D, {
                key: "726960c42ac589449ccb7653a1afc223c86a0624"
            }, P("axo-toggle", {
                key: "8dba302580960eee67d95a0c40ffbb81ae28dc64",
                theme: this.theme,
                active: this.toggleState,
                label: Pr("consent.toggleLabel"),
                handleChange: this.handleToggle
            }, P("axo-text", {
                key: "0127141ea931d857914f6487f0a4f2e166a70028",
                customClass: "mr-2 flex justify-center"
            }, P("div", {
                key: "11fcf5185c91ed88d9491d2201a55ba97962c4fd",
                class: "mr-1 font-medium text-oldCaptionFontSize text-customTextColorBase leading-[1.25rem]"
            }, Pr("consent.toggleLabel"), " ", P("div", {
                key: "36fc2cca412d2c84fc4e04e8f92e94f8b33c73bb",
                class: "align-middle inline-flex"
            }, P("button", {
                key: "248a3712620fab4705dc8447ab2bced140cd33af",
                ref: e => this.tooltipButtonRef = e,
                class: "w-[24px] p-[max(0px,calc(calc(24px-1em)/2))] -m-[max(0px,calc(calc(24px-1em)/2))]",
                onClick: this.onTooltipIconClick
            }, P("axo-icons", {
                key: "6b2af0b67ec81e5673ec4acc36ee884bf0057036",
                slot: "button",
                name: "InfoFilled",
                iconClass: Fk("w-4 fill-customTextColorBase", "dark" === this.theme ? "[&_svg_rect]:fill-axoblack [&_svg_circle]:fill-axoblack" : "[&_svg_rect]:fill-axowhite [&_svg_circle]:fill-axowhite"),
                "aria-label": `${Pr("consent.toggleLabel")}, ${Pr("global.aria.infoIcon")}`
            })))))), P("axo-expandable", {
                key: "2514a21e0149ae34b058a3817e23ef7bb960d7f5",
                isExpanded: this.toggleState
            }, P("div", {
                key: "68d6e64d9db728bb0e5b5fdc52047af5fe1f50ff",
                class: "pt-1 px-1"
            }, P("axo-phone-field", {
                key: "94e594847813fa3dfc8adfffb81d5f849162fc57",
                ref: e => this.phoneFieldRef = e,
                prefilledValue: this.prefilledPhone,
                errorMessage: this.errorMessage
            }), P("div", {
                key: "dcee179f0ef2c07ddd2e4f65dc0e96b7d7d938bd",
                class: "mt-4"
            }, P("axo-text", {
                key: "1cfb4bdd649bb11bb6e2629cbffeee3db9998f5a",
                customClass: "block mt-4 text-oldCaptionFontSize text-customTextColorBase"
            }, Pr("consent.codeExplanation")), P("axo-text", {
                key: "940775bbc80aeb867f2494cc601176c180c94324",
                customClass: "block mb-2 text-oldCaptionFontSize text-customTextColorBase"
            }, Pr("consent.legalAgreement.text", {
                terms: P("a", {
                    href: "https://fastlane.paypal.com/us/terms",
                    target: "_blank",
                    class: "font-medium cursor-pointer text-fixedPrivacyLinkColor underline"
                }, Pr("consent.legalAgreement.terms")),
                privacyStatement: P("a", {
                    href: "https://fastlane.paypal.com/us/privacy",
                    target: "_blank",
                    class: "font-medium cursor-pointer text-fixedPrivacyLinkColor underline"
                }, Pr("consent.legalAgreement.privacyStatement"))
            })), P("axo-branding", {
                key: "cfae07316bf4e3b6786e71b556b92b9422423c80",
                theme: this.theme,
                variant: "fl-md",
                class: "w-[10.5em] mt-2"
            })))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-consent", {
        initialToggleState: [4, "initial-toggle-state"],
        prefilledPhone: [1, "prefilled-phone"],
        termsAndConditionsVersion: [1, "terms-and-conditions-version"],
        theme: [1],
        errorMessage: [1, "error-message"],
        mockMode: [4, "mock-mode"],
        consentModalRef: [16],
        toggleState: [32],
        getConsentData: [64],
        setTooltipFocus: [64]
    }]);
    function ER() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-consent", "axo-branding", "axo-expandable", "axo-icons", "axo-phone-field", "axo-text", "axo-text-input", "axo-toggle"].forEach((e => {
            switch (e) {
            case "axo-consent":
                customElements.get(e) || customElements.define(e, bR);
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-expandable":
                customElements.get(e) || pR();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-phone-field":
                customElements.get(e) || fR();
                break;
            case "axo-text":
                customElements.get(e) || gR();
                break;
            case "axo-text-input":
                customElements.get(e) || QI();
                break;
            case "axo-toggle":
                customElements.get(e) || vR()
            }
        }
        ))
    }
    const _R = () => {
        const {geoLocation: e, authTimedOut: t} = it.get("authState")
          , n = it.get("showOptInToggle");
        return "US" === e && !t && n
    }
      , AR = {
        "AMERICAN EXPRESS": "AMEX"
    }
      , wR = e => {
        var t;
        const {tokenizeResp: n, billingAddress: r} = e
          , {cardType: o, expirationYear: i, expirationMonth: a, lastFour: s, cardholderName: l} = null == n ? void 0 : n.details;
        return {
            id: null == n ? void 0 : n.nonce,
            ordinal: 0,
            paymentToken: {
                id: null == n ? void 0 : n.nonce,
                paymentSource: {
                    card: {
                        brand: null !== (t = AR[null == o ? void 0 : o.toUpperCase()]) && void 0 !== t ? t : null == o ? void 0 : o.toUpperCase(),
                        expiry: `${i}-${a}`,
                        lastDigits: s,
                        name: l,
                        billingAddress: r
                    }
                }
            }
        }
    }
    ;
    var SR, CR, OR = function(e, t, n, r) {
        if ("a" === n && !r)
            throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !r : !t.has(e))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === n ? r : "a" === n ? r.call(e) : r ? r.value : t.get(e)
    };
    const xR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            SR.add(this),
            this.logger = $t(),
            this.hasAuthTimedOut = () => {
                var e;
                return null === (e = it.get("authState")) || void 0 === e ? void 0 : e.authTimedOut
            }
            ,
            this.getBrand = e => {
                var t, n;
                return null === (n = null === (t = null == e ? void 0 : e.paymentSource) || void 0 === t ? void 0 : t.card) || void 0 === n ? void 0 : n.brand
            }
            ,
            this.shouldShowOptInToggle = e => true,
            this.renderConsent = e => {
                const t = it.get("optInToggleDefaultState");
                return e ? P("axo-expandable", {
                    "data-testid": "axo-expandable-consent",
                    isExpanded: this.areCcFieldsValid
                }, P("axo-consent", {
                    ref: e => this.consentComponent = e,
                    theme: this.theme,
                    id: this.name + "-axo-consent",
                    prefilledPhone: this.prefilledPhone,
                    termsAndConditionsVersion: this.termsAndConditionsVersion,
                    initialToggleState: t
                })) : P("axo-consent", {
                    ref: e => this.consentComponent = e,
                    theme: this.theme,
                    id: this.name + "-axo-consent",
                    prefilledPhone: this.prefilledPhone,
                    termsAndConditionsVersion: this.termsAndConditionsVersion,
                    initialToggleState: t
                })
            }
            ,
            this.name = "axo-wallet",
            this.btClient = void 0,
            this.fieldOptions = {
                cardholderName: {}
            },
            this.prefilledPhone = void 0,
            this.phoneRegion = "US",
            this.theme = tt,
            this.host = void 0,
            this.isActiveFastlaneUser = !1,
            this.requireBillingAddress = !1,
            this.termsAndConditionsVersion = "1.0.0",
            this.isBillingSameAsShipping = !0,
            this.billingAddressFormCountry = void 0,
            this.areCcFieldsValid = !1,
            this.exp_hideConsentUntilCardValid = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        ccFieldsValidatedHandler(e) {
            const {detail: t} = e;
            this.areCcFieldsValid = t,
            !0 === t && (this.ccFieldsValidatedHandler = () => {}
            )
        }
        async componentWillLoad() {
            {
                const e = Zr()
                  , t = "FastlaneSDK_Guest_HideConsentUntilValidCard"
                  , n = await e.getActiveTreatment(t);
                if (n) {
                    const {treatment_id: e, treatment_name: r, experiment_id: o} = n;
                    this.logger.trackExperiment({
                        experimentId: o,
                        treatmentId: e
                    }),
                    r === `Trmt_${t}` && (this.exp_hideConsentUntilCardValid = !0)
                }
            }
        }
        async deprecatedTokenize(e) {
            const {result: t} = await OR(this, SR, "m", CR).call(this, e);
            return t
        }
        async tokenize(e) {
            const {result: t, billingAddress: n} = await OR(this, SR, "m", CR).call(this, e);
            if (t && n)
                return wR({
                    tokenizeResp: t,
                    billingAddress: n
                }).paymentToken
        }
        isBillingCountryUS(e) {
            var t;
            if (e && this.isBillingSameAsShipping) {
                const {countryCodeAlpha2: e} = (null === (t = it.get("paymentComponentState")) || void 0 === t ? void 0 : t.shippingAddressFromMerchant) || {};
                return "US" === (null == e ? void 0 : e.toUpperCase())
            }
            {
                const e = it.get("billingAddressCountry");
                return "US" === (null == e ? void 0 : e.toUpperCase())
            }
        }
        renderBillingLabelOrCheckbox(e) {
            return P("div", {
                class: "mt-4"
            }, e ? P("axo-checkbox", {
                checked: this.isBillingSameAsShipping,
                handleClick: () => {
                    this.isBillingSameAsShipping = !this.isBillingSameAsShipping
                }
            }, P("axo-text", {
                customClass: "text-customTextColorBase"
            }, Pr("paymentComponent.billingSameAsShipping"))) : P("axo-text", {
                customClass: "text-customTextColorBase"
            }, Pr("paymentInfo.add.form.billingAddress")))
        }
        renderBillingForm() {
            return P("axo-address-form", {
                ref: e => this.billingAddressComponent = e,
                formClass: "px-0 pt-0 mt-4",
                addressType: "billing",
                onInput: () => {
                    this.isBillingSameAsShipping = !1
                }
                ,
                showSubmitButton: !1,
                showBranding: !1,
                showCountry: !0
            })
        }
        render() {
            var e;
            const t = !!it.get("paymentComponentState").shippingAddressFromMerchant;
            return P(D, {
                key: "cf0ba79f24e52e0ca9dcd9c6fc6ea03da50cfa14",
                class: "min-w-el"
            }, P("div", {
                key: "15f214e655baa37e22c0c01313fdd8d30206d11c",
                class: "flex flex-col w-full"
            }, P("axo-credit-card-fields", {
                key: "ddbe415afee01a3bc54270169e5d7bac029e9c08",
                ref: e => this.ccFields = e,
                btClient: this.btClient,
                theme: this.theme,
                host: null !== (e = this.host) && void 0 !== e ? e : this.el,
                fieldOptions: this.fieldOptions,
                id: "cc-fields",
                class: "px-1"
            }, iI()), this.requireBillingAddress && P("div", {
                key: "a7f5f263d88c2355138e0d5306727238ae1bc39d",
                class: "px-1"
            }, this.renderBillingLabelOrCheckbox(t), (!t || !this.isBillingSameAsShipping) && this.renderBillingForm()), this.isActiveFastlaneUser && P("axo-branding", {
                key: "77dca5945776f1594d463ed5e12de90909b44885",
                theme: this.theme,
                variant: "fl-sm",
                class: "w-32 ml-0.5 mt-2"
            }), this.shouldShowOptInToggle(t) && this.renderConsent(this.exp_hideConsentUntilCardValid)))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-wallet", {
        name: [1],
        btClient: [16],
        fieldOptions: [16],
        prefilledPhone: [1, "prefilled-phone"],
        phoneRegion: [1, "phone-region"],
        theme: [1],
        host: [16],
        isActiveFastlaneUser: [4, "is-active-fastlane-user"],
        requireBillingAddress: [4, "require-billing-address"],
        termsAndConditionsVersion: [32],
        isBillingSameAsShipping: [32],
        billingAddressFormCountry: [32],
        areCcFieldsValid: [32],
        exp_hideConsentUntilCardValid: [32],
        deprecatedTokenize: [64],
        tokenize: [64]
    }, [[0, "ccFieldsValidated", "ccFieldsValidatedHandler"]]]);
    function TR() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-wallet", "axo-address-form", "axo-branding", "axo-button", "axo-checkbox", "axo-consent", "axo-country-flag", "axo-credit-card-fields", "axo-expandable", "axo-icons", "axo-phone-field", "axo-select-input", "axo-spinner-loader", "axo-text", "axo-text-input", "axo-toggle"].forEach((e => {
            switch (e) {
            case "axo-wallet":
                customElements.get(e) || customElements.define(e, xR);
                break;
            case "axo-address-form":
                customElements.get(e) || lR();
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-button":
                customElements.get(e) || bI();
                break;
            case "axo-checkbox":
                customElements.get(e) || dR();
                break;
            case "axo-consent":
                customElements.get(e) || ER();
                break;
            case "axo-country-flag":
                customElements.get(e) || AI();
                break;
            case "axo-credit-card-fields":
                customElements.get(e) || sI();
                break;
            case "axo-expandable":
                customElements.get(e) || pR();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-phone-field":
                customElements.get(e) || fR();
                break;
            case "axo-select-input":
                customElements.get(e) || SI();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI();
                break;
            case "axo-text":
                customElements.get(e) || gR();
                break;
            case "axo-text-input":
                customElements.get(e) || QI();
                break;
            case "axo-toggle":
                customElements.get(e) || vR()
            }
        }
        ))
    }
    SR = new WeakSet,
    CR = async function(e) {
        var t, n, r, o, i, a, s, l;
        try {
            this.logger.track({
                event_name: "axo_tokenize_attempted",
                event_type: "im",
                intent: "checkout"
            });
            let c = null == e ? void 0 : e.billingAddress;
            const d = it.get("paymentComponentState").shippingAddressFromMerchant;
            if (!c && this.requireBillingAddress)
                if (d && this.isBillingSameAsShipping)
                    c = d;
                else {
                    const {addressLine1: e, addressLine2: n, adminArea2: r, adminArea1: o, postalCode: i, businessName: a, country: s} = await (null === (t = this.billingAddressComponent) || void 0 === t ? void 0 : t.submitAddress());
                    c = {
                        streetAddress: e,
                        extendedAddress: n,
                        locality: r,
                        region: o,
                        postalCode: i,
                        countryCodeAlpha2: s,
                        company: a
                    }
                }
            let u;
            if (!c) {
                throw Object.assign(Object.assign({}, new Error("Missing billingAddress in tokenize args")), {
                    code: "BILLING_ADDRESS_MISSING",
                    details: void 0,
                    type: "MERCHANT"
                })
            }
            let p, h = !1;
            this.consentComponent && (p = await (null === (n = this.consentComponent) || void 0 === n ? void 0 : n.getConsentData()),
            h = !this.hasAuthTimedOut() && (null == p ? void 0 : p.optIn));
            const f = (null === (r = it.get("authState")) || void 0 === r ? void 0 : r.targetAuthAssertion) || ""
              , m = it.get("isFastlaneEnabled");
            let g = {
                billingAddress: c
            };
            (null == e ? void 0 : e.cardholderName) && (g = Object.assign(Object.assign({}, g), {
                cardholderName: e.cardholderName
            })),
            (this.isActiveFastlaneUser || !this.isActiveFastlaneUser && h) && (g = Object.assign(Object.assign(Object.assign({}, g), {
                email: (null === (o = it.get("authState")) || void 0 === o ? void 0 : o.email) || ""
            }), p && {
                phone: p.phone
            })),
            m && (g = Object.assign(Object.assign({}, g), {
                metadata: {
                    connectCheckout: Object.assign({
                        hasBuyerConsent: h,
                        authAssertion: f
                    }, p && {
                        termsAndConditionsVersion: p.termsAndConditionsVersion
                    })
                }
            }));
            u = await (null === (i = this.ccFields) || void 0 === i ? void 0 : i.tokenize(g));
            const y = null === (a = null == p ? void 0 : p.phone) || void 0 === a ? void 0 : a.number;
            let v;
            if (y) {
                await ON(it.get("locale"));
                const e = new yN({
                    phoneRegion: this.phoneRegion
                }).parse(null === (s = null == p ? void 0 : p.phone) || void 0 === s ? void 0 : s.number);
                v = !Boolean(null == e ? void 0 : e.errors)
            }
            return this.logger.track(Object.assign({
                event_name: "axo_tokenize_completed",
                event_type: "im",
                fi_type: qk[u.details.cardType],
                intent: "checkout",
                vault_id: u.nonce
            }, p ? Object.assign({
                opt_in_toggle_state: null === (l = null == p ? void 0 : p.optIn) || void 0 === l ? void 0 : l.toString(),
                is_phone_empty: `${!y}`
            }, y && {
                is_phone_valid: `${v}`
            }) : {})),
            {
                result: u,
                billingAddress: c
            }
        } catch (e) {
            const t = e;
            return this.logger.track({
                event_name: "axo_tokenize_error_occurred",
                event_type: "im",
                int_error_code: t.code,
                int_error_desc: JSON.stringify({
                    code: t.code,
                    message: t.message,
                    type: t.type,
                    details: t.details
                }),
                intent: "checkout"
            }),
            Promise.reject(e)
        }
    }
    ;
    const NR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.logger = $t(),
            this.isActiveFastlaneUser = () => {
                var e;
                const {accountType: t, customerId: n, isAccountActive: r} = null !== (e = it.get("authState")) && void 0 !== e ? e : {};
                return !("C" !== t || !n || !r)
            }
            ,
            this.btClient = void 0,
            this.fieldOptions = {
                cardholderName: {}
            },
            this.styleOptions = void 0,
            this.theme = tt,
            this.mockMode = !1,
            this.prefilledPhone = void 0;
            const e = this.el.shadowRoot
              , {documentFontSizeShadowStyles: t, documentFontSize: n} = ( () => {
                const e = new CSSStyleSheet
                  , t = window.getComputedStyle(document.body).getPropertyValue("font-size") || "16px";
                return e.replaceSync(`:host {font-size: ${t}}`),
                {
                    documentFontSizeShadowStyles: e,
                    documentFontSize: t
                }
            }
            )();
            e.adoptedStyleSheets = [Rk, t],
            it.set("hostBaseFontSize", n)
        }
        async tokenize(e) {
            var t;
            return this.mockMode ? (async e => {
                if (e)
                    return xr;
                throw new Error("Invalid args")
            }
            )(e) : await (null === (t = this.walletComponent) || void 0 === t ? void 0 : t.deprecatedTokenize(e))
        }
        async getPaymentToken(e) {
            var t;
            if (this.mockMode) {
                return (await Tr(e)).paymentToken
            }
            const n = await (null === (t = this.walletComponent) || void 0 === t ? void 0 : t.tokenize(e));
            if (!n)
                throw new Error("tokenize returned undefined");
            return n
        }
        async updatePrefills(e) {
            const {phoneNumber: t} = e;
            t && (this.prefilledPhone = t)
        }
        connectedCallback() {
            var e, t;
            if (this.styleOptions) {
                const e = Tk(this.styleOptions);
                Ik(e, this.el.tagName.toLowerCase())
            }
            this.prefilledPhone = (null === (t = null === (e = this.fieldOptions) || void 0 === e ? void 0 : e.phoneNumber) || void 0 === t ? void 0 : t.prefill) || ""
        }
        componentDidLoad() {
            this.logger.track({
                event_name: "axo_card_module_shown",
                duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.CARD_COMPONENT_INVOKED),
                entry_point: "payments",
                event_category: "add_fi",
                event_type: "im",
                intent: "checkout"
            })
        }
        render() {
            return P(D, {
                key: "c7db303d4843edd4fb4afe5cea2d541cc4da9d41",
                class: "min-w-el"
            }, P("div", {
                key: "83253b2dce36cf4bb74380d460672915717149aa",
                class: "bg-customBackgroundColor p-customPadding font-customFontFamily text-customFontSize"
            }, P("axo-wallet", {
                key: "57c9bdd646121266e294cd57e6dd7d8723820230",
                ref: e => this.walletComponent = e,
                btClient: this.btClient,
                fieldOptions: this.fieldOptions,
                prefilledPhone: this.prefilledPhone,
                theme: this.theme,
                host: this.el,
                isActiveFastlaneUser: this.isActiveFastlaneUser()
            }, iI())))
        }
        get el() {
            return this
        }
    }
    , [1, "paypal-fastlane-card", {
        btClient: [16],
        fieldOptions: [16],
        styleOptions: [16],
        theme: [1537, "data-theme"],
        mockMode: [4, "mock-mode"],
        prefilledPhone: [32],
        tokenize: [64],
        getPaymentToken: [64],
        updatePrefills: [64]
    }]);
    const kR = NR
      , IR = function() {
        if ("undefined" == typeof customElements)
            return;
        ["paypal-fastlane-card", "axo-address-form", "axo-branding", "axo-button", "axo-checkbox", "axo-consent", "axo-country-flag", "axo-credit-card-fields", "axo-expandable", "axo-icons", "axo-phone-field", "axo-select-input", "axo-spinner-loader", "axo-text", "axo-text-input", "axo-toggle", "axo-wallet"].forEach((e => {
            switch (e) {
            case "paypal-fastlane-card":
                customElements.get(e) || customElements.define(e, NR);
                break;
            case "axo-address-form":
                customElements.get(e) || lR();
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-button":
                customElements.get(e) || bI();
                break;
            case "axo-checkbox":
                customElements.get(e) || dR();
                break;
            case "axo-consent":
                customElements.get(e) || ER();
                break;
            case "axo-country-flag":
                customElements.get(e) || AI();
                break;
            case "axo-credit-card-fields":
                customElements.get(e) || sI();
                break;
            case "axo-expandable":
                customElements.get(e) || pR();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-phone-field":
                customElements.get(e) || fR();
                break;
            case "axo-select-input":
                customElements.get(e) || SI();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI();
                break;
            case "axo-text":
                customElements.get(e) || gR();
                break;
            case "axo-text-input":
                customElements.get(e) || QI();
                break;
            case "axo-toggle":
                customElements.get(e) || vR();
                break;
            case "axo-wallet":
                customElements.get(e) || TR()
            }
        }
        ))
    };
    let RR = !1;
    const PR = (e, t) => {
        var n;
        const r = null === (n = null === document || void 0 === document ? void 0 : document.createEvent) || void 0 === n ? void 0 : n.call(document, "customEvent");
        return new ((null == r ? void 0 : r.constructor) || CustomEvent)(e,t)
    }
      , LR = () => {
        var e;
        RR || (e = {
            ce: PR
        },
        Object.assign(h, e),
        RR = !0)
    }
    ;
    var DR, MR = new Uint8Array(16);
    function FR() {
        if (!DR && !(DR = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto)))
            throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
        return DR(MR)
    }
    const BR = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    for (var jR = [], UR = 0; UR < 256; ++UR)
        jR.push((UR + 256).toString(16).substr(1));
    function GR(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
          , n = (jR[e[t + 0]] + jR[e[t + 1]] + jR[e[t + 2]] + jR[e[t + 3]] + "-" + jR[e[t + 4]] + jR[e[t + 5]] + "-" + jR[e[t + 6]] + jR[e[t + 7]] + "-" + jR[e[t + 8]] + jR[e[t + 9]] + "-" + jR[e[t + 10]] + jR[e[t + 11]] + jR[e[t + 12]] + jR[e[t + 13]] + jR[e[t + 14]] + jR[e[t + 15]]).toLowerCase();
        if (!function(e) {
            return "string" == typeof e && BR.test(e)
        }(n))
            throw TypeError("Stringified UUID is invalid");
        return n
    }
    function $R(e, t, n) {
        var r = (e = e || {}).random || (e.rng || FR)();
        if (r[6] = 15 & r[6] | 64,
        r[8] = 63 & r[8] | 128,
        t) {
            n = n || 0;
            for (var o = 0; o < 16; ++o)
                t[n + o] = r[o];
            return t
        }
        return GR(r)
    }
    function VR(...e) {
        return jk(Fk(e))
    }
    const HR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.onCloseButtonClick = () => {
                this.handleClose ? this.handleClose() : this.isOpen = !1
            }
            ,
            this.onScrimClick = () => {
                var e;
                this.handleScrimClick ? null === (e = this.handleScrimClick) || void 0 === e || e.call(this) : this.onCloseButtonClick()
            }
            ,
            this.getStyles = e => {
                switch (e) {
                case "scrim":
                    return VR("bg-black w-screen fixed left-0 bottom-0 z-1040", this.isOpen ? "h-screen opacity-40 transition-opacity" : "h-0 opacity-0 [transition:height_0ms_150ms,opacity_150ms_cubic-bezier(0.4,0,0.2,1)]");
                case "sheet":
                    return VR("bg-axowhite fixed max-h-[calc(100%-40px)] overflow-y-auto z-1050 flex flex-col px-2 pb-4 md:px-6 md:pb-4 md:left-1/2 md:w-[478px] md:rounded-2xl md:-translate-x-1/2 max-md:left-0 max-md:bottom-0 max-md:rounded-t-2xl max-md:w-screen", this.hasStickyBottomSlot ? "" : "pb-4 md:pb-6", this.sheetClass, this.isOpen ? "transition-transform md:top-10 " + (this.height ? `h-[${this.height}]` : "md:h-fit") : "max-h-0 md:bottom-0 translate-y-full [transition:max-height_0ms_150ms,transform_150ms_cubic-bezier(0.4,0,0.2,1)]")
                }
                return ""
            }
            ,
            this.handleBackButtonClick = void 0,
            this.isOpen = !1,
            this.height = void 0,
            this.header = void 0,
            this.sheetClass = "",
            this.handleClose = void 0,
            this.handleScrimClick = void 0,
            this.focusOnRender = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        async setFocus() {
            this.focusOnRender = !0
        }
        componentWillLoad() {
            this.hasStickyBottomSlot = !!this.el.querySelector('[slot="sticky-bottom"]')
        }
        componentDidRender() {
            var e, t;
            this.isOpen && this.focusOnRender && (this.focusOnRender = !1,
            null === (t = null === (e = this.backButtonRef || this.closeButtonRef) || void 0 === e ? void 0 : e.focus) || void 0 === t || t.call(e))
        }
        render() {
            var e;
            const t = $R();
            return P(D, {
                key: "829e9a5f6c4f1b42d0dd392f2fa133fb2577ec2a",
                "data-testid": "modal-sheet"
            }, P("div", {
                key: "c1b5f298e565ac6544839e87b948a24490900cff",
                "data-testid": "modal-sheet-wrapper",
                role: "dialog",
                "aria-labelledby": t
            }, P("div", {
                key: "fe20c914597f308791f8ade16a22e959fff94466",
                "data-testid": "modal-sheet-scrim",
                onClick: this.onScrimClick,
                class: this.getStyles("scrim")
            }), P("div", {
                key: "3c19b64f7e7e1578eb795ca5a10a6178840af5a5",
                "data-testid": "modal-sheet-inner-sheet",
                class: VR(this.getStyles("sheet"), {
                    invisible: !this.isOpen
                })
            }, P("div", {
                key: "d43811d8bbc39f3fa90578dbe7a71f09771d9289",
                class: "sticky top-0 bg-axowhite z-50 flex w-full p-2 items-center justify-start pt-4 md:pt-5"
            }, this.handleBackButtonClick ? P("button", {
                ref: e => this.backButtonRef = e,
                class: "modal-sheet-back-button p-[max(0px,calc(calc(44px-1em)/2))] -m-[max(0px,calc(calc(44px-1em)/2))]",
                onClick: this.handleBackButtonClick
            }, P("axo-icons", {
                name: "BackArrow",
                iconClass: "w-4.5 h-4 content-center",
                "aria-label": Pr("global.aria.modal.back")
            })) : null, "string" == typeof this.header ? P("axo-text", {
                id: t,
                class: "ml-auto"
            }, this.header) : null !== (e = this.header) && void 0 !== e ? e : "", P("button", {
                key: "66a126d1dcd547097d28e00c7a1bc52e0afedf74",
                ref: e => this.closeButtonRef = e,
                class: "p-[max(0px,calc(calc(44px-0.75em)/2))] ml-auto -mr-[max(0px,calc(calc(44px-0.75em)/2))] -my-[max(0px,calc(calc(44px-0.75em)/2))]",
                onClick: this.onCloseButtonClick,
                "aria-label": Pr("global.aria.modal.close"),
                disabled: !this.isOpen
            }, P("axo-icons", {
                key: "68f28a7ea6bcfd1bd4a736ca4c5d5a5c5642c1ff",
                name: "Close",
                iconClass: "w-3"
            }))), P("div", {
                key: "2bb85e99f992421c17413469d45f899ffb0979f0",
                class: VR("flex-1 no-scrollbar", this.height ? "overflow-y-auto" : "")
            }, P("slot", {
                key: "1da48b627c0c05212e73966078c2151da72d668b"
            })), P("slot", {
                key: "1c3db9c07933402ec8be3bdceb36831bfa417762",
                name: "sticky-bottom"
            }))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-modal-sheet", {
        handleBackButtonClick: [16],
        isOpen: [1028, "is-open"],
        height: [1],
        header: [1],
        sheetClass: [1, "sheet-class"],
        handleClose: [16],
        handleScrimClick: [16],
        focusOnRender: [32],
        setFocus: [64]
    }]);
    function KR() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-modal-sheet", "axo-icons", "axo-text"].forEach((e => {
            switch (e) {
            case "axo-modal-sheet":
                customElements.get(e) || customElements.define(e, HR);
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-text":
                customElements.get(e) || gR()
            }
        }
        ))
    }
    LR();
    const zR = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.handleClose = () => {
                var e, t;
                this.isOpen = !1,
                null === (t = null === (e = this.consentRef) || void 0 === e ? void 0 : e.setTooltipFocus) || void 0 === t || t.call(e)
            }
            ,
            this.consentRef = void 0,
            this.isOpen = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        isOpenChanged(e) {
            var t, n;
            e && (null === (n = null === (t = this.modalRef) || void 0 === t ? void 0 : t.setFocus) || void 0 === n || n.call(t))
        }
        async setIsOpen(e) {
            this.isOpen = e
        }
        render() {
            return P(D, {
                key: "b11487924385b8a7f1bf4244e9a9097ddb6eb970"
            }, P("div", {
                key: "6e93733e96330679b0e9305620af3935abe6e326",
                class: "axo-default-styles align-middle inline-flex font-customFontFamily font-medium text-oldCaptionFontSize text-customTextColorBase leading-[1.25rem]"
            }, P("axo-modal-sheet", {
                key: "cc024d3ebd4a43eba23e0c3b5135dbeb49cbf196",
                ref: e => this.modalRef = e,
                isOpen: this.isOpen,
                sheetClass: "md:max-w-[478px] leading-normal pt-3",
                handleClose: this.handleClose,
                handleScrimClick: this.handleClose
            }, P("div", {
                key: "97402b2e2366fdeaf524f38c968a50f3004401ab",
                class: "flex"
            }, P("div", {
                key: "f920526c0fa20fbf29f8f4304778243c9dea2747",
                class: "h-6.5 w-6.5 mr-4"
            }, P("axo-icons", {
                key: "94f2acf6d049584247914f2a211b3e9c46b0401c",
                name: "RocketFilled"
            })), P("div", {
                key: "43a017f2152408baa900ede4696ac50f4faf1068",
                class: "mb-6"
            }, P("axo-text", {
                key: "79a42a473a01fd3e4b05f698ea5545904065b6e2",
                customClass: "block text-xl"
            }, Pr("consent.tooltip.heading1")), P("axo-text", {
                key: "3d1d4f2d0fb88f342705ce5dd5b8eb571ef289a9",
                customClass: "block"
            }, Pr("consent.tooltip.explanation1")))), P("div", {
                key: "e4f4396bb705a2a9f9408e00f3e577bf8fa5d05a",
                class: "flex"
            }, P("div", {
                key: "018889f7cd64950b94dd00b5a0d8deb6b19102a6",
                class: "h-6.5 w-6.5 mr-4"
            }, P("axo-icons", {
                key: "3223b9e2001b85b6e162f9b5e324ea60101ad403",
                name: "ShieldKeyholeFilled"
            })), P("div", {
                key: "330c7ae831b3a7e342848518747c49385c171b3f",
                class: "mb-6"
            }, P("axo-text", {
                key: "adee1ca5d0e7fd15d6f7082cf71bf008b67d81b4",
                customClass: "block text-xl"
            }, Pr("consent.tooltip.heading2")), P("axo-text", {
                key: "3b9ed9c9b520148ad65b150087c76e0159c03a1f",
                customClass: "block"
            }, Pr("consent.tooltip.explanation2")))), P("div", {
                key: "ef9938d81b9a39c2fa66fac27760e4a9b24f289f",
                class: "flex"
            }, P("div", {
                key: "0e941fa7eb838ce998a940cbd9d00591b757b0fe",
                class: "h-6.5 w-6.5 mr-4"
            }, P("axo-icons", {
                key: "ee70c82eaef6d156e2fd32d63bf688af2b0ee484",
                name: "StoreFilled"
            })), P("div", {
                key: "e00782121132927726308da00ae7e1e23b755ffb",
                class: "mb-6"
            }, P("axo-text", {
                key: "c6171444e04762128827f9354dbd3eaad9a93488",
                customClass: "block text-xl"
            }, Pr("consent.tooltip.heading3")), P("axo-text", {
                key: "53450a0dd1b0a35a7593f320dd1e964a4cfb897d",
                customClass: "block"
            }, Pr("consent.tooltip.explanation3")))), P("axo-branding", {
                key: "13c131392885fc57ea9f8dade7bd983124387170",
                variant: "fl-md",
                class: "w-[10.5em]"
            }))))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                isOpen: ["isOpenChanged"]
            }
        }
    }
    , [1, "paypal-consent-modal", {
        consentRef: [16],
        isOpen: [32],
        setIsOpen: [64]
    }, void 0, {
        isOpen: ["isOpenChanged"]
    }]);
    const WR = zR
      , YR = function() {
        if ("undefined" == typeof customElements)
            return;
        ["paypal-consent-modal", "axo-branding", "axo-icons", "axo-modal-sheet", "axo-text"].forEach((e => {
            switch (e) {
            case "paypal-consent-modal":
                customElements.get(e) || customElements.define(e, zR);
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-modal-sheet":
                customElements.get(e) || KR();
                break;
            case "axo-text":
                customElements.get(e) || gR()
            }
        }
        ))
    }
      , XR = /^#([A-Fa-f0-9]{2})([A-Fa-f0-9]{2})([A-Fa-f0-9]{2})$/
      , ZR = e => {
        const t = e / 255;
        return t <= .03928 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4)
    }
      , qR = e => {
        const [t,n,r] = (e => {
            const t = document.createElement("canvas").getContext("2d");
            t.fillStyle = e;
            const n = t.fillStyle
              , [r,o,i,a] = n.match(XR);
            return [parseInt(o, 16), parseInt(i, 16), parseInt(a, 16)]
        }
        )(e);
        return .2126 * ZR(t) + .7152 * ZR(n) + .0722 * ZR(r)
    }
      , JR = (e, t) => {
        const n = ( (e, t) => {
            const n = qR(e)
              , r = qR(t);
            return (Math.max(n, r) + .05) / (Math.min(n, r) + .05)
        }
        )(e, t);
        return {
            isValid: n >= 4.5,
            ratio: n,
            threshold: 4.5
        }
    }
      , QR = "not be undefined"
      , eP = {
        root: {
            fontSizeBase: {
                min: 13,
                max: 24
            },
            padding: {
                min: 0,
                max: 10
            }
        },
        input: {
            borderRadius: {
                min: 0,
                max: 32
            },
            borderWidth: {
                min: 1,
                max: 5
            }
        },
        caption: {
            fontSizeBase: {
                min: 13,
                max: 24
            }
        }
    }
      , tP = 1
      , nP = "ff"
      , rP = "px"
      , oP = /^#[A-Fa-f0-9]{6}([A-Fa-f0-9]{2})$/
      , iP = /^rgba\(\s*\d{1,3}\s*,\s*\d{1,3}\s*,\s*\d{1,3}\s*,\s*(\d+(\.\d+)?)\s*\)$/
      , aP = /^(\d+).*$/
      , sP = (e, t, n) => {
        $t().track({
            event_name: "axo_contrast_violation_occurred",
            event_type: "im",
            ext_error_desc: `contrast violation between ${JSON.stringify(e)} and ${JSON.stringify(t)}: the contrast ratio of ${n.ratio} does not meet threshold of ${n.threshold}`
        }),
        console.warn(`Fastlane Warning: ${e.property}'s value: ${e.value} and ${t.property}'s value: ${t.value} have a contrast ratio of ${n.ratio.toPrecision(2)} which doesn't meet the threshold of ${n.threshold} required by WCAG accessibility standards. As a result the styles have been reset to default.`)
    }
      , lP = ({key: e, value: t}) => {
        const n = {
            key: e,
            value: t,
            validation: "opacity",
            isValid: !1
        };
        if (!t)
            return n.illegalValue = QR,
            n;
        if ("transparent" === t)
            return n.illegalValue = "not be transparent",
            n;
        const r = t.match(oP);
        if (r) {
            const [e,t] = r;
            return n.isValid = t.toLowerCase() === nP,
            n.isValid || (n.illegalValue = "have an alpha channel value of #FF"),
            n
        }
        const o = t.match(iP);
        if (o) {
            const e = o[1];
            return n.isValid = (e => e === tP)(Number(e)),
            n.isValid || (n.illegalValue = "have an alpha channel value of 1"),
            n
        }
        return n.isValid = !0,
        n
    }
      , cP = ({key: e, value: t, min: n, max: r}) => {
        const o = {
            key: e,
            value: t,
            validation: "dimension",
            lowerBound: `${n}`,
            upperBound: `${r}`,
            isValid: !1
        };
        if (!t)
            return o.illegalValue = QR,
            o;
        if (!(e => !!e.endsWith(rP))(t))
            return o.illegalValue = "use px as a unit",
            o;
        const i = t.match(aP);
        if (!i)
            return o.illegalValue = "be a numeric value",
            o;
        const [a,s] = i
          , l = Number(s);
        return o.isValid = l >= n && l <= r,
        o
    }
      , dP = (e, t) => {
        if (e || t)
            return t ? e ? function(e, ...t) {
                const n = Object.assign({}, e);
                for (const e of t)
                    jr(n, e);
                return n
            }(e, t) : t : e
    }
      , uP = (e={}) => {
        var t;
        const n = {};
        e.root && (n.root = {}),
        e.input && (n.input = {});
        const r = []
          , o = "backgroundColor"
          , i = "textColorBase"
          , a = {
            root: {
                opacity: [o, "primaryColor", i],
                dimension: ["padding", "fontSizeBase"],
                none: ["errorColor", "fontFamily"]
            },
            input: {
                opacity: [o, i],
                dimension: ["borderWidth", "borderRadius"],
                none: ["borderColor", "focusBorderColor"]
            }
        };
        return Object.keys(a).forEach((t => {
            Object.keys(a[t]).forEach((o => {
                switch (o) {
                case "none":
                    a[t].none.forEach((r => {
                        var o;
                        (null === (o = null == e ? void 0 : e[t]) || void 0 === o ? void 0 : o[r]) && (n[t] || (n[t] = {}),
                        n[t][r] = e[t][r])
                    }
                    ));
                    break;
                case "opacity":
                    a[t].opacity.forEach((o => {
                        var i;
                        if (null === (i = null == e ? void 0 : e[t]) || void 0 === i ? void 0 : i[o]) {
                            const i = lP({
                                key: `${t}.${o}`,
                                value: e[t][o]
                            });
                            i.isValid ? (n[t] || (n[t] = {}),
                            n[t][o] = e[t][o]) : r.push(i)
                        }
                    }
                    ));
                    break;
                case "dimension":
                    a[t].dimension.forEach((o => {
                        var i, a, s;
                        if (null === (i = null == e ? void 0 : e[t]) || void 0 === i ? void 0 : i[o]) {
                            const i = cP({
                                key: `${t}.${o}`,
                                value: e[t][o],
                                min: null === (a = eP[t][o]) || void 0 === a ? void 0 : a.min,
                                max: null === (s = eP[t][o]) || void 0 === s ? void 0 : s.max
                            });
                            i.isValid ? (n[t] || (n[t] = {}),
                            n[t][o] = e[t][o]) : r.push(i)
                        }
                    }
                    ))
                }
            }
            ))
        }
        )),
        (null === (t = null == e ? void 0 : e.root) || void 0 === t ? void 0 : t.backgroundColorPrimary) && n.root && (n.root.backgroundColorPrimary = e.root.backgroundColorPrimary),
        (null == e ? void 0 : e.toggle) && (n.toggle = {},
        e.toggle.colorPrimary && (n.toggle.colorPrimary = e.toggle.colorPrimary),
        e.toggle.colorSecondary && (n.toggle.colorSecondary = e.toggle.colorSecondary)),
        e.text && (n.text = {},
        e.text.body && (n.text.body = {},
        e.text.body.color && (n.text.body.color = e.text.body.color),
        e.text.body.fontSize && (n.text.body.fontSize = e.text.body.fontSize)),
        e.text.caption && (n.text.caption = {},
        e.text.caption.color && (n.text.caption.color = e.text.caption.color),
        e.text.caption.fontSize && (n.text.caption.fontSize = e.text.caption.fontSize))),
        e.branding && (n.branding = e.branding),
        r.length > 0 && (e => {
            if (!e.length)
                return;
            $t().track({
                event_name: "axo_style_boundary_violation_occurred",
                event_type: "im",
                ext_error_desc: `style boundary violation properties ${e.map((e => e.key)).join(", ")}`
            });
            const t = e.map((e => e.illegalValue ? `- ${e.key} has the value: ${e.value} but we require it to ${e.illegalValue}` : `- ${e.key} has the value: ${e.value} but we require it to be between the minimum: ${e.lowerBound} and the maximum: ${e.upperBound}`));
            console.warn(`Fastlane Warning: The custom styling violated the following conditions and as a result the styles were set to the default:\n  ${t.join("\n  ")}`)
        }
        )(r),
        n
    }
      , pP = (e={}) => {
        var t, n, r, o, i, a;
        const s = e.theme || "light"
          , l = DN[s].default
          , c = uP(e)
          , d = null !== (n = null === (t = c.root) || void 0 === t ? void 0 : t.textColorBase) && void 0 !== n ? n : l.root.textColorBase
          , u = null !== (o = null === (r = c.root) || void 0 === r ? void 0 : r.primaryColor) && void 0 !== o ? o : l.root.primaryColor
          , p = null !== (a = null === (i = c.root) || void 0 === i ? void 0 : i.backgroundColor) && void 0 !== a ? a : l.root.backgroundColor
          , h = l.fixed.logoColor
          , f = l.fixed.privacyLinkColor
          , m = JR(d, p)
          , g = JR(u, p)
          , y = JR(h, p)
          , v = JR(f, p);
        return m.isValid || sP({
            property: "root.textColorBase",
            value: d
        }, {
            property: "root.backgroundColor",
            value: p
        }, m),
        g.isValid || sP({
            property: "root.primaryColor",
            value: u
        }, {
            property: "root.backgroundColor",
            value: p
        }, g),
        y.isValid || sP({
            property: "Fastlane Logo Color",
            value: h
        }, {
            property: "root.backgroundColor",
            value: p
        }, y),
        v.isValid || sP({
            property: "Privacy Link Color",
            value: f
        }, {
            property: "root.backgroundColor",
            value: p
        }, v),
        m.isValid && g.isValid && y.isValid && v.isValid || (c.root || (c.root = {}),
        c.root.textColorBase = l.root.textColorBase,
        c.root.backgroundColor = l.root.backgroundColor,
        c.root.primaryColor = l.root.primaryColor),
        c
    }
      , hP = e => e.addEventListener("consentConnected", (e => {
        const t = e.detail
          , n = new WR;
        n.consentRef = t,
        t.consentModalRef = n,
        document.body.appendChild(n)
    }
    ))
      , fP = ({btClient: e, cardComponentOptions: t, containerSelector: n, metric: r, styles: o}) => {
        er.setCheckpoint(er.CHECKPOINTS.CARD_COMPONENT_INVOKED);
        const i = $t();
        try {
            let a;
            const {fields: s={}} = t || {};
            i.info("axo_sdk_merchant_styles", {
                styles: o
            });
            const l = pP(o)
              , c = {
                theme: null == o ? void 0 : o.theme,
                btClient: e,
                fieldOptions: s,
                styleOptions: l
            };
            a = new kR,
            a.btClient = c.btClient,
            a.fieldOptions = c.fieldOptions,
            a.mockMode = "mock" === it.get("axoEnv"),
            a.theme = c.theme || tt,
            c.styleOptions && (a.styleOptions = c.styleOptions),
            hP(a);
            const d = document.querySelector(n);
            if (!d)
                throw YN;
            return LN(d, a),
            i.countMetric({
                component: r.COMPONENT,
                action: r.ACTION.RENDER,
                status: vt.STATUS.OK
            }),
            a
        } catch (e) {
            throw i.countMetric({
                component: r.COMPONENT,
                action: r.ACTION.RENDER,
                status: vt.STATUS.ERROR
            }),
            e
        }
    }
      , mP = async ({billingAddress: e, metric: t, paypalFastlaneCard: n, cardholderName: r}) => {
        const o = $t();
        try {
            const i = await n.getPaymentToken({
                billingAddress: e,
                cardholderName: r
            });
            return o.countMetric({
                component: t.COMPONENT,
                action: t.ACTION.GETPAYMENTTOKEN,
                status: vt.STATUS.OK
            }),
            i
        } catch (e) {
            throw o.countMetric({
                component: t.COMPONENT,
                action: t.ACTION.GETPAYMENTTOKEN,
                status: vt.STATUS.ERROR
            }),
            e
        }
    }
      , gP = (e, t, n) => {
        var r;
        let o;
        if (t === et.PPCP) {
            const t = Object.assign({}, e)
              , {firstName: i, lastName: a} = null !== (r = n) && void 0 !== r ? r : {};
            o = Object.assign({
                firstName: i,
                lastName: a
            }, NN(t))
        } else
            o = Object.assign({}, e);
        return o
    }
      , yP = e => {
        var {styles: t} = e
          , n = Ck(e, ["styles"]);
        return (e={}) => {
            let r;
            try {
                let o;
                r = $t();
                const {platform: i} = n;
                IR(),
                YR();
                const a = {
                    render: async r => (o = fP(Object.assign(Object.assign({}, n), {
                        containerSelector: r,
                        cardComponentOptions: e,
                        metric: Et,
                        styles: dP(t, e.styles)
                    })),
                    a),
                    tokenize: async e => {
                        try {
                            const {billingAddress: t, shippingAddress: n} = e;
                            let a = Object.assign({}, t);
                            if (i === et.PPCP) {
                                const n = e
                                  , r = Object.assign({}, t)
                                  , {name: o} = null != n ? n : {}
                                  , {firstName: i, lastName: s} = null != o ? o : {};
                                a = Object.assign({
                                    firstName: i,
                                    lastName: s
                                }, NN(r))
                            }
                            const s = await o.tokenize({
                                billingAddress: a,
                                shippingAddress: n
                            });
                            return r.countMetric({
                                component: Et.COMPONENT,
                                action: Et.ACTION.TOKENIZE,
                                status: vt.STATUS.OK
                            }),
                            s
                        } catch (e) {
                            throw r.countMetric({
                                component: Et.COMPONENT,
                                action: Et.ACTION.TOKENIZE,
                                status: vt.STATUS.ERROR
                            }),
                            e
                        }
                    }
                    ,
                    getPaymentToken: e => {
                        const t = gP(e.billingAddress, i, e.name);
                        return mP(Object.assign(Object.assign({}, n), {
                            billingAddress: t,
                            paypalFastlaneCard: o,
                            metric: Et
                        }))
                    }
                };
                return r.countMetric({
                    component: Et.COMPONENT,
                    action: Et.ACTION.CREATE,
                    status: vt.STATUS.OK
                }),
                a
            } catch (e) {
                throw null == r || r.countMetric({
                    component: Et.COMPONENT,
                    action: Et.ACTION.CREATE,
                    status: vt.STATUS.ERROR
                }),
                e
            }
        }
    }
    ;
    LR();
    const vP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.includeAdditionalInfo = !1,
            this.watermarkModalRef = void 0,
            this.theme = tt;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        async setFocus() {
            var e, t;
            null === (t = null === (e = this.buttonRef) || void 0 === e ? void 0 : e.focus) || void 0 === t || t.call(e)
        }
        disconnectedCallback() {
            var e;
            null === (e = this.watermarkModalRef) || void 0 === e || e.remove()
        }
        render() {
            return P(D, {
                key: "496b91b87fe3833222baebfc2ccbf9de712b505e",
                "data-theme": this.theme
            }, P("div", {
                key: "df3097590dfbc0c5832f586a08f806167a69e858",
                class: "axo-default-styles flex min-w-[100px]"
            }, this.includeAdditionalInfo ? P("button", {
                ref: e => this.buttonRef = e,
                class: "w-full min-h-[24px]",
                onClick: () => {
                    var e;
                    return null === (e = this.watermarkModalRef) || void 0 === e ? void 0 : e.setIsOpen(!0)
                }
            }, P("axo-branding", {
                theme: this.theme,
                slot: "button",
                variant: "fl-tooltip",
                "aria-label": [Pr("global.aria.branding.altText"), Pr("global.aria.infoIcon")].filter((e => !!e)).join(", ")
            })) : P("axo-branding", {
                theme: this.theme,
                variant: "fl-sm",
                "aria-label": [Pr("global.aria.logo"), Pr("global.aria.branding.altText")].filter((e => !!e)).join(", ")
            })))
        }
        get el() {
            return this
        }
    }
    , [1, "paypal-watermark", {
        includeAdditionalInfo: [4, "include-additional-info"],
        watermarkModalRef: [16],
        theme: [1],
        setFocus: [64]
    }]);
    const bP = vP
      , EP = function() {
        if ("undefined" == typeof customElements)
            return;
        ["paypal-watermark", "axo-branding"].forEach((e => {
            switch (e) {
            case "paypal-watermark":
                customElements.get(e) || customElements.define(e, vP);
                break;
            case "axo-branding":
                customElements.get(e) || hI()
            }
        }
        ))
    };
    LR();
    const _P = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.handleClose = () => {
                var e, t;
                this.isOpen = !1,
                null === (t = null === (e = this.watermarkRef) || void 0 === e ? void 0 : e.setFocus) || void 0 === t || t.call(e)
            }
            ,
            this.watermarkRef = void 0,
            this.theme = tt,
            this.isOpen = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        isOpenChanged(e) {
            var t, n;
            e && (null === (n = null === (t = this.modalRef) || void 0 === t ? void 0 : t.setFocus) || void 0 === n || n.call(t))
        }
        async setIsOpen(e) {
            this.isOpen = e
        }
        render() {
            return P(D, {
                key: "6498c135b34042567fd630e18df844b7196138dc",
                "data-theme": tt
            }, P("div", {
                key: "52f6f9222c32dcd4ce82488d964bce884a699204",
                class: "axo-default-styles flex min-w-[100px]"
            }, P("axo-modal-sheet", {
                key: "971c34a67ed4ee85285f07ff800706c4bd098af8",
                ref: e => this.modalRef = e,
                isOpen: this.isOpen,
                sheetClass: "md:max-w-[478px] leading-normal pt-3",
                handleClose: this.handleClose,
                handleScrimClick: this.handleClose
            }, Pr("watermark.tooltip.text", {
                privacyStatement: P("a", {
                    href: "https://fastlane.paypal.com/us/privacy",
                    target: "_blank",
                    class: "font-medium cursor-pointer text-axoblue-500 hover:underline"
                }, Pr("watermark.tooltip.privacyStatement"))
            }))))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                isOpen: ["isOpenChanged"]
            }
        }
    }
    , [1, "paypal-watermark-modal", {
        watermarkRef: [16],
        theme: [1],
        isOpen: [32],
        setIsOpen: [64]
    }, void 0, {
        isOpen: ["isOpenChanged"]
    }]);
    const AP = _P
      , wP = function() {
        if ("undefined" == typeof customElements)
            return;
        ["paypal-watermark-modal", "axo-icons", "axo-modal-sheet", "axo-text"].forEach((e => {
            switch (e) {
            case "paypal-watermark-modal":
                customElements.get(e) || customElements.define(e, _P);
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-modal-sheet":
                customElements.get(e) || KR();
                break;
            case "axo-text":
                customElements.get(e) || gR()
            }
        }
        ))
    }
      , SP = ({containerSelector: e, watermarkOptions: t, metric: n, styles: r}) => {
        const o = $t();
        try {
            const i = new bP
              , a = new AP;
            i.watermarkModalRef = a,
            i.includeAdditionalInfo = (null == t ? void 0 : t.includeAdditionalInfo) || !1,
            i.theme = (null == r ? void 0 : r.theme) || tt,
            a.watermarkRef = i;
            const s = document.querySelector(e);
            if (!s)
                throw YN;
            return LN(s, i),
            document.body.appendChild(a),
            o.countMetric({
                component: n.COMPONENT,
                action: n.ACTION.RENDER,
                status: vt.STATUS.OK
            }),
            i
        } catch (e) {
            throw o.countMetric({
                component: n.COMPONENT,
                action: n.ACTION.RENDER,
                status: vt.STATUS.ERROR
            }),
            e
        }
    }
      , CP = e => {
        var {styles: t} = e
          , n = Ck(e, ["styles"]);
        const r = $t();
        return e => {
            try {
                EP(),
                wP();
                const o = {
                    render: async r => {
                        try {
                            if (!it.get("isFastlaneEnabled")) {
                                Sk.triggerExternalWarning(vk.CONNECT_WATERMARK_RENDER_REQUIRES_FASTLANE_ENABLED);
                                const e = document.querySelector(r);
                                return e && e.style && (e.style.visibility = "hidden"),
                                o
                            }
                            return SP(Object.assign(Object.assign({}, n), {
                                containerSelector: r,
                                watermarkOptions: e,
                                metric: Pt,
                                styles: dP(t, e.styles)
                            })),
                            o
                        } catch (e) {
                            let t;
                            if (ek(e),
                            e === YN)
                                t = Ak.CARD_RENDER_MISSING_CONTAINER;
                            else
                                t = Ak.WATERMARK_RENDER_FAILED;
                            throw Sk.createExternalError(t)
                        }
                    }
                };
                return r.countMetric({
                    component: Pt.COMPONENT,
                    action: Pt.ACTION.CREATE,
                    status: vt.STATUS.OK
                }),
                o
            } catch (e) {
                throw ek(e),
                r.countMetric({
                    component: Pt.COMPONENT,
                    action: Pt.ACTION.CREATE,
                    status: vt.STATUS.ERROR
                }),
                Sk.createExternalError(Ak.WATERMARK_INIT_FAILED)
            }
        }
    }
    ;
    function OP(e) {
        const t = Object.entries(e).map((e => [e[0], String(e[1])]));
        return Object.fromEntries(t)
    }
    const xP = {
        checkoutPageLoaded: e => {
            Jn().track(Object.assign(Object.assign({}, OP(e)), {
                event_name: "axo_merchant_checkout_page_loaded"
            })).flush()
        }
        ,
        apmSelected: e => {
            Jn().track(Object.assign(Object.assign({}, OP(e)), {
                event_name: "axo_merchant_apm_selected"
            })).flush()
        }
        ,
        emailSubmitted: e => {
            Jn().track(Object.assign(Object.assign({}, OP(e)), {
                event_name: "axo_merchant_email_submitted"
            })).flush()
        }
        ,
        orderPlaced: e => {
            Jn().track(Object.assign(Object.assign({}, OP(e)), {
                event_name: "axo_merchant_order_placed"
            })).flush()
        }
    }
      , TP = (e={}) => {
        const t = {};
        for (const n of BN) {
            const r = e[n];
            r && (t[n] = {
                prefill: r.prefill
            })
        }
        for (const n of FN) {
            const r = e[n];
            r && r.hasOwnProperty("enabled") && !(null == r ? void 0 : r.enabled) || (t[n] = {
                prefill: null == r ? void 0 : r.prefill
            })
        }
        return t
    }
      , NP = e => {
        var {styles: t} = e
          , n = Ck(e, ["styles"]);
        return async (e={}) => {
            let r;
            try {
                const o = TP(e.fields);
                let i;
                r = $t(),
                IR(),
                YR();
                const a = {
                    render: r => {
                        try {
                            return i = fP(Object.assign(Object.assign({}, n), {
                                containerSelector: r,
                                cardComponentOptions: Object.assign(Object.assign({}, e), {
                                    fields: o
                                }),
                                metric: bt,
                                styles: dP(t, e.styles)
                            })),
                            a
                        } catch (e) {
                            let t;
                            if (ek(e),
                            e === YN)
                                t = Ak.CARD_RENDER_MISSING_CONTAINER;
                            else
                                t = Ak.CARD_RENDER_FAILED;
                            throw Sk.createExternalError(t)
                        }
                    }
                    ,
                    updatePrefills: async e => {
                        try {
                            i ? await i.updatePrefills(e) : o.phoneNumber = {
                                prefill: e.phoneNumber
                            },
                            r.countMetric({
                                component: bt.COMPONENT,
                                action: bt.ACTION.UPDATEPREFILLS,
                                status: vt.STATUS.OK
                            })
                        } catch (e) {
                            throw ek(e),
                            r.countMetric({
                                component: bt.COMPONENT,
                                action: bt.ACTION.UPDATEPREFILLS,
                                status: vt.STATUS.ERROR
                            }),
                            Sk.createExternalError(Ak.CARD_UPDATE_PREFILLS_FAILED)
                        }
                    }
                    ,
                    getPaymentToken: async ({cardholderName: e, billingAddress: t}) => {
                        try {
                            let s, l;
                            if (!e || ("string" == typeof (a = e) || a instanceof String))
                                l = e,
                                s = gP(t, n.platform, e);
                            else {
                                const r = eo(e);
                                l = r.firstName && r.lastName ? `${r.firstName} ${r.lastName}`.trim() : r.fullName || "",
                                s = gP(t, n.platform, r)
                            }
                            const c = kN(s)
                              , d = await c.validate();
                            if (d.length > 0) {
                                r.track({
                                    event_name: "axo_get_payment_token_validation_failed",
                                    entry_point: "payments",
                                    event_category: "add_fi",
                                    event_type: "im",
                                    int_error_code: "CARD_COMPONENT_INVALID_BILLING",
                                    int_error_desc: d.map((e => `${e.code}: ${e.element}`)).join(" | "),
                                    intent: "checkout"
                                });
                                const e = ( (e, t) => {
                                    let n = []
                                      , r = [];
                                    t.forEach((e => {
                                        switch (null == e ? void 0 : e.code) {
                                        case "MISSING_REQUIRED":
                                            n.push(e.element);
                                            break;
                                        case "INVALID_PATTERN":
                                            r.push(e.element)
                                        }
                                    }
                                    )),
                                    e === et.BT && (n = n.map((e => TN[e])),
                                    r = r.map((e => TN[e])));
                                    const o = Object.assign({}, yk.CARD_GET_PAYMENT_TOKEN_ADDRESS_VALIDATION_FAILED);
                                    return o.details = Object.assign(Object.assign({}, (null == n ? void 0 : n.length) > 0 ? {
                                        missingFields: n
                                    } : {}), (null == r ? void 0 : r.length) > 0 ? {
                                        invalidFields: r
                                    } : {}),
                                    o
                                }
                                )(n.platform, d);
                                throw Sk.createExternalError(e)
                            }
                            const u = {
                                billingAddress: s
                            };
                            if (e && !(null == o ? void 0 : o.cardholderName))
                                u.cardholderName = l;
                            else if (e)
                                console.warn("dropping cardholderName from getPaymentToken since there is already a cardholderName card field");
                            else if (!(null == o ? void 0 : o.cardholderName))
                                throw r.track({
                                    event_name: "axo_get_payment_token_validation_failed",
                                    entry_point: "payments",
                                    event_category: "add_fi",
                                    event_type: "im",
                                    int_error_code: "CARD_COMPONENT_MISSING_CARDHOLDER_NAME",
                                    int_error_desc: "MISSING_REQUIRED: cardholderName",
                                    intent: "checkout"
                                }),
                                Sk.createExternalError(Ak.CARD_GET_PAYMENT_TOKEN_NAME_VALIDATION_FAILED);
                            return await mP(Object.assign(Object.assign(Object.assign({}, n), u), {
                                paypalFastlaneCard: i,
                                metric: bt
                            }))
                        } catch (e) {
                            if (e instanceof lk)
                                throw e;
                            if (ek(e),
                            r.error("axo_sdk_card_component_get_payment_token_error", {
                                error: e
                            }),
                            "CUSTOMER" === e.type)
                                throw Sk.createExternalError(Ak.CARD_GET_PAYMENT_TOKEN_BAD_DATA);
                            throw Sk.createExternalError(Ak.CARD_GET_PAYMENT_TOKEN_FAILED)
                        }
                        var a
                    }
                };
                return r.countMetric({
                    component: bt.COMPONENT,
                    action: bt.ACTION.CREATE,
                    status: vt.STATUS.OK
                }),
                a
            } catch (e) {
                throw ek(e),
                r.countMetric({
                    component: bt.COMPONENT,
                    action: bt.ACTION.CREATE,
                    status: vt.STATUS.ERROR
                }),
                Sk.createExternalError(Ak.CARD_INIT_FAILED)
            }
        }
    }
      , kP = {
        AMEX: "cc_amex_light.81e1.svg",
        DINERS: "cc_dinersclub_light.354d.svg",
        DISCOVER: "cc_discover_light.85a5.svg",
        JCB: "cc_jcb_light.6fb4.svg",
        MAESTRO: "cc_maestro.5e52.svg",
        MASTERCARD: "cc_mastercard_light.1621.svg",
        CHINAUNIONPAY: "cc_unionpay_light.1519.svg",
        VISA: "cc_visa_light.0a3a.svg"
    }
      , IP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.name = void 0,
            this.class = void 0,
            this.path = zk;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "88c88bc7047a82874642f40ac4cd48c1d9b09a94",
                class: jk("block", this.class)
            }, P("img", {
                key: "38d3c5e1e5ad16da185cb171b16a35804a5c50af",
                src: `${this.path}/assets/${kP[this.name]}`,
                alt: Pr("global.aria.card.cardArt", {
                    brand: this.name
                })
            }))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-card-art", {
        name: [1],
        class: [1],
        path: [1]
    }]);
    function RP() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-card-art"].forEach((e => {
            if ("axo-card-art" === e)
                customElements.get(e) || customElements.define(e, IP)
        }
        ))
    }
    const PP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.class = "";
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "85f468eb8163c0a2558f6ca838fc26de7a9b74a0",
                class: jk("animate-shimmer block bg-gradient-to-r from-axogray-200 from-0% via-50% via-white to-axogray-200 to-100% bg-[length:200%] h-full rounded-full w-full", this.class)
            })
        }
        get el() {
            return this
        }
    }
    , [1, "axo-shimmer-loader", {
        class: [1]
    }]);
    function LP() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-shimmer-loader"].forEach((e => {
            if ("axo-shimmer-loader" === e)
                customElements.get(e) || customElements.define(e, PP)
        }
        ))
    }
    const DP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow();
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "ce6cbb7fda567f2ee75087966ca440e5cfcdc14e"
            }, P("div", {
                key: "18c784c00c1ed8990eac60a95f11857ff1dfd6f1",
                class: "mb-6 min-w-el max-w-80"
            }, P("div", {
                key: "71e846422c163e1293e0ea02fbade2d9b987e29c",
                class: "my-2 h-4.5 w-3/4"
            }, P("axo-shimmer-loader", {
                key: "5a04f554248eee97be68fdf54dce16516ae8e0c3"
            })), P("div", {
                key: "d324a375c28c8b29de8712c02f51b81c5c2e5060",
                class: "my-2 h-4.5 w-full"
            }, P("axo-shimmer-loader", {
                key: "ebd00f25ace560d8a1bc5b1e446e2f451ed27018"
            })), P("div", {
                key: "eabdf6622f67a3655f263d51fe7b1ce1d9ca0d97",
                class: "my-2 h-4.5 w-full"
            }, P("axo-shimmer-loader", {
                key: "6043ea3951b6d291d088acacfe8f2a1df1de7948"
            }))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-loader"]);
    function MP() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-loader", "axo-shimmer-loader"].forEach((e => {
            switch (e) {
            case "axo-loader":
                customElements.get(e) || customElements.define(e, DP);
                break;
            case "axo-shimmer-loader":
                customElements.get(e) || LP()
            }
        }
        ))
    }
    const FP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.cardBrand = void 0,
            this.lastDigits = void 0,
            this.theme = tt;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "9b884f9c4adf4c29dfd7b49d10d7623e397ffeb0"
            }, P("div", {
                key: "80b0ce777ae3e040d2fd515da9d0eec4d02512f8",
                class: "flex flex-col gap-y-2.5 rounded-sm"
            }, P("div", {
                key: "6ba2e0691e13924b573fc4ef2bbc808b38814919",
                class: "flex flex-row gap-4 pt-px pr-[4.5em] items-center",
                "aria-label": Pr("global.aria.card.maskedCardInfo", {
                    lastDigits: this.lastDigits.split("").join(" ")
                })
            }, P("axo-card-art", {
                key: "098e82bf164646d5eb50b94a187d5fc0eda4d69a",
                class: "w-[2.8125em]",
                name: this.cardBrand,
                "aria-hidden": "true"
            }), P("axo-text", {
                key: "e2ceaa7e14c0168d4f1ccb7d0110f9af3e5de32b",
                customClass: "text-customTextColorBase",
                "aria-hidden": "true"
            }, P("span", {
                key: "461a297cfc0ae3fe5d9151776af709f3bfd97b0f",
                class: "mr-1"
            }, "••••"), this.lastDigits)), P("axo-branding", {
                key: "32f409a08935e1b985da481871a720915bb808d5",
                theme: this.theme,
                variant: "fl-sm",
                class: "pr-12"
            })))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-selected-card", {
        cardBrand: [1, "card-brand"],
        lastDigits: [1, "last-digits"],
        theme: [1]
    }]);
    const BP = new Error("Mismatch between selected card and profile data")
      , jP = new Error("No payment token returned")
      , UP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.showCardSelectorEvent = j(this, "showCardSelectorEvent", 7),
            this.logger = $t(),
            this.handleChangeClick = e => {
                e.preventDefault(),
                this.showCardSelector = !0
            }
            ,
            this.btClient = void 0,
            this.initialFieldOptions = {
                cardholderName: {}
            },
            this.styleOptions = void 0,
            this.mockMode = !1,
            this.cardSelectorRef = void 0,
            this.theme = tt,
            this.showCardSelector = !1,
            this.fieldOptions = void 0,
            this.prefilledPhone = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        watchShowCardSelector(e) {
            var t, n, r;
            if (!e)
                return void (null === (t = this.cardSelectorRef) || void 0 === t || t.remove());
            const {selectedCardId: o} = it.get("cardSelectorState");
            if (!o)
                throw new Error("showing card but no selected card");
            const i = null !== (r = null === (n = it.get("fullProfile")) || void 0 === n ? void 0 : n.cards) && void 0 !== r ? r : []
              , a = null == i ? void 0 : i.findIndex((e => e.id === o));
            if (-1 === a)
                throw new Error("could not find selected card index in profile");
            this.showCardSelectorEvent.emit({
                btClient: this.btClient,
                fastlanePaymentRef: this.el,
                selectedIndex: a,
                cardOptions: i
            })
        }
        async getPaymentToken() {
            var e, t;
            if (this.mockMode) {
                const e = {
                    billingAddress: Sr
                };
                return (await Tr(e)).paymentToken
            }
            const n = null === (e = it.get("cardSelectorState")) || void 0 === e ? void 0 : e.selectedCardId;
            if (n) {
                const {cards: e} = it.get("fullProfile") || {
                    cards: []
                }
                  , t = null == e ? void 0 : e.find((e => e.id === n));
                if (!t)
                    throw BP;
                return t.paymentToken
            }
            const r = await (null === (t = this.walletComponent) || void 0 === t ? void 0 : t.tokenize());
            if (!r)
                throw jP;
            return r
        }
        async updatePrefills(e) {
            const {phoneNumber: t} = e;
            t && (this.prefilledPhone = t)
        }
        async handleCloseCardSelector({selectedCard: e}) {
            var t, n;
            e && it.set("cardSelectorState", {
                selectedCardId: e.id
            }),
            this.showCardSelector = !1,
            null === (n = null === (t = this.changeLink) || void 0 === t ? void 0 : t.focus) || void 0 === n || n.call(t)
        }
        connectedCallback() {
            var e, t;
            if (this.styleOptions) {
                const e = Tk(this.styleOptions);
                Ik(e, this.el.tagName.toLowerCase())
            }
            this.fieldOptions = this.initialFieldOptions,
            this.fieldOptions.cardholderName || (this.fieldOptions = Object.assign(Object.assign({}, this.fieldOptions), {
                cardholderName: {}
            })),
            this.prefilledPhone = (null === (t = null === (e = this.initialFieldOptions) || void 0 === e ? void 0 : e.phoneNumber) || void 0 === t ? void 0 : t.prefill) || ""
        }
        componentDidLoad() {
            this.logger.track({
                event_name: "axo_payment_module_shown",
                duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.PAYMENT_COMPONENT_INVOKED),
                entry_point: "payments",
                event_category: "add_fi",
                event_type: "im",
                intent: "checkout"
            })
        }
        isActiveFastlaneUser() {
            var e;
            const {accountType: t, customerId: n, isAccountActive: r} = null !== (e = it.get("authState")) && void 0 !== e ? e : {};
            return !("C" !== t || !n || !r)
        }
        getName() {
            var e;
            const {name: t} = it.get("fullProfile") || {};
            if (t)
                return t.toPpSdkType().fullName;
            const {firstName: n, lastName: r} = (null === (e = it.get("paymentComponentState")) || void 0 === e ? void 0 : e.shippingAddressFromMerchant) || {};
            return n && r ? `${n} ${r}` : ""
        }
        renderNewCard() {
            var e, t;
            return this.fieldOptions.cardholderName && !(null === (t = null === (e = this.fieldOptions) || void 0 === e ? void 0 : e.cardholderName) || void 0 === t ? void 0 : t.prefill) && (this.fieldOptions.cardholderName.prefill = this.getName()),
            P("axo-wallet", {
                ref: e => this.walletComponent = e,
                btClient: this.btClient,
                fieldOptions: this.fieldOptions,
                prefilledPhone: this.prefilledPhone,
                host: this.el,
                isActiveFastlaneUser: this.isActiveFastlaneUser(),
                requireBillingAddress: !0,
                theme: this.theme
            }, iI())
        }
        renderSelectedCard({selectedCardId: e}) {
            if (!e)
                throw new Error("rendering card but no selected card");
            const {cards: t} = it.get("fullProfile") || {
                cards: []
            }
              , n = null == t ? void 0 : t.find((t => t.id === e));
            if (!n)
                throw new Error("could not find selected card in profile");
            const r = n.paymentToken.paymentSource.card;
            return P("div", null, P("div", {
                class: "flex justify-between content-center"
            }, P("axo-selected-card", {
                class: "flex-none",
                theme: this.theme,
                cardBrand: r.brand,
                lastDigits: r.lastDigits
            }), P("a", {
                ref: e => this.changeLink = e,
                href: "",
                onClick: this.handleChangeClick,
                class: "font-medium cursor-pointer text-customPrimaryColor flex-none",
                "data-testid": "payment-change-card-button"
            }, Pr("paymentComponent.changeLink"))))
        }
        renderPayment() {
            const {selectedCardId: e} = it.get("cardSelectorState");
            return e && this.isActiveFastlaneUser() ? this.renderSelectedCard({
                selectedCardId: e
            }) : this.renderNewCard()
        }
        render() {
            return P(D, {
                key: "e98bbcf05bbe6b3c2a2af340f53b1948ba50342f",
                "data-theme": this.theme,
                class: "min-w-el"
            }, P("div", {
                key: "eb0469026725267dc1f349bc85af0bce18619eee",
                class: "bg-customBackgroundColor p-customPadding font-customFontFamily text-customFontSize"
            }, it.state.isIdentityLoading ? P("axo-loader", null) : this.renderPayment()))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                showCardSelector: ["watchShowCardSelector"]
            }
        }
    }
    , [1, "paypal-payment", {
        btClient: [16],
        initialFieldOptions: [16],
        styleOptions: [16],
        mockMode: [4, "mock-mode"],
        cardSelectorRef: [16],
        theme: [1],
        showCardSelector: [32],
        fieldOptions: [32],
        prefilledPhone: [32],
        getPaymentToken: [64],
        updatePrefills: [64],
        handleCloseCardSelector: [64]
    }, void 0, {
        showCardSelector: ["watchShowCardSelector"]
    }]);
    const GP = UP
      , $P = function() {
        if ("undefined" == typeof customElements)
            return;
        ["paypal-payment", "axo-address-form", "axo-branding", "axo-button", "axo-card-art", "axo-checkbox", "axo-consent", "axo-country-flag", "axo-credit-card-fields", "axo-expandable", "axo-icons", "axo-loader", "axo-phone-field", "axo-select-input", "axo-selected-card", "axo-shimmer-loader", "axo-spinner-loader", "axo-text", "axo-text-input", "axo-toggle", "axo-wallet"].forEach((e => {
            switch (e) {
            case "paypal-payment":
                customElements.get(e) || customElements.define(e, UP);
                break;
            case "axo-address-form":
                customElements.get(e) || lR();
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-button":
                customElements.get(e) || bI();
                break;
            case "axo-card-art":
                customElements.get(e) || RP();
                break;
            case "axo-checkbox":
                customElements.get(e) || dR();
                break;
            case "axo-consent":
                customElements.get(e) || ER();
                break;
            case "axo-country-flag":
                customElements.get(e) || AI();
                break;
            case "axo-credit-card-fields":
                customElements.get(e) || sI();
                break;
            case "axo-expandable":
                customElements.get(e) || pR();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-loader":
                customElements.get(e) || MP();
                break;
            case "axo-phone-field":
                customElements.get(e) || fR();
                break;
            case "axo-select-input":
                customElements.get(e) || SI();
                break;
            case "axo-selected-card":
                customElements.get(e) || function() {
                    if ("undefined" == typeof customElements)
                        return;
                    ["axo-selected-card", "axo-branding", "axo-card-art", "axo-text"].forEach((e => {
                        switch (e) {
                        case "axo-selected-card":
                            customElements.get(e) || customElements.define(e, FP);
                            break;
                        case "axo-branding":
                            customElements.get(e) || hI();
                            break;
                        case "axo-card-art":
                            customElements.get(e) || RP();
                            break;
                        case "axo-text":
                            customElements.get(e) || gR()
                        }
                    }
                    ))
                }();
                break;
            case "axo-shimmer-loader":
                customElements.get(e) || LP();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI();
                break;
            case "axo-text":
                customElements.get(e) || gR();
                break;
            case "axo-text-input":
                customElements.get(e) || QI();
                break;
            case "axo-toggle":
                customElements.get(e) || vR();
                break;
            case "axo-wallet":
                customElements.get(e) || TR()
            }
        }
        ))
    }
      , VP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.allowedCardBrands = [];
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "a871f11a28576056bfeaef0664f2f25baeb80070"
            }, P("div", {
                key: "80524c1f27b901d7ac18c20bc9baa910e7f047d0",
                class: jk("flex flex-col py-2 px-3 gap-2 rounded bg-axogray-150 items-start mb-2")
            }, P("div", {
                key: "5b0c3bc117a68dd3164f4b2071ce5463fb7acecf",
                class: jk("flex flex-col justify-center items-start gap-2 self-stretch")
            }, P("axo-text", {
                key: "a06f1be07bd657bb1727b9a53636f646af26710e",
                customClass: jk("flex pr-1 items-center gap-2 leading-5"),
                fontWeight: "strong"
            }, Pr("wallet.allowedFI")), P("div", {
                key: "d523365f41fb7e0c4b4764acd1d9ec5ad987070a",
                class: "flex flex-row flex-wrap items-center gap-1"
            }, this.allowedCardBrands.map((e => P("axo-card-art", {
                name: e,
                class: "w-9 rounded border border-solid border-axogray-350"
            })))))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-accepted-cards", {
        allowedCardBrands: [16]
    }]);
    function HP() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-accepted-cards", "axo-card-art", "axo-text"].forEach((e => {
            switch (e) {
            case "axo-accepted-cards":
                customElements.get(e) || customElements.define(e, VP);
                break;
            case "axo-card-art":
                customElements.get(e) || RP();
                break;
            case "axo-text":
                customElements.get(e) || gR()
            }
        }
        ))
    }
    const KP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow()
        }
        render() {
            return P(D, {
                key: "6f2de8cf75993aa6f79b5ae0958ac062b54d44ed"
            }, P("slot", {
                key: "3db230ee8874a722beea64298e542139001aaba0"
            }))
        }
    }
    , [1, "axo-accordion"]);
    function zP() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-accordion"].forEach((e => {
            if ("axo-accordion" === e)
                customElements.get(e) || customElements.define(e, KP)
        }
        ))
    }
    const WP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.headerOnClick = void 0,
            this.heading = "Heading",
            this.active = !1,
            this.hostClass = "";
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "7051f8cdb0e67260c0e1f1f9296c349a4b229486",
                class: jk("flex flex-col gap-1 p-4 w-full border-2 rounded-md", this.hostClass)
            }, P("button", {
                key: "51bc4ace4f8b438219862ea1ac8669a4e9f60cdc",
                class: "flex flex-row justify-between align-center cursor-pointer",
                onClick: () => {
                    var e;
                    null === (e = this.headerOnClick) || void 0 === e || e.call(this);
                    const t = this.el.closest("axo-accordion");
                    t && Array.from(t.children).filter((e => e !== this.el)).forEach((e => {
                        e.removeAttribute("active")
                    }
                    )),
                    this.active = !this.active
                }
            }, P("axo-text", {
                key: "74846ccbdc95151a6c83e30c05a9bd178745f235",
                fontWeight: "strong"
            }, this.heading), P("axo-icons", {
                key: "c07d7d91acb1d6b7477bec97cc157b5b066307c9",
                name: "ChevronDown",
                iconClass: Fk("w-4 fill-axogray-800 transition-all", this.active ? "rotate-180" : "rotate-0"),
                "aria-label": Pr(this.active ? "global.aria.expandable.collapse" : "global.aria.expandable.expand")
            })), P("div", {
                key: "94136e4231a3f5612b0623e23b0c70428a4c74ca"
            }, P("div", {
                key: "bf0d10ef863ff020fd2d38e04905a007018dc556",
                class: Fk("transition-opacity ease-in grid", this.active ? "opacity-0 grid-rows-[0fr]" : "opacity-100 grid-rows-[1fr]"),
                "aria-hidden": this.active.toString()
            }, P("div", {
                key: "2dace5bf85ee897f7a160f3f85c99e99d67828c4",
                class: "overflow-hidden"
            }, P("slot", {
                key: "80e6f0ebbe271e0428804c33e3b5d9e49d476236",
                name: "collapsed-children"
            }))), P("axo-expandable", {
                key: "72006da4b0b692ed79d002e845df49a78dc708c4",
                isExpanded: this.active,
                customClass: "duration-0"
            }, P("slot", {
                key: "438fa01ba820576c27601cb1b7c2e61c7586ea8b",
                name: "expanded-children"
            }))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-accordion-row", {
        headerOnClick: [16],
        heading: [1025],
        active: [1540],
        hostClass: [1, "host-class"]
    }]);
    function YP() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-accordion-row", "axo-expandable", "axo-icons", "axo-text"].forEach((e => {
            switch (e) {
            case "axo-accordion-row":
                customElements.get(e) || customElements.define(e, WP);
                break;
            case "axo-expandable":
                customElements.get(e) || pR();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-text":
                customElements.get(e) || gR()
            }
        }
        ))
    }
    const XP = (e, t) => e.reduce(( (e, n) => {
        const r = t(n);
        return e[r] = e[r] || [],
        e[r].push(n),
        e
    }
    ), {})
      , ZP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.customClass = "",
            this.textClass = "";
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        render() {
            return P(D, {
                key: "c8a05d94299d245e69ffdea983283013bd0b72a6"
            }, P("div", {
                key: "edd220c48387c8b1bf797b7ff0df1d246096ee91",
                class: jk("relative w-full h-5 mx-auto mt-0 mb-5 text-center border-b border-solid border-axogray-250", this.customClass)
            }, P("axo-text", {
                key: "9966eebc7c7ae70a34eeaa7239f36f819ec1c2ce",
                customClass: jk("absolute p-2 -translate-x-1/2 top-2 bg-axowhite text-axogray-500 text-xs", this.textClass)
            }, P("slot", {
                key: "8a113f927ee91d431cd15fb7e3bd7d20da5cd983"
            }))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-divider", {
        customClass: [1, "custom-class"],
        textClass: [1, "text-class"]
    }]);
    function qP() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-divider", "axo-text"].forEach((e => {
            switch (e) {
            case "axo-divider":
                customElements.get(e) || customElements.define(e, ZP);
                break;
            case "axo-text":
                customElements.get(e) || gR()
            }
        }
        ))
    }
    const JP = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.optionSelected = j(this, "optionSelected", 7),
            this.options = void 0,
            this.radioClass = void 0,
            this.handleChange = void 0,
            this.dataTestId = void 0,
            this.defaultSelectedIndex = void 0,
            this.buttonClass = void 0,
            this.selectedIndex = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        componentWillLoad() {
            var e;
            this.selectedIndex = null !== (e = this.defaultSelectedIndex) && void 0 !== e ? e : -1
        }
        handleSelection(e) {
            this.selectedIndex = e,
            this.optionSelected.emit(this.options[e])
        }
        render() {
            var e;
            return P(D, {
                key: "ea41aae9f598ef99783ebd671f30c475604af940",
                class: jk("flex flex-col gap-3 w-full", this.radioClass)
            }, null === (e = this.options) || void 0 === e ? void 0 : e.map(( (e, t) => P("axo-button", {
                buttonClass: this.buttonClass,
                variant: "tile",
                handleClick: () => {
                    this.handleSelection(t)
                }
                ,
                selected: this.selectedIndex === t,
                disabled: e.disabled
            }, P("div", {
                class: "flex w-full flex-row items-start justify-between text-left"
            }, e.children)))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-radio-options", {
        options: [16],
        radioClass: [1, "radio-class"],
        handleChange: [16],
        dataTestId: [1, "data-test-id"],
        defaultSelectedIndex: [2, "default-selected-index"],
        buttonClass: [1, "button-class"],
        selectedIndex: [32]
    }]);
    function QP() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-radio-options", "axo-button", "axo-icons", "axo-spinner-loader"].forEach((e => {
            switch (e) {
            case "axo-radio-options":
                customElements.get(e) || customElements.define(e, JP);
                break;
            case "axo-button":
                customElements.get(e) || bI();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI()
            }
        }
        ))
    }
    const eL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.addressSelected = j(this, "addressSelected", 7),
            this.handleSelectedAddress = e => {
                const {id: t} = e.detail;
                this.addressSelected.emit({
                    addressId: t
                })
            }
            ,
            this.renderAddAddress = () => P("axo-address-form", {
                showCountry: !0,
                addressType: this.addressType,
                viewRenderedCheckpoint: this.isAddCardFlow || "shipping" !== this.addressType ? void 0 : er.CHECKPOINTS.SHIPPING_ADDRESS_FORM_RENDERED,
                handleAddressAdded: this.handleAddressAdded
            }),
            this.handleAddAddressClick = () => {
                var e;
                "shipping" === this.addressType && er.setCheckpoint(er.CHECKPOINTS.SHIPPING_ADDRESS_FORM_INVOKED),
                this.logger.track({
                    event_name: this.isAddCardFlow ? "axo_add_fi_add_card_modal_add_an_address_clicked" : `axo_${this.addressType}_add_new_address_pressed`,
                    entry_point: this.isAddCardFlow && "payments",
                    event_category: `${this.addressType}_address`,
                    event_type: "cl",
                    intent: "checkout"
                }),
                null === (e = it.get("viewNav")) || void 0 === e || e.pushView(this.renderAddAddress)
            }
            ,
            this.getFormattedPhone = e => {
                const {phone: t} = e;
                if ("string" == typeof t)
                    return t;
                {
                    const {countryCode: n, nationalNumber: r} = t;
                    if (n && r) {
                        const t = yN.inferPhoneNumberRegion({
                            countryCode: n,
                            nationalNumber: r
                        }) || e.countryCodeAlpha2;
                        if (t) {
                            return new yN({
                                phoneRegion: t,
                                style: "international"
                            }).format({
                                countryCode: n,
                                nationalNumber: r
                            })
                        }
                        return `+${n} ${r}`
                    }
                    return r
                }
            }
            ,
            this.logger = $t(),
            this.createAddressOptionFactory = e => t => {
                const n = t.address
                  , r = [n.streetAddress, n.extendedAddress].filter((e => e)).join(", ")
                  , o = [n.region, n.postalCode].filter((e => e)).join(" ")
                  , i = [n.locality, o, n.countryCodeAlpha2].filter((e => e)).join(", ")
                  , a = [n.firstName, n.lastName].filter((e => e)).join(" ");
                return Object.assign(Object.assign({}, t), {
                    children: P("div", {
                        class: jk("flex flex-col text-balance", !e && "text-axogray-500")
                    }, "shipping" === this.addressType && a && P("axo-text", {
                        class: "font-bold"
                    }, a), "shipping" === this.addressType && n.company && P("axo-text", null, n.company), P("axo-text", null, r), P("axo-text", null, i), "shipping" === this.addressType && n.phone && P("axo-text", null, this.getFormattedPhone(n))),
                    id: t.id
                })
            }
            ,
            this.isOpen = void 0,
            this.addresses = [],
            this.selectedIndex = 0,
            this.handleAddressAdded = void 0,
            this.addressType = void 0,
            this.isAddCardFlow = !1,
            this.locale = it.get("locale"),
            this.addressOptionsAllowed = [],
            this.addressOptionsDisallowed = [],
            this.hasOnlyDisallowedShippingAddresses = !1,
            this.hasNoSelectableShippingAddresses = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        async onViewOpen() {
            const {viewNav: e} = it.state;
            e && (e.viewHeader = Pr("address.selection.title"))
        }
        async onViewClose() {
            this.logger.track({
                event_name: `axo_${this.addressType}_address_close_pressed`,
                event_type: "cl"
            })
        }
        async onViewBack() {
            this.logger.track({
                event_name: `axo_${this.addressType}_address_back_pressed`,
                event_type: "cl"
            })
        }
        async componentWillLoad() {
            await ON(this.locale)
        }
        componentDidLoad() {
            this.isAddCardFlow || this.logger.track({
                event_name: `axo_${this.addressType}_address_list_shown`,
                duration: "shipping" === this.addressType && er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.SHIPPING_ADDRESS_SELECTOR_INVOKED),
                event_category: `${this.addressType}_address`,
                event_type: "im",
                intent: "checkout"
            }),
            this.getGroupedAddresses()
        }
        getGroupedAddresses() {
            var e, t, n, r, o, i;
            const a = XP(this.addresses, (e => e.disabled ? "disallowed" : "allowed"));
            this.addressOptionsAllowed = null === (e = a.allowed) || void 0 === e ? void 0 : e.map(this.createAddressOptionFactory(!0)),
            this.addressOptionsDisallowed = null === (t = a.disallowed) || void 0 === t ? void 0 : t.map(this.createAddressOptionFactory(!1)),
            this.hasOnlyDisallowedShippingAddresses = "shipping" === this.addressType && !(null === (n = this.addressOptionsAllowed) || void 0 === n ? void 0 : n.length) && !!(null === (r = this.addresses) || void 0 === r ? void 0 : r.length),
            this.hasNoSelectableShippingAddresses = "shipping" === this.addressType && this.hasOnlyDisallowedShippingAddresses || "shipping" === this.addressType && !(null === (o = this.addresses) || void 0 === o ? void 0 : o.length),
            "shipping" === this.addressType && !(null === (i = this.addresses) || void 0 === i ? void 0 : i.length) && it.state.viewNav && (it.state.viewNav.viewHeader = Pr("address.review.button.add"))
        }
        render() {
            var e, t, n, r;
            const o = P("axo-button", {
                key: "cdc3ac3f2fe1b12984930ab3c5fb8fa3de313b42",
                variant: (null === (e = this.addressOptionsAllowed) || void 0 === e ? void 0 : e.length) ? "secondary" : "primary",
                buttonClass: "mt-3 h-11",
                onClick: this.handleAddAddressClick
            }, P("div", {
                key: "037d307c0a2d75cb5cba1033b0d408622794e25b",
                class: "flex flex-row items-center w-full "
            }, (null === (t = this.addressOptionsAllowed) || void 0 === t ? void 0 : t.length) ? P("div", {
                class: "rounded-md justify-center flex items-center mr-2"
            }, P("axo-icons", {
                name: "Add",
                iconClass: "fill-axoblue-500 w-3"
            })) : null, P("axo-text", {
                key: "37f7be0715d5c2eea5a376645da7f64141c3b756",
                class: "flex flex-auto",
                variant: "body",
                fontWeight: "strong",
                clickable: !0,
                customClass: (null === (n = this.addressOptionsAllowed) || void 0 === n ? void 0 : n.length) ? "" : "flex flex-auto justify-center text-axowhite"
            }, Pr(this.hasNoSelectableShippingAddresses ? "address.add.title.shipping" : "address.review.button.add"))));
            return P(D, {
                key: "822ea55727c04ef1e0e6b02b174e8278417b07e5"
            }, P("div", {
                key: "6ede735232bfc1a40fb720c4cf7b59020e11073d",
                class: "w-full p-2"
            }, this.hasOnlyDisallowedShippingAddresses ? P(Fe, null, P("div", {
                class: "flex items-center"
            }, P("axo-icons", {
                name: "WarningFilled",
                iconClass: "fill-axowarning w-6 mr-2"
            }), P("p", {
                class: "text-captionFontSize text-pretty"
            }, Pr("address.selection.disallowed"))), o) : P("axo-radio-options", {
                defaultSelectedIndex: this.selectedIndex,
                options: this.addressOptionsAllowed,
                onOptionSelected: this.handleSelectedAddress
            }), (null === (r = this.addressOptionsDisallowed) || void 0 === r ? void 0 : r.length) > 0 ? P(Fe, null, P("div", {
                class: "text-center my-4"
            }, !this.hasOnlyDisallowedShippingAddresses && P("axo-divider", null, Pr("address.selection.disallowed"))), P("axo-radio-options", {
                defaultSelectedIndex: this.selectedIndex,
                options: this.addressOptionsDisallowed,
                onOptionSelected: this.handleSelectedAddress
            })) : null, this.hasNoSelectableShippingAddresses ? P(Fe, null, this.hasOnlyDisallowedShippingAddresses ? null : this.renderAddAddress()) : o, this.addresses.length && "shipping" === this.addressType ? P("div", {
                class: "bottom-0 bg-axowhite"
            }, P("axo-branding", {
                variant: "fl-md",
                class: "w-[10.5em] mt-6"
            })) : null))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                addresses: ["getGroupedAddresses"]
            }
        }
    }
    , [1, "axo-address-list", {
        isOpen: [1028, "is-open"],
        addresses: [16],
        selectedIndex: [2, "selected-index"],
        handleAddressAdded: [16],
        addressType: [1, "address-type"],
        isAddCardFlow: [4, "is-add-card-flow"],
        locale: [1],
        addressOptionsAllowed: [32],
        addressOptionsDisallowed: [32],
        hasOnlyDisallowedShippingAddresses: [32],
        hasNoSelectableShippingAddresses: [32],
        onViewOpen: [64],
        onViewClose: [64],
        onViewBack: [64]
    }, void 0, {
        addresses: ["getGroupedAddresses"]
    }]);
    function tL() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-address-list", "axo-address-form", "axo-branding", "axo-button", "axo-country-flag", "axo-divider", "axo-icons", "axo-radio-options", "axo-select-input", "axo-spinner-loader", "axo-text", "axo-text-input"].forEach((e => {
            switch (e) {
            case "axo-address-list":
                customElements.get(e) || customElements.define(e, eL);
                break;
            case "axo-address-form":
                customElements.get(e) || lR();
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-button":
                customElements.get(e) || bI();
                break;
            case "axo-country-flag":
                customElements.get(e) || AI();
                break;
            case "axo-divider":
                customElements.get(e) || qP();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-radio-options":
                customElements.get(e) || QP();
                break;
            case "axo-select-input":
                customElements.get(e) || SI();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI();
                break;
            case "axo-text":
                customElements.get(e) || gR();
                break;
            case "axo-text-input":
                customElements.get(e) || QI()
            }
        }
        ))
    }
    const nL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.cardAdded = j(this, "cardAdded", 7),
            this.logger = $t(),
            this.renderAddAddress = () => P("axo-address-form", {
                showCountry: !0,
                addressType: "billing",
                handleAddressAdded: this.handleAddressAdded
            }),
            this.handleSelectedAddress = e => {
                var t;
                const n = e.detail;
                this.accordionEl.active = !1,
                this.selectedBillingAddress = null !== (t = this.billingAddressList.find((e => e.id === n.addressId))) && void 0 !== t ? t : this.billingAddressList[0],
                this.selectedIndex = this.billingAddressList.indexOf(this.selectedBillingAddress),
                this.logger.countMetric({
                    component: wt.COMPONENT,
                    action: wt.ACTION.SELECT,
                    status: vt.STATUS.OK
                }),
                this.logger.track({
                    event_name: "axo_add_fi_add_card_modal_billing_address_select",
                    address_id: n.addressId,
                    addr_indx: String(this.selectedIndex),
                    entry_point: "payments",
                    event_category: "billing_address",
                    event_type: "cl",
                    intent: "checkout"
                })
            }
            ,
            this.name = "axo-add-card",
            this.btClient = void 0,
            this.mockMode = !1,
            this.customerName = "",
            this.billingAddressList = [],
            this.fieldOptions = {
                cardholderName: {}
            },
            this.styleOptions = void 0,
            this.showBranding = void 0,
            this.theme = tt,
            this.topLevelElement = void 0,
            this.ctaContainerClass = "",
            this.allowedCardBrands = [],
            this.handleAddressAdded = void 0,
            this.hostId = "",
            this.selectedBillingAddress = void 0,
            this.selectedIndex = 0,
            this.tokenizeError = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        async onViewOpen() {
            const {viewNav: e} = it.state;
            e && (e.viewHeader = Pr("paymentInfo.add.title"))
        }
        async onViewClose() {
            this.logger.track({
                event_name: "axo_add_fi_add_card_modal_close_pressed",
                duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.CARD_FORM_RENDERED),
                event_type: "cl"
            })
        }
        async onViewBack() {
            this.logger.track({
                event_name: "axo_add_fi_add_card_modal_back_pressed",
                event_type: "cl"
            })
        }
        connectedCallback() {
            this.selectedBillingAddress = this.billingAddressList[0]
        }
        componentDidLoad() {
            er.setCheckpoint(er.CHECKPOINTS.CARD_FORM_RENDERED),
            this.logger.track({
                event_name: "axo_add_fi_add_card_modal_shown",
                duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.CARD_FORM_INVOKED),
                entry_point: "payments",
                event_category: "add_fi",
                event_type: "im",
                intent: "checkout"
            })
        }
        billingAddressListChanged(e) {
            this.selectedBillingAddress = e[0],
            this.accordionEl.active = !1
        }
        getErrorMessage(e) {
            switch (e) {
            case Jk:
                return Pr("wallet.ccErr.invalidEntry");
            case Qk:
                return Pr("wallet.ccErr.genericFixable.text", {
                    tryAgain: P("span", {
                        onClick: () => {
                            var e;
                            return this.tokenize({
                                billingAddress: null === (e = this.selectedBillingAddress) || void 0 === e ? void 0 : e.address
                            })
                        }
                        ,
                        class: "font-bold underline cursor-pointer"
                    }, Pr("wallet.ccErr.genericFixable.link"))
                });
            default:
                return Pr("wallet.ccErr.generic")
            }
        }
        async tokenize(e) {
            var t, n, r, o, i;
            if (this.mockMode) {
                const t = await Tr(e);
                return this.cardAdded.emit({
                    token: t
                }),
                t
            }
            try {
                if (er.setCheckpoint(er.CHECKPOINTS.TOKENIZE_ATTEMPTED),
                this.logger.track({
                    event_name: "axo_tokenize_attempted",
                    event_type: "im",
                    intent: "checkout"
                }),
                !e.billingAddress) {
                    const e = new Error("Missing billingAddress in tokenize args");
                    throw e.code = "BILLING_ADDRESS_MISSING",
                    e.type = Jk,
                    null === (t = it.get("viewNav")) || void 0 === t || t.pushView(this.renderAddAddress),
                    e
                }
                const a = (null === (n = it.get("authState")) || void 0 === n ? void 0 : n.targetAuthAssertion) || ""
                  , s = {
                    billingAddress: e.billingAddress,
                    email: null !== (o = null === (r = it.get("authState")) || void 0 === r ? void 0 : r.email) && void 0 !== o ? o : "",
                    metadata: {
                        connectCheckout: {
                            authAssertion: a
                        }
                    }
                };
                this.tokenizeError = void 0;
                const l = await (null === (i = this.ccFields) || void 0 === i ? void 0 : i.tokenize(s));
                this.logger.track({
                    event_name: "axo_tokenize_completed",
                    event_type: "im",
                    duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.TOKENIZE_ATTEMPTED),
                    fi_type: qk[l.details.cardType],
                    intent: "checkout",
                    vault_id: l.nonce
                }),
                this.logger.countMetric({
                    component: _t,
                    action: At.ADD,
                    status: vt.STATUS.OK
                });
                const c = wR({
                    tokenizeResp: l,
                    billingAddress: e.billingAddress
                });
                return this.cardAdded.emit({
                    token: c
                }),
                c
            } catch (e) {
                const t = e;
                return this.logger.track({
                    event_name: "axo_tokenize_error_occurred",
                    event_type: "im",
                    int_error_code: t.code,
                    int_error_desc: JSON.stringify({
                        code: t.code,
                        message: t.message,
                        type: t.type,
                        details: t.details
                    }),
                    intent: "checkout"
                }),
                this.logger.countMetric({
                    component: _t,
                    action: At.ADD,
                    status: vt.STATUS.ERROR
                }),
                "BILLING_ADDRESS_MISSING" !== t.code && "MISSING_REQUIRED_FIELDS" !== t.code && (this.tokenizeError = this.getErrorMessage(t.type)),
                Promise.reject(e)
            }
        }
        render() {
            var e, t;
            const n = null === (e = this.selectedBillingAddress) || void 0 === e ? void 0 : e.address
              , r = [null == n ? void 0 : n.streetAddress, null == n ? void 0 : n.extendedAddress].filter((e => e)).join(", ")
              , o = [null == n ? void 0 : n.region, null == n ? void 0 : n.postalCode].filter((e => e)).join(" ")
              , i = [null == n ? void 0 : n.locality, o, null == n ? void 0 : n.countryCodeAlpha2].filter((e => e)).join(", ")
              , a = this.allowedCardBrands.length > 0 ? this.allowedCardBrands : it.get("allowedCardBrands");
            return P(D, null, P("div", {
                class: "p-2"
            }, !!this.tokenizeError && P("div", {
                class: "flex flex-row justify-center py-4 px-6 mb-4 bg-axored-200 rounded-xl"
            }, P("axo-icons", {
                class: "flex h-6",
                iconClass: "fill-axowhite w-5 mr-3",
                name: "CriticalFilled"
            }), P("axo-text", {
                customClass: "text-axowhite"
            }, this.tokenizeError)), a.length > 0 ? P("axo-accepted-cards", {
                allowedCardBrands: a
            }) : null, P("axo-credit-card-fields", {
                ref: e => this.ccFields = e,
                btClient: this.btClient,
                class: "p-0",
                host: null !== (t = this.topLevelElement) && void 0 !== t ? t : this.el,
                id: "cc-fields",
                fieldOptions: this.fieldOptions,
                hostId: this.hostId
            }, tI.map((e => {
                const {id: t} = rI(e, this.hostId);
                return P("slot", {
                    name: t,
                    slot: t
                })
            }
            ))), P("axo-accordion", null, P("axo-accordion-row", {
                hostClass: "mt-4 border-customInputBorderColor border",
                heading: Pr("address.review.title.billing"),
                headerOnClick: () => {
                    this.logger.track({
                        event_name: "axo_add_fi_add_card_modal_billing_dropdown_clicked",
                        addr_count: String(this.billingAddressList.length),
                        entry_point: "payments",
                        event_type: "cl"
                    })
                }
                ,
                ref: e => this.accordionEl = e
            }, this.billingAddressList.length > 0 && P("div", {
                slot: "collapsed-children",
                class: "flex flex-col text-balance"
            }, P("axo-text", null, r), P("axo-text", null, i)), P("div", {
                slot: "expanded-children"
            }, P("axo-address-list", {
                class: "flex justify-center",
                addressType: "billing",
                addresses: this.billingAddressList,
                onAddressSelected: this.handleSelectedAddress,
                handleAddressAdded: this.handleAddressAdded,
                isAddCardFlow: !0
            })))), P("div", {
                class: Fk("sticky bg-axowhite bottom-0", this.ctaContainerClass)
            }, P("axo-button", {
                buttonClass: "mt-6 h-12",
                variant: "primary",
                onClick: async () => (this.logger.track({
                    event_name: "axo_add_fi_add_card_modal_add_card_submitted",
                    entry_point: "payments",
                    event_type: "cl"
                }),
                this.tokenize({
                    billingAddress: n
                }).finally((async () => {
                    var e;
                    if (this.alertRef) {
                        const t = await (null === (e = this.ccFields) || void 0 === e ? void 0 : e.getHostedFieldsErrorState())
                          , n = Object.values(t).reduce(( (e, t) => t ? e + 1 : e), 0);
                        this.alertRef.innerText = n > 0 ? Pr(n > 1 ? "global.aria.errors.formSubmittedWithMultipleErrors" : "global.aria.errors.formSubmittedWithSingleError", {
                            number: n.toString()
                        }) : ""
                    }
                }
                )))
            }, Pr("paymentInfo.add.button"))), this.showBranding && P("div", {
                class: "bottom-0 bg-axowhite"
            }, P("axo-branding", {
                variant: "fl-md",
                class: "w-[10.5em] mt-6"
            }))), P("div", {
                ref: e => this.alertRef = e,
                role: "alert",
                class: "sr-only"
            }))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                billingAddressList: ["billingAddressListChanged"]
            }
        }
    }
    , [1, "axo-add-card", {
        name: [1],
        btClient: [16],
        mockMode: [4, "mock-mode"],
        customerName: [1, "customer-name"],
        billingAddressList: [16],
        fieldOptions: [16],
        styleOptions: [16],
        showBranding: [4, "show-branding"],
        theme: [1],
        topLevelElement: [16],
        ctaContainerClass: [1, "cta-container-class"],
        allowedCardBrands: [16],
        handleAddressAdded: [16],
        hostId: [1, "host-id"],
        selectedBillingAddress: [32],
        selectedIndex: [32],
        tokenizeError: [32],
        onViewOpen: [64],
        onViewClose: [64],
        onViewBack: [64],
        tokenize: [64]
    }, void 0, {
        billingAddressList: ["billingAddressListChanged"]
    }]);
    const rL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.cardSelected = j(this, "cardSelected", 7),
            this.handleSelectedCard = e => {
                const t = e.detail;
                this.logger.track({
                    event_name: "axo_add_fi_select",
                    event_category: "add_fi",
                    event_type: "cl",
                    fi_id: t.id,
                    fi_type: t.paymentToken.paymentSource.card.brand,
                    intent: "checkout"
                }),
                this.cardSelected.emit({
                    cardId: t.id
                })
            }
            ,
            this.logger = $t(),
            this.isOpen = void 0,
            this.cards = [],
            this.selectedIndex = 0,
            this.showAddCardView = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        async onViewOpen() {
            const {viewNav: e} = it.state;
            e && (e.viewHeader = Pr("paymentInfo.selection.title"))
        }
        async onViewClose() {
            this.logger.track({
                event_name: "axo_add_fi_choose_card_modal_close_pressed",
                event_type: "cl"
            })
        }
        async onViewBack() {
            this.logger.track({
                event_name: "axo_add_fi_choose_card_modal_back_pressed",
                event_type: "cl"
            })
        }
        componentDidLoad() {
            this.logger.track({
                event_name: "axo_add_fi_card_list_shown",
                duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.CARD_SELECTOR_INVOKED),
                event_category: "add_fi",
                event_type: "im",
                intent: "checkout"
            })
        }
        render() {
            return P(D, null, ( () => {
                var e, t, n;
                const r = ({lastDigits: e}) => Pr("global.aria.card.maskedCardInfo", {
                    lastDigits: e.split("").join(" ")
                })
                  , o = XP(this.cards, (e => e.disabled ? "disallowed" : "allowed"))
                  , i = null === (e = o.allowed) || void 0 === e ? void 0 : e.map((e => {
                    const {brand: t, lastDigits: n} = e.paymentToken.paymentSource.card;
                    return Object.assign(Object.assign({}, e), {
                        children: P("div", {
                            key: e.id,
                            class: "flex items-center"
                        }, P("axo-card-art", {
                            class: "w-8",
                            name: t,
                            "aria-hidden": "true"
                        }), P("axo-text", {
                            customClass: "pl-2",
                            "aria-label": r({
                                lastDigits: n
                            })
                        }, P("span", {
                            class: "mr-1"
                        }, "••••"), n))
                    })
                }
                ))
                  , a = null === (t = o.disallowed) || void 0 === t ? void 0 : t.map((e => {
                    const {brand: t, lastDigits: n} = e.paymentToken.paymentSource.card;
                    return Object.assign(Object.assign({}, e), {
                        children: P("div", {
                            key: e.id,
                            class: "flex items-center"
                        }, P("axo-card-art", {
                            class: "w-8",
                            name: t,
                            "aria-hidden": "true"
                        }), P("axo-text", {
                            customClass: "pl-2 text-axogray-500",
                            "aria-label": r({
                                lastDigits: n
                            })
                        }, P("span", {
                            class: "mr-1"
                        }, "••••"), n))
                    })
                }
                ))
                  , s = P("axo-button", {
                    buttonClass: "mt-3",
                    variant: "secondary",
                    onClick: () => {
                        var e;
                        this.logger.track({
                            event_name: "axo_add_fi_add_a_card_pressed",
                            event_category: "add_fi",
                            event_type: "cl",
                            intent: "checkout"
                        }),
                        null === (e = it.get("viewNav")) || void 0 === e || e.pushView(this.showAddCardView)
                    }
                }, P("div", {
                    class: "flex flex-row items-center w-full "
                }, P("div", {
                    class: "rounded-md justify-center flex items-center mr-2"
                }, P("axo-icons", {
                    name: "Add",
                    iconClass: "fill-axoblue-500 w-3"
                })), P("axo-text", {
                    variant: "body",
                    fontWeight: "strong",
                    clickable: !0
                }, Pr("wallet.addCard"))));
                return P("div", {
                    class: "w-full p-2"
                }, P("axo-radio-options", {
                    buttonClass: "p-3 h-11 items-center",
                    defaultSelectedIndex: this.selectedIndex,
                    options: i,
                    onOptionSelected: this.handleSelectedCard
                }), (null === (n = o.disallowed) || void 0 === n ? void 0 : n.length) > 0 ? P(Fe, null, P("div", {
                    class: "text-center my-4"
                }, P("axo-divider", null, Pr("paymentInfo.selection.disallowed"))), P("axo-radio-options", {
                    buttonClass: "h-11 items-center",
                    defaultSelectedIndex: this.selectedIndex,
                    options: a,
                    onOptionSelected: this.handleSelectedCard
                })) : null, P("div", {
                    class: "bg-axowhite"
                }, (null == i ? void 0 : i.length) ? s : null), P("div", {
                    slot: "sticky-bottom",
                    class: "bottom-0 bg-axowhite"
                }, P("axo-branding", {
                    variant: "fl-md",
                    class: "w-[10.5em] mt-6"
                })))
            }
            )())
        }
        get el() {
            return this
        }
    }
    , [1, "axo-card-list", {
        isOpen: [1028, "is-open"],
        cards: [16],
        selectedIndex: [2, "selected-index"],
        showAddCardView: [16],
        onViewOpen: [64],
        onViewClose: [64],
        onViewBack: [64]
    }]);
    const oL = () => P("div", null)
      , iL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.resizeObserver = new ResizeObserver(( () => {
                let e = 0
                  , t = 0;
                return n => {
                    const {width: r, height: o} = n[0].contentRect;
                    e === r && t === o || (e = r,
                    t = o,
                    Te(this))
                }
            }
            )()),
            this.handleClose = ({isScrimClose: e}) => {
                var t, n, r, o, i;
                this.isOpen = !1,
                this.currentView && (e && this.currentView.onViewCloseScrim ? null === (n = (t = this.currentView).onViewCloseScrim) || void 0 === n || n.call(t) : null === (o = (r = this.currentView).onViewClose) || void 0 === o || o.call(r),
                e && this.handleScrimClose ? null === (i = this.handleScrimClose) || void 0 === i || i.call(this) : this.handleModalClose())
            }
            ,
            this.getBackButtonClickHandler = () => {
                if (!(this.views.length <= 1))
                    return () => {
                        var e, t;
                        null === (t = null === (e = this.currentView) || void 0 === e ? void 0 : e.onViewBack) || void 0 === t || t.call(e),
                        this.popView()
                    }
            }
            ,
            this.isOpen = !1,
            this.handleModalClose = () => null,
            this.handleScrimClose = void 0,
            this.viewHeader = void 0,
            this.showBackButton = !0,
            this.disableAnimation = !1,
            this.views = [ () => P("slot", null)],
            this.lastPoppedView = oL,
            this.currentView = void 0,
            this.currentViewContainerRef = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        watchIsOpen(e) {
            var t, n;
            e && (null === (n = null === (t = this.currentView) || void 0 === t ? void 0 : t.onViewOpen) || void 0 === n || n.call(t))
        }
        async pushView(e) {
            var t, n;
            this.views = [...this.views, e],
            this.lastPoppedView = oL,
            null === (n = null === (t = this.modalRef) || void 0 === t ? void 0 : t.setFocus) || void 0 === n || n.call(t)
        }
        async popView() {
            var e, t, n, r;
            if (null === (t = null === (e = this.currentView) || void 0 === e ? void 0 : e.onViewPop) || void 0 === t || t.call(e),
            1 === this.views.length)
                return this.isOpen = !1,
                void (this.lastPoppedView = oL);
            this.lastPoppedView = this.views[this.views.length - 1],
            this.views = [...this.views.slice(0, -1)],
            null === (r = null === (n = this.modalRef) || void 0 === n ? void 0 : n.setFocus) || void 0 === r || r.call(n)
        }
        watchCurrentView(e) {
            var t;
            this.isOpen && (null === (t = null == e ? void 0 : e.onViewOpen) || void 0 === t || t.call(e))
        }
        connectedCallback() {
            it.set("viewNav", this)
        }
        componentWillLoad() {
            this.hasStickyBottomSlot = !!this.el.querySelector('[slot="sticky-bottom"]')
        }
        componentDidLoad() {
            var e, t;
            null === (t = null === (e = this.modalRef) || void 0 === e ? void 0 : e.setFocus) || void 0 === t || t.call(e)
        }
        disconnectedCallback() {
            var e;
            null === (e = this.resizeObserver) || void 0 === e || e.disconnect(),
            it.set("viewNav", void 0)
        }
        componentDidRender() {
            var e, t;
            const n = this.currentViewContainerRef.querySelector("*");
            this.currentView = this.views.length > 1 ? n : null === (t = null === (e = null == n ? void 0 : n.assignedElements) || void 0 === e ? void 0 : e.call(n)) || void 0 === t ? void 0 : t[0],
            this.resizeObserver.observe(this.currentViewContainerRef)
        }
        render() {
            var e;
            const t = this.views.length - 1
              , n = [...this.views, this.lastPoppedView]
              , {height: r} = (null === (e = this.currentView) || void 0 === e ? void 0 : e.getBoundingClientRect()) || {};
            return P(D, {
                key: "cf50ddfb5053e3a1101b8891d9cf50334c0bee1e"
            }, P("axo-modal-sheet", {
                key: "7b5595e74bf9d9999a9b67d417a506a0bdc09761",
                ref: e => this.modalRef = e,
                header: this.viewHeader,
                isOpen: this.isOpen,
                handleBackButtonClick: this.showBackButton ? this.getBackButtonClickHandler() : void 0,
                handleClose: () => this.handleClose({
                    isScrimClose: !1
                }),
                handleScrimClick: () => this.handleClose({
                    isScrimClose: !0
                })
            }, P("div", {
                key: "9cf039d528926d22f601c8d3fb79298cab993839",
                class: "overflow-clip max-md:w-full"
            }, P("div", {
                key: "c102690fb5d0377f58e6ae2024a74441db9805ee",
                class: jk("whitespace-nowrap transition-[transform,height] ease-in", this.disableAnimation ? "duration-0" : "duration-150"),
                style: Object.assign({
                    transform: `translate(calc(-${100 * t}% - ${t}em))`
                }, r ? {
                    height: `${r}px`
                } : {})
            }, n.map(( (e, n) => P("div", Object.assign({
                key: n,
                class: "w-full inline-block align-top",
                style: {
                    "margin-right": "1em"
                },
                ref: e => {
                    var r;
                    n === t && (this.currentViewContainerRef && (null === (r = this.resizeObserver) || void 0 === r || r.unobserve(this.currentViewContainerRef)),
                    this.currentViewContainerRef = e)
                }
            }, n !== t ? {
                inert: !0
            } : {}), e()))))), this.hasStickyBottomSlot && P("slot", {
                key: "55508293d8b0b1e774b0bfbb8b46f93512bda1ea",
                name: "sticky-bottom",
                slot: "sticky-bottom"
            })))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                isOpen: ["watchIsOpen"],
                currentView: ["watchCurrentView"]
            }
        }
    }
    , [1, "axo-view-navigator", {
        isOpen: [1028, "is-open"],
        handleModalClose: [16],
        handleScrimClose: [16],
        viewHeader: [1, "view-header"],
        showBackButton: [4, "show-back-button"],
        disableAnimation: [4, "disable-animation"],
        views: [32],
        lastPoppedView: [32],
        currentView: [32],
        currentViewContainerRef: [32],
        pushView: [64],
        popView: [64]
    }, void 0, {
        isOpen: ["watchIsOpen"],
        currentView: ["watchCurrentView"]
    }]);
    function aL() {
        if ("undefined" == typeof customElements)
            return;
        ["axo-view-navigator", "axo-icons", "axo-modal-sheet", "axo-text"].forEach((e => {
            switch (e) {
            case "axo-view-navigator":
                customElements.get(e) || customElements.define(e, iL);
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-modal-sheet":
                customElements.get(e) || KR();
                break;
            case "axo-text":
                customElements.get(e) || gR()
            }
        }
        ))
    }
    LR();
    const sL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.closeCardSelector = j(this, "closeCardSelector", 7),
            this.disabledOptions = [],
            this.logger = $t(),
            this.hostId = "card-selector",
            this.handleSelectOrAddCard = e => {
                const {type: t} = e;
                let n, r;
                if ("cardAdded" === t) {
                    const {token: t} = e.detail
                      , o = it.get("fullProfile");
                    if (!o)
                        throw new Error("profileData is undefined");
                    it.set("fullProfile", Object.assign(Object.assign({}, o), {
                        cards: [...o.cards || [], t]
                    })),
                    n = t.id,
                    r = t,
                    this.logger.track({
                        event_name: "axo_add_fi_add_card_end",
                        duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.CARD_FORM_RENDERED),
                        event_category: "add_fi",
                        event_type: "im",
                        intent: "checkout"
                    })
                } else
                    n = e.detail.cardId,
                    r = this.cardOptions.find((e => e.id === n)),
                    this.logger.countMetric({
                        component: _t,
                        action: At.SELECT,
                        status: vt.STATUS.OK
                    });
                this.emitSelectedCard(r),
                this.isModalOpen = !1
            }
            ,
            this.handleAddressAdded = e => {
                const t = {
                    address: {
                        streetAddress: e.addressLine1,
                        extendedAddress: e.addressLine2,
                        locality: e.adminArea2,
                        region: e.adminArea1,
                        postalCode: e.postalCode,
                        countryCodeAlpha2: e.country || "US",
                        company: e.businessName
                    },
                    id: `added-billing-address-${this.billingAddressOptions.length + 1}`,
                    ordinal: this.billingAddressOptions.length + 1
                };
                this.billingAddressOptions = [t, ...this.billingAddressOptions],
                this.logger.countMetric({
                    component: wt.COMPONENT,
                    action: wt.ACTION.ADD,
                    status: vt.STATUS.OK
                })
            }
            ,
            this.renderCardList = e => {
                const t = P("axo-card-list", {
                    class: "w-full flex shrink-0",
                    cards: this.cardOptions,
                    onCardSelected: this.handleSelectOrAddCard,
                    selectedIndex: this.selectedIndex,
                    showAddCardView: () => (er.setCheckpoint(er.CHECKPOINTS.CARD_FORM_INVOKED),
                    this.renderAddCardView(e))
                });
                return e ? P("div", {
                    class: "w-full"
                }, this.renderAddCardView(e), t) : t
            }
            ,
            this.renderAddCardView = e => {
                const {name: t} = it.get("fullProfile") || {}
                  , n = (null == t ? void 0 : t.firstName) && (null == t ? void 0 : t.lastName) ? `${t.firstName} ${t.lastName}` : "";
                return P("axo-add-card", {
                    class: "w-full flex shrink-0 flex-col",
                    btClient: this.btClient,
                    billingAddressList: this.billingAddressOptions,
                    topLevelElement: this.el,
                    onCardAdded: this.handleSelectOrAddCard,
                    handleAddressAdded: this.handleAddressAdded,
                    showBranding: !e,
                    fieldOptions: {
                        cardholderName: {
                            prefill: n
                        }
                    },
                    hostId: this.hostId
                }, iI(this.hostId))
            }
            ,
            this.cardOptions = [],
            this.selectedIndex = 0,
            this.btClient = void 0,
            this.fastlanePaymentRef = void 0,
            this.theme = tt,
            this.viewNav = void 0,
            this.viewState = "selectCard",
            this.isModalOpen = !0,
            this.selectCardHeight = void 0,
            this.billingAddressOptions = [];
            this.el.shadowRoot.adoptedStyleSheets = [Rk, Lk]
        }
        connectedCallback() {
            this.billingAddressOptions = this.mapBillingAddressOptions(this.cardOptions),
            this.disabledOptions = this.cardOptions.filter((e => e.disabled))
        }
        componentDidLoad() {
            this.logger.countMetric({
                component: _t,
                action: At.SHOW,
                status: vt.STATUS.OK
            })
        }
        watchCardOptions(e) {
            this.billingAddressOptions = this.mapBillingAddressOptions(e)
        }
        mapBillingAddressOptions(e) {
            const t = new Set;
            return e.filter((e => {
                var n, r, o, i, a, s, l, c, d, u, p, h;
                const f = null !== (i = null === (o = null === (r = null === (n = null == e ? void 0 : e.paymentToken) || void 0 === n ? void 0 : n.paymentSource) || void 0 === r ? void 0 : r.card) || void 0 === o ? void 0 : o.billingAddress) && void 0 !== i ? i : {}
                  , m = (null === (s = null === (a = f.streetAddress) || void 0 === a ? void 0 : a.toLocaleLowerCase) || void 0 === s ? void 0 : s.call(a)) + (null === (c = null === (l = f.extendedAddress) || void 0 === l ? void 0 : l.toLocaleLowerCase) || void 0 === c ? void 0 : c.call(l)) + f.postalCode + (null === (u = null === (d = f.locality) || void 0 === d ? void 0 : d.toLocaleLowerCase) || void 0 === u ? void 0 : u.call(d)) + (null === (h = null === (p = f.region) || void 0 === p ? void 0 : p.toLocaleLowerCase) || void 0 === h ? void 0 : h.call(p));
                return !t.has(m) && (t.add(m),
                !0)
            }
            )).map((e => (e => {
                var t, n, r;
                return {
                    id: e.id,
                    ordinal: e.ordinal,
                    address: null === (r = null === (n = null === (t = e.paymentToken) || void 0 === t ? void 0 : t.paymentSource) || void 0 === n ? void 0 : n.card) || void 0 === r ? void 0 : r.billingAddress
                }
            }
            )(e)))
        }
        emitSelectedCard(e) {
            var t, n;
            this.fastlanePaymentRef ? null === (n = (t = this.fastlanePaymentRef).handleCloseCardSelector) || void 0 === n || n.call(t, {
                selectedCard: e
            }) : this.closeCardSelector.emit({
                selectedCard: e
            })
        }
        render() {
            const e = this.cardOptions.length > 0
              , t = this.disabledOptions.length === this.cardOptions.length;
            return P(D, {
                key: "9a876b82167434e7bc00a8d4a1fc0eaf56ed44cc",
                "data-theme": tt
            }, P("axo-view-navigator", {
                key: "647bf592beb845bb13485bdb1fb3bd1a45668679",
                class: "axo-default-styles",
                isOpen: !0,
                viewHeader: Pr(e ? "paymentInfo.selection.title" : "paymentInfo.add.title"),
                handleModalClose: () => this.emitSelectedCard()
            }, e ? this.renderCardList(t) : this.renderAddCardView(t), iI(this.hostId)))
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                cardOptions: ["watchCardOptions"]
            }
        }
    }
    , [1, "paypal-card-selector", {
        cardOptions: [16],
        selectedIndex: [1026, "selected-index"],
        btClient: [16],
        fastlanePaymentRef: [16],
        theme: [1],
        viewNav: [32],
        viewState: [32],
        isModalOpen: [32],
        selectCardHeight: [32],
        billingAddressOptions: [32]
    }, void 0, {
        cardOptions: ["watchCardOptions"]
    }]);
    const lL = sL
      , cL = function() {
        if ("undefined" == typeof customElements)
            return;
        ["paypal-card-selector", "axo-accepted-cards", "axo-accordion", "axo-accordion-row", "axo-add-card", "axo-address-form", "axo-address-list", "axo-branding", "axo-button", "axo-card-art", "axo-card-list", "axo-country-flag", "axo-credit-card-fields", "axo-divider", "axo-expandable", "axo-icons", "axo-modal-sheet", "axo-radio-options", "axo-select-input", "axo-spinner-loader", "axo-text", "axo-text-input", "axo-view-navigator"].forEach((e => {
            switch (e) {
            case "paypal-card-selector":
                customElements.get(e) || customElements.define(e, sL);
                break;
            case "axo-accepted-cards":
                customElements.get(e) || HP();
                break;
            case "axo-accordion":
                customElements.get(e) || zP();
                break;
            case "axo-accordion-row":
                customElements.get(e) || YP();
                break;
            case "axo-add-card":
                customElements.get(e) || function() {
                    if ("undefined" == typeof customElements)
                        return;
                    ["axo-add-card", "axo-accepted-cards", "axo-accordion", "axo-accordion-row", "axo-address-form", "axo-address-list", "axo-branding", "axo-button", "axo-card-art", "axo-country-flag", "axo-credit-card-fields", "axo-divider", "axo-expandable", "axo-icons", "axo-radio-options", "axo-select-input", "axo-spinner-loader", "axo-text", "axo-text-input"].forEach((e => {
                        switch (e) {
                        case "axo-add-card":
                            customElements.get(e) || customElements.define(e, nL);
                            break;
                        case "axo-accepted-cards":
                            customElements.get(e) || HP();
                            break;
                        case "axo-accordion":
                            customElements.get(e) || zP();
                            break;
                        case "axo-accordion-row":
                            customElements.get(e) || YP();
                            break;
                        case "axo-address-form":
                            customElements.get(e) || lR();
                            break;
                        case "axo-address-list":
                            customElements.get(e) || tL();
                            break;
                        case "axo-branding":
                            customElements.get(e) || hI();
                            break;
                        case "axo-button":
                            customElements.get(e) || bI();
                            break;
                        case "axo-card-art":
                            customElements.get(e) || RP();
                            break;
                        case "axo-country-flag":
                            customElements.get(e) || AI();
                            break;
                        case "axo-credit-card-fields":
                            customElements.get(e) || sI();
                            break;
                        case "axo-divider":
                            customElements.get(e) || qP();
                            break;
                        case "axo-expandable":
                            customElements.get(e) || pR();
                            break;
                        case "axo-icons":
                            customElements.get(e) || Xk();
                            break;
                        case "axo-radio-options":
                            customElements.get(e) || QP();
                            break;
                        case "axo-select-input":
                            customElements.get(e) || SI();
                            break;
                        case "axo-spinner-loader":
                            customElements.get(e) || mI();
                            break;
                        case "axo-text":
                            customElements.get(e) || gR();
                            break;
                        case "axo-text-input":
                            customElements.get(e) || QI()
                        }
                    }
                    ))
                }();
                break;
            case "axo-address-form":
                customElements.get(e) || lR();
                break;
            case "axo-address-list":
                customElements.get(e) || tL();
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-button":
                customElements.get(e) || bI();
                break;
            case "axo-card-art":
                customElements.get(e) || RP();
                break;
            case "axo-card-list":
                customElements.get(e) || function() {
                    if ("undefined" == typeof customElements)
                        return;
                    ["axo-card-list", "axo-branding", "axo-button", "axo-card-art", "axo-divider", "axo-icons", "axo-radio-options", "axo-spinner-loader", "axo-text"].forEach((e => {
                        switch (e) {
                        case "axo-card-list":
                            customElements.get(e) || customElements.define(e, rL);
                            break;
                        case "axo-branding":
                            customElements.get(e) || hI();
                            break;
                        case "axo-button":
                            customElements.get(e) || bI();
                            break;
                        case "axo-card-art":
                            customElements.get(e) || RP();
                            break;
                        case "axo-divider":
                            customElements.get(e) || qP();
                            break;
                        case "axo-icons":
                            customElements.get(e) || Xk();
                            break;
                        case "axo-radio-options":
                            customElements.get(e) || QP();
                            break;
                        case "axo-spinner-loader":
                            customElements.get(e) || mI();
                            break;
                        case "axo-text":
                            customElements.get(e) || gR()
                        }
                    }
                    ))
                }();
                break;
            case "axo-country-flag":
                customElements.get(e) || AI();
                break;
            case "axo-credit-card-fields":
                customElements.get(e) || sI();
                break;
            case "axo-divider":
                customElements.get(e) || qP();
                break;
            case "axo-expandable":
                customElements.get(e) || pR();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-modal-sheet":
                customElements.get(e) || KR();
                break;
            case "axo-radio-options":
                customElements.get(e) || QP();
                break;
            case "axo-select-input":
                customElements.get(e) || SI();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI();
                break;
            case "axo-text":
                customElements.get(e) || gR();
                break;
            case "axo-text-input":
                customElements.get(e) || QI();
                break;
            case "axo-view-navigator":
                customElements.get(e) || aL()
            }
        }
        ))
    }
      , dL = e => {
        var {styles: t} = e
          , n = Ck(e, ["styles"]);
        const r = $t();
        return async (e={}) => {
            try {
                let o;
                $P(),
                YR(),
                cL();
                const {fields: i={
                    cardholderName: {}
                }, shippingAddress: a} = e
                  , s = TP(i);
                s.cardholderName || (s.cardholderName = {});
                const l = dP(t, e.styles);
                r.info("axo_sdk_merchant_styles", {
                    mergedStyles: l
                });
                const c = pP(l)
                  , d = Object.assign(Object.assign({}, n), {
                    fieldOptions: s,
                    styleOptions: c,
                    theme: (null == l ? void 0 : l.theme) || tt
                })
                  , u = {
                    render: e => {
                        try {
                            er.setCheckpoint(er.CHECKPOINTS.PAYMENT_COMPONENT_INVOKED),
                            o = new GP,
                            o.btClient = d.btClient,
                            o.initialFieldOptions = d.fieldOptions,
                            o.mockMode = "mock" === it.get("axoEnv"),
                            o.theme = d.theme,
                            d.styleOptions && (o.styleOptions = d.styleOptions);
                            const t = document.querySelector(e);
                            if (!t)
                                throw YN;
                            return hP(o),
                            o.addEventListener("showCardSelectorEvent", (e => {
                                const {btClient: t, fastlanePaymentRef: n, selectedIndex: r, cardOptions: i} = e.detail
                                  , a = new lL;
                                a.btClient = t,
                                a.fastlanePaymentRef = n,
                                a.cardOptions = i,
                                a.selectedIndex = r,
                                o && (o.cardSelectorRef = a),
                                document.body.appendChild(a)
                            }
                            )),
                            LN(t, o),
                            r.countMetric({
                                component: Ot,
                                action: xt.RENDER,
                                status: vt.STATUS.OK
                            }),
                            u
                        } catch (e) {
                            let t;
                            if (r.countMetric({
                                component: Ot,
                                action: xt.RENDER,
                                status: vt.STATUS.ERROR
                            }),
                            ek(e),
                            e === YN)
                                t = Ak.PAYMENT_RENDER_MISSING_CONTAINER;
                            else
                                t = Ak.PAYMENT_RENDER_FAILED;
                            throw Sk.createExternalError(t)
                        }
                    }
                    ,
                    updatePrefills: async e => {
                        try {
                            o ? await o.updatePrefills(e) : d.fieldOptions.phoneNumber = {
                                prefill: e.phoneNumber
                            },
                            r.countMetric({
                                component: Ot,
                                action: xt.UPDATEPREFILLS,
                                status: vt.STATUS.OK
                            })
                        } catch (e) {
                            throw ek(e),
                            r.countMetric({
                                component: Ot,
                                action: xt.UPDATEPREFILLS,
                                status: vt.STATUS.ERROR
                            }),
                            Sk.createExternalError(Ak.PAYMENT_UPDATE_PREFILLS_FAILED)
                        }
                    }
                    ,
                    getPaymentToken: async () => {
                        try {
                            if (!o)
                                throw Sk.createExternalError(Ak.PAYMENT_GET_PAYMENT_TOKEN_CALLED_BEFORE_RENDER);
                            const e = await o.getPaymentToken();
                            return r.countMetric({
                                component: Ot,
                                action: xt.TOKENIZE,
                                status: vt.STATUS.OK
                            }),
                            e
                        } catch (e) {
                            if (r.countMetric({
                                component: Ot,
                                action: xt.TOKENIZE,
                                status: vt.STATUS.ERROR
                            }),
                            e instanceof lk)
                                throw e;
                            if (ek(e),
                            r.error("axo_sdk_payment_component_get_payment_token_error", {
                                error: e
                            }),
                            "CUSTOMER" === e.type)
                                throw Sk.createExternalError(Ak.PAYMENT_GET_PAYMENT_TOKEN_BAD_DATA);
                            throw Sk.createExternalError(Ak.PAYMENT_GET_PAYMENT_TOKEN_FAILED)
                        }
                    }
                    ,
                    setShippingAddress: async e => {
                        try {
                            const t = (e => void 0 !== e.address)(e) ? function(e) {
                                const {address: t, phoneNumber: n, name: r} = e
                                  , o = NN(t)
                                  , {firstName: i, lastName: a} = eo(r);
                                return Object.assign(Object.assign(Object.assign(Object.assign({}, o), i ? {
                                    firstName: i
                                } : {}), a ? {
                                    lastName: a
                                } : {}), {
                                    phone: n
                                })
                            }(e) : e
                              , n = kN(t)
                              , r = await n.validate();
                            0 === r.length ? it.set("paymentComponentState", {
                                shippingAddressFromMerchant: n
                            }) : (it.set("paymentComponentState", {}),
                            console.warn(`ignoring invalid address passed to fastlanePaymentComponent.setShippingAddress -- Address: ${JSON.stringify(e, null)} -- Validation Errors: ${JSON.stringify(r, null)}`))
                        } catch (e) {
                            throw ek(e),
                            Sk.createExternalError(Ak.PAYMENT_SET_SHIPPING_ADDRESS_FAILED)
                        }
                    }
                };
                if (r.countMetric({
                    component: Ot,
                    action: xt.CREATE,
                    status: vt.STATUS.OK
                }),
                a)
                    try {
                        await u.setShippingAddress(a)
                    } catch (e) {}
                return u
            } catch (e) {
                throw r.countMetric({
                    component: Ot,
                    action: xt.CREATE,
                    status: vt.STATUS.ERROR
                }),
                ek(e),
                Sk.createExternalError(Ak.PAYMENT_INIT_FAILED)
            }
        }
    }
      , uL = e => {
        var {styles: t} = e
          , n = Ck(e, ["styles"]);
        const r = $t();
        return async e => {
            try {
                EP(),
                wP();
                const o = {
                    render: r => {
                        try {
                            if (!it.get("isFastlaneEnabled")) {
                                Sk.triggerExternalWarning(gk.WATERMARK_RENDER_REQUIRES_FASTLANE_ENABLED);
                                const e = document.querySelector(r);
                                return e && e.style && (e.style.visibility = "hidden"),
                                o
                            }
                            return SP(Object.assign(Object.assign({}, n), {
                                containerSelector: r,
                                watermarkOptions: e,
                                metric: Rt,
                                styles: dP(t, e.styles)
                            })),
                            o
                        } catch (e) {
                            let t;
                            if (ek(e),
                            e === YN)
                                t = Ak.WATERMARK_RENDER_MISSING_CONTAINER;
                            else
                                t = Ak.WATERMARK_RENDER_FAILED;
                            throw Sk.createExternalError(t)
                        }
                    }
                };
                return r.countMetric({
                    component: Rt.COMPONENT,
                    action: Rt.ACTION.CREATE,
                    status: vt.STATUS.OK
                }),
                o
            } catch (e) {
                throw ek(e),
                r.countMetric({
                    component: Rt.COMPONENT,
                    action: Rt.ACTION.CREATE,
                    status: vt.STATUS.ERROR
                }),
                Sk.createExternalError(Ak.WATERMARK_INIT_FAILED)
            }
        }
    }
      , pL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.logger = $t(),
            this.inputRefs = Array(6).fill(null),
            this.handleOtpInput = e => {
                this.errorMessage = "",
                this.hasError = !1;
                const t = e.target.value.trim();
                t ? t.length > 1 && (e.clipboardData = {
                    getData: () => t
                },
                this.handleOtpPaste(e),
                e.preventDefault()) : e.preventDefault()
            }
            ,
            this.handleOtpKeyDown = e => {
                var t, n, r;
                const o = e.target.name
                  , i = e.key
                  , a = +o.slice(-1)
                  , s = [...this.otp];
                switch (i) {
                case "ArrowRight":
                    e.preventDefault(),
                    a < 5 && (null === (t = this.inputRefs[a + 1]) || void 0 === t || t.setFocus());
                    break;
                case "ArrowLeft":
                    e.preventDefault(),
                    a > 0 && (null === (n = this.inputRefs[a - 1]) || void 0 === n || n.setFocus());
                    break;
                case "Backspace":
                    e.preventDefault(),
                    s[a] = "",
                    a > 0 && (null === (r = this.inputRefs[a - 1]) || void 0 === r || r.setFocus()),
                    this.otp = s,
                    this.pin = s.join("");
                    break;
                case "Delete":
                case "Tab":
                    break;
                default:
                    (!e.metaKey && !e.ctrlKey || /\d/.test(i)) && e.preventDefault()
                }
            }
            ,
            this.handleOtpKeyUp = e => {
                var t;
                e.preventDefault();
                const n = e.target
                  , r = e.key
                  , o = qr.functionKeyValues.indexOf(r) > -1;
                if (!/\d/.test(r) || o)
                    return;
                this.errorMessage = "",
                this.hasError = !1;
                const i = +n.name.slice(-1)
                  , a = [...this.otp];
                a[i] = r,
                i < 5 && (null === (t = this.inputRefs[i + 1]) || void 0 === t || t.setFocus()),
                this.otp = a,
                this.pin = a.join("")
            }
            ,
            this.handleOtpPaste = e => {
                var t, n;
                const r = +e.target.name.slice(-1)
                  , o = e.clipboardData
                  , i = null !== (t = null == o ? void 0 : o.getData("Text").replace(/\D+/g, "").split("")) && void 0 !== t ? t : ""
                  , a = [...this.otp];
                for (let e = r; e < r + i.length && e < 6; e++)
                    a[e] = i[e - r];
                const s = r + i.length >= 6 ? 5 : r + i.length;
                null === (n = this.inputRefs[s]) || void 0 === n || n.setFocus(),
                this.otp = a,
                this.pin = a.join("")
            }
            ,
            this.renderOtpFields = () => {
                var e;
                const t = [];
                for (let e = 0; e < 6; e++)
                    t.push(P("axo-text-input", {
                        ref: t => this.inputRefs[e] = t,
                        containerClass: "p-0 [&_input]:h-9 [&_input]:px-0 [&_input]:py-3 [&_input]:text-center [&_input]:text-[1.75em] w-12 max-xs:w-10",
                        name: `otp${e}`,
                        label: "",
                        value: this.otp[e],
                        hasError: this.hasError,
                        handleInput: this.handleOtpInput,
                        handleKeyDown: this.handleOtpKeyDown,
                        handleKeyUp: this.handleOtpKeyUp,
                        handlePaste: this.handleOtpPaste,
                        options: {
                            inputmode: "numeric",
                            maxLength: 6,
                            pattern: "[0-9]{1}",
                            required: !0,
                            type: "text"
                        }
                    }));
                return P(Fe, null, P("form", {
                    autocomplete: "one-time-code",
                    class: "flex flex-row gap-[11px] shrink-0 pb-1 mb-0"
                }, t), !!(null === (e = this.errorMessage) || void 0 === e ? void 0 : e.length) && Kk(this.errorMessage))
            }
            ,
            this.value = "",
            this.hasError = void 0,
            this.errorMessage = void 0,
            this.otp = ["", "", "", "", "", ""],
            this.handleOtpSubmit = void 0,
            this.pin = void 0,
            this.isFirstTimeEnteredOtp = !0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        otpChanged(e) {
            if (this.isFirstTimeEnteredOtp && (this.logger.track({
                event_name: "axo_begin_enter_otp",
                event_category: "otp_module",
                event_type: "im",
                intent: "checkout"
            }),
            this.isFirstTimeEnteredOtp = !1),
            6 === e.length) {
                const {isValid: t} = ( (e, {props: t}) => {
                    const n = !!e.length
                      , r = new RegExp(`^\\d{1,${t.length}}$`)
                      , o = {
                        patternMismatch: !1,
                        tooShort: n && !!t.length && e.length < t.length,
                        tooLong: n && !!t.length && e.length > t.length,
                        valueMissing: !n
                    };
                    Object.values(o).every((e => !e)) && r && (o.patternMismatch = !r.test(e));
                    const i = !Object.keys(o).filter((e => o[e])).length;
                    return {
                        errors: o,
                        isValid: i
                    }
                }
                )(e, {
                    props: {
                        length: 6
                    }
                });
                if (!t)
                    return this.errorMessage = "Validation error",
                    void (this.hasError = !0);
                this.handleOtpSubmit(e)
            }
        }
        componentDidLoad() {
            var e, t;
            null === (t = null === (e = this.inputRefs[0]) || void 0 === e ? void 0 : e.setFocus) || void 0 === t || t.call(e)
        }
        render() {
            return P(D, {
                key: "6db1e0762cc495e2e184af1a2b08f582f7e4580c"
            }, this.renderOtpFields())
        }
        get el() {
            return this
        }
        static get watchers() {
            return {
                pin: ["otpChanged"]
            }
        }
    }
    , [1, "axo-code-input", {
        value: [1025],
        hasError: [1028, "has-error"],
        errorMessage: [1025, "error-message"],
        otp: [1040],
        handleOtpSubmit: [16],
        pin: [32],
        isFirstTimeEnteredOtp: [32]
    }, void 0, {
        pin: ["otpChanged"]
    }]);
    const hL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.logger = $t(),
            this.maskedPhoneNumber = void 0,
            this.handleMemberOptIn = void 0,
            this.isLoading = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        componentDidLoad() {
            this.logger.track({
                event_name: "axo_connect_otp_consent_shown",
                duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.AUTH_FLOW_TRIGGERED),
                event_category: "otp_module",
                event_type: "im",
                intent: "checkout",
                transition_name: "send_otp_rendered"
            })
        }
        render() {
            return P(D, {
                key: "02cf5155ccd068df48e0b2e5a05971e20f01c74f"
            }, P("axo-text", {
                key: "f0f2b8e7db7e63dd3a6986036004b17d549a6004",
                variant: "h1"
            }, Pr("memberSignUp.title")), P("axo-text", {
                key: "1e0e1393151a783fad02a5a0597041ce0f7ec4de",
                class: "block leading-5"
            }, Pr("memberSignUp.explanation")), P("div", {
                key: "ae6635c20f958ffc45d19e95b64cd2893675e52c",
                class: "my-6"
            }, P("axo-button", {
                key: "fd0c9497223703a88499212bf7ca20c07918b118",
                onClick: () => {
                    var e;
                    this.logger.track({
                        event_name: "axo_connect_otp_consent_pressed",
                        event_category: "otp_module",
                        event_type: "im",
                        intent: "checkout",
                        transition_name: "send_otp_rendered"
                    }),
                    null === (e = this.handleMemberOptIn) || void 0 === e || e.call(this)
                }
                ,
                isLoading: this.isLoading
            }, P("div", {
                key: "50ff2f6ec6441bb27f125c3d7d5fe30de8397d63",
                class: "flex justify-center items-center px-6"
            }, P("span", {
                key: "768a28b8ca69432b4e1e06b10c065a9aa757f398",
                class: "font-bold"
            }, Pr("memberSignUp.getCode", {
                maskedPhoneNumber: this.maskedPhoneNumber
            }))))))
        }
        get el() {
            return this
        }
    }
    , [1, "axo-member-signup", {
        maskedPhoneNumber: [1, "masked-phone-number"],
        handleMemberOptIn: [16],
        isLoading: [4, "is-loading"]
    }]);
    const fL = ({authTimedOut: e=!0}) => {
        const t = it.get("authState");
        it.set("authState", Object.assign(Object.assign({}, t), {
            customerId: "",
            authTimedOut: e,
            accountType: "",
            targetAuthAssertion: "",
            convertedToGuest: !0
        }))
    }
      , mL = ({optedOut: e, showOptInToggle: t}) => {
        const n = it.get("authState");
        it.set("showOptInToggle", t),
        it.set("authState", Object.assign(Object.assign({}, n), {
            customerId: "",
            accountType: "",
            targetAuthAssertion: "",
            optedOutOfOTP: e
        }))
    }
      , gL = e => e.length > 5 ? `${e.slice(0, 5)}•••` : e;
    LR();
    const yL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.closeAuth = j(this, "closeAuth", 7),
            this.logger = $t(),
            this.getChallenges = async () => {
                if (this.logger.track({
                    event_name: "axo_get_challenges_start",
                    event_category: "otp_module",
                    event_type: "im",
                    intent: "checkout"
                }),
                this.view = "loadingView",
                !this.email)
                    throw new Error("User email is empty or undefined");
                try {
                    const e = await this.authAPI.getChallenges({
                        email: this.email
                    });
                    this.isOpen = !0,
                    this.logger.track({
                        event_name: "axo_get_challenges_end",
                        event_category: "otp_module",
                        event_type: "im",
                        intent: "checkout",
                        otp_sent: this.isAutoOtp ? "Y" : "N"
                    }),
                    this.ingestRawChallenges(e)
                } catch (e) {
                    this.authenticationState = "failed",
                    this.accountType === qe && it.set("showOptInToggle", !1),
                    this.closeMenu("error")
                }
            }
            ,
            this.sendOtp = async (e=!1) => {
                if (!this.challengeNonce)
                    throw new Error("Challenge nonce is undefined or empty");
                try {
                    await this.authAPI.sendOtp({
                        challenge_id: this.challenges[this.selectedChallengeIdx].challenge_id,
                        nonce: this.challengeNonce
                    }, {
                        isResend: e
                    })
                } catch (e) {
                    return fL({
                        authTimedOut: this.accountType !== Je
                    }),
                    this.showErrorContent = !0,
                    this.errorContentDetail = "notConfirmed",
                    void (this.errorContentButtonName = "closeButton")
                }
                this.logger.track({
                    event_name: e ? "axo_otp_resend_end" : "axo_send_otp_end",
                    event_category: "otp_module",
                    event_type: "im",
                    intent: "checkout",
                    transition_name: e ? "resend_otp_success" : "send_otp_success"
                }),
                this.view = "submitOtpView",
                this.isSendOtpLoading = !1
            }
            ,
            this.manuallySendOtp = (e=!1) => {
                try {
                    e ? this.view = "loadingView" : this.isSendOtpLoading = !0,
                    this.sendOtp(e)
                } catch (e) {
                    return this.accountType === qe && it.set("showOptInToggle", !1),
                    this.showErrorContent = !0,
                    this.errorContentDetail = "unableSendOtp",
                    void (this.errorContentButtonName = "payAnotherWayButton")
                }
            }
            ,
            this.handleOtpSubmit = e => {
                this.hasError = !1,
                this.errorMessage = void 0,
                this.view = "loadingView",
                (async () => {
                    this.logger.track({
                        event_name: "axo_otp_entry_start",
                        event_category: "otp_module",
                        event_type: "im",
                        intent: "checkout",
                        transition_name: "otp_entered"
                    });
                    try {
                        const t = await this.authAPI.verifyOtp({
                            otp: e,
                            nonce: this.challengeNonce,
                            buyerIdentifier: this.userId
                        });
                        if ((null == t ? void 0 : t.customerProfileData) && 0 === Object.keys(t.customerProfileData).length)
                            return this.showErrorContent = !0,
                            this.errorContentDetail = "unexpectedError",
                            void (this.errorContentButtonName = "payAnotherWayButton");
                        this.verifyResponse = t;
                        const {customerProfileData: {id: n}} = t;
                        if (!n)
                            throw new Error("customerId is undefined or empty");
                        it.set("authState", Object.assign(Object.assign({}, it.get("authState")), {
                            customerId: n,
                            accountType: "C",
                            isAccountActive: !0,
                            isAccountRiskSafe: !0
                        }))
                    } catch (e) {
                        switch (e.message) {
                        case "HTTP Error":
                            fL({
                                authTimedOut: this.accountType !== Je
                            }),
                            this.showErrorContent = !0,
                            this.errorContentDetail = "unexpectedError",
                            this.errorContentButtonName = "payAnotherWayButton";
                            break;
                        case "OTP validation limit exceeded":
                            this.showErrorContent = !0,
                            this.errorContentDetail = "notConfirmed",
                            this.errorContentButtonName = "closeButton",
                            it.set("showOptInToggle", this.accountType === Je);
                            break;
                        default:
                            this.hasError = !0,
                            this.errorMessage = Pr("auth.invalidCode"),
                            this.view = "submitOtpView",
                            this.authenticationState = "failed"
                        }
                        return void this.logger.countMetric({
                            component: Mt,
                            action: Ft.SUBMIT_OTP,
                            status: vt.STATUS.ERROR
                        })
                    }
                    this.accountType === Je && this.logger.addTrackingBuilder(( () => ({
                        buyer_type: "axo_member",
                        buyer_type_code: 21
                    }))),
                    this.logger.track({
                        event_name: "axo_otp_entry_end",
                        event_category: "otp_module",
                        event_type: "im",
                        intent: "checkout",
                        transition_name: "otp_success"
                    }),
                    this.logger.countMetric({
                        component: Mt,
                        action: Ft.SUBMIT_OTP,
                        status: vt.STATUS.OK
                    }),
                    this.authenticationState = "succeeded",
                    it.set("showOptInToggle", !1),
                    this.closeMenu()
                }
                )()
            }
            ,
            this.closeMenu = (e="") => {
                let t = !1
                  , n = this.accountType !== qe;
                "button" === e ? (t = !0,
                this.logger.track({
                    event_name: "axo_send_otp_close_pressed",
                    event_category: "otp_module",
                    event_type: "im",
                    intent: "checkout"
                }),
                mL({
                    optedOut: t,
                    showOptInToggle: n
                })) : "scrim" === e ? (t = !0,
                this.logger.track({
                    event_name: "axo_send_otp_close_clicked_outside_interstitial",
                    event_category: "otp_module",
                    event_type: "im",
                    intent: "checkout"
                }),
                mL({
                    optedOut: t,
                    showOptInToggle: n
                })) : "error" === e && mL({
                    optedOut: t,
                    showOptInToggle: n
                }),
                this.isOpen = !1,
                this.closeAuth.emit({
                    authenticationState: this.authenticationState,
                    verifyResponse: this.verifyResponse
                }),
                this.showErrorContent = !1,
                this.errorContentDetail = void 0,
                this.errorContentButtonName = void 0
            }
            ,
            this.renderSubmitOtpContent = () => {
                const e = e => {
                    this.logger.track({
                        event_name: e,
                        event_category: "otp_module",
                        event_type: "im",
                        intent: "checkout"
                    })
                }
                ;
                return this.accountType === Je ? P("div", null, P("axo-text", {
                    customClass: "inline-block leading-5"
                }, Pr("memberSignUp.legalAgreement.text", {
                    terms: P("axo-text", {
                        customClass: "inline-block text-axoblue-500 hover:underline",
                        clickable: !0,
                        fontWeight: "strong"
                    }, P("a", {
                        onClick: () => {
                            e("axo_terms_link_clicked")
                        }
                        ,
                        href: "https://fastlane.paypal.com/us/terms",
                        target: "_blank",
                        class: "font-medium cursor-pointer text-axoblue-500 underline"
                    }, Pr("memberSignUp.legalAgreement.terms"))),
                    privacyStatement: P("axo-text", {
                        customClass: "inline-block text-axoblue-500 hover:underline",
                        clickable: !0,
                        fontWeight: "strong"
                    }, P("a", {
                        onClick: () => {
                            e("axo_privacy_link_clicked")
                        }
                        ,
                        href: "https://fastlane.paypal.com/us/privacy",
                        target: "_blank",
                        class: "font-medium cursor-pointer text-axoblue-500 underline"
                    }, Pr("memberSignUp.legalAgreement.privacyStatement")))
                }))) : P("axo-text", {
                    class: "block leading-5"
                }, Pr("auth.sendOtpCodeSubHeadingA", {
                    phoneNumber: this.getMaskedPhoneNumber()
                }))
            }
            ,
            this.getMaskedPhoneNumber = () => {
                var e, t;
                return null === (t = null === (e = this.challenges[this.selectedChallengeIdx]) || void 0 === e ? void 0 : e.masked_phone_number) || void 0 === t ? void 0 : t.replace(/X/g, "•").replace(/\s/g, "")
            }
            ,
            this.handlePhoneChange = e => {
                const t = e.target;
                this.selectedChallengeIdx = t.selectedIndex || 0
            }
            ,
            this.headerOfSheet = () => {
                var e, t;
                return this.showErrorContent ? null : P("div", {
                    class: "flex items-center"
                }, P("div", {
                    class: "bg-axoblue-400 flex h-[1.875em] w-[1.875em] items-center justify-center mr-2 capitalize rounded-full text-axoblue-500"
                }, null === (e = this.email) || void 0 === e ? void 0 : e.slice(0, 1)), P("axo-text", {
                    "data-testid": "email",
                    variant: "body"
                }, (e => {
                    if (e.length < 25)
                        return e;
                    const [t,n] = e.split("@")
                      , r = n.split(".")
                      , o = r.pop();
                    return `${gL(t)}@${gL(r.join("."))}.${o}`
                }
                )(null !== (t = this.email) && void 0 !== t ? t : "")))
            }
            ,
            this.submitPayPalMemberSignUp = () => P("axo-member-signup", {
                maskedPhoneNumber: this.getMaskedPhoneNumber(),
                handleMemberOptIn: this.manuallySendOtp,
                isLoading: this.isSendOtpLoading
            }),
            this.submitOtpView = () => {
                const e = this.accountType === qe ? "auth.sendOtpCodeHeading" : "memberSignUp.title";
                return this.submitOtpViewShown || (this.logger.track({
                    event_name: "axo_send_otp_start",
                    duration: this.accountType === qe && er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.AUTH_FLOW_TRIGGERED),
                    event_category: "otp_module",
                    event_type: "im",
                    intent: "checkout",
                    transition_name: "send_otp_rendered"
                }),
                this.submitOtpViewShown = !0),
                P("div", null, P("axo-text", {
                    variant: "h1"
                }, Pr(e)), P("div", {
                    class: "pb-2"
                }, this.renderSubmitOtpContent()), P("axo-code-input", {
                    handleOtpSubmit: this.handleOtpSubmit,
                    hasError: this.hasError,
                    errorMessage: this.errorMessage
                }), P("axo-text", {
                    class: "block"
                }, P("a", {
                    tabIndex: 0,
                    role: "button",
                    onClick: () => {
                        this.logger.track({
                            event_name: "axo_otp_resend_start",
                            event_category: "otp_module",
                            event_type: "im",
                            intent: "checkout",
                            transition_name: "resend_otp_clicked"
                        });
                        this.manuallySendOtp(!0)
                    }
                    ,
                    class: "cursor-pointer text-axoblue-500 hover:underline"
                }, Pr("auth.getNewCode"))))
            }
            ,
            this.errorContent = () => P("div", null, P("div", {
                class: "pt-5"
            }, P("axo-text", {
                variant: "h1"
            }, Pr(`auth.${this.errorContentDetail}`))), P("axo-button", {
                buttonClass: "mt-10",
                handleClick: () => {
                    this.closeMenu("error")
                }
            }, P("axo-text", {
                variant: "body",
                customClass: "text-axowhite"
            }, Pr(`auth.${this.errorContentButtonName}`)))),
            this.otpViews = () => P("div", {
                class: "p-2 -mt-2"
            }, "submitPayPalMemberSignUp" === this.view && this.submitPayPalMemberSignUp(), "submitOtpView" === this.view && this.submitOtpView(), "loadingView" === this.view && P("axo-loader", null), P("axo-branding", {
                variant: "fl-md",
                class: "w-[10.5em] mt-3"
            })),
            this.contentOfModalSheet = () => {
                const e = e => () => {
                    "submitPayPalMemberSignUp" === this.view && this.authAPI.optOut({}),
                    this.closeMenu(e)
                }
                ;
                return P("div", null, P("axo-modal-sheet", {
                    id: "paypal-auth-modalSheet",
                    class: "axo-default-styles",
                    header: this.headerOfSheet(),
                    isOpen: this.isOpen,
                    handleClose: e("button"),
                    handleScrimClick: e("scrim"),
                    sheetClass: "[&>*:first-child]:min-h-[30px] pt-2"
                }, this.showErrorContent ? this.errorContent() : this.otpViews()))
            }
            ,
            this.userId = void 0,
            this.email = void 0,
            this.accountType = qe,
            this.isXSellEligible = !1,
            this.hasError = !1,
            this.errorMessage = void 0,
            this.invalidEmail = !1,
            this.showErrorContent = !1,
            this.errorContentDetail = void 0,
            this.errorContentButtonName = void 0,
            this.isOpen = !1,
            this.view = void 0,
            this.isAutoOtp = !0,
            this.verifyResponse = void 0,
            this.challenges = [],
            this.challengeNonce = void 0,
            this.selectedChallengeIdx = 0,
            this.submitOtpViewShown = !1,
            this.authenticationState = "canceled",
            this.authAPI = void 0,
            this.isSendOtpLoading = !1;
            this.el.shadowRoot.adoptedStyleSheets = [Rk, Lk]
        }
        ingestRawChallenges(e) {
            var t;
            this.challengeNonce = e.nonce;
            const n = e.challenges.filter((e => "SMS" === e.challenge_type));
            this.challenges = n.flatMap((e => e.challenge_data.phones)),
            this.isAutoOtp = !!(null === (t = this.challenges) || void 0 === t ? void 0 : t.find((e => e.notified))),
            this.isXSellEligible ? this.view = "submitPayPalMemberSignUp" : this.isAutoOtp ? this.view = "submitOtpView" : this.sendOtp()
        }
        componentWillLoad() {
            this.authAPI = mr({
                cmid: it.get("cmid")
            }),
            this.email && (this.userId || this.isXSellEligible) && this.getChallenges()
        }
        render() {
            return P(D, {
                key: "ca4a35dba314946835bf04a732ec16d87242ebf4",
                "data-theme": tt,
                class: "bg-colorBackgroundPrimary min-w-el p-2"
            }, P("div", {
                key: "eae257cf9b8f7fb5b16dcb59c0b971c98dc1f852"
            }, this.contentOfModalSheet()))
        }
        get el() {
            return this
        }
    }
    , [1, "paypal-auth", {
        userId: [1, "user-id"],
        email: [1025],
        accountType: [1, "account-type"],
        isXSellEligible: [4, "is-x-sell-eligible"],
        hasError: [32],
        errorMessage: [32],
        invalidEmail: [32],
        showErrorContent: [32],
        errorContentDetail: [32],
        errorContentButtonName: [32],
        isOpen: [32],
        view: [32],
        isAutoOtp: [32],
        verifyResponse: [32],
        challenges: [32],
        challengeNonce: [32],
        selectedChallengeIdx: [32],
        submitOtpViewShown: [32],
        authenticationState: [32],
        authAPI: [32],
        isSendOtpLoading: [32]
    }]);
    const vL = yL
      , bL = function() {
        if ("undefined" == typeof customElements)
            return;
        ["paypal-auth", "axo-branding", "axo-button", "axo-code-input", "axo-icons", "axo-loader", "axo-member-signup", "axo-modal-sheet", "axo-shimmer-loader", "axo-spinner-loader", "axo-text", "axo-text-input"].forEach((e => {
            switch (e) {
            case "paypal-auth":
                customElements.get(e) || customElements.define(e, yL);
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-button":
                customElements.get(e) || bI();
                break;
            case "axo-code-input":
                customElements.get(e) || function() {
                    if ("undefined" == typeof customElements)
                        return;
                    ["axo-code-input", "axo-text-input"].forEach((e => {
                        switch (e) {
                        case "axo-code-input":
                            customElements.get(e) || customElements.define(e, pL);
                            break;
                        case "axo-text-input":
                            customElements.get(e) || QI()
                        }
                    }
                    ))
                }();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-loader":
                customElements.get(e) || MP();
                break;
            case "axo-member-signup":
                customElements.get(e) || function() {
                    if ("undefined" == typeof customElements)
                        return;
                    ["axo-member-signup", "axo-button", "axo-icons", "axo-spinner-loader", "axo-text"].forEach((e => {
                        switch (e) {
                        case "axo-member-signup":
                            customElements.get(e) || customElements.define(e, hL);
                            break;
                        case "axo-button":
                            customElements.get(e) || bI();
                            break;
                        case "axo-icons":
                            customElements.get(e) || Xk();
                            break;
                        case "axo-spinner-loader":
                            customElements.get(e) || mI();
                            break;
                        case "axo-text":
                            customElements.get(e) || gR()
                        }
                    }
                    ))
                }();
                break;
            case "axo-modal-sheet":
                customElements.get(e) || KR();
                break;
            case "axo-shimmer-loader":
                customElements.get(e) || LP();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI();
                break;
            case "axo-text":
                customElements.get(e) || gR();
                break;
            case "axo-text-input":
                customElements.get(e) || QI()
            }
        }
        ))
    };
    function EL(e, t=et.BT) {
        var n, r, o, i, a, s, l, c;
        const d = null === (o = null === (r = null === (n = e.shippingAddresses) || void 0 === n ? void 0 : n.filter((e => !e.disabled))) || void 0 === r ? void 0 : r.sort(( (e, t) => e.ordinal - t.ordinal))) || void 0 === o ? void 0 : o[0]
          , u = null === (s = null === (a = null === (i = e.cards) || void 0 === i ? void 0 : i.filter((e => !e.disabled))) || void 0 === a ? void 0 : a.sort(( (e, t) => e.ordinal - t.ordinal))) || void 0 === s ? void 0 : s[0]
          , p = _L(null == u ? void 0 : u.paymentToken, t);
        return "PPCP" === t ? {
            profileData: {
                shippingAddress: null == d ? void 0 : d.toPpSdkType(),
                card: p,
                name: null === (l = e.name) || void 0 === l ? void 0 : l.toPpSdkType()
            },
            profileMetadata: {
                selectedCardId: null == u ? void 0 : u.id,
                selectedShippingAddressId: null == d ? void 0 : d.id
            }
        } : {
            profileData: {
                shippingAddress: null == d ? void 0 : d.toBtSdkType(),
                card: p,
                name: null === (c = e.name) || void 0 === c ? void 0 : c.toBtSdkType()
            },
            profileMetadata: {
                selectedCardId: null == u ? void 0 : u.id,
                selectedShippingAddressId: null == d ? void 0 : d.id
            }
        }
    }
    function _L(e, t=et.BT) {
        var n, r;
        if (!e)
            return;
        const o = JSON.parse(JSON.stringify(e))
          , i = null === (r = null === (n = e.paymentSource) || void 0 === n ? void 0 : n.card) || void 0 === r ? void 0 : r.billingAddress;
        if (!i)
            return o;
        const a = kN(i)
          , s = t === et.BT ? a.toBtSdkType() : a.toPpSdkType();
        return o.paymentSource.card.billingAddress = s,
        o
    }
    const AL = {
        "ryan-one-card@mock.com": {
            country: "US",
            ctxId: "ryan-one-card@mock.com",
            id: "MOCK8JHMJM2R6",
            r: 1,
            c: 1,
            status: 1,
            type: "C"
        },
        "maria@mock.com": {
            country: "US",
            ctxId: "maria@mock.com-ctxId",
            id: "MOCKMARIA123",
            r: 1,
            c: 1,
            status: 1,
            type: "P"
        }
    }
      , wL = "Street 123"
      , SL = "Somewhere"
      , CL = "Area1"
      , OL = "Area 2"
      , xL = "CODE"
      , TL = "12345"
      , NL = "Some company"
      , kL = {
        national_number: "2345678901",
        country_code: "1"
    };
    Object.assign(Object.assign({}, {
        address_line_1: "Street 123",
        address_line_2: "Somewhere",
        admin_area_1: "Area1",
        admin_area_2: "Area 2",
        country_code: "CODE",
        postal_code: "12345",
        ordinal: 2
    }), {
        id: "123456-Billing-2",
        is_default_Address: !1,
        preferred: !1
    });
    const IL = {
        streetAddress: wL,
        extendedAddress: SL,
        locality: OL,
        region: CL,
        postalCode: TL,
        countryCodeAlpha2: xL
    };
    function RL({accountType: e, isAccountActive: t, complianceDecision: n}) {
        const r = {
            showOptInToggle: !0,
            optInToggleDefaultState: !0
        }
          , o = "C" === e && !t;
        return "C" === e && t || "P" === e && !!!n ? r.showOptInToggle = !1 : o && (r.showOptInToggle = !0,
        r.optInToggleDefaultState = !0),
        r
    }
    Object.assign(Object.assign({
        firstName: yr,
        lastName: vr
    }, IL), {
        company: NL,
        phoneNumber: `${kL.country_code}${kL.national_number}`
    });
    const PL = e => {
        var t;
        return {
            id: null !== (t = e.id) && void 0 !== t ? t : "",
            ordinal: e.ordinal || 999,
            address: {
                company: null == e ? void 0 : e.company,
                streetAddress: e.address_line_1,
                extendedAddress: e.address_line_2,
                locality: e.admin_area_2,
                region: e.admin_area_1,
                postalCode: e.postal_code,
                countryCodeAlpha2: e.country_code
            }
        }
    }
    ;
    const LL = (e, t=void 0, n) => {
        var r, o;
        const i = function(e) {
            const {id: t, ordinal: n, address: r} = e;
            return {
                id: t,
                ordinal: n,
                address: r,
                toAxoShippingAddressModel: e => Object.assign({}, RN(Object.assign(Object.assign({}, r), e))),
                toAxoShippingAddressWithMetadataModel: e => PN({
                    id: t,
                    ordinal: n,
                    address: Object.assign(Object.assign({}, r), e)
                })
            }
        }(PL(e)).toAxoShippingAddressWithMetadataModel(function(e) {
            return {
                firstName: (null == e ? void 0 : e.given_name) || "",
                lastName: (null == e ? void 0 : e.surname) || ""
            }
        }((null == e ? void 0 : e.name) || t));
        return e.phone && (i.address.phone = {
            nationalNumber: null === (r = e.phone) || void 0 === r ? void 0 : r.national_number,
            countryCode: null === (o = e.phone) || void 0 === o ? void 0 : o.country_code
        }),
        i.disabled = ( (e, t) => {
            if (0 === Object.keys(t).length)
                return !1;
            const n = e.countryCodeAlpha2
              , r = e.region || "";
            return !t[n] || 0 !== t[n].size && !t[n].has(r)
        }
        )(i.address, n),
        i
    }
      , DL = (e, t=[]) => {
        const n = {
            brand: (r = e.payment_source.card).brand,
            expiry: r.expiry,
            lastDigits: r.last_digits,
            name: r.name,
            billingAddress: (o = r.billing_address,
            PL(o)).address
        };
        var r, o;
        return {
            id: e.id,
            ordinal: e.ordinal || 999,
            disabled: 0 !== t.length && !t.some((e => e === (null == n ? void 0 : n.brand))),
            paymentToken: {
                id: e.id,
                paymentSource: {
                    card: n
                }
            }
        }
    }
      , ML = ({verifyResponse: e, allowedBrands: t=[], allowedLocationsMap: n={}}) => {
        var r, o, i, a, s, l, c;
        const d = {
            connectCustomerId: e.customerProfileData.id
        }
          , {customerProfileData: u} = e
          , p = Qr({
            firstName: null !== (o = null === (r = u.name) || void 0 === r ? void 0 : r.given_name) && void 0 !== o ? o : "",
            lastName: null !== (a = null === (i = u.name) || void 0 === i ? void 0 : i.surname) && void 0 !== a ? a : ""
        })
          , h = (u.addresses || []).map((t => LL(t, e.customerProfileData.name, n)));
        return Array.isArray(u.payment_tokens) && (u.payment_tokens = u.payment_tokens.filter((e => {
            if (e.id) {
                if (!e.id.startsWith("CC-"))
                    return !0;
                $t().warn("axo_sdk_profile_data_bad_payment_token_nonce")
            }
        }
        ))),
        Object.assign(Object.assign({}, d), {
            email: null !== (l = null === (s = e.customerProfileData) || void 0 === s ? void 0 : s.email) && void 0 !== l ? l : "",
            name: p,
            shippingAddresses: h,
            cards: e.customerProfileData.payment_tokens ? e.customerProfileData.payment_tokens.map((e => DL(e, t))) : [],
            phones: null === (c = e.customerProfileData.phones) || void 0 === c ? void 0 : c.map((e => ({
                nationalNumber: null == e ? void 0 : e.national_number,
                countryCode: null == e ? void 0 : e.country_code
            })))
        })
    }
      , FL = e => {
        const {platform: t, fraudnet: n} = e
          , r = $t()
          , o = async (e="") => {
            const n = e.trim();
            if (!n)
                return {
                    authenticationState: "failed",
                    profileData: void 0
                };
            try {
                const e = mr({
                    cmid: it.get("cmid")
                })
                  , r = await e.profile({
                    email: n
                })
                  , {customerProfileData: {id: o}, targetAuthAssertion: i} = r
                  , a = ML({
                    verifyResponse: r,
                    allowedBrands: it.get("allowedCardBrands"),
                    allowedLocationsMap: it.get("allowedLocations")
                })
                  , {profileData: s, profileMetadata: l} = EL(a, t);
                return it.state.update("authState", Object.assign(Object.assign({}, it.get("authState")), {
                    email: n,
                    customerId: o,
                    targetAuthAssertion: i,
                    accountType: "C",
                    isAccountActive: !0,
                    isAccountRiskSafe: !0
                })),
                it.state.update("showOptInToggle", !1),
                it.state.update("fullProfile", a),
                it.state.update("cardSelectorState", {
                    selectedCardId: l.selectedCardId
                }),
                it.state.update("shippingAddressSelectorState", {
                    selectedAddressId: l.selectedShippingAddressId
                }),
                {
                    profileData: s,
                    authenticationState: "succeeded"
                }
            } catch (e) {
                return ek(e),
                {
                    authenticationState: "failed",
                    profileData: void 0
                }
            }
        }
        ;
        return {
            lookupCustomerByEmail: async e => {
                try {
                    const t = null == e ? void 0 : e.trim()
                      , o = it.get("authState")
                      , i = o.email === t && o.optedOutOfOTP;
                    it.state.clearSessionState(),
                    it.state.update("authState", {
                        email: t,
                        optedOutOfOTP: i
                    }),
                    it.state.isIdentityLoading = !0;
                    const a = "mock" === it.get("axoEnv")
                      , s = it.get("isFastlaneEnabled");
                    if (a || !s) {
                        const {ctxId: e} = function({email: e, flow: t="GUEST"}) {
                            var n, r, o, i, a, s, l, c, d;
                            let u;
                            const p = "mock" === it.get("axoEnv")
                              , h = {
                                ctxId: "",
                                accountType: "",
                                customerId: "",
                                geoLocation: "US",
                                isAccountActive: !1
                            }
                              , f = {
                                DISABLED: {
                                    lookupState: Object.assign({}, h),
                                    toggleState: {
                                        showOptInToggle: !1,
                                        optInToggleDefaultState: !1
                                    }
                                },
                                GUEST: {
                                    lookupState: Object.assign({}, h)
                                },
                                ACTIVE_USER: {
                                    lookupState: Object.assign(Object.assign({}, h), {
                                        customerId: e,
                                        accountType: "C",
                                        isAccountActive: !0
                                    })
                                }
                            };
                            u = "DISABLED" === t ? null === (n = f.DISABLED) || void 0 === n ? void 0 : n.lookupState : p ? Object.assign(Object.assign({}, h), {
                                customerId: (null === (r = AL[e]) || void 0 === r ? void 0 : r.id) || "",
                                ctxId: (null === (o = AL[e]) || void 0 === o ? void 0 : o.ctxId) || "",
                                accountType: (null === (i = AL[e]) || void 0 === i ? void 0 : i.type) || "",
                                isAccountActive: !!(null === (a = AL[e]) || void 0 === a ? void 0 : a.status),
                                riskDecision: null === (s = AL[e]) || void 0 === s ? void 0 : s.r,
                                complianceDecision: null === (l = AL[e]) || void 0 === l ? void 0 : l.c
                            }) : Object.assign({}, null === (c = f[t]) || void 0 === c ? void 0 : c.lookupState);
                            const {customerId: m, accountType: g, isAccountActive: y, riskDecision: v, complianceDecision: b, geoLocation: E} = u
                              , {showOptInToggle: _, optInToggleDefaultState: A} = (null === (d = f[t]) || void 0 === d ? void 0 : d.toggleState) || RL({
                                accountType: g,
                                isAccountActive: y,
                                complianceDecision: b
                            })
                              , w = !!v
                              , S = !!b;
                            return it.state.update("authState", {
                                customerId: m,
                                accountType: g,
                                isAccountActive: y,
                                isAccountRiskSafe: w,
                                isAccountCompliant: S,
                                geoLocation: E
                            }),
                            it.set("showOptInToggle", _),
                            it.set("optInToggleDefaultState", A),
                            u
                        }(Object.assign({
                            email: t
                        }, !s && {
                            flow: "DISABLED"
                        }));
                        return it.state.isIdentityLoading = Boolean(e),
                        {
                            customerContextId: e
                        }
                    }
                    r.track({
                        event_name: "axo_user_lookup_start",
                        event_category: "consumer_lookup",
                        event_type: "im",
                        intent: "checkout",
                        transition_name: "lookup_started"
                    }),
                    er.setCheckpoint(er.CHECKPOINTS.EMAIL_LOOKUP_START);
                    const l = await async function({email: e, fraudnet: t}) {
                        try {
                            const n = mr({
                                cmid: it.get("cmid")
                            })
                              , r = await n.lookupEmail({
                                email: e
                            })
                              , {id: o="", type: i="", country: a="", ctxId: s="", c: l, r: c, status: d=0} = r;
                            return t && t(),
                            {
                                customerId: o,
                                ctxId: s,
                                accountType: i,
                                geoLocation: a.toUpperCase(),
                                isAccountActive: !!d,
                                riskDecision: c,
                                complianceDecision: l
                            }
                        } catch (e) {
                            const t = $t()
                              , n = e instanceof Response && `Lookup returned with status code ${e.status}` || e instanceof Error && e.message || btoa(JSON.stringify(e));
                            return t.track({
                                event_name: "axo_user_lookup_error_occurred",
                                event_category: "consumer_lookup",
                                event_type: "im",
                                int_error_code: "USER_LOOKUP_ERROR",
                                int_error_desc: n,
                                intent: "checkout",
                                transition_name: "lookup_internal_error"
                            }),
                            t.error("axo_sdk_identity_lookup_error", {
                                error: n
                            }),
                            Ht(),
                            {
                                customerId: "",
                                accountType: "",
                                geoLocation: "",
                                ctxId: "",
                                isAccountActive: !1
                            }
                        }
                    }({
                        email: t,
                        fraudnet: n
                    })
                      , {customerId: c, accountType: d, isAccountActive: u, riskDecision: p, complianceDecision: h, geoLocation: f} = l
                      , m = Ck(l, ["customerId", "accountType", "isAccountActive", "riskDecision", "complianceDecision", "geoLocation"]);
                    let {ctxId: g} = m;
                    const {showOptInToggle: y, optInToggleDefaultState: v} = RL({
                        accountType: d,
                        isAccountActive: u,
                        complianceDecision: h
                    })
                      , b = !!p
                      , E = !!h
                      , _ = !d && !c;
                    return it.state.update("authState", {
                        customerId: c,
                        accountType: d,
                        isAccountActive: u,
                        isAccountRiskSafe: b,
                        isAccountCompliant: E,
                        geoLocation: f
                    }),
                    it.set("showOptInToggle", y),
                    it.set("optInToggleDefaultState", v),
                    it.state.isIdentityLoading = Boolean(g),
                    r.track(Object.assign(Object.assign(Object.assign(Object.assign({
                        event_name: "axo_user_lookup_end"
                    }, void 0 !== h && {
                        c_decision: String(h)
                    }), {
                        event_category: "consumer_lookup",
                        event_type: "im",
                        intent: "checkout"
                    }), void 0 !== p && {
                        r_decision: String(p)
                    }), {
                        transition_name: "user_recognized"
                    })),
                    r.countMetric({
                        component: Mt,
                        action: Ft.LOOKUP,
                        status: vt.STATUS.OK
                    }),
                    r.timingMetric({
                        component: Mt,
                        action: Ft.LOOKUP,
                        timingValue: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.EMAIL_LOOKUP_START)
                    }),
                    _ && r.track({
                        event_name: "axo_fallback_occurred",
                        event_category: "consumer_lookup",
                        event_type: "im",
                        fallback_category: "to_normal_axo_guest",
                        fallback_reason: "unrecognized_user",
                        intent: "checkout"
                    }),
                    await Zr().fetchTreatments(),
                    {
                        customerContextId: g
                    }
                } catch (e) {
                    throw r.countMetric({
                        component: Mt,
                        action: Ft.LOOKUP,
                        status: vt.STATUS.ERROR
                    }),
                    ek(e),
                    Sk.createExternalError(Ak.IDENTITY_LOOKUP_FAILED)
                }
            }
            ,
            triggerAuthenticationFlow: async (e="", n={
                skipActiveSessionCheck: !1
            }) => {
                var i, a, s, l, c, d;
                try {
                    er.setCheckpoint(er.CHECKPOINTS.AUTH_FLOW_TRIGGERED);
                    if (!it.get("isFastlaneEnabled"))
                        return void Sk.triggerExternalWarning(pk.TRIGGER_AUTHENTICATION_FLOW_REQUIRES_FASTLANE_ENABLED);
                    it.state.isIdentityLoading = !0,
                    it.state.clearProfileData();
                    const e = it.get("authState");
                    if (e.optedOutOfOTP)
                        return it.state.isIdentityLoading = !1,
                        {
                            authenticationState: "canceled",
                            profileData: void 0
                        };
                    const u = null === (i = e.email) || void 0 === i ? void 0 : i.trim();
                    if (!n.skipActiveSessionCheck)
                        try {
                            const {profileData: e, authenticationState: t} = await o(u)
                              , n = it.get("fullProfile");
                            if ("succeeded" === t && (null == n ? void 0 : n.email) === u)
                                return it.state.isIdentityLoading = !1,
                                {
                                    authenticationState: t,
                                    profileData: e
                                }
                        } catch (e) {
                            r.track({
                                event_name: "axo_sdk_error",
                                int_error_code: e.code,
                                int_error_desc: e.toString()
                            })
                        }
                    bL();
                    const p = new vL
                      , {customerId: h, accountType: f="", isAccountActive: m, isAccountRiskSafe: g, isAccountCompliant: y} = e
                      , v = "C" === f
                      , b = "P" === f
                      , E = !!(b && g && y);
                    p.userId = h,
                    p.email = u,
                    p.accountType = f,
                    p.isXSellEligible = E;
                    const _ = !f && !h
                      , A = v && !m
                      , w = v && !g
                      , S = b && !g
                      , C = b && !y;
                    let O = "unknown";
                    if (C || A || _ || !g)
                        return A ? (it.set("showOptInToggle", !0),
                        it.set("optInToggleDefaultState", !1),
                        O = "deleted_user") : w ? (it.set("showOptInToggle", !1),
                        it.set("optInToggleDefaultState", !1),
                        O = "connect_buyer_risk_decline") : C ? (it.set("showOptInToggle", !1),
                        it.set("optInToggleDefaultState", !1),
                        O = "paypal_member_compliance_decline") : (_ || S) && (it.set("showOptInToggle", !0),
                        it.set("optInToggleDefaultState", !0),
                        O = _ ? "unrecognized_user" : "paypal_member_risk_decline"),
                        r.track({
                            event_name: "axo_fallback_occurred",
                            event_category: "consumer_lookup",
                            event_type: "im",
                            fallback_category: it.get("showOptInToggle") ? "to_normal_axo_guest" : "to_lower_axo_guest",
                            fallback_reason: O,
                            intent: "checkout"
                        }),
                        it.state.isIdentityLoading = !1,
                        {
                            authenticationState: "failed",
                            profileData: void 0
                        };
                    let x = {
                        authenticationState: "failed",
                        profileData: void 0
                    };
                    try {
                        const {authenticationState: e, verifyResponse: n} = await function(e) {
                            return new Promise(( (t, n) => {
                                try {
                                    e.addEventListener("closeAuth", (async e => {
                                        t(e.detail)
                                    }
                                    )),
                                    document.body.appendChild(e)
                                } catch (e) {
                                    n(e)
                                }
                            }
                            ))
                        }(p);
                        if ("succeeded" === e && n) {
                            const {customerProfileData: {id: o}, targetAuthAssertion: i} = n
                              , u = ML({
                                verifyResponse: n,
                                allowedBrands: it.get("allowedCardBrands"),
                                allowedLocationsMap: it.get("allowedLocations")
                            })
                              , {profileData: p, profileMetadata: h} = EL(u, t);
                            r.track({
                                event_name: "axo_default_checkout_info_loaded",
                                default_fi_id: h.selectedCardId,
                                default_fi_type: null === (l = null === (s = null === (a = p.card) || void 0 === a ? void 0 : a.paymentSource) || void 0 === s ? void 0 : s.card) || void 0 === l ? void 0 : l.brand,
                                default_wuser_address: h.selectedShippingAddressId,
                                event_type: "im",
                                intent: "checkout"
                            }),
                            it.state.update("authState", {
                                customerId: o,
                                targetAuthAssertion: i
                            }),
                            it.state.update("showOptInToggle", !1),
                            it.state.update("fullProfile", u),
                            it.state.update("cardSelectorState", {
                                selectedCardId: h.selectedCardId
                            }),
                            it.state.update("shippingAddressSelectorState", {
                                selectedAddressId: h.selectedShippingAddressId
                            }),
                            x = {
                                authenticationState: e,
                                profileData: p
                            },
                            r.track({
                                event_name: "axo_send_customer_profile_to_merchant",
                                addr_cnt: String(null === (c = u.shippingAddresses) || void 0 === c ? void 0 : c.length),
                                event_category: "default_checkout_load",
                                event_type: "im",
                                fi_cnt: String(null === (d = u.cards) || void 0 === d ? void 0 : d.length)
                            })
                        } else
                            r.track({
                                event_name: "axo_fallback_occurred",
                                event_category: "consumer_lookup",
                                event_type: "im",
                                fallback_category: it.get("showOptInToggle") ? "to_normal_axo_guest" : "to_lower_axo_guest",
                                fallback_reason: `authentication_${e}`,
                                intent: "checkout"
                            }),
                            r.countMetric({
                                component: Mt,
                                action: Ft.TRIGGER_AUTHENTICATION,
                                status: vt.STATUS.ERROR
                            }),
                            it.state.update("authState", {
                                customerId: "",
                                targetAuthAssertion: "",
                                userCanceled: !0,
                                isAccountActive: !1,
                                isAccountCompliant: !1,
                                isAccountRiskSafe: !1
                            }),
                            p.isXSellEligible = !1,
                            x = {
                                authenticationState: e,
                                profileData: void 0
                            };
                        p.remove(),
                        r.track({
                            event_name: "axo_identity_module_end",
                            duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.AUTH_FLOW_TRIGGERED),
                            event_category: "consumer_lookup",
                            event_type: "im"
                        })
                    } catch (e) {
                        r.track({
                            event_name: "axo_sdk_error",
                            int_error_code: e.code,
                            int_error_desc: e.toString()
                        })
                    }
                    return r.countMetric({
                        component: Mt,
                        action: Ft.TRIGGER_AUTHENTICATION,
                        status: vt.STATUS.OK
                    }),
                    it.state.isIdentityLoading = !1,
                    x
                } catch (e) {
                    throw ek(e),
                    Sk.createExternalError(Ak.IDENTITY_TRIGGER_AUTHENTICATION_FAILED)
                }
            }
            ,
            getActiveCustomerSession: o
        }
    }
    ;
    LR();
    const BL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.closeShippingAddressSelector = j(this, "closeShippingAddressSelector", 7),
            this.logger = $t(),
            this.generateTmpAddressID = () => `tmp-${Date.now()}`,
            this.handleAddressAdded = e => {
                const t = {
                    address: {
                        firstName: e.givenName,
                        lastName: e.surname,
                        streetAddress: e.addressLine1,
                        extendedAddress: e.addressLine2,
                        locality: e.adminArea2,
                        region: e.adminArea1,
                        postalCode: e.postalCode,
                        countryCodeAlpha2: e.country || "US",
                        company: e.businessName,
                        phone: e.phone
                    },
                    id: this.generateTmpAddressID(),
                    disabled: !1,
                    ordinal: 0
                }
                  , n = it.get("fullProfile");
                if (!n)
                    throw new Error("profileData is undefined");
                it.set("fullProfile", Object.assign(Object.assign({}, n), {
                    shippingAddresses: [PN(t), ...(null == n ? void 0 : n.shippingAddresses) || []]
                })),
                this.addressOptions = [t, ...this.addressOptions],
                this.closeShippingAddressSelector.emit({
                    selectedAddress: t
                }),
                this.isModalOpen = !1,
                this.logger.countMetric({
                    component: kt,
                    action: It.ADD,
                    status: vt.STATUS.OK
                }),
                this.logger.track({
                    event_name: "axo_shipping_address_end",
                    duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.SHIPPING_ADDRESS_FORM_RENDERED),
                    event_category: "shipping_address",
                    event_type: "im",
                    intent: "checkout",
                    transition_name: "shipping_address_changed_success"
                })
            }
            ,
            this.handleSelectAddress = e => {
                const t = e.detail.addressId
                  , n = this.addressOptions.find((e => e.id === t));
                this.logger.countMetric({
                    component: kt,
                    action: It.SELECT,
                    status: vt.STATUS.OK
                }),
                this.logger.track({
                    event_name: "axo_shipping_address_select",
                    address_id: t,
                    addr_indx: String(this.addressOptions.indexOf(n)),
                    event_category: "shipping_address",
                    event_type: "cl",
                    intent: "checkout"
                }),
                this.closeShippingAddressSelector.emit({
                    selectedAddress: n
                }),
                this.isModalOpen = !1
            }
            ,
            this.selectedIndex = 0,
            this.addressOptions = [],
            this.viewNav = void 0,
            this.isModalOpen = !0,
            this.addressService = void 0;
            this.el.shadowRoot.adoptedStyleSheets = [Rk, Lk]
        }
        persistAddressAdded(e) {
            this.addressService.createAddress(e).then(( () => {
                this.logger.countMetric({
                    component: kt,
                    action: It.PERSIST,
                    status: vt.STATUS.OK
                })
            }
            )).catch(( () => {
                this.logger.countMetric({
                    component: kt,
                    action: It.PERSIST,
                    status: vt.STATUS.ERROR
                })
            }
            ))
        }
        componentDidLoad() {
            this.logger.countMetric({
                component: kt,
                action: It.SHOW,
                status: vt.STATUS.OK
            }),
            this.addressService = (Ir || (Ir = {
                createAddress: kr
            }),
            Ir)
        }
        render() {
            return P(D, {
                key: "d1e25d5359ea071262f1d9bb56bfb40f61bcb483",
                "data-theme": tt
            }, P("axo-view-navigator", {
                key: "21fcf96380c3c0cd2cfa26260cb5530871b2332f",
                class: "axo-default-styles",
                isOpen: !0,
                viewHeader: Pr("address.selection.title"),
                handleModalClose: () => {
                    this.closeShippingAddressSelector.emit({})
                }
            }, P("axo-address-list", {
                key: "c2ca386fc01e5bb68143b53a238d8874064daf6b",
                class: "w-full box-border flex shrink-0 justify-center",
                addressType: "shipping",
                addresses: this.addressOptions,
                handleAddressAdded: this.handleAddressAdded,
                onAddressSelected: this.handleSelectAddress,
                selectedIndex: this.selectedIndex
            })))
        }
        get el() {
            return this
        }
    }
    , [1, "paypal-shipping-address-selector", {
        selectedIndex: [1026, "selected-index"],
        addressOptions: [16],
        viewNav: [32],
        isModalOpen: [32],
        addressService: [32]
    }]);
    const jL = BL
      , UL = function() {
        if ("undefined" == typeof customElements)
            return;
        ["paypal-shipping-address-selector", "axo-address-form", "axo-address-list", "axo-branding", "axo-button", "axo-country-flag", "axo-divider", "axo-icons", "axo-modal-sheet", "axo-radio-options", "axo-select-input", "axo-spinner-loader", "axo-text", "axo-text-input", "axo-view-navigator"].forEach((e => {
            switch (e) {
            case "paypal-shipping-address-selector":
                customElements.get(e) || customElements.define(e, BL);
                break;
            case "axo-address-form":
                customElements.get(e) || lR();
                break;
            case "axo-address-list":
                customElements.get(e) || tL();
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-button":
                customElements.get(e) || bI();
                break;
            case "axo-country-flag":
                customElements.get(e) || AI();
                break;
            case "axo-divider":
                customElements.get(e) || qP();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-modal-sheet":
                customElements.get(e) || KR();
                break;
            case "axo-radio-options":
                customElements.get(e) || QP();
                break;
            case "axo-select-input":
                customElements.get(e) || SI();
                break;
            case "axo-spinner-loader":
                customElements.get(e) || mI();
                break;
            case "axo-text":
                customElements.get(e) || gR();
                break;
            case "axo-text-input":
                customElements.get(e) || QI();
                break;
            case "axo-view-navigator":
                customElements.get(e) || aL()
            }
        }
        ))
    };
    function GL(e, t) {
        return e.filter((e => !e.disabled)).findIndex((e => e.id === t)) || -1
    }
    const $L = e => {
        const {platform: t=et.BT} = e
          , n = $t();
        return {
            showShippingAddressSelector: async () => {
                let e;
                try {
                    er.setCheckpoint(er.CHECKPOINTS.SHIPPING_ADDRESS_SELECTOR_INVOKED);
                    if (!it.get("isFastlaneEnabled"))
                        return void Sk.triggerExternalWarning(fk.SHOW_SHIPPING_ADDRESS_SELECTOR_REQUIRES_FASTLANE_ENABLED);
                    n.track({
                        event_name: "axo_shipping_address_preselection_change_pressed",
                        event_category: "shipping_address",
                        event_type: "cl",
                        intent: "checkout"
                    }),
                    UL();
                    const {shippingAddresses: r} = it.get("fullProfile")
                      , {selectedAddressId: o} = it.get("shippingAddressSelectorState")
                      , i = GL(r, o);
                    e = new jL,
                    e.addressOptions = r,
                    e.selectedIndex = -1 !== i ? i : 0,
                    document.body.appendChild(e);
                    const a = await function(e) {
                        return new Promise(( (t, n) => {
                            try {
                                e.addEventListener("closeShippingAddressSelector", (e => {
                                    const {detail: {selectedAddress: n}} = e;
                                    t(n || null)
                                }
                                ))
                            } catch (e) {
                                n(e)
                            }
                        }
                        ))
                    }(e)
                      , s = !!a && a.id !== o
                      , l = (null == a ? void 0 : a.address) || null;
                    it.state.update("shippingAddressSelectorState", {
                        selectedAddressId: (null == a ? void 0 : a.id) || null
                    });
                    let c = null;
                    if (l) {
                        const e = RN(l);
                        c = t === et.BT ? e.toBtSdkType() : e.toPpSdkType()
                    }
                    return {
                        selectionChanged: s,
                        selectedAddress: c
                    }
                } catch (e) {
                    throw ek(e),
                    Sk.createExternalError(Ak.SHOW_SHIPPING_ADDRESS_SELECTOR_GENERIC_ERROR)
                } finally {
                    null == e || e.remove()
                }
            }
            ,
            showCardSelector: async () => {
                let r;
                try {
                    er.setCheckpoint(er.CHECKPOINTS.CARD_SELECTOR_INVOKED);
                    if (!it.get("isFastlaneEnabled"))
                        return void Sk.triggerExternalWarning(fk.SHOW_CARD_SELECTOR_REQUIRES_FASTLANE_ENABLED);
                    n.track({
                        event_name: "axo_add_fi_selection_change_pressed",
                        event_category: "add_fi",
                        event_type: "cl",
                        intent: "checkout",
                        transition_name: "fi_change_pressed"
                    }),
                    cL();
                    const {cardOptions: o, btClient: i} = e
                      , {cards: a} = it.get("fullProfile");
                    let s = a.sort(( (e, t) => e.ordinal - t.ordinal));
                    (null == o ? void 0 : o.allowedBrands) && (s = Jr(it.state.allowedCardBrands, s));
                    const {selectedCardId: l} = it.get("cardSelectorState")
                      , c = GL(s, l);
                    r = new lL,
                    r.cardOptions = s,
                    r.btClient = i,
                    r.selectedIndex = -1 !== c ? c : 0,
                    document.body.appendChild(r);
                    const d = await function(e) {
                        return new Promise(( (t, n) => {
                            try {
                                e.addEventListener("closeCardSelector", (e => {
                                    const {detail: {selectedCard: n}} = e;
                                    t(n || null)
                                }
                                ))
                            } catch (e) {
                                n(e)
                            }
                        }
                        ))
                    }(r)
                      , u = !!d && d.id !== l
                      , p = (null == d ? void 0 : d.paymentToken) || null;
                    return p ? (it.state.update("cardSelectorState", {
                        selectedCardId: (null == d ? void 0 : d.id) || null
                    }),
                    {
                        selectionChanged: u,
                        selectedCard: _L(p, t) || null
                    }) : {
                        selectionChanged: u,
                        selectedCard: p
                    }
                } catch (e) {
                    throw n.countMetric({
                        component: _t,
                        action: At.SHOW,
                        status: vt.STATUS.ERROR
                    }),
                    ek(e),
                    Sk.createExternalError(Ak.SHOW_CARD_SELECTOR_GENERIC_ERROR)
                } finally {
                    null == r || r.remove()
                }
            }
        }
    }
      , VL = Me(class extends p {
        constructor() {
            super(),
            this.__registerHost(),
            this.__attachShadow(),
            this.renderConsent = () => {
                const e = it.get("optInToggleDefaultState");
                return P("axo-consent", {
                    ref: e => this.consentComponent = e,
                    theme: this.theme,
                    id: "paypal-consent-axo-consent",
                    prefilledPhone: this.prefilledPhone,
                    termsAndConditionsVersion: this.termsAndConditionsVersion,
                    initialToggleState: e
                })
            }
            ,
            this.styles = void 0,
            this.prefilledPhone = void 0,
            this.theme = tt,
            this.styleOptions = void 0,
            this.termsAndConditionsVersion = "1.0.0",
            this.privacyPolicyLink = "https://fastlane.paypal.com/us/terms",
            this.termsAndConditionsLink = "https://fastlane.paypal.com/us/privacy";
            this.el.shadowRoot.adoptedStyleSheets = [Rk]
        }
        connectedCallback() {
            if (this.styleOptions) {
                const e = Tk(this.styleOptions);
                Ik(e, this.el.tagName.toLowerCase())
            }
        }
        async getConsentDetails() {
            var e;
            if (!_R())
                return {
                    consentShown: !1
                };
            const {optIn: t=!1, phone: n, termsAndConditionsVersion: r=""} = await (null === (e = this.consentComponent) || void 0 === e ? void 0 : e.getConsentData()) || {};
            return {
                consentShown: !0,
                toggleState: t,
                phone: n,
                termsAndConditionsVersion: r
            }
        }
        async getRenderState() {
            const e = _R();
            return {
                showConsent: e,
                defaultToggleState: !!e || void 0,
                termsAndConditionsLink: e ? this.termsAndConditionsLink : void 0,
                privacyPolicyLink: e ? this.privacyPolicyLink : void 0,
                termsAndConditionsVersion: e ? this.termsAndConditionsVersion : void 0
            }
        }
        async updatePrefills(e) {
            const {phoneNumber: t} = e;
            t && (this.prefilledPhone = t)
        }
        render() {
            return P(D, {
                key: "10d396c574d93e53501b206c0834dd291e5d91c7",
                "data-theme": this.theme,
                class: "min-w-el"
            }, P("div", {
                key: "e3a435eb67527ea6b43bb772e41f6266d94d7285",
                class: "flex flex-col w-full"
            }, _R() && this.renderConsent()))
        }
        get el() {
            return this
        }
    }
    , [1, "paypal-consent", {
        styles: [8],
        prefilledPhone: [1, "prefilled-phone"],
        theme: [1],
        styleOptions: [16],
        termsAndConditionsVersion: [32],
        privacyPolicyLink: [32],
        termsAndConditionsLink: [32],
        getConsentDetails: [64],
        getRenderState: [64],
        updatePrefills: [64]
    }]);
    const HL = VL
      , KL = function() {
        if ("undefined" == typeof customElements)
            return;
        ["paypal-consent", "axo-branding", "axo-consent", "axo-expandable", "axo-icons", "axo-phone-field", "axo-text", "axo-text-input", "axo-toggle"].forEach((e => {
            switch (e) {
            case "paypal-consent":
                customElements.get(e) || customElements.define(e, VL);
                break;
            case "axo-branding":
                customElements.get(e) || hI();
                break;
            case "axo-consent":
                customElements.get(e) || ER();
                break;
            case "axo-expandable":
                customElements.get(e) || pR();
                break;
            case "axo-icons":
                customElements.get(e) || Xk();
                break;
            case "axo-phone-field":
                customElements.get(e) || fR();
                break;
            case "axo-text":
                customElements.get(e) || gR();
                break;
            case "axo-text-input":
                customElements.get(e) || QI();
                break;
            case "axo-toggle":
                customElements.get(e) || vR()
            }
        }
        ))
    }
      , zL = e => {
        var {styles: t} = e
          , n = Ck(e, ["styles"]);
        const r = $t();
        return async (e={}) => {
            try {
                let o;
                KL();
                const {fields: i} = e
                  , a = TP(i)
                  , s = dP(t, e.styles);
                r.info("axo_sdk_merchant_styles", {
                    mergedStyles: s
                });
                const l = pP(s)
                  , c = Object.assign(Object.assign({}, n), {
                    fieldOptions: a,
                    styleOptions: l,
                    theme: (null == s ? void 0 : s.theme) || tt
                })
                  , d = {
                    render: e => {
                        var t, n;
                        try {
                            const i = document.querySelector(e);
                            if (!it.get("isFastlaneEnabled"))
                                return Sk.triggerExternalWarning(wk.CONSENT_IS_DISABLED),
                                d;
                            if (!it.get("shouldExposeConsentComponent"))
                                return Sk.triggerExternalWarning(wk.CONSENT_RENDER_IS_DISABLED),
                                d;
                            if (o = new HL,
                            o.theme = c.theme,
                            c.styleOptions && (o.styleOptions = c.styleOptions),
                            (null === (n = null === (t = c.fieldOptions) || void 0 === t ? void 0 : t.phoneNumber) || void 0 === n ? void 0 : n.prefill) && (o.prefilledPhone = c.fieldOptions.phoneNumber.prefill),
                            !i)
                                throw YN;
                            return LN(i, o),
                            r.countMetric({
                                component: Lt,
                                action: Dt.RENDER,
                                status: vt.STATUS.OK
                            }),
                            d
                        } catch (e) {
                            let t;
                            if (r.countMetric({
                                component: Lt,
                                action: Dt.RENDER,
                                status: vt.STATUS.ERROR
                            }),
                            ek(e),
                            e === YN)
                                t = Ak.CONSENT_RENDER_MISSING_CONTAINER;
                            else
                                t = Ak.CONSENT_RENDER_FAILED;
                            throw Sk.createExternalError(t)
                        }
                    }
                    ,
                    getConsentDetails: async () => {
                        try {
                            if (!it.get("isFastlaneEnabled"))
                                return void Sk.triggerExternalWarning(wk.CONSENT_IS_DISABLED);
                            if (!it.get("shouldExposeConsentComponent"))
                                return void Sk.triggerExternalWarning(wk.CONSENT_GET_CONSENT_DETAILS_IS_DISABLED);
                            if (!o)
                                throw Sk.createExternalError(Ak.CONSENT_GET_CONSENT_DETAILS_MISSING_COMPONENT);
                            const e = await o.getConsentDetails();
                            return r.countMetric({
                                component: Lt,
                                action: Dt.GET_CONSENT_DETAILS,
                                status: vt.STATUS.OK
                            }),
                            e
                        } catch (e) {
                            let t;
                            if (ek(e),
                            r.countMetric({
                                component: Lt,
                                action: Dt.GET_CONSENT_DETAILS,
                                status: vt.STATUS.ERROR
                            }),
                            e.code === Ak.CONSENT_GET_CONSENT_DETAILS_MISSING_COMPONENT.code)
                                t = Ak.CONSENT_GET_CONSENT_DETAILS_MISSING_COMPONENT;
                            else
                                t = Ak.CONSENT_GET_CONSENT_DETAILS_FAILED;
                            throw Sk.createExternalError(t)
                        }
                    }
                    ,
                    getRenderState: async () => {
                        try {
                            if (!it.get("isFastlaneEnabled"))
                                return void Sk.triggerExternalWarning(wk.CONSENT_IS_DISABLED);
                            if (!it.get("shouldExposeConsentComponent"))
                                return void Sk.triggerExternalWarning(wk.CONSENT_GET_RENDER_STATE_IS_DISABLED);
                            o || (o = new HL);
                            const e = await o.getRenderState();
                            return r.countMetric({
                                component: Lt,
                                action: Dt.GET_RENDER_STATE,
                                status: vt.STATUS.OK
                            }),
                            e
                        } catch (e) {
                            throw r.countMetric({
                                component: Lt,
                                action: Dt.GET_RENDER_STATE,
                                status: vt.STATUS.ERROR
                            }),
                            ek(e),
                            Sk.createExternalError(Ak.CONSENT_GET_RENDER_STATE_FAILED)
                        }
                    }
                    ,
                    updatePrefills: async e => {
                        try {
                            if (!it.get("isFastlaneEnabled"))
                                return void Sk.triggerExternalWarning(wk.CONSENT_IS_DISABLED);
                            if (!it.get("shouldExposeConsentComponent"))
                                return void Sk.triggerExternalWarning(wk.CONSENT_UPDATE_PREFILLS_IS_DISABLED);
                            o ? await o.updatePrefills(e) : c.fieldOptions.phoneNumber = {
                                prefill: e.phoneNumber
                            },
                            r.countMetric({
                                component: Lt,
                                action: Dt.UPDATE_PREFILLS,
                                status: vt.STATUS.OK
                            })
                        } catch (e) {
                            throw ek(e),
                            r.countMetric({
                                component: Lt,
                                action: Dt.UPDATE_PREFILLS,
                                status: vt.STATUS.ERROR
                            }),
                            Sk.createExternalError(Ak.PAYMENT_UPDATE_PREFILLS_FAILED)
                        }
                    }
                };
                return r.countMetric({
                    component: Lt,
                    action: Dt.CREATE,
                    status: vt.STATUS.OK
                }),
                d
            } catch (e) {
                throw r.countMetric({
                    component: Lt,
                    action: Dt.CREATE,
                    status: vt.STATUS.ERROR
                }),
                ek(e),
                Sk.createExternalError(Ak.CONSENT_INIT_FAILED)
            }
        }
    }
    ;
    function WL(e) {
        er.setCheckpoint(er.CHECKPOINTS.GET_BT_CLIENT_CONFIGURATION_TRIGGERED);
        const t = e.getConfiguration();
        return $t().track({
            event_name: "axo_get_bt_client_configuration",
            duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.CHECK_FASTLANE_ENABLED_TRIGGERED),
            event_type: "im"
        }),
        t
    }
    function YL(e) {
        return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
    }
    var XL = {
        exports: {}
    };
    var ZL = {
        MAX_LENGTH: 256,
        MAX_SAFE_COMPONENT_LENGTH: 16,
        MAX_SAFE_BUILD_LENGTH: 250,
        MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991,
        RELEASE_TYPES: ["major", "premajor", "minor", "preminor", "patch", "prepatch", "prerelease"],
        SEMVER_SPEC_VERSION: "2.0.0",
        FLAG_INCLUDE_PRERELEASE: 1,
        FLAG_LOOSE: 2
    };
    YL(ZL);
    var qL = "object" == typeof process && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...e) => console.error("SEMVER", ...e) : () => {}
    ;
    YL(qL),
    function(e, t) {
        const {MAX_SAFE_COMPONENT_LENGTH: n, MAX_SAFE_BUILD_LENGTH: r, MAX_LENGTH: o} = ZL
          , i = qL
          , a = (t = e.exports = {}).re = []
          , s = t.safeRe = []
          , l = t.src = []
          , c = t.t = {};
        let d = 0;
        const u = "[a-zA-Z0-9-]"
          , p = [["\\s", 1], ["\\d", o], [u, r]]
          , h = (e, t, n) => {
            const r = (e => {
                for (const [t,n] of p)
                    e = e.split(`${t}*`).join(`${t}{0,${n}}`).split(`${t}+`).join(`${t}{1,${n}}`);
                return e
            }
            )(t)
              , o = d++;
            i(e, o, t),
            c[e] = o,
            l[o] = t,
            a[o] = new RegExp(t,n ? "g" : void 0),
            s[o] = new RegExp(r,n ? "g" : void 0)
        }
        ;
        h("NUMERICIDENTIFIER", "0|[1-9]\\d*"),
        h("NUMERICIDENTIFIERLOOSE", "\\d+"),
        h("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${u}*`),
        h("MAINVERSION", `(${l[c.NUMERICIDENTIFIER]})\\.(${l[c.NUMERICIDENTIFIER]})\\.(${l[c.NUMERICIDENTIFIER]})`),
        h("MAINVERSIONLOOSE", `(${l[c.NUMERICIDENTIFIERLOOSE]})\\.(${l[c.NUMERICIDENTIFIERLOOSE]})\\.(${l[c.NUMERICIDENTIFIERLOOSE]})`),
        h("PRERELEASEIDENTIFIER", `(?:${l[c.NUMERICIDENTIFIER]}|${l[c.NONNUMERICIDENTIFIER]})`),
        h("PRERELEASEIDENTIFIERLOOSE", `(?:${l[c.NUMERICIDENTIFIERLOOSE]}|${l[c.NONNUMERICIDENTIFIER]})`),
        h("PRERELEASE", `(?:-(${l[c.PRERELEASEIDENTIFIER]}(?:\\.${l[c.PRERELEASEIDENTIFIER]})*))`),
        h("PRERELEASELOOSE", `(?:-?(${l[c.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${l[c.PRERELEASEIDENTIFIERLOOSE]})*))`),
        h("BUILDIDENTIFIER", `${u}+`),
        h("BUILD", `(?:\\+(${l[c.BUILDIDENTIFIER]}(?:\\.${l[c.BUILDIDENTIFIER]})*))`),
        h("FULLPLAIN", `v?${l[c.MAINVERSION]}${l[c.PRERELEASE]}?${l[c.BUILD]}?`),
        h("FULL", `^${l[c.FULLPLAIN]}$`),
        h("LOOSEPLAIN", `[v=\\s]*${l[c.MAINVERSIONLOOSE]}${l[c.PRERELEASELOOSE]}?${l[c.BUILD]}?`),
        h("LOOSE", `^${l[c.LOOSEPLAIN]}$`),
        h("GTLT", "((?:<|>)?=?)"),
        h("XRANGEIDENTIFIERLOOSE", `${l[c.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),
        h("XRANGEIDENTIFIER", `${l[c.NUMERICIDENTIFIER]}|x|X|\\*`),
        h("XRANGEPLAIN", `[v=\\s]*(${l[c.XRANGEIDENTIFIER]})(?:\\.(${l[c.XRANGEIDENTIFIER]})(?:\\.(${l[c.XRANGEIDENTIFIER]})(?:${l[c.PRERELEASE]})?${l[c.BUILD]}?)?)?`),
        h("XRANGEPLAINLOOSE", `[v=\\s]*(${l[c.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[c.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[c.XRANGEIDENTIFIERLOOSE]})(?:${l[c.PRERELEASELOOSE]})?${l[c.BUILD]}?)?)?`),
        h("XRANGE", `^${l[c.GTLT]}\\s*${l[c.XRANGEPLAIN]}$`),
        h("XRANGELOOSE", `^${l[c.GTLT]}\\s*${l[c.XRANGEPLAINLOOSE]}$`),
        h("COERCEPLAIN", `(^|[^\\d])(\\d{1,${n}})(?:\\.(\\d{1,${n}}))?(?:\\.(\\d{1,${n}}))?`),
        h("COERCE", `${l[c.COERCEPLAIN]}(?:$|[^\\d])`),
        h("COERCEFULL", l[c.COERCEPLAIN] + `(?:${l[c.PRERELEASE]})?` + `(?:${l[c.BUILD]})?(?:$|[^\\d])`),
        h("COERCERTL", l[c.COERCE], !0),
        h("COERCERTLFULL", l[c.COERCEFULL], !0),
        h("LONETILDE", "(?:~>?)"),
        h("TILDETRIM", `(\\s*)${l[c.LONETILDE]}\\s+`, !0),
        t.tildeTrimReplace = "$1~",
        h("TILDE", `^${l[c.LONETILDE]}${l[c.XRANGEPLAIN]}$`),
        h("TILDELOOSE", `^${l[c.LONETILDE]}${l[c.XRANGEPLAINLOOSE]}$`),
        h("LONECARET", "(?:\\^)"),
        h("CARETTRIM", `(\\s*)${l[c.LONECARET]}\\s+`, !0),
        t.caretTrimReplace = "$1^",
        h("CARET", `^${l[c.LONECARET]}${l[c.XRANGEPLAIN]}$`),
        h("CARETLOOSE", `^${l[c.LONECARET]}${l[c.XRANGEPLAINLOOSE]}$`),
        h("COMPARATORLOOSE", `^${l[c.GTLT]}\\s*(${l[c.LOOSEPLAIN]})$|^$`),
        h("COMPARATOR", `^${l[c.GTLT]}\\s*(${l[c.FULLPLAIN]})$|^$`),
        h("COMPARATORTRIM", `(\\s*)${l[c.GTLT]}\\s*(${l[c.LOOSEPLAIN]}|${l[c.XRANGEPLAIN]})`, !0),
        t.comparatorTrimReplace = "$1$2$3",
        h("HYPHENRANGE", `^\\s*(${l[c.XRANGEPLAIN]})\\s+-\\s+(${l[c.XRANGEPLAIN]})\\s*$`),
        h("HYPHENRANGELOOSE", `^\\s*(${l[c.XRANGEPLAINLOOSE]})\\s+-\\s+(${l[c.XRANGEPLAINLOOSE]})\\s*$`),
        h("STAR", "(<|>)?=?\\s*\\*"),
        h("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$"),
        h("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$")
    }(XL, XL.exports);
    var JL = XL.exports;
    YL(JL);
    const QL = Object.freeze({
        loose: !0
    })
      , eD = Object.freeze({});
    var tD = e => e ? "object" != typeof e ? QL : e : eD;
    YL(tD);
    const nD = /^[0-9]+$/
      , rD = (e, t) => {
        const n = nD.test(e)
          , r = nD.test(t);
        return n && r && (e = +e,
        t = +t),
        e === t ? 0 : n && !r ? -1 : r && !n ? 1 : e < t ? -1 : 1
    }
    ;
    var oD = {
        compareIdentifiers: rD,
        rcompareIdentifiers: (e, t) => rD(t, e)
    };
    YL(oD);
    const iD = qL
      , {MAX_LENGTH: aD, MAX_SAFE_INTEGER: sD} = ZL
      , {safeRe: lD, t: cD} = JL
      , dD = tD
      , {compareIdentifiers: uD} = oD;
    var pD = class e {
        constructor(t, n) {
            if (n = dD(n),
            t instanceof e) {
                if (t.loose === !!n.loose && t.includePrerelease === !!n.includePrerelease)
                    return t;
                t = t.version
            } else if ("string" != typeof t)
                throw new TypeError(`Invalid version. Must be a string. Got type "${typeof t}".`);
            if (t.length > aD)
                throw new TypeError(`version is longer than ${aD} characters`);
            iD("SemVer", t, n),
            this.options = n,
            this.loose = !!n.loose,
            this.includePrerelease = !!n.includePrerelease;
            const r = t.trim().match(n.loose ? lD[cD.LOOSE] : lD[cD.FULL]);
            if (!r)
                throw new TypeError(`Invalid Version: ${t}`);
            if (this.raw = t,
            this.major = +r[1],
            this.minor = +r[2],
            this.patch = +r[3],
            this.major > sD || this.major < 0)
                throw new TypeError("Invalid major version");
            if (this.minor > sD || this.minor < 0)
                throw new TypeError("Invalid minor version");
            if (this.patch > sD || this.patch < 0)
                throw new TypeError("Invalid patch version");
            r[4] ? this.prerelease = r[4].split(".").map((e => {
                if (/^[0-9]+$/.test(e)) {
                    const t = +e;
                    if (t >= 0 && t < sD)
                        return t
                }
                return e
            }
            )) : this.prerelease = [],
            this.build = r[5] ? r[5].split(".") : [],
            this.format()
        }
        format() {
            return this.version = `${this.major}.${this.minor}.${this.patch}`,
            this.prerelease.length && (this.version += `-${this.prerelease.join(".")}`),
            this.version
        }
        toString() {
            return this.version
        }
        compare(t) {
            if (iD("SemVer.compare", this.version, this.options, t),
            !(t instanceof e)) {
                if ("string" == typeof t && t === this.version)
                    return 0;
                t = new e(t,this.options)
            }
            return t.version === this.version ? 0 : this.compareMain(t) || this.comparePre(t)
        }
        compareMain(t) {
            return t instanceof e || (t = new e(t,this.options)),
            uD(this.major, t.major) || uD(this.minor, t.minor) || uD(this.patch, t.patch)
        }
        comparePre(t) {
            if (t instanceof e || (t = new e(t,this.options)),
            this.prerelease.length && !t.prerelease.length)
                return -1;
            if (!this.prerelease.length && t.prerelease.length)
                return 1;
            if (!this.prerelease.length && !t.prerelease.length)
                return 0;
            let n = 0;
            do {
                const e = this.prerelease[n]
                  , r = t.prerelease[n];
                if (iD("prerelease compare", n, e, r),
                void 0 === e && void 0 === r)
                    return 0;
                if (void 0 === r)
                    return 1;
                if (void 0 === e)
                    return -1;
                if (e !== r)
                    return uD(e, r)
            } while (++n)
        }
        compareBuild(t) {
            t instanceof e || (t = new e(t,this.options));
            let n = 0;
            do {
                const e = this.build[n]
                  , r = t.build[n];
                if (iD("build compare", n, e, r),
                void 0 === e && void 0 === r)
                    return 0;
                if (void 0 === r)
                    return 1;
                if (void 0 === e)
                    return -1;
                if (e !== r)
                    return uD(e, r)
            } while (++n)
        }
        inc(e, t, n) {
            switch (e) {
            case "premajor":
                this.prerelease.length = 0,
                this.patch = 0,
                this.minor = 0,
                this.major++,
                this.inc("pre", t, n);
                break;
            case "preminor":
                this.prerelease.length = 0,
                this.patch = 0,
                this.minor++,
                this.inc("pre", t, n);
                break;
            case "prepatch":
                this.prerelease.length = 0,
                this.inc("patch", t, n),
                this.inc("pre", t, n);
                break;
            case "prerelease":
                0 === this.prerelease.length && this.inc("patch", t, n),
                this.inc("pre", t, n);
                break;
            case "major":
                0 === this.minor && 0 === this.patch && 0 !== this.prerelease.length || this.major++,
                this.minor = 0,
                this.patch = 0,
                this.prerelease = [];
                break;
            case "minor":
                0 === this.patch && 0 !== this.prerelease.length || this.minor++,
                this.patch = 0,
                this.prerelease = [];
                break;
            case "patch":
                0 === this.prerelease.length && this.patch++,
                this.prerelease = [];
                break;
            case "pre":
                {
                    const e = Number(n) ? 1 : 0;
                    if (!t && !1 === n)
                        throw new Error("invalid increment argument: identifier is empty");
                    if (0 === this.prerelease.length)
                        this.prerelease = [e];
                    else {
                        let r = this.prerelease.length;
                        for (; --r >= 0; )
                            "number" == typeof this.prerelease[r] && (this.prerelease[r]++,
                            r = -2);
                        if (-1 === r) {
                            if (t === this.prerelease.join(".") && !1 === n)
                                throw new Error("invalid increment argument: identifier already exists");
                            this.prerelease.push(e)
                        }
                    }
                    if (t) {
                        let r = [t, e];
                        !1 === n && (r = [t]),
                        0 === uD(this.prerelease[0], t) ? isNaN(this.prerelease[1]) && (this.prerelease = r) : this.prerelease = r
                    }
                    break
                }
            default:
                throw new Error(`invalid increment argument: ${e}`)
            }
            return this.raw = this.format(),
            this.build.length && (this.raw += `+${this.build.join(".")}`),
            this
        }
    }
    ;
    YL(pD);
    const hD = pD;
    var fD = (e, t, n=!1) => {
        if (e instanceof hD)
            return e;
        try {
            return new hD(e,t)
        } catch (e) {
            if (!n)
                return null;
            throw e
        }
    }
    ;
    YL(fD);
    const mD = fD;
    var gD = (e, t) => {
        const n = mD(e, t);
        return n ? n.version : null
    }
    ;
    YL(gD);
    const yD = fD;
    var vD = (e, t) => {
        const n = yD(e.trim().replace(/^[=v]+/, ""), t);
        return n ? n.version : null
    }
    ;
    YL(vD);
    const bD = pD;
    var ED = (e, t, n, r, o) => {
        "string" == typeof n && (o = r,
        r = n,
        n = void 0);
        try {
            return new bD(e instanceof bD ? e.version : e,n).inc(t, r, o).version
        } catch (e) {
            return null
        }
    }
    ;
    YL(ED);
    const _D = fD;
    var AD = (e, t) => {
        const n = _D(e, null, !0)
          , r = _D(t, null, !0)
          , o = n.compare(r);
        if (0 === o)
            return null;
        const i = o > 0
          , a = i ? n : r
          , s = i ? r : n
          , l = !!a.prerelease.length;
        if (!!s.prerelease.length && !l)
            return s.patch || s.minor ? a.patch ? "patch" : a.minor ? "minor" : "major" : "major";
        const c = l ? "pre" : "";
        return n.major !== r.major ? c + "major" : n.minor !== r.minor ? c + "minor" : n.patch !== r.patch ? c + "patch" : "prerelease"
    }
    ;
    YL(AD);
    const wD = pD;
    var SD = (e, t) => new wD(e,t).major;
    YL(SD);
    const CD = pD;
    var OD = (e, t) => new CD(e,t).minor;
    YL(OD);
    const xD = pD;
    var TD = (e, t) => new xD(e,t).patch;
    YL(TD);
    const ND = fD;
    var kD = (e, t) => {
        const n = ND(e, t);
        return n && n.prerelease.length ? n.prerelease : null
    }
    ;
    YL(kD);
    const ID = pD;
    var RD = (e, t, n) => new ID(e,n).compare(new ID(t,n));
    YL(RD);
    const PD = RD;
    var LD = (e, t, n) => PD(t, e, n);
    YL(LD);
    const DD = RD;
    var MD = (e, t) => DD(e, t, !0);
    YL(MD);
    const FD = pD;
    var BD = (e, t, n) => {
        const r = new FD(e,n)
          , o = new FD(t,n);
        return r.compare(o) || r.compareBuild(o)
    }
    ;
    YL(BD);
    const jD = BD;
    var UD = (e, t) => e.sort(( (e, n) => jD(e, n, t)));
    YL(UD);
    const GD = BD;
    var $D = (e, t) => e.sort(( (e, n) => GD(n, e, t)));
    YL($D);
    const VD = RD;
    var HD = (e, t, n) => VD(e, t, n) > 0;
    YL(HD);
    const KD = RD;
    var zD = (e, t, n) => KD(e, t, n) < 0;
    YL(zD);
    const WD = RD;
    var YD = (e, t, n) => 0 === WD(e, t, n);
    YL(YD);
    const XD = RD;
    var ZD = (e, t, n) => 0 !== XD(e, t, n);
    YL(ZD);
    const qD = RD;
    var JD = (e, t, n) => qD(e, t, n) >= 0;
    YL(JD);
    const QD = RD;
    var eM = (e, t, n) => QD(e, t, n) <= 0;
    YL(eM);
    const tM = YD
      , nM = ZD
      , rM = HD
      , oM = JD
      , iM = zD
      , aM = eM;
    var sM = (e, t, n, r) => {
        switch (t) {
        case "===":
            return "object" == typeof e && (e = e.version),
            "object" == typeof n && (n = n.version),
            e === n;
        case "!==":
            return "object" == typeof e && (e = e.version),
            "object" == typeof n && (n = n.version),
            e !== n;
        case "":
        case "=":
        case "==":
            return tM(e, n, r);
        case "!=":
            return nM(e, n, r);
        case ">":
            return rM(e, n, r);
        case ">=":
            return oM(e, n, r);
        case "<":
            return iM(e, n, r);
        case "<=":
            return aM(e, n, r);
        default:
            throw new TypeError(`Invalid operator: ${t}`)
        }
    }
    ;
    YL(sM);
    const lM = pD
      , cM = fD
      , {safeRe: dM, t: uM} = JL;
    var pM = (e, t) => {
        if (e instanceof lM)
            return e;
        if ("number" == typeof e && (e = String(e)),
        "string" != typeof e)
            return null;
        let n = null;
        if ((t = t || {}).rtl) {
            const r = t.includePrerelease ? dM[uM.COERCERTLFULL] : dM[uM.COERCERTL];
            let o;
            for (; (o = r.exec(e)) && (!n || n.index + n[0].length !== e.length); )
                n && o.index + o[0].length === n.index + n[0].length || (n = o),
                r.lastIndex = o.index + o[1].length + o[2].length;
            r.lastIndex = -1
        } else
            n = e.match(t.includePrerelease ? dM[uM.COERCEFULL] : dM[uM.COERCE]);
        if (null === n)
            return null;
        const r = n[2]
          , o = n[3] || "0"
          , i = n[4] || "0"
          , a = t.includePrerelease && n[5] ? `-${n[5]}` : ""
          , s = t.includePrerelease && n[6] ? `+${n[6]}` : "";
        return cM(`${r}.${o}.${i}${a}${s}`, t)
    }
    ;
    YL(pM);
    var hM, fM, mM, gM, yM = class {
        constructor() {
            this.max = 1e3,
            this.map = new Map
        }
        get(e) {
            const t = this.map.get(e);
            return void 0 === t ? void 0 : (this.map.delete(e),
            this.map.set(e, t),
            t)
        }
        delete(e) {
            return this.map.delete(e)
        }
        set(e, t) {
            if (!this.delete(e) && void 0 !== t) {
                if (this.map.size >= this.max) {
                    const e = this.map.keys().next().value;
                    this.delete(e)
                }
                this.map.set(e, t)
            }
            return this
        }
    }
    ;
    function vM() {
        if (fM)
            return hM;
        fM = 1;
        const e = /\s+/g;
        class t {
            constructor(n, i) {
                if (i = r(i),
                n instanceof t)
                    return n.loose === !!i.loose && n.includePrerelease === !!i.includePrerelease ? n : new t(n.raw,i);
                if (n instanceof o)
                    return this.raw = n.value,
                    this.set = [[n]],
                    this.formatted = void 0,
                    this;
                if (this.options = i,
                this.loose = !!i.loose,
                this.includePrerelease = !!i.includePrerelease,
                this.raw = n.trim().replace(e, " "),
                this.set = this.raw.split("||").map((e => this.parseRange(e.trim()))).filter((e => e.length)),
                !this.set.length)
                    throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
                if (this.set.length > 1) {
                    const e = this.set[0];
                    if (this.set = this.set.filter((e => !f(e[0]))),
                    0 === this.set.length)
                        this.set = [e];
                    else if (this.set.length > 1)
                        for (const e of this.set)
                            if (1 === e.length && m(e[0])) {
                                this.set = [e];
                                break
                            }
                }
                this.formatted = void 0
            }
            get range() {
                if (void 0 === this.formatted) {
                    this.formatted = "";
                    for (let e = 0; e < this.set.length; e++) {
                        e > 0 && (this.formatted += "||");
                        const t = this.set[e];
                        for (let e = 0; e < t.length; e++)
                            e > 0 && (this.formatted += " "),
                            this.formatted += t[e].toString().trim()
                    }
                }
                return this.formatted
            }
            format() {
                return this.range
            }
            toString() {
                return this.range
            }
            parseRange(e) {
                const t = ((this.options.includePrerelease && p) | (this.options.loose && h)) + ":" + e
                  , r = n.get(t);
                if (r)
                    return r;
                const a = this.options.loose
                  , m = a ? s[l.HYPHENRANGELOOSE] : s[l.HYPHENRANGE];
                e = e.replace(m, x(this.options.includePrerelease)),
                i("hyphen replace", e),
                e = e.replace(s[l.COMPARATORTRIM], c),
                i("comparator trim", e),
                e = e.replace(s[l.TILDETRIM], d),
                i("tilde trim", e),
                e = e.replace(s[l.CARETTRIM], u),
                i("caret trim", e);
                let g = e.split(" ").map((e => y(e, this.options))).join(" ").split(/\s+/).map((e => O(e, this.options)));
                a && (g = g.filter((e => (i("loose invalid filter", e, this.options),
                !!e.match(s[l.COMPARATORLOOSE]))))),
                i("range list", g);
                const v = new Map
                  , b = g.map((e => new o(e,this.options)));
                for (const e of b) {
                    if (f(e))
                        return [e];
                    v.set(e.value, e)
                }
                v.size > 1 && v.has("") && v.delete("");
                const E = [...v.values()];
                return n.set(t, E),
                E
            }
            intersects(e, n) {
                if (!(e instanceof t))
                    throw new TypeError("a Range is required");
                return this.set.some((t => g(t, n) && e.set.some((e => g(e, n) && t.every((t => e.every((e => t.intersects(e, n)))))))))
            }
            test(e) {
                if (!e)
                    return !1;
                if ("string" == typeof e)
                    try {
                        e = new a(e,this.options)
                    } catch (e) {
                        return !1
                    }
                for (let t = 0; t < this.set.length; t++)
                    if (T(this.set[t], e, this.options))
                        return !0;
                return !1
            }
        }
        hM = t;
        const n = new yM
          , r = tD
          , o = bM()
          , i = qL
          , a = pD
          , {safeRe: s, t: l, comparatorTrimReplace: c, tildeTrimReplace: d, caretTrimReplace: u} = JL
          , {FLAG_INCLUDE_PRERELEASE: p, FLAG_LOOSE: h} = ZL
          , f = e => "<0.0.0-0" === e.value
          , m = e => "" === e.value
          , g = (e, t) => {
            let n = !0;
            const r = e.slice();
            let o = r.pop();
            for (; n && r.length; )
                n = r.every((e => o.intersects(e, t))),
                o = r.pop();
            return n
        }
          , y = (e, t) => (i("comp", e, t),
        e = _(e, t),
        i("caret", e),
        e = b(e, t),
        i("tildes", e),
        e = w(e, t),
        i("xrange", e),
        e = C(e, t),
        i("stars", e),
        e)
          , v = e => !e || "x" === e.toLowerCase() || "*" === e
          , b = (e, t) => e.trim().split(/\s+/).map((e => E(e, t))).join(" ")
          , E = (e, t) => {
            const n = t.loose ? s[l.TILDELOOSE] : s[l.TILDE];
            return e.replace(n, ( (t, n, r, o, a) => {
                let s;
                return i("tilde", e, t, n, r, o, a),
                v(n) ? s = "" : v(r) ? s = `>=${n}.0.0 <${+n + 1}.0.0-0` : v(o) ? s = `>=${n}.${r}.0 <${n}.${+r + 1}.0-0` : a ? (i("replaceTilde pr", a),
                s = `>=${n}.${r}.${o}-${a} <${n}.${+r + 1}.0-0`) : s = `>=${n}.${r}.${o} <${n}.${+r + 1}.0-0`,
                i("tilde return", s),
                s
            }
            ))
        }
          , _ = (e, t) => e.trim().split(/\s+/).map((e => A(e, t))).join(" ")
          , A = (e, t) => {
            i("caret", e, t);
            const n = t.loose ? s[l.CARETLOOSE] : s[l.CARET]
              , r = t.includePrerelease ? "-0" : "";
            return e.replace(n, ( (t, n, o, a, s) => {
                let l;
                return i("caret", e, t, n, o, a, s),
                v(n) ? l = "" : v(o) ? l = `>=${n}.0.0${r} <${+n + 1}.0.0-0` : v(a) ? l = "0" === n ? `>=${n}.${o}.0${r} <${n}.${+o + 1}.0-0` : `>=${n}.${o}.0${r} <${+n + 1}.0.0-0` : s ? (i("replaceCaret pr", s),
                l = "0" === n ? "0" === o ? `>=${n}.${o}.${a}-${s} <${n}.${o}.${+a + 1}-0` : `>=${n}.${o}.${a}-${s} <${n}.${+o + 1}.0-0` : `>=${n}.${o}.${a}-${s} <${+n + 1}.0.0-0`) : (i("no pr"),
                l = "0" === n ? "0" === o ? `>=${n}.${o}.${a}${r} <${n}.${o}.${+a + 1}-0` : `>=${n}.${o}.${a}${r} <${n}.${+o + 1}.0-0` : `>=${n}.${o}.${a} <${+n + 1}.0.0-0`),
                i("caret return", l),
                l
            }
            ))
        }
          , w = (e, t) => (i("replaceXRanges", e, t),
        e.split(/\s+/).map((e => S(e, t))).join(" "))
          , S = (e, t) => {
            e = e.trim();
            const n = t.loose ? s[l.XRANGELOOSE] : s[l.XRANGE];
            return e.replace(n, ( (n, r, o, a, s, l) => {
                i("xRange", e, n, r, o, a, s, l);
                const c = v(o)
                  , d = c || v(a)
                  , u = d || v(s)
                  , p = u;
                return "=" === r && p && (r = ""),
                l = t.includePrerelease ? "-0" : "",
                c ? n = ">" === r || "<" === r ? "<0.0.0-0" : "*" : r && p ? (d && (a = 0),
                s = 0,
                ">" === r ? (r = ">=",
                d ? (o = +o + 1,
                a = 0,
                s = 0) : (a = +a + 1,
                s = 0)) : "<=" === r && (r = "<",
                d ? o = +o + 1 : a = +a + 1),
                "<" === r && (l = "-0"),
                n = `${r + o}.${a}.${s}${l}`) : d ? n = `>=${o}.0.0${l} <${+o + 1}.0.0-0` : u && (n = `>=${o}.${a}.0${l} <${o}.${+a + 1}.0-0`),
                i("xRange return", n),
                n
            }
            ))
        }
          , C = (e, t) => (i("replaceStars", e, t),
        e.trim().replace(s[l.STAR], ""))
          , O = (e, t) => (i("replaceGTE0", e, t),
        e.trim().replace(s[t.includePrerelease ? l.GTE0PRE : l.GTE0], ""))
          , x = e => (t, n, r, o, i, a, s, l, c, d, u, p) => `${n = v(r) ? "" : v(o) ? `>=${r}.0.0${e ? "-0" : ""}` : v(i) ? `>=${r}.${o}.0${e ? "-0" : ""}` : a ? `>=${n}` : `>=${n}${e ? "-0" : ""}`} ${l = v(c) ? "" : v(d) ? `<${+c + 1}.0.0-0` : v(u) ? `<${c}.${+d + 1}.0-0` : p ? `<=${c}.${d}.${u}-${p}` : e ? `<${c}.${d}.${+u + 1}-0` : `<=${l}`}`.trim()
          , T = (e, t, n) => {
            for (let n = 0; n < e.length; n++)
                if (!e[n].test(t))
                    return !1;
            if (t.prerelease.length && !n.includePrerelease) {
                for (let n = 0; n < e.length; n++)
                    if (i(e[n].semver),
                    e[n].semver !== o.ANY && e[n].semver.prerelease.length > 0) {
                        const r = e[n].semver;
                        if (r.major === t.major && r.minor === t.minor && r.patch === t.patch)
                            return !0
                    }
                return !1
            }
            return !0
        }
        ;
        return hM
    }
    function bM() {
        if (gM)
            return mM;
        gM = 1;
        const e = Symbol("SemVer ANY");
        class t {
            static get ANY() {
                return e
            }
            constructor(r, o) {
                if (o = n(o),
                r instanceof t) {
                    if (r.loose === !!o.loose)
                        return r;
                    r = r.value
                }
                r = r.trim().split(/\s+/).join(" "),
                a("comparator", r, o),
                this.options = o,
                this.loose = !!o.loose,
                this.parse(r),
                this.semver === e ? this.value = "" : this.value = this.operator + this.semver.version,
                a("comp", this)
            }
            parse(t) {
                const n = this.options.loose ? r[o.COMPARATORLOOSE] : r[o.COMPARATOR]
                  , i = t.match(n);
                if (!i)
                    throw new TypeError(`Invalid comparator: ${t}`);
                this.operator = void 0 !== i[1] ? i[1] : "",
                "=" === this.operator && (this.operator = ""),
                i[2] ? this.semver = new s(i[2],this.options.loose) : this.semver = e
            }
            toString() {
                return this.value
            }
            test(t) {
                if (a("Comparator.test", t, this.options.loose),
                this.semver === e || t === e)
                    return !0;
                if ("string" == typeof t)
                    try {
                        t = new s(t,this.options)
                    } catch (e) {
                        return !1
                    }
                return i(t, this.operator, this.semver, this.options)
            }
            intersects(e, r) {
                if (!(e instanceof t))
                    throw new TypeError("a Comparator is required");
                return "" === this.operator ? "" === this.value || new l(e.value,r).test(this.value) : "" === e.operator ? "" === e.value || new l(this.value,r).test(e.semver) : (!(r = n(r)).includePrerelease || "<0.0.0-0" !== this.value && "<0.0.0-0" !== e.value) && (!(!r.includePrerelease && (this.value.startsWith("<0.0.0") || e.value.startsWith("<0.0.0"))) && (!(!this.operator.startsWith(">") || !e.operator.startsWith(">")) || (!(!this.operator.startsWith("<") || !e.operator.startsWith("<")) || (!(this.semver.version !== e.semver.version || !this.operator.includes("=") || !e.operator.includes("=")) || (!!(i(this.semver, "<", e.semver, r) && this.operator.startsWith(">") && e.operator.startsWith("<")) || !!(i(this.semver, ">", e.semver, r) && this.operator.startsWith("<") && e.operator.startsWith(">")))))))
            }
        }
        mM = t;
        const n = tD
          , {safeRe: r, t: o} = JL
          , i = sM
          , a = qL
          , s = pD
          , l = vM();
        return mM
    }
    YL(yM);
    const EM = vM();
    var _M = (e, t, n) => {
        try {
            t = new EM(t,n)
        } catch (e) {
            return !1
        }
        return t.test(e)
    }
    ;
    YL(_M);
    const AM = vM();
    var wM = (e, t) => new AM(e,t).set.map((e => e.map((e => e.value)).join(" ").trim().split(" ")));
    YL(wM);
    const SM = pD
      , CM = vM();
    var OM = (e, t, n) => {
        let r = null
          , o = null
          , i = null;
        try {
            i = new CM(t,n)
        } catch (e) {
            return null
        }
        return e.forEach((e => {
            i.test(e) && (r && -1 !== o.compare(e) || (r = e,
            o = new SM(r,n)))
        }
        )),
        r
    }
    ;
    YL(OM);
    const xM = pD
      , TM = vM();
    var NM = (e, t, n) => {
        let r = null
          , o = null
          , i = null;
        try {
            i = new TM(t,n)
        } catch (e) {
            return null
        }
        return e.forEach((e => {
            i.test(e) && (r && 1 !== o.compare(e) || (r = e,
            o = new xM(r,n)))
        }
        )),
        r
    }
    ;
    YL(NM);
    const kM = pD
      , IM = vM()
      , RM = HD;
    var PM = (e, t) => {
        e = new IM(e,t);
        let n = new kM("0.0.0");
        if (e.test(n))
            return n;
        if (n = new kM("0.0.0-0"),
        e.test(n))
            return n;
        n = null;
        for (let t = 0; t < e.set.length; ++t) {
            const r = e.set[t];
            let o = null;
            r.forEach((e => {
                const t = new kM(e.semver.version);
                switch (e.operator) {
                case ">":
                    0 === t.prerelease.length ? t.patch++ : t.prerelease.push(0),
                    t.raw = t.format();
                case "":
                case ">=":
                    o && !RM(t, o) || (o = t);
                    break;
                case "<":
                case "<=":
                    break;
                default:
                    throw new Error(`Unexpected operation: ${e.operator}`)
                }
            }
            )),
            !o || n && !RM(n, o) || (n = o)
        }
        return n && e.test(n) ? n : null
    }
    ;
    YL(PM);
    const LM = vM();
    var DM = (e, t) => {
        try {
            return new LM(e,t).range || "*"
        } catch (e) {
            return null
        }
    }
    ;
    YL(DM);
    const MM = pD
      , FM = bM()
      , {ANY: BM} = FM
      , jM = vM()
      , UM = _M
      , GM = HD
      , $M = zD
      , VM = eM
      , HM = JD;
    var KM = (e, t, n, r) => {
        let o, i, a, s, l;
        switch (e = new MM(e,r),
        t = new jM(t,r),
        n) {
        case ">":
            o = GM,
            i = VM,
            a = $M,
            s = ">",
            l = ">=";
            break;
        case "<":
            o = $M,
            i = HM,
            a = GM,
            s = "<",
            l = "<=";
            break;
        default:
            throw new TypeError('Must provide a hilo val of "<" or ">"')
        }
        if (UM(e, t, r))
            return !1;
        for (let n = 0; n < t.set.length; ++n) {
            const c = t.set[n];
            let d = null
              , u = null;
            if (c.forEach((e => {
                e.semver === BM && (e = new FM(">=0.0.0")),
                d = d || e,
                u = u || e,
                o(e.semver, d.semver, r) ? d = e : a(e.semver, u.semver, r) && (u = e)
            }
            )),
            d.operator === s || d.operator === l)
                return !1;
            if ((!u.operator || u.operator === s) && i(e, u.semver))
                return !1;
            if (u.operator === l && a(e, u.semver))
                return !1
        }
        return !0
    }
    ;
    YL(KM);
    const zM = KM;
    var WM = (e, t, n) => zM(e, t, ">", n);
    YL(WM);
    const YM = KM;
    var XM = (e, t, n) => YM(e, t, "<", n);
    YL(XM);
    const ZM = vM();
    var qM = (e, t, n) => (e = new ZM(e,n),
    t = new ZM(t,n),
    e.intersects(t, n));
    YL(qM);
    const JM = _M
      , QM = RD;
    var eF = (e, t, n) => {
        const r = [];
        let o = null
          , i = null;
        const a = e.sort(( (e, t) => QM(e, t, n)));
        for (const e of a) {
            JM(e, t, n) ? (i = e,
            o || (o = e)) : (i && r.push([o, i]),
            i = null,
            o = null)
        }
        o && r.push([o, null]);
        const s = [];
        for (const [e,t] of r)
            e === t ? s.push(e) : t || e !== a[0] ? t ? e === a[0] ? s.push(`<=${t}`) : s.push(`${e} - ${t}`) : s.push(`>=${e}`) : s.push("*");
        const l = s.join(" || ")
          , c = "string" == typeof t.raw ? t.raw : String(t);
        return l.length < c.length ? l : t
    }
    ;
    YL(eF);
    const tF = vM()
      , nF = bM()
      , {ANY: rF} = nF
      , oF = _M
      , iF = RD
      , aF = [new nF(">=0.0.0-0")]
      , sF = [new nF(">=0.0.0")]
      , lF = (e, t, n) => {
        if (e === t)
            return !0;
        if (1 === e.length && e[0].semver === rF) {
            if (1 === t.length && t[0].semver === rF)
                return !0;
            e = n.includePrerelease ? aF : sF
        }
        if (1 === t.length && t[0].semver === rF) {
            if (n.includePrerelease)
                return !0;
            t = sF
        }
        const r = new Set;
        let o, i, a, s, l, c, d;
        for (const t of e)
            ">" === t.operator || ">=" === t.operator ? o = cF(o, t, n) : "<" === t.operator || "<=" === t.operator ? i = dF(i, t, n) : r.add(t.semver);
        if (r.size > 1)
            return null;
        if (o && i) {
            if (a = iF(o.semver, i.semver, n),
            a > 0)
                return null;
            if (0 === a && (">=" !== o.operator || "<=" !== i.operator))
                return null
        }
        for (const e of r) {
            if (o && !oF(e, String(o), n))
                return null;
            if (i && !oF(e, String(i), n))
                return null;
            for (const r of t)
                if (!oF(e, String(r), n))
                    return !1;
            return !0
        }
        let u = !(!i || n.includePrerelease || !i.semver.prerelease.length) && i.semver
          , p = !(!o || n.includePrerelease || !o.semver.prerelease.length) && o.semver;
        u && 1 === u.prerelease.length && "<" === i.operator && 0 === u.prerelease[0] && (u = !1);
        for (const e of t) {
            if (d = d || ">" === e.operator || ">=" === e.operator,
            c = c || "<" === e.operator || "<=" === e.operator,
            o)
                if (p && e.semver.prerelease && e.semver.prerelease.length && e.semver.major === p.major && e.semver.minor === p.minor && e.semver.patch === p.patch && (p = !1),
                ">" === e.operator || ">=" === e.operator) {
                    if (s = cF(o, e, n),
                    s === e && s !== o)
                        return !1
                } else if (">=" === o.operator && !oF(o.semver, String(e), n))
                    return !1;
            if (i)
                if (u && e.semver.prerelease && e.semver.prerelease.length && e.semver.major === u.major && e.semver.minor === u.minor && e.semver.patch === u.patch && (u = !1),
                "<" === e.operator || "<=" === e.operator) {
                    if (l = dF(i, e, n),
                    l === e && l !== i)
                        return !1
                } else if ("<=" === i.operator && !oF(i.semver, String(e), n))
                    return !1;
            if (!e.operator && (i || o) && 0 !== a)
                return !1
        }
        return !(o && c && !i && 0 !== a) && (!(i && d && !o && 0 !== a) && (!p && !u))
    }
      , cF = (e, t, n) => {
        if (!e)
            return t;
        const r = iF(e.semver, t.semver, n);
        return r > 0 ? e : r < 0 || ">" === t.operator && ">=" === e.operator ? t : e
    }
      , dF = (e, t, n) => {
        if (!e)
            return t;
        const r = iF(e.semver, t.semver, n);
        return r < 0 ? e : r > 0 || "<" === t.operator && "<=" === e.operator ? t : e
    }
    ;
    var uF = (e, t, n={}) => {
        if (e === t)
            return !0;
        e = new tF(e,n),
        t = new tF(t,n);
        let r = !1;
        e: for (const o of e.set) {
            for (const e of t.set) {
                const t = lF(o, e, n);
                if (r = r || null !== t,
                t)
                    continue e
            }
            if (r)
                return !1
        }
        return !0
    }
    ;
    YL(uF);
    const pF = JL
      , hF = ZL
      , fF = pD
      , mF = oD;
    var gF = YL({
        parse: fD,
        valid: gD,
        clean: vD,
        inc: ED,
        diff: AD,
        major: SD,
        minor: OD,
        patch: TD,
        prerelease: kD,
        compare: RD,
        rcompare: LD,
        compareLoose: MD,
        compareBuild: BD,
        sort: UD,
        rsort: $D,
        gt: HD,
        lt: zD,
        eq: YD,
        neq: ZD,
        gte: JD,
        lte: eM,
        cmp: sM,
        coerce: pM,
        Comparator: bM(),
        Range: vM(),
        satisfies: _M,
        toComparators: wM,
        maxSatisfying: OM,
        minSatisfying: NM,
        minVersion: PM,
        validRange: DM,
        outside: KM,
        gtr: WM,
        ltr: XM,
        intersects: qM,
        simplifyRange: eF,
        subset: uF,
        SemVer: fF,
        re: pF.re,
        src: pF.src,
        tokens: pF.t,
        SEMVER_SPEC_VERSION: hF.SEMVER_SPEC_VERSION,
        RELEASE_TYPES: hF.RELEASE_TYPES,
        compareIdentifiers: mF.compareIdentifiers,
        rcompareIdentifiers: mF.rcompareIdentifiers
    });
    const yF = {
        mock: ["2Epzp9VioXfAY+FNR3ukX/zxQXIhuH0+PLUuXhc8XDQ="],
        production: [],
        sandbox: [],
        stage: ["WtPMGQL6A57LKIuQGjKQ7e2Fus+3HU3Kr2GVH+u5mAQ=", "/lS9iqZZSNTYXGMGdWvpbAIcCdi6Ox97J/CUGaMGYqI="]
    }
      , vF = function() {
        const e = "en-US";
        let t, n, r, o = e;
        function i(e) {
            const t = $t();
            t.addFptiHeaderBuilder(( () => ({
                context_id: n,
                context_type: "CMID"
            }))),
            t.addPayloadBuilder(( () => ({
                cmid: n,
                locale: o,
                sdkToken: e
            }))),
            t.addTrackingBuilder(( () => ({
                context_id: n,
                context_type: "CMID",
                intended_experience: it.get("intendedExperience")
            })))
        }
        async function a(e) {
            var o, a, s;
            const {env: l="production", clientId: c, clientMetadataId: d, userIdToken: u} = e;
            if (!u || !u.length)
                throw HN;
            yt(l),
            n = d,
            r = u,
            i(u);
            const p = btoa(JSON.stringify(XN(r, l)));
            try {
                t = await (null === (s = null === (a = null === (o = window.braintree) || void 0 === o ? void 0 : o.client) || void 0 === a ? void 0 : a.create) || void 0 === s ? void 0 : s.call(a, {
                    authorization: p,
                    sessionId: n
                }));
                const e = await (async e => {
                    try {
                        const t = await Mr(e);
                        return yF[gt().env].includes(t)
                    } catch (e) {
                        return $t().track({
                            event_name: "axo_check_should_expose_consent_component_util_error",
                            int_error_code: e.code,
                            int_error_desc: e.toString()
                        }),
                        !1
                    }
                }
                )(c);
                it.set("shouldExposeConsentComponent", e)
            } catch (e) {
                throw UN
            }
        }
        function s(e) {
            var t;
            if (!e)
                return "";
            const n = e.indexOf("_") > -1 ? e.split("_") : e.split("-");
            return n[0].toLowerCase() + "-" + (null === (t = n[1]) || void 0 === t ? void 0 : t.toUpperCase())
        }
        return Object.freeze({
            create: async l => {
                var c;
                try {
                    const {cardOptions: d, intendedExperience: u=Qe.guestCheckout, locale: p=e, localeUrl: h, metadata: {geoLocOverride: f}={}, platformOptions: m, shippingAddressOptions: g, styles: y} = l
                      , {platform: v} = m;
                    let b;
                    if (!Object.keys(Qe).includes(u))
                        throw $N;
                    if (it.state.update("intendedExperience", u),
                    o = s(p),
                    v === et.BT)
                        !function(e) {
                            var o;
                            const {authorization: a, client: s, deviceData: l} = e;
                            if (!s)
                                throw zN;
                            if (!a || !a.length)
                                throw HN;
                            const c = s.getConfiguration();
                            if (yt(c.gatewayConfiguration.environment),
                            t = s,
                            l)
                                try {
                                    n = null === (o = JSON.parse(l)) || void 0 === o ? void 0 : o.correlation_id
                                } catch (e) {}
                            n = n || c.analyticsMetadata.sessionId,
                            i(a);
                            const d = $t();
                            d.addTrackingBuilder(( () => {
                                var e, t;
                                return {
                                    merchant_account_token: null === (e = c.gatewayConfiguration.paypal) || void 0 === e ? void 0 : e.merchantAccountId,
                                    merchant_name: null === (t = c.gatewayConfiguration.paypal) || void 0 === t ? void 0 : t.displayName,
                                    seller_id: c.gatewayConfiguration.merchantId
                                }
                            }
                            )),
                            d.setMetricMerchantId(c.gatewayConfiguration.merchantId),
                            l && d.track({
                                event_name: "axo_sdk_bt_device_data_received"
                            });
                            try {
                                r = JSON.parse(atob(a)).authorizationFingerprint
                            } catch (e) {
                                throw GN
                            }
                        }(m);
                    else {
                        if (v !== et.PPCP)
                            throw VN;
                        await a(m)
                    }
                    const E = gt()
                      , _ = $t();
                    _.setIntendedExperience(u);
                    const A = (async () => {
                        let e = document.querySelector('style[id="paypalFonts"]');
                        if (!e)
                            try {
                                const t = await fetch("https://www.paypalobjects.com/connect-v0/paypalFonts.css", {
                                    headers: {
                                        "Content-Type": "text/plain"
                                    }
                                })
                                  , n = await t.text();
                                e = document.createElement("style"),
                                e.setAttribute("id", "paypalFonts"),
                                e.innerHTML = n,
                                document.head.appendChild(e)
                            } catch (e) {
                                $t().error("axo_sdk_fetchPaypalFonts_error", {
                                    error: e instanceof Error && e.message || btoa(JSON.stringify(e))
                                })
                            }
                    }
                    )()
                      , w = it.get("shouldExposeConsentComponent")
                      , S = function(e, t) {
                        var n, r, o, i;
                        er.setCheckpoint(er.CHECKPOINTS.CHECK_FASTLANE_ENABLED_TRIGGERED);
                        const a = e.getVersion()
                          , {gatewayConfiguration: s} = WL(e)
                          , l = (null === (n = gF.coerce(a)) || void 0 === n ? void 0 : n.version) || ""
                          , c = null === (r = gF.coerce("3.103.0-fastlane-beta.7.3")) || void 0 === r ? void 0 : r.version;
                        let d = !1;
                        return t === et.PPCP ? d = !!(null === (o = s.fastlane) || void 0 === o ? void 0 : o.enabled) : t === et.BT && (d = !gF.satisfies(l, `>= ${c}`) || !!(null === (i = s.fastlane) || void 0 === i ? void 0 : i.enabled)),
                        $t().track({
                            event_name: "axo_check_fastlane_enabled",
                            duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.CHECK_FASTLANE_ENABLED_TRIGGERED),
                            event_type: "im"
                        }),
                        d
                    }(t, v);
                    it.set("isFastlaneEnabled", S),
                    S && "mock" !== E.env && async function({uat: e, cmid: t, logger: n, baseUri: r=""}) {
                        const o = (async () => {
                            try {
                                await Vt((async () => {
                                    await QN({
                                        baseUri: r,
                                        context: e,
                                        cmid: t
                                    }),
                                    n.countMetric({
                                        component: Tt,
                                        action: Nt.PORTAL,
                                        status: vt.STATUS.OK
                                    })
                                }
                                ), {
                                    resourceName: "portal"
                                })
                            } catch (e) {
                                tk(e, "axo_sdk_portal_initialization_error"),
                                n.countMetric({
                                    component: Tt,
                                    action: Nt.PORTAL,
                                    status: vt.STATUS.ERROR
                                }),
                                Ht()
                            }
                        }
                        )();
                        it.state.update("untilPortalReady", o),
                        await o,
                        it.state.update("untilPortalReady", void 0)
                    }({
                        logger: _,
                        uat: r,
                        cmid: n,
                        baseUri: E.getPortalUrl()
                    });
                    const {gatewayConfiguration: C} = null !== (c = WL(t)) && void 0 !== c ? c : {};
                    let {merchantId: O} = null != C ? C : {};
                    O || (O = null),
                    it.set("merchantState", {
                        merchantId: O
                    }),
                    it.set("platform", v),
                    it.set("axoEnv", E.env),
                    it.set("cmid", n),
                    it.set("localeUrl", h),
                    it.set("allowedCardBrands", ok(null == d ? void 0 : d.allowedBrands)),
                    it.set("allowedLocations", ik(null == g ? void 0 : g.allowedLocations)),
                    it.set("locale", o),
                    ON(o),
                    f && it.state.update("overrides", {
                        geoLocOverride: f
                    }),
                    v === et.PPCP && (b = m.fraudnet);
                    const x = Object.assign(Object.assign({}, l), {
                        btClient: t,
                        fraudnet: b,
                        intendedExperience: u,
                        platform: v,
                        styles: y
                    });
                    await A;
                    const T = Object.freeze(Object.assign({
                        identity: FL(x),
                        profile: $L(x),
                        events: xP,
                        FastlaneCardComponent: NP(x),
                        FastlaneWatermarkComponent: uL(x),
                        FastlanePaymentComponent: dL(x),
                        setLocale: e => it.set("locale", s(e)),
                        ConnectCardComponent: yP(x),
                        ConnectWatermarkComponent: CP(x)
                    }, w ? {
                        ConsentComponent: zL(x)
                    } : {}))
                      , N = `${null === document || void 0 === document ? void 0 : document.documentElement.clientWidth}x${null === document || void 0 === document ? void 0 : document.documentElement.clientHeight}`;
                    switch (v) {
                    case et.BT:
                        _.track({
                            event_name: "axo_sdk_loaded",
                            duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.SDK_INIT_INVOKED),
                            event_type: "im",
                            fastlane_disabled: String(Number(!S)),
                            intended_experience: u,
                            merchant_id: O,
                            viewport_size: N
                        }).flush();
                        break;
                    case et.PPCP:
                        _.track({
                            event_name: "axo_ppcp_sdk_initiated",
                            duration: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.SDK_INIT_INVOKED),
                            event_type: "im",
                            fastlane_disabled: String(Number(!S)),
                            intended_experience: u,
                            merchant_id: O,
                            shouldExposeConsentComponent: w,
                            viewport_size: N
                        }).flush()
                    }
                    return _.interactionMetric({
                        component: Tt,
                        action: Nt.CREATE,
                        status: vt.STATUS.OK,
                        timingValue: er.getTimeElapsedSinceCheckpoint(er.CHECKPOINTS.SDK_INIT_INVOKED)
                    }),
                    T
                } catch (e) {
                    let t;
                    switch ($t().countMetric({
                        component: Tt,
                        action: Nt.CREATE,
                        status: vt.STATUS.ERROR
                    }),
                    ek(e),
                    e) {
                    case HN:
                        t = Ak.INIT_MISSING_AUTH_TOKEN;
                        break;
                    case zN:
                        t = Ak.INIT_MISSING_CLIENT;
                        break;
                    case GN:
                        t = Ak.INIT_INVALID_AUTH_TOKEN;
                        break;
                    case $N:
                        t = Ak.INIT_INVALID_INTENDED_EXPERIENCE;
                        break;
                    default:
                        t = Ak.SDK_INIT_FAILED
                    }
                    throw Sk.createExternalError(t)
                }
            }
        })
    }();
    window.braintree = window.braintree || {},
    window.braintree.connect = vF,
    window.braintree.fastlane = vF,
    e.Fastlane = vF
}
));
